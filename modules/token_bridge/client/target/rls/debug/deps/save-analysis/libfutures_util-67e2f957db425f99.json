{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15","program":"/home/franglin/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","futures_util","--edition=2018","/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"alloc\"","--cfg","feature=\"async-await\"","--cfg","feature=\"async-await-macro\"","--cfg","feature=\"channel\"","--cfg","feature=\"default\"","--cfg","feature=\"futures-channel\"","--cfg","feature=\"futures-io\"","--cfg","feature=\"futures-macro\"","--cfg","feature=\"futures-sink\"","--cfg","feature=\"io\"","--cfg","feature=\"memchr\"","--cfg","feature=\"proc-macro-hack\"","--cfg","feature=\"proc-macro-nested\"","--cfg","feature=\"sink\"","--cfg","feature=\"slab\"","--cfg","feature=\"std\"","-C","metadata=67e2f957db425f99","-C","extra-filename=-67e2f957db425f99","--out-dir","/mnt/d/dev/blockchain/wormhole/solana/modules/token_bridge/client/target/rls/debug/deps","-L","dependency=/mnt/d/dev/blockchain/wormhole/solana/modules/token_bridge/client/target/rls/debug/deps","--extern","futures_channel=/mnt/d/dev/blockchain/wormhole/solana/modules/token_bridge/client/target/rls/debug/deps/libfutures_channel-c6bf3f87ff1f6f1c.rmeta","--extern","futures_core=/mnt/d/dev/blockchain/wormhole/solana/modules/token_bridge/client/target/rls/debug/deps/libfutures_core-c07eb06424fa6a2c.rmeta","--extern","futures_io=/mnt/d/dev/blockchain/wormhole/solana/modules/token_bridge/client/target/rls/debug/deps/libfutures_io-432fc5ecc1780b80.rmeta","--extern","futures_macro=/mnt/d/dev/blockchain/wormhole/solana/modules/token_bridge/client/target/rls/debug/deps/libfutures_macro-ef1a6093b0c037fa.so","--extern","futures_sink=/mnt/d/dev/blockchain/wormhole/solana/modules/token_bridge/client/target/rls/debug/deps/libfutures_sink-69d024a5c9eb4b60.rmeta","--extern","futures_task=/mnt/d/dev/blockchain/wormhole/solana/modules/token_bridge/client/target/rls/debug/deps/libfutures_task-4a8f23a235ada163.rmeta","--extern","memchr=/mnt/d/dev/blockchain/wormhole/solana/modules/token_bridge/client/target/rls/debug/deps/libmemchr-761eef7c0b2c115f.rmeta","--extern","pin_project_lite=/mnt/d/dev/blockchain/wormhole/solana/modules/token_bridge/client/target/rls/debug/deps/libpin_project_lite-1144b04bfa3514dc.rmeta","--extern","pin_utils=/mnt/d/dev/blockchain/wormhole/solana/modules/token_bridge/client/target/rls/debug/deps/libpin_utils-919eec9578452e19.rmeta","--extern","proc_macro_hack=/mnt/d/dev/blockchain/wormhole/solana/modules/token_bridge/client/target/rls/debug/deps/libproc_macro_hack-3db5b274372faa08.so","--extern","proc_macro_nested=/mnt/d/dev/blockchain/wormhole/solana/modules/token_bridge/client/target/rls/debug/deps/libproc_macro_nested-265164cebdf00d82.rmeta","--extern","slab=/mnt/d/dev/blockchain/wormhole/solana/modules/token_bridge/client/target/rls/debug/deps/libslab-373cdb0b273c2053.rmeta","--cap-lints","allow","--cfg","fn_like_proc_macro","--error-format=json","--sysroot","/home/franglin/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/mnt/d/dev/blockchain/wormhole/solana/modules/token_bridge/client/target/rls/debug/deps/libfutures_util-67e2f957db425f99.rmeta"},"prelude":{"crate_id":{"name":"futures_util","disambiguator":[6143979145590412652,2909080349684369134]},"crate_root":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src","external_crates":[{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[15256637969148649584,12170509131058075833]}},{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/async_await/poll.rs","num":2,"id":{"name":"core","disambiguator":[2572959971889902175,17506693968225989007]}},{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[7380289047210505863,13821127130725723065]}},{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[15494144285296940423,1517275930380298805]}},{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[16074686111301742862,11174094882134223101]}},{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[9848143689052418189,5596786287495938678]}},{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[4765876764407181064,11122159180720543906]}},{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[3249135693812064660,5763443684941168569]}},{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[17048817722375060837,16920886256309599893]}},{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[13552797903376776722,10482089333731059857]}},{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[5989449439605467183,7256304997069434828]}},{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lib.rs","num":12,"id":{"name":"std_detect","disambiguator":[13279369789493161905,12463804053127379464]}},{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lib.rs","num":13,"id":{"name":"addr2line","disambiguator":[295047501211602818,3843164955111373824]}},{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lib.rs","num":14,"id":{"name":"gimli","disambiguator":[14781020588812023641,7393321088923443539]}},{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lib.rs","num":15,"id":{"name":"object","disambiguator":[1927264790928947756,6617054577979570835]}},{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lib.rs","num":16,"id":{"name":"miniz_oxide","disambiguator":[7597657085106642381,11470551509849691989]}},{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lib.rs","num":17,"id":{"name":"adler","disambiguator":[2355022556203982070,155364045674250901]}},{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lib.rs","num":18,"id":{"name":"panic_unwind","disambiguator":[3046834347757213021,4625500188193743608]}},{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lib.rs","num":19,"id":{"name":"futures_core","disambiguator":[8809709457639742599,16962375154671584254]}},{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lib.rs","num":20,"id":{"name":"pin_utils","disambiguator":[9212437317893473852,3409318353310669863]}},{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/async_await/join_mod.rs","num":21,"id":{"name":"futures_macro","disambiguator":[13469645249289479260,14218846297345149287]}},{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","num":22,"id":{"name":"futures_task","disambiguator":[12764784445193263657,6118880633058950338]}},{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/flatten.rs","num":23,"id":{"name":"futures_sink","disambiguator":[3073080014286011418,2181048436239808832]}},{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/flatten.rs","num":24,"id":{"name":"pin_project_lite","disambiguator":[990302580450785837,12633318721226934598]}},{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/remote_handle.rs","num":25,"id":{"name":"futures_channel","disambiguator":[10034912274563165822,2511145649937995407]}},{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/shared.rs","num":26,"id":{"name":"slab","disambiguator":[15082221935741963601,9737765728630811904]}},{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/either.rs","num":27,"id":{"name":"futures_io","disambiguator":[16668743713700835307,9196727856865856789]}},{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/read_until.rs","num":28,"id":{"name":"memchr","disambiguator":[10965938807129842840,3881412707962956333]}}],"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lib.rs","byte_start":0,"byte_end":12175,"line_start":1,"line_end":345,"column_start":1,"column_end":18}},"imports":[{"kind":"Use","ref_id":{"krate":19,"index":169},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lib.rs","byte_start":1182,"byte_end":1187,"line_start":24,"line_end":24,"column_start":23,"column_end":28},"alias_span":null,"name":"ready","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":20,"index":7},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lib.rs","byte_start":1208,"byte_end":1215,"line_start":25,"line_end":25,"column_start":20,"column_end":27},"alias_span":null,"name":"pin_mut","value":"","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lib.rs","byte_start":1354,"byte_end":1355,"line_start":32,"line_end":32,"column_start":28,"column_end":29},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lib.rs","byte_start":1463,"byte_end":1464,"line_start":38,"line_end":38,"column_start":20,"column_end":21},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":129}},{"kind":"Use","ref_id":{"krate":2,"index":39947},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lib.rs","byte_start":1502,"byte_end":1508,"line_start":40,"line_end":40,"column_start":17,"column_end":23},"alias_span":null,"name":"Option","value":"","parent":{"krate":0,"index":129}},{"kind":"Use","ref_id":{"krate":2,"index":39949},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lib.rs","byte_start":1517,"byte_end":1521,"line_start":40,"line_end":40,"column_start":32,"column_end":36},"alias_span":null,"name":"None","value":"","parent":{"krate":0,"index":129}},{"kind":"Use","ref_id":{"krate":2,"index":39950},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lib.rs","byte_start":1517,"byte_end":1521,"line_start":40,"line_end":40,"column_start":32,"column_end":36},"alias_span":null,"name":"None","value":"","parent":{"krate":0,"index":129}},{"kind":"Use","ref_id":{"krate":2,"index":39951},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lib.rs","byte_start":1523,"byte_end":1527,"line_start":40,"line_end":40,"column_start":38,"column_end":42},"alias_span":null,"name":"Some","value":"","parent":{"krate":0,"index":129}},{"kind":"Use","ref_id":{"krate":2,"index":39952},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lib.rs","byte_start":1523,"byte_end":1527,"line_start":40,"line_end":40,"column_start":38,"column_end":42},"alias_span":null,"name":"Some","value":"","parent":{"krate":0,"index":129}},{"kind":"Use","ref_id":{"krate":2,"index":40065},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lib.rs","byte_start":1543,"byte_end":1546,"line_start":41,"line_end":41,"column_start":14,"column_end":17},"alias_span":null,"name":"Pin","value":"","parent":{"krate":0,"index":129}},{"kind":"Use","ref_id":{"krate":2,"index":40085},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lib.rs","byte_start":1573,"byte_end":1576,"line_start":42,"line_end":42,"column_start":26,"column_end":29},"alias_span":null,"name":"Err","value":"","parent":{"krate":0,"index":129}},{"kind":"Use","ref_id":{"krate":2,"index":40086},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lib.rs","byte_start":1573,"byte_end":1576,"line_start":42,"line_end":42,"column_start":26,"column_end":29},"alias_span":null,"name":"Err","value":"","parent":{"krate":0,"index":129}},{"kind":"Use","ref_id":{"krate":2,"index":40082},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lib.rs","byte_start":1578,"byte_end":1580,"line_start":42,"line_end":42,"column_start":31,"column_end":33},"alias_span":null,"name":"Ok","value":"","parent":{"krate":0,"index":129}},{"kind":"Use","ref_id":{"krate":2,"index":40083},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lib.rs","byte_start":1578,"byte_end":1580,"line_start":42,"line_end":42,"column_start":31,"column_end":33},"alias_span":null,"name":"Ok","value":"","parent":{"krate":0,"index":129}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lib.rs","byte_start":1653,"byte_end":1654,"line_start":46,"line_end":46,"column_start":37,"column_end":38},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":152}},{"kind":"Use","ref_id":{"krate":2,"index":12101},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":35368,"byte_end":35374,"line_start":13,"line_end":13,"column_start":23,"column_end":29},"alias_span":null,"name":"Future","value":"","parent":{"krate":0,"index":163}},{"kind":"Use","ref_id":{"krate":19,"index":21},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":35434,"byte_end":35443,"line_start":16,"line_end":16,"column_start":32,"column_end":41},"alias_span":null,"name":"BoxFuture","value":"","parent":{"krate":0,"index":163}},{"kind":"Use","ref_id":{"krate":19,"index":24},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":35445,"byte_end":35459,"line_start":16,"line_end":16,"column_start":43,"column_end":57},"alias_span":null,"name":"LocalBoxFuture","value":"","parent":{"krate":0,"index":163}},{"kind":"Use","ref_id":{"krate":19,"index":27},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":35493,"byte_end":35504,"line_start":17,"line_end":17,"column_start":32,"column_end":43},"alias_span":null,"name":"FusedFuture","value":"","parent":{"krate":0,"index":163}},{"kind":"Use","ref_id":{"krate":19,"index":44},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":35506,"byte_end":35515,"line_start":17,"line_end":17,"column_start":45,"column_end":54},"alias_span":null,"name":"TryFuture","value":"","parent":{"krate":0,"index":163}},{"kind":"Use","ref_id":{"krate":22,"index":141},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":35541,"byte_end":35550,"line_start":18,"line_end":18,"column_start":24,"column_end":33},"alias_span":null,"name":"FutureObj","value":"","parent":{"krate":0,"index":163}},{"kind":"Use","ref_id":{"krate":22,"index":107},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":35552,"byte_end":35566,"line_start":18,"line_end":18,"column_start":35,"column_end":49},"alias_span":null,"name":"LocalFutureObj","value":"","parent":{"krate":0,"index":163}},{"kind":"Use","ref_id":{"krate":22,"index":162},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":35568,"byte_end":35583,"line_start":18,"line_end":18,"column_start":51,"column_end":66},"alias_span":null,"name":"UnsafeFutureObj","value":"","parent":{"krate":0,"index":163}},{"kind":"Use","ref_id":{"krate":0,"index":8687},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":41243,"byte_end":41254,"line_start":101,"line_end":101,"column_start":29,"column_end":40},"alias_span":null,"name":"CatchUnwind","value":"","parent":{"krate":0,"index":191}},{"kind":"Use","ref_id":{"krate":0,"index":8177},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":35698,"byte_end":35705,"line_start":24,"line_end":24,"column_start":5,"column_end":12},"alias_span":null,"name":"Flatten","value":"","parent":{"krate":0,"index":163}},{"kind":"Use","ref_id":{"krate":0,"index":8091},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":35707,"byte_end":35711,"line_start":24,"line_end":24,"column_start":14,"column_end":18},"alias_span":null,"name":"Fuse","value":"","parent":{"krate":0,"index":163}},{"kind":"Use","ref_id":{"krate":0,"index":685},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":35713,"byte_end":35722,"line_start":24,"line_end":24,"column_start":20,"column_end":29},"alias_span":null,"name":"FutureExt","value":"","parent":{"krate":0,"index":163}},{"kind":"Use","ref_id":{"krate":0,"index":8528},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":35724,"byte_end":35731,"line_start":24,"line_end":24,"column_start":31,"column_end":38},"alias_span":null,"name":"Inspect","value":"","parent":{"krate":0,"index":163}},{"kind":"Use","ref_id":{"krate":0,"index":8343},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":35733,"byte_end":35743,"line_start":24,"line_end":24,"column_start":40,"column_end":50},"alias_span":null,"name":"IntoStream","value":"","parent":{"krate":0,"index":163}},{"kind":"Use","ref_id":{"krate":0,"index":8283},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":35745,"byte_end":35748,"line_start":24,"line_end":24,"column_start":52,"column_end":55},"alias_span":null,"name":"Map","value":"","parent":{"krate":0,"index":163}},{"kind":"Use","ref_id":{"krate":0,"index":8393},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":35750,"byte_end":35757,"line_start":24,"line_end":24,"column_start":57,"column_end":64},"alias_span":null,"name":"MapInto","value":"","parent":{"krate":0,"index":163}},{"kind":"Use","ref_id":{"krate":0,"index":8588},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":35759,"byte_end":35769,"line_start":24,"line_end":24,"column_start":66,"column_end":76},"alias_span":null,"name":"NeverError","value":"","parent":{"krate":0,"index":163}},{"kind":"Use","ref_id":{"krate":0,"index":8455},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":35771,"byte_end":35775,"line_start":24,"line_end":24,"column_start":78,"column_end":82},"alias_span":null,"name":"Then","value":"","parent":{"krate":0,"index":163}},{"kind":"Use","ref_id":{"krate":0,"index":8636},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":35777,"byte_end":35786,"line_start":24,"line_end":24,"column_start":84,"column_end":93},"alias_span":null,"name":"UnitError","value":"","parent":{"krate":0,"index":163}},{"kind":"Use","ref_id":{"krate":0,"index":8225},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":35882,"byte_end":35895,"line_start":28,"line_end":28,"column_start":23,"column_end":36},"alias_span":null,"name":"FlattenStream","value":"","parent":{"krate":0,"index":163}},{"kind":"Use","ref_id":{"krate":0,"index":8687},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":35944,"byte_end":35955,"line_start":31,"line_end":31,"column_start":23,"column_end":34},"alias_span":null,"name":"CatchUnwind","value":"","parent":{"krate":0,"index":163}},{"kind":"Use","ref_id":{"krate":0,"index":8725},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":36084,"byte_end":36090,"line_start":36,"line_end":36,"column_start":24,"column_end":30},"alias_span":null,"name":"Remote","value":"","parent":{"krate":0,"index":163}},{"kind":"Use","ref_id":{"krate":0,"index":8718},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":36092,"byte_end":36104,"line_start":36,"line_end":36,"column_start":32,"column_end":44},"alias_span":null,"name":"RemoteHandle","value":"","parent":{"krate":0,"index":163}},{"kind":"Use","ref_id":{"krate":0,"index":586},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":36155,"byte_end":36161,"line_start":39,"line_end":39,"column_start":24,"column_end":30},"alias_span":null,"name":"Shared","value":"","parent":{"krate":0,"index":163}},{"kind":"Use","ref_id":{"krate":0,"index":597},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":36163,"byte_end":36173,"line_start":39,"line_end":39,"column_start":32,"column_end":42},"alias_span":null,"name":"WeakShared","value":"","parent":{"krate":0,"index":163}},{"kind":"Use","ref_id":{"krate":0,"index":9150},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":36225,"byte_end":36232,"line_start":43,"line_end":43,"column_start":5,"column_end":12},"alias_span":null,"name":"AndThen","value":"","parent":{"krate":0,"index":163}},{"kind":"Use","ref_id":{"krate":0,"index":9297},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":36234,"byte_end":36241,"line_start":43,"line_end":43,"column_start":14,"column_end":21},"alias_span":null,"name":"ErrInto","value":"","parent":{"krate":0,"index":163}},{"kind":"Use","ref_id":{"krate":0,"index":9480},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":36243,"byte_end":36253,"line_start":43,"line_end":43,"column_start":23,"column_end":33},"alias_span":null,"name":"InspectErr","value":"","parent":{"krate":0,"index":163}},{"kind":"Use","ref_id":{"krate":0,"index":9419},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":36255,"byte_end":36264,"line_start":43,"line_end":43,"column_start":35,"column_end":44},"alias_span":null,"name":"InspectOk","value":"","parent":{"krate":0,"index":163}},{"kind":"Use","ref_id":{"krate":0,"index":8771},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":36266,"byte_end":36276,"line_start":43,"line_end":43,"column_start":46,"column_end":56},"alias_span":null,"name":"IntoFuture","value":"","parent":{"krate":0,"index":163}},{"kind":"Use","ref_id":{"krate":0,"index":9602},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":36278,"byte_end":36284,"line_start":43,"line_end":43,"column_start":58,"column_end":64},"alias_span":null,"name":"MapErr","value":"","parent":{"krate":0,"index":163}},{"kind":"Use","ref_id":{"krate":0,"index":9541},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":36286,"byte_end":36291,"line_start":43,"line_end":43,"column_start":66,"column_end":71},"alias_span":null,"name":"MapOk","value":"","parent":{"krate":0,"index":163}},{"kind":"Use","ref_id":{"krate":0,"index":9664},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":36293,"byte_end":36304,"line_start":43,"line_end":43,"column_start":73,"column_end":84},"alias_span":null,"name":"MapOkOrElse","value":"","parent":{"krate":0,"index":163}},{"kind":"Use","ref_id":{"krate":0,"index":9358},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":36306,"byte_end":36312,"line_start":43,"line_end":43,"column_start":86,"column_end":92},"alias_span":null,"name":"OkInto","value":"","parent":{"krate":0,"index":163}},{"kind":"Use","ref_id":{"krate":0,"index":9224},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":36318,"byte_end":36324,"line_start":44,"line_end":44,"column_start":5,"column_end":11},"alias_span":null,"name":"OrElse","value":"","parent":{"krate":0,"index":163}},{"kind":"Use","ref_id":{"krate":0,"index":8899},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":36326,"byte_end":36336,"line_start":44,"line_end":44,"column_start":13,"column_end":23},"alias_span":null,"name":"TryFlatten","value":"","parent":{"krate":0,"index":163}},{"kind":"Use","ref_id":{"krate":0,"index":9020},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":36338,"byte_end":36354,"line_start":44,"line_end":44,"column_start":25,"column_end":41},"alias_span":null,"name":"TryFlattenStream","value":"","parent":{"krate":0,"index":163}},{"kind":"Use","ref_id":{"krate":0,"index":986},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":36356,"byte_end":36368,"line_start":44,"line_end":44,"column_start":43,"column_end":55},"alias_span":null,"name":"TryFutureExt","value":"","parent":{"krate":0,"index":163}},{"kind":"Use","ref_id":{"krate":0,"index":9737},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":36370,"byte_end":36382,"line_start":44,"line_end":44,"column_start":57,"column_end":69},"alias_span":null,"name":"UnwrapOrElse","value":"","parent":{"krate":0,"index":163}},{"kind":"Use","ref_id":{"krate":0,"index":9078},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":36487,"byte_end":36498,"line_start":49,"line_end":49,"column_start":27,"column_end":38},"alias_span":null,"name":"FlattenSink","value":"","parent":{"krate":0,"index":163}},{"kind":"Use","ref_id":{"krate":0,"index":1088},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":36554,"byte_end":36558,"line_start":54,"line_end":54,"column_start":22,"column_end":26},"alias_span":null,"name":"lazy","value":"","parent":{"krate":0,"index":163}},{"kind":"Use","ref_id":{"krate":0,"index":9795},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":36560,"byte_end":36564,"line_start":54,"line_end":54,"column_start":28,"column_end":32},"alias_span":null,"name":"Lazy","value":"","parent":{"krate":0,"index":163}},{"kind":"Use","ref_id":{"krate":0,"index":1134},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":36605,"byte_end":36612,"line_start":57,"line_end":57,"column_start":25,"column_end":32},"alias_span":null,"name":"pending","value":"","parent":{"krate":0,"index":163}},{"kind":"Use","ref_id":{"krate":0,"index":9801},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":36614,"byte_end":36621,"line_start":57,"line_end":57,"column_start":34,"column_end":41},"alias_span":null,"name":"Pending","value":"","parent":{"krate":0,"index":163}},{"kind":"Use","ref_id":{"krate":0,"index":1181},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":36668,"byte_end":36678,"line_start":60,"line_end":60,"column_start":28,"column_end":38},"alias_span":null,"name":"maybe_done","value":"","parent":{"krate":0,"index":163}},{"kind":"Use","ref_id":{"krate":0,"index":9807},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":36680,"byte_end":36689,"line_start":60,"line_end":60,"column_start":40,"column_end":49},"alias_span":null,"name":"MaybeDone","value":"","parent":{"krate":0,"index":163}},{"kind":"Use","ref_id":{"krate":0,"index":1233},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":36744,"byte_end":36758,"line_start":63,"line_end":63,"column_start":32,"column_end":46},"alias_span":null,"name":"try_maybe_done","value":"","parent":{"krate":0,"index":163}},{"kind":"Use","ref_id":{"krate":0,"index":9820},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":36760,"byte_end":36772,"line_start":63,"line_end":63,"column_start":48,"column_end":60},"alias_span":null,"name":"TryMaybeDone","value":"","parent":{"krate":0,"index":163}},{"kind":"Use","ref_id":{"krate":0,"index":9838},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":36810,"byte_end":36822,"line_start":66,"line_end":66,"column_start":23,"column_end":35},"alias_span":null,"name":"OptionFuture","value":"","parent":{"krate":0,"index":163}},{"kind":"Use","ref_id":{"krate":0,"index":1312},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":36862,"byte_end":36869,"line_start":69,"line_end":69,"column_start":25,"column_end":32},"alias_span":null,"name":"poll_fn","value":"","parent":{"krate":0,"index":163}},{"kind":"Use","ref_id":{"krate":0,"index":1307},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":36871,"byte_end":36877,"line_start":69,"line_end":69,"column_start":34,"column_end":40},"alias_span":null,"name":"PollFn","value":"","parent":{"krate":0,"index":163}},{"kind":"Use","ref_id":{"krate":0,"index":1368},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":36914,"byte_end":36917,"line_start":72,"line_end":72,"column_start":23,"column_end":26},"alias_span":null,"name":"err","value":"","parent":{"krate":0,"index":163}},{"kind":"Use","ref_id":{"krate":0,"index":1365},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":36919,"byte_end":36921,"line_start":72,"line_end":72,"column_start":28,"column_end":30},"alias_span":null,"name":"ok","value":"","parent":{"krate":0,"index":163}},{"kind":"Use","ref_id":{"krate":0,"index":1363},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":36923,"byte_end":36928,"line_start":72,"line_end":72,"column_start":32,"column_end":37},"alias_span":null,"name":"ready","value":"","parent":{"krate":0,"index":163}},{"kind":"Use","ref_id":{"krate":0,"index":9872},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":36930,"byte_end":36935,"line_start":72,"line_end":72,"column_start":39,"column_end":44},"alias_span":null,"name":"Ready","value":"","parent":{"krate":0,"index":163}},{"kind":"Use","ref_id":{"krate":0,"index":1419},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":36970,"byte_end":36974,"line_start":75,"line_end":75,"column_start":22,"column_end":26},"alias_span":null,"name":"join","value":"","parent":{"krate":0,"index":163}},{"kind":"Use","ref_id":{"krate":0,"index":1422},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":36976,"byte_end":36981,"line_start":75,"line_end":75,"column_start":28,"column_end":33},"alias_span":null,"name":"join3","value":"","parent":{"krate":0,"index":163}},{"kind":"Use","ref_id":{"krate":0,"index":1426},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":36983,"byte_end":36988,"line_start":75,"line_end":75,"column_start":35,"column_end":40},"alias_span":null,"name":"join4","value":"","parent":{"krate":0,"index":163}},{"kind":"Use","ref_id":{"krate":0,"index":1431},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":36990,"byte_end":36995,"line_start":75,"line_end":75,"column_start":42,"column_end":47},"alias_span":null,"name":"join5","value":"","parent":{"krate":0,"index":163}},{"kind":"Use","ref_id":{"krate":0,"index":9974},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":36997,"byte_end":37001,"line_start":75,"line_end":75,"column_start":49,"column_end":53},"alias_span":null,"name":"Join","value":"","parent":{"krate":0,"index":163}},{"kind":"Use","ref_id":{"krate":0,"index":10019},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":37003,"byte_end":37008,"line_start":75,"line_end":75,"column_start":55,"column_end":60},"alias_span":null,"name":"Join3","value":"","parent":{"krate":0,"index":163}},{"kind":"Use","ref_id":{"krate":0,"index":10076},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":37010,"byte_end":37015,"line_start":75,"line_end":75,"column_start":62,"column_end":67},"alias_span":null,"name":"Join4","value":"","parent":{"krate":0,"index":163}},{"kind":"Use","ref_id":{"krate":0,"index":10145},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":37017,"byte_end":37022,"line_start":75,"line_end":75,"column_start":69,"column_end":74},"alias_span":null,"name":"Join5","value":"","parent":{"krate":0,"index":163}},{"kind":"Use","ref_id":{"krate":0,"index":1508},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":37117,"byte_end":37125,"line_start":80,"line_end":80,"column_start":26,"column_end":34},"alias_span":null,"name":"join_all","value":"","parent":{"krate":0,"index":163}},{"kind":"Use","ref_id":{"krate":0,"index":1502},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":37127,"byte_end":37134,"line_start":80,"line_end":80,"column_start":36,"column_end":43},"alias_span":null,"name":"JoinAll","value":"","parent":{"krate":0,"index":163}},{"kind":"Use","ref_id":{"krate":0,"index":1557},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":37173,"byte_end":37179,"line_start":83,"line_end":83,"column_start":24,"column_end":30},"alias_span":null,"name":"select","value":"","parent":{"krate":0,"index":163}},{"kind":"Use","ref_id":{"krate":0,"index":10226},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":37181,"byte_end":37187,"line_start":83,"line_end":83,"column_start":32,"column_end":38},"alias_span":null,"name":"Select","value":"","parent":{"krate":0,"index":163}},{"kind":"Use","ref_id":{"krate":0,"index":1607},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":37286,"byte_end":37296,"line_start":88,"line_end":88,"column_start":28,"column_end":38},"alias_span":null,"name":"select_all","value":"","parent":{"krate":0,"index":163}},{"kind":"Use","ref_id":{"krate":0,"index":10234},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":37298,"byte_end":37307,"line_start":88,"line_end":88,"column_start":40,"column_end":49},"alias_span":null,"name":"SelectAll","value":"","parent":{"krate":0,"index":163}},{"kind":"Use","ref_id":{"krate":0,"index":1663},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":37355,"byte_end":37363,"line_start":92,"line_end":92,"column_start":5,"column_end":13},"alias_span":null,"name":"try_join","value":"","parent":{"krate":0,"index":163}},{"kind":"Use","ref_id":{"krate":0,"index":1666},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":37365,"byte_end":37374,"line_start":92,"line_end":92,"column_start":15,"column_end":24},"alias_span":null,"name":"try_join3","value":"","parent":{"krate":0,"index":163}},{"kind":"Use","ref_id":{"krate":0,"index":1670},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":37376,"byte_end":37385,"line_start":92,"line_end":92,"column_start":26,"column_end":35},"alias_span":null,"name":"try_join4","value":"","parent":{"krate":0,"index":163}},{"kind":"Use","ref_id":{"krate":0,"index":1675},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":37387,"byte_end":37396,"line_start":92,"line_end":92,"column_start":37,"column_end":46},"alias_span":null,"name":"try_join5","value":"","parent":{"krate":0,"index":163}},{"kind":"Use","ref_id":{"krate":0,"index":10310},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":37398,"byte_end":37405,"line_start":92,"line_end":92,"column_start":48,"column_end":55},"alias_span":null,"name":"TryJoin","value":"","parent":{"krate":0,"index":163}},{"kind":"Use","ref_id":{"krate":0,"index":10355},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":37407,"byte_end":37415,"line_start":92,"line_end":92,"column_start":57,"column_end":65},"alias_span":null,"name":"TryJoin3","value":"","parent":{"krate":0,"index":163}},{"kind":"Use","ref_id":{"krate":0,"index":10412},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":37417,"byte_end":37425,"line_start":92,"line_end":92,"column_start":67,"column_end":75},"alias_span":null,"name":"TryJoin4","value":"","parent":{"krate":0,"index":163}},{"kind":"Use","ref_id":{"krate":0,"index":10481},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":37427,"byte_end":37435,"line_start":92,"line_end":92,"column_start":77,"column_end":85},"alias_span":null,"name":"TryJoin5","value":"","parent":{"krate":0,"index":163}},{"kind":"Use","ref_id":{"krate":0,"index":1764},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":37540,"byte_end":37552,"line_start":98,"line_end":98,"column_start":30,"column_end":42},"alias_span":null,"name":"try_join_all","value":"","parent":{"krate":0,"index":163}},{"kind":"Use","ref_id":{"krate":0,"index":1758},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":37554,"byte_end":37564,"line_start":98,"line_end":98,"column_start":44,"column_end":54},"alias_span":null,"name":"TryJoinAll","value":"","parent":{"krate":0,"index":163}},{"kind":"Use","ref_id":{"krate":0,"index":1810},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":37611,"byte_end":37621,"line_start":101,"line_end":101,"column_start":28,"column_end":38},"alias_span":null,"name":"try_select","value":"","parent":{"krate":0,"index":163}},{"kind":"Use","ref_id":{"krate":0,"index":10562},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":37623,"byte_end":37632,"line_start":101,"line_end":101,"column_start":40,"column_end":49},"alias_span":null,"name":"TrySelect","value":"","parent":{"krate":0,"index":163}},{"kind":"Use","ref_id":{"krate":0,"index":1860},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":37729,"byte_end":37738,"line_start":106,"line_end":106,"column_start":27,"column_end":36},"alias_span":null,"name":"select_ok","value":"","parent":{"krate":0,"index":163}},{"kind":"Use","ref_id":{"krate":0,"index":10570},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":37740,"byte_end":37748,"line_start":106,"line_end":106,"column_start":38,"column_end":46},"alias_span":null,"name":"SelectOk","value":"","parent":{"krate":0,"index":163}},{"kind":"Use","ref_id":{"krate":0,"index":10576},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":37786,"byte_end":37792,"line_start":109,"line_end":109,"column_start":23,"column_end":29},"alias_span":null,"name":"Either","value":"","parent":{"krate":0,"index":163}},{"kind":"Use","ref_id":{"krate":0,"index":16897},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":37930,"byte_end":37939,"line_start":115,"line_end":115,"column_start":32,"column_end":41},"alias_span":null,"name":"Abortable","value":"","parent":{"krate":0,"index":163}},{"kind":"Use","ref_id":{"krate":0,"index":16654},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":37941,"byte_end":37952,"line_start":115,"line_end":115,"column_start":43,"column_end":54},"alias_span":null,"name":"AbortHandle","value":"","parent":{"krate":0,"index":163}},{"kind":"Use","ref_id":{"krate":0,"index":16650},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":37954,"byte_end":37971,"line_start":115,"line_end":115,"column_start":56,"column_end":73},"alias_span":null,"name":"AbortRegistration","value":"","parent":{"krate":0,"index":163}},{"kind":"Use","ref_id":{"krate":0,"index":16665},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":37973,"byte_end":37980,"line_start":115,"line_end":115,"column_start":75,"column_end":82},"alias_span":null,"name":"Aborted","value":"","parent":{"krate":0,"index":163}},{"kind":"Use","ref_id":{"krate":0,"index":16666},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":37973,"byte_end":37980,"line_start":115,"line_end":115,"column_start":75,"column_end":82},"alias_span":null,"name":"Aborted","value":"","parent":{"krate":0,"index":163}},{"kind":"Use","ref_id":{"krate":0,"index":10610},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":38036,"byte_end":38045,"line_start":117,"line_end":117,"column_start":24,"column_end":33},"alias_span":null,"name":"abortable","value":"","parent":{"krate":0,"index":163}},{"kind":"Use","ref_id":{"krate":2,"index":12101},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lib.rs","byte_start":11285,"byte_end":11291,"line_start":303,"line_end":303,"column_start":25,"column_end":31},"alias_span":null,"name":"Future","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":685},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lib.rs","byte_start":11293,"byte_end":11302,"line_start":303,"line_end":303,"column_start":33,"column_end":42},"alias_span":null,"name":"FutureExt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":19,"index":44},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lib.rs","byte_start":11304,"byte_end":11313,"line_start":303,"line_end":303,"column_start":44,"column_end":53},"alias_span":null,"name":"TryFuture","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":986},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lib.rs","byte_start":11315,"byte_end":11327,"line_start":303,"line_end":303,"column_start":55,"column_end":67},"alias_span":null,"name":"TryFutureExt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":19,"index":90},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":168485,"byte_end":168494,"line_start":13,"line_end":13,"column_start":32,"column_end":41},"alias_span":null,"name":"BoxStream","value":"","parent":{"krate":0,"index":2028}},{"kind":"Use","ref_id":{"krate":19,"index":93},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":168496,"byte_end":168510,"line_start":13,"line_end":13,"column_start":43,"column_end":57},"alias_span":null,"name":"LocalBoxStream","value":"","parent":{"krate":0,"index":2028}},{"kind":"Use","ref_id":{"krate":19,"index":110},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":168544,"byte_end":168555,"line_start":14,"line_end":14,"column_start":32,"column_end":43},"alias_span":null,"name":"FusedStream","value":"","parent":{"krate":0,"index":2028}},{"kind":"Use","ref_id":{"krate":19,"index":96},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":168557,"byte_end":168563,"line_start":14,"line_end":14,"column_start":45,"column_end":51},"alias_span":null,"name":"Stream","value":"","parent":{"krate":0,"index":2028}},{"kind":"Use","ref_id":{"krate":19,"index":127},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":168565,"byte_end":168574,"line_start":14,"line_end":14,"column_start":53,"column_end":62},"alias_span":null,"name":"TryStream","value":"","parent":{"krate":0,"index":2028}},{"kind":"Use","ref_id":{"krate":0,"index":12330},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":176404,"byte_end":176410,"line_start":160,"line_end":160,"column_start":23,"column_end":29},"alias_span":null,"name":"Chunks","value":"","parent":{"krate":0,"index":2046}},{"kind":"Use","ref_id":{"krate":0,"index":12382},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":176587,"byte_end":176598,"line_start":166,"line_end":166,"column_start":29,"column_end":40},"alias_span":null,"name":"ReadyChunks","value":"","parent":{"krate":0,"index":2046}},{"kind":"Use","ref_id":{"krate":0,"index":12809},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":177939,"byte_end":177950,"line_start":206,"line_end":206,"column_start":29,"column_end":40},"alias_span":null,"name":"CatchUnwind","value":"","parent":{"krate":0,"index":2046}},{"kind":"Use","ref_id":{"krate":0,"index":10635},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":168690,"byte_end":168695,"line_start":21,"line_end":21,"column_start":5,"column_end":10},"alias_span":null,"name":"Chain","value":"","parent":{"krate":0,"index":2028}},{"kind":"Use","ref_id":{"krate":0,"index":10684},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":168697,"byte_end":168704,"line_start":21,"line_end":21,"column_start":12,"column_end":19},"alias_span":null,"name":"Collect","value":"","parent":{"krate":0,"index":2028}},{"kind":"Use","ref_id":{"krate":0,"index":10793},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":168706,"byte_end":168712,"line_start":21,"line_end":21,"column_start":21,"column_end":27},"alias_span":null,"name":"Concat","value":"","parent":{"krate":0,"index":2028}},{"kind":"Use","ref_id":{"krate":0,"index":10833},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":168714,"byte_end":168719,"line_start":21,"line_end":21,"column_start":29,"column_end":34},"alias_span":null,"name":"Cycle","value":"","parent":{"krate":0,"index":2028}},{"kind":"Use","ref_id":{"krate":0,"index":10873},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":168721,"byte_end":168730,"line_start":21,"line_end":21,"column_start":36,"column_end":45},"alias_span":null,"name":"Enumerate","value":"","parent":{"krate":0,"index":2028}},{"kind":"Use","ref_id":{"krate":0,"index":10916},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":168732,"byte_end":168738,"line_start":21,"line_end":21,"column_start":47,"column_end":53},"alias_span":null,"name":"Filter","value":"","parent":{"krate":0,"index":2028}},{"kind":"Use","ref_id":{"krate":0,"index":10985},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":168740,"byte_end":168749,"line_start":21,"line_end":21,"column_start":55,"column_end":64},"alias_span":null,"name":"FilterMap","value":"","parent":{"krate":0,"index":2028}},{"kind":"Use","ref_id":{"krate":0,"index":11608},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":168751,"byte_end":168758,"line_start":21,"line_end":21,"column_start":66,"column_end":73},"alias_span":null,"name":"FlatMap","value":"","parent":{"krate":0,"index":2028}},{"kind":"Use","ref_id":{"krate":0,"index":11109},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":168760,"byte_end":168767,"line_start":21,"line_end":21,"column_start":75,"column_end":82},"alias_span":null,"name":"Flatten","value":"","parent":{"krate":0,"index":2028}},{"kind":"Use","ref_id":{"krate":0,"index":11170},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":168769,"byte_end":168773,"line_start":21,"line_end":21,"column_start":84,"column_end":88},"alias_span":null,"name":"Fold","value":"","parent":{"krate":0,"index":2028}},{"kind":"Use","ref_id":{"krate":0,"index":11362},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":168775,"byte_end":168782,"line_start":21,"line_end":21,"column_start":90,"column_end":97},"alias_span":null,"name":"ForEach","value":"","parent":{"krate":0,"index":2028}},{"kind":"Use","ref_id":{"krate":0,"index":11424},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":168788,"byte_end":168792,"line_start":22,"line_end":22,"column_start":5,"column_end":9},"alias_span":null,"name":"Fuse","value":"","parent":{"krate":0,"index":2028}},{"kind":"Use","ref_id":{"krate":0,"index":11476},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":168794,"byte_end":168801,"line_start":22,"line_end":22,"column_start":11,"column_end":18},"alias_span":null,"name":"Inspect","value":"","parent":{"krate":0,"index":2028}},{"kind":"Use","ref_id":{"krate":0,"index":11551},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":168803,"byte_end":168806,"line_start":22,"line_end":22,"column_start":20,"column_end":23},"alias_span":null,"name":"Map","value":"","parent":{"krate":0,"index":2028}},{"kind":"Use","ref_id":{"krate":0,"index":11697},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":168808,"byte_end":168812,"line_start":22,"line_end":22,"column_start":25,"column_end":29},"alias_span":null,"name":"Next","value":"","parent":{"krate":0,"index":2028}},{"kind":"Use","ref_id":{"krate":0,"index":11802},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":168814,"byte_end":168820,"line_start":22,"line_end":22,"column_start":31,"column_end":37},"alias_span":null,"name":"NextIf","value":"","parent":{"krate":0,"index":2028}},{"kind":"Use","ref_id":{"krate":0,"index":11851},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":168822,"byte_end":168830,"line_start":22,"line_end":22,"column_start":39,"column_end":47},"alias_span":null,"name":"NextIfEq","value":"","parent":{"krate":0,"index":2028}},{"kind":"Use","ref_id":{"krate":0,"index":11761},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":168832,"byte_end":168836,"line_start":22,"line_end":22,"column_start":49,"column_end":53},"alias_span":null,"name":"Peek","value":"","parent":{"krate":0,"index":2028}},{"kind":"Use","ref_id":{"krate":0,"index":11718},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":168838,"byte_end":168846,"line_start":22,"line_end":22,"column_start":55,"column_end":63},"alias_span":null,"name":"Peekable","value":"","parent":{"krate":0,"index":2028}},{"kind":"Use","ref_id":{"krate":0,"index":12429},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":168848,"byte_end":168852,"line_start":22,"line_end":22,"column_start":65,"column_end":69},"alias_span":null,"name":"Scan","value":"","parent":{"krate":0,"index":2028}},{"kind":"Use","ref_id":{"krate":0,"index":11705},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":168854,"byte_end":168868,"line_start":22,"line_end":22,"column_start":71,"column_end":85},"alias_span":null,"name":"SelectNextSome","value":"","parent":{"krate":0,"index":2028}},{"kind":"Use","ref_id":{"krate":0,"index":11905},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":168870,"byte_end":168874,"line_start":22,"line_end":22,"column_start":87,"column_end":91},"alias_span":null,"name":"Skip","value":"","parent":{"krate":0,"index":2028}},{"kind":"Use","ref_id":{"krate":0,"index":11948},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":168880,"byte_end":168889,"line_start":23,"line_end":23,"column_start":5,"column_end":14},"alias_span":null,"name":"SkipWhile","value":"","parent":{"krate":0,"index":2028}},{"kind":"Use","ref_id":{"krate":0,"index":3744},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":168891,"byte_end":168900,"line_start":23,"line_end":23,"column_start":16,"column_end":25},"alias_span":null,"name":"StreamExt","value":"","parent":{"krate":0,"index":2028}},{"kind":"Use","ref_id":{"krate":0,"index":11467},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":168902,"byte_end":168914,"line_start":23,"line_end":23,"column_start":27,"column_end":39},"alias_span":null,"name":"StreamFuture","value":"","parent":{"krate":0,"index":2028}},{"kind":"Use","ref_id":{"krate":0,"index":12026},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":168916,"byte_end":168920,"line_start":23,"line_end":23,"column_start":41,"column_end":45},"alias_span":null,"name":"Take","value":"","parent":{"krate":0,"index":2028}},{"kind":"Use","ref_id":{"krate":0,"index":12142},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":168922,"byte_end":168931,"line_start":23,"line_end":23,"column_start":47,"column_end":56},"alias_span":null,"name":"TakeUntil","value":"","parent":{"krate":0,"index":2028}},{"kind":"Use","ref_id":{"krate":0,"index":12069},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":168933,"byte_end":168942,"line_start":23,"line_end":23,"column_start":58,"column_end":67},"alias_span":null,"name":"TakeWhile","value":"","parent":{"krate":0,"index":2028}},{"kind":"Use","ref_id":{"krate":0,"index":12203},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":168944,"byte_end":168948,"line_start":23,"line_end":23,"column_start":69,"column_end":73},"alias_span":null,"name":"Then","value":"","parent":{"krate":0,"index":2028}},{"kind":"Use","ref_id":{"krate":0,"index":10735},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":168950,"byte_end":168955,"line_start":23,"line_end":23,"column_start":75,"column_end":80},"alias_span":null,"name":"Unzip","value":"","parent":{"krate":0,"index":2028}},{"kind":"Use","ref_id":{"krate":0,"index":12275},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":168957,"byte_end":168960,"line_start":23,"line_end":23,"column_start":82,"column_end":85},"alias_span":null,"name":"Zip","value":"","parent":{"krate":0,"index":2028}},{"kind":"Use","ref_id":{"krate":0,"index":12809},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":169012,"byte_end":169023,"line_start":27,"line_end":27,"column_start":23,"column_end":34},"alias_span":null,"name":"CatchUnwind","value":"","parent":{"krate":0,"index":2028}},{"kind":"Use","ref_id":{"krate":0,"index":12330},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":169074,"byte_end":169080,"line_start":30,"line_end":30,"column_start":23,"column_end":29},"alias_span":null,"name":"Chunks","value":"","parent":{"krate":0,"index":2028}},{"kind":"Use","ref_id":{"krate":0,"index":12382},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":169131,"byte_end":169142,"line_start":33,"line_end":33,"column_start":23,"column_end":34},"alias_span":null,"name":"ReadyChunks","value":"","parent":{"krate":0,"index":2028}},{"kind":"Use","ref_id":{"krate":0,"index":11304},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":169240,"byte_end":169247,"line_start":37,"line_end":37,"column_start":23,"column_end":30},"alias_span":null,"name":"Forward","value":"","parent":{"krate":0,"index":2028}},{"kind":"Use","ref_id":{"krate":0,"index":17284},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":169334,"byte_end":169349,"line_start":41,"line_end":41,"column_start":24,"column_end":39},"alias_span":null,"name":"BufferUnordered","value":"","parent":{"krate":0,"index":2028}},{"kind":"Use","ref_id":{"krate":0,"index":17243},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":169351,"byte_end":169359,"line_start":41,"line_end":41,"column_start":41,"column_end":49},"alias_span":null,"name":"Buffered","value":"","parent":{"krate":0,"index":2028}},{"kind":"Use","ref_id":{"krate":0,"index":17182},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":169361,"byte_end":169378,"line_start":41,"line_end":41,"column_start":51,"column_end":68},"alias_span":null,"name":"ForEachConcurrent","value":"","parent":{"krate":0,"index":2028}},{"kind":"Use","ref_id":{"krate":0,"index":12745},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":169539,"byte_end":169551,"line_start":47,"line_end":47,"column_start":24,"column_end":36},"alias_span":null,"name":"ReuniteError","value":"","parent":{"krate":0,"index":2028}},{"kind":"Use","ref_id":{"krate":0,"index":12746},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":169539,"byte_end":169551,"line_start":47,"line_end":47,"column_start":24,"column_end":36},"alias_span":null,"name":"ReuniteError","value":"","parent":{"krate":0,"index":2028}},{"kind":"Use","ref_id":{"krate":0,"index":12795},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":169553,"byte_end":169562,"line_start":47,"line_end":47,"column_start":38,"column_end":47},"alias_span":null,"name":"SplitSink","value":"","parent":{"krate":0,"index":2028}},{"kind":"Use","ref_id":{"krate":0,"index":12788},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":169564,"byte_end":169575,"line_start":47,"line_end":47,"column_start":49,"column_end":60},"alias_span":null,"name":"SplitStream","value":"","parent":{"krate":0,"index":2028}},{"kind":"Use","ref_id":{"krate":0,"index":14225},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":306167,"byte_end":306180,"line_start":140,"line_end":140,"column_start":32,"column_end":45},"alias_span":null,"name":"IntoAsyncRead","value":"","parent":{"krate":0,"index":3954}},{"kind":"Use","ref_id":{"krate":0,"index":4649},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":169627,"byte_end":169637,"line_start":51,"line_end":51,"column_start":5,"column_end":15},"alias_span":null,"name":"try_unfold","value":"","parent":{"krate":0,"index":2028}},{"kind":"Use","ref_id":{"krate":0,"index":12848},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":169639,"byte_end":169646,"line_start":51,"line_end":51,"column_start":17,"column_end":24},"alias_span":null,"name":"AndThen","value":"","parent":{"krate":0,"index":2028}},{"kind":"Use","ref_id":{"krate":0,"index":12916},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":169648,"byte_end":169655,"line_start":51,"line_end":51,"column_start":26,"column_end":33},"alias_span":null,"name":"ErrInto","value":"","parent":{"krate":0,"index":2028}},{"kind":"Use","ref_id":{"krate":0,"index":13072},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":169657,"byte_end":169667,"line_start":51,"line_end":51,"column_start":35,"column_end":45},"alias_span":null,"name":"InspectErr","value":"","parent":{"krate":0,"index":2028}},{"kind":"Use","ref_id":{"krate":0,"index":12994},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":169669,"byte_end":169678,"line_start":51,"line_end":51,"column_start":47,"column_end":56},"alias_span":null,"name":"InspectOk","value":"","parent":{"krate":0,"index":2028}},{"kind":"Use","ref_id":{"krate":0,"index":13152},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":169680,"byte_end":169690,"line_start":51,"line_end":51,"column_start":58,"column_end":68},"alias_span":null,"name":"IntoStream","value":"","parent":{"krate":0,"index":2028}},{"kind":"Use","ref_id":{"krate":0,"index":13272},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":169692,"byte_end":169698,"line_start":51,"line_end":51,"column_start":70,"column_end":76},"alias_span":null,"name":"MapErr","value":"","parent":{"krate":0,"index":2028}},{"kind":"Use","ref_id":{"krate":0,"index":13194},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":169700,"byte_end":169705,"line_start":51,"line_end":51,"column_start":78,"column_end":83},"alias_span":null,"name":"MapOk","value":"","parent":{"krate":0,"index":2028}},{"kind":"Use","ref_id":{"krate":0,"index":13347},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":169707,"byte_end":169713,"line_start":51,"line_end":51,"column_start":85,"column_end":91},"alias_span":null,"name":"OrElse","value":"","parent":{"krate":0,"index":2028}},{"kind":"Use","ref_id":{"krate":0,"index":13666},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":169719,"byte_end":169729,"line_start":52,"line_end":52,"column_start":5,"column_end":15},"alias_span":null,"name":"TryCollect","value":"","parent":{"krate":0,"index":2028}},{"kind":"Use","ref_id":{"krate":0,"index":13713},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":169731,"byte_end":169740,"line_start":52,"line_end":52,"column_start":17,"column_end":26},"alias_span":null,"name":"TryConcat","value":"","parent":{"krate":0,"index":2028}},{"kind":"Use","ref_id":{"krate":0,"index":13477},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":169742,"byte_end":169751,"line_start":52,"line_end":52,"column_start":28,"column_end":37},"alias_span":null,"name":"TryFilter","value":"","parent":{"krate":0,"index":2028}},{"kind":"Use","ref_id":{"krate":0,"index":13546},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":169753,"byte_end":169765,"line_start":52,"line_end":52,"column_start":39,"column_end":51},"alias_span":null,"name":"TryFilterMap","value":"","parent":{"krate":0,"index":2028}},{"kind":"Use","ref_id":{"krate":0,"index":13616},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":169767,"byte_end":169777,"line_start":52,"line_end":52,"column_start":53,"column_end":63},"alias_span":null,"name":"TryFlatten","value":"","parent":{"krate":0,"index":2028}},{"kind":"Use","ref_id":{"krate":0,"index":13748},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":169779,"byte_end":169786,"line_start":52,"line_end":52,"column_start":65,"column_end":72},"alias_span":null,"name":"TryFold","value":"","parent":{"krate":0,"index":2028}},{"kind":"Use","ref_id":{"krate":0,"index":13420},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":169788,"byte_end":169798,"line_start":52,"line_end":52,"column_start":74,"column_end":84},"alias_span":null,"name":"TryForEach","value":"","parent":{"krate":0,"index":2028}},{"kind":"Use","ref_id":{"krate":0,"index":13412},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":169800,"byte_end":169807,"line_start":52,"line_end":52,"column_start":86,"column_end":93},"alias_span":null,"name":"TryNext","value":"","parent":{"krate":0,"index":2028}},{"kind":"Use","ref_id":{"krate":0,"index":13874},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":169813,"byte_end":169825,"line_start":53,"line_end":53,"column_start":5,"column_end":17},"alias_span":null,"name":"TrySkipWhile","value":"","parent":{"krate":0,"index":2028}},{"kind":"Use","ref_id":{"krate":0,"index":4871},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":169827,"byte_end":169839,"line_start":53,"line_end":53,"column_start":19,"column_end":31},"alias_span":null,"name":"TryStreamExt","value":"","parent":{"krate":0,"index":2028}},{"kind":"Use","ref_id":{"krate":0,"index":13947},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":169841,"byte_end":169853,"line_start":53,"line_end":53,"column_start":33,"column_end":45},"alias_span":null,"name":"TryTakeWhile","value":"","parent":{"krate":0,"index":2028}},{"kind":"Use","ref_id":{"krate":0,"index":13817},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":169855,"byte_end":169864,"line_start":53,"line_end":53,"column_start":47,"column_end":56},"alias_span":null,"name":"TryUnfold","value":"","parent":{"krate":0,"index":2028}},{"kind":"Use","ref_id":{"krate":0,"index":14225},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":169989,"byte_end":170002,"line_start":59,"line_end":59,"column_start":27,"column_end":40},"alias_span":null,"name":"IntoAsyncRead","value":"","parent":{"krate":0,"index":2028}},{"kind":"Use","ref_id":{"krate":0,"index":17143},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":170093,"byte_end":170111,"line_start":63,"line_end":63,"column_start":28,"column_end":46},"alias_span":null,"name":"TryBufferUnordered","value":"","parent":{"krate":0,"index":2028}},{"kind":"Use","ref_id":{"krate":0,"index":17099},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":170113,"byte_end":170124,"line_start":63,"line_end":63,"column_start":48,"column_end":59},"alias_span":null,"name":"TryBuffered","value":"","parent":{"krate":0,"index":2028}},{"kind":"Use","ref_id":{"krate":0,"index":17033},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":170126,"byte_end":170146,"line_start":63,"line_end":63,"column_start":61,"column_end":81},"alias_span":null,"name":"TryForEachConcurrent","value":"","parent":{"krate":0,"index":2028}},{"kind":"Use","ref_id":{"krate":0,"index":5020},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":170203,"byte_end":170207,"line_start":68,"line_end":68,"column_start":22,"column_end":26},"alias_span":null,"name":"iter","value":"","parent":{"krate":0,"index":2028}},{"kind":"Use","ref_id":{"krate":0,"index":14244},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":170209,"byte_end":170213,"line_start":68,"line_end":68,"column_start":28,"column_end":32},"alias_span":null,"name":"Iter","value":"","parent":{"krate":0,"index":2028}},{"kind":"Use","ref_id":{"krate":0,"index":5055},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":170252,"byte_end":170258,"line_start":71,"line_end":71,"column_start":24,"column_end":30},"alias_span":null,"name":"repeat","value":"","parent":{"krate":0,"index":2028}},{"kind":"Use","ref_id":{"krate":0,"index":14253},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":170260,"byte_end":170266,"line_start":71,"line_end":71,"column_start":32,"column_end":38},"alias_span":null,"name":"Repeat","value":"","parent":{"krate":0,"index":2028}},{"kind":"Use","ref_id":{"krate":0,"index":5108},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":170315,"byte_end":170326,"line_start":74,"line_end":74,"column_start":29,"column_end":40},"alias_span":null,"name":"repeat_with","value":"","parent":{"krate":0,"index":2028}},{"kind":"Use","ref_id":{"krate":0,"index":14262},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":170328,"byte_end":170338,"line_start":74,"line_end":74,"column_start":42,"column_end":52},"alias_span":null,"name":"RepeatWith","value":"","parent":{"krate":0,"index":2028}},{"kind":"Use","ref_id":{"krate":0,"index":5142},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":170375,"byte_end":170380,"line_start":77,"line_end":77,"column_start":23,"column_end":28},"alias_span":null,"name":"empty","value":"","parent":{"krate":0,"index":2028}},{"kind":"Use","ref_id":{"krate":0,"index":14271},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":170382,"byte_end":170387,"line_start":77,"line_end":77,"column_start":30,"column_end":35},"alias_span":null,"name":"Empty","value":"","parent":{"krate":0,"index":2028}},{"kind":"Use","ref_id":{"krate":0,"index":5194},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":170422,"byte_end":170426,"line_start":80,"line_end":80,"column_start":22,"column_end":26},"alias_span":null,"name":"once","value":"","parent":{"krate":0,"index":2028}},{"kind":"Use","ref_id":{"krate":0,"index":14282},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":170428,"byte_end":170432,"line_start":80,"line_end":80,"column_start":28,"column_end":32},"alias_span":null,"name":"Once","value":"","parent":{"krate":0,"index":2028}},{"kind":"Use","ref_id":{"krate":0,"index":5238},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":170473,"byte_end":170480,"line_start":83,"line_end":83,"column_start":25,"column_end":32},"alias_span":null,"name":"pending","value":"","parent":{"krate":0,"index":2028}},{"kind":"Use","ref_id":{"krate":0,"index":14313},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":170482,"byte_end":170489,"line_start":83,"line_end":83,"column_start":34,"column_end":41},"alias_span":null,"name":"Pending","value":"","parent":{"krate":0,"index":2028}},{"kind":"Use","ref_id":{"krate":0,"index":5288},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":170530,"byte_end":170537,"line_start":86,"line_end":86,"column_start":25,"column_end":32},"alias_span":null,"name":"poll_fn","value":"","parent":{"krate":0,"index":2028}},{"kind":"Use","ref_id":{"krate":0,"index":5280},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":170539,"byte_end":170545,"line_start":86,"line_end":86,"column_start":34,"column_end":40},"alias_span":null,"name":"PollFn","value":"","parent":{"krate":0,"index":2028}},{"kind":"Use","ref_id":{"krate":0,"index":5334},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":170584,"byte_end":170590,"line_start":89,"line_end":89,"column_start":24,"column_end":30},"alias_span":null,"name":"select","value":"","parent":{"krate":0,"index":2028}},{"kind":"Use","ref_id":{"krate":0,"index":14326},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":170592,"byte_end":170598,"line_start":89,"line_end":89,"column_start":32,"column_end":38},"alias_span":null,"name":"Select","value":"","parent":{"krate":0,"index":2028}},{"kind":"Use","ref_id":{"krate":0,"index":5399},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":170637,"byte_end":170643,"line_start":92,"line_end":92,"column_start":24,"column_end":30},"alias_span":null,"name":"unfold","value":"","parent":{"krate":0,"index":2028}},{"kind":"Use","ref_id":{"krate":0,"index":14372},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":170645,"byte_end":170651,"line_start":92,"line_end":92,"column_start":32,"column_end":38},"alias_span":null,"name":"Unfold","value":"","parent":{"krate":0,"index":2028}},{"kind":"Use","ref_id":{"krate":0,"index":14495},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":170800,"byte_end":170814,"line_start":98,"line_end":98,"column_start":36,"column_end":50},"alias_span":null,"name":"FuturesOrdered","value":"","parent":{"krate":0,"index":2028}},{"kind":"Use","ref_id":{"krate":0,"index":15137},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/mod.rs","byte_start":12783432,"byte_end":12783440,"line_start":25,"line_end":25,"column_start":22,"column_end":30},"alias_span":null,"name":"IntoIter","value":"","parent":{"krate":0,"index":14535}},{"kind":"Use","ref_id":{"krate":0,"index":15128},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/mod.rs","byte_start":12783442,"byte_end":12783446,"line_start":25,"line_end":25,"column_start":32,"column_end":36},"alias_span":null,"name":"Iter","value":"","parent":{"krate":0,"index":14535}},{"kind":"Use","ref_id":{"krate":0,"index":15129},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/mod.rs","byte_start":12783442,"byte_end":12783446,"line_start":25,"line_end":25,"column_start":32,"column_end":36},"alias_span":null,"name":"Iter","value":"","parent":{"krate":0,"index":14535}},{"kind":"Use","ref_id":{"krate":0,"index":15108},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/mod.rs","byte_start":12783448,"byte_end":12783455,"line_start":25,"line_end":25,"column_start":38,"column_end":45},"alias_span":null,"name":"IterMut","value":"","parent":{"krate":0,"index":14535}},{"kind":"Use","ref_id":{"krate":0,"index":15109},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/mod.rs","byte_start":12783448,"byte_end":12783455,"line_start":25,"line_end":25,"column_start":38,"column_end":45},"alias_span":null,"name":"IterMut","value":"","parent":{"krate":0,"index":14535}},{"kind":"Use","ref_id":{"krate":0,"index":15098},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/mod.rs","byte_start":12783457,"byte_end":12783467,"line_start":25,"line_end":25,"column_start":47,"column_end":57},"alias_span":null,"name":"IterPinMut","value":"","parent":{"krate":0,"index":14535}},{"kind":"Use","ref_id":{"krate":0,"index":15117},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/mod.rs","byte_start":12783469,"byte_end":12783479,"line_start":25,"line_end":25,"column_start":59,"column_end":69},"alias_span":null,"name":"IterPinRef","value":"","parent":{"krate":0,"index":14535}},{"kind":"Use","ref_id":{"krate":0,"index":14849},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":170964,"byte_end":170980,"line_start":104,"line_end":104,"column_start":38,"column_end":54},"alias_span":null,"name":"FuturesUnordered","value":"","parent":{"krate":0,"index":2028}},{"kind":"Use","ref_id":{"krate":0,"index":15009},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":171098,"byte_end":171108,"line_start":109,"line_end":109,"column_start":32,"column_end":42},"alias_span":null,"name":"select_all","value":"","parent":{"krate":0,"index":2028}},{"kind":"Use","ref_id":{"krate":0,"index":16960},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":171110,"byte_end":171119,"line_start":109,"line_end":109,"column_start":44,"column_end":53},"alias_span":null,"name":"SelectAll","value":"","parent":{"krate":0,"index":2028}},{"kind":"Use","ref_id":{"krate":0,"index":16897},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":171233,"byte_end":171242,"line_start":114,"line_end":114,"column_start":32,"column_end":41},"alias_span":null,"name":"Abortable","value":"","parent":{"krate":0,"index":2028}},{"kind":"Use","ref_id":{"krate":0,"index":16654},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":171244,"byte_end":171255,"line_start":114,"line_end":114,"column_start":43,"column_end":54},"alias_span":null,"name":"AbortHandle","value":"","parent":{"krate":0,"index":2028}},{"kind":"Use","ref_id":{"krate":0,"index":16650},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":171257,"byte_end":171274,"line_start":114,"line_end":114,"column_start":56,"column_end":73},"alias_span":null,"name":"AbortRegistration","value":"","parent":{"krate":0,"index":2028}},{"kind":"Use","ref_id":{"krate":0,"index":16665},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":171276,"byte_end":171283,"line_start":114,"line_end":114,"column_start":75,"column_end":82},"alias_span":null,"name":"Aborted","value":"","parent":{"krate":0,"index":2028}},{"kind":"Use","ref_id":{"krate":0,"index":16666},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":171276,"byte_end":171283,"line_start":114,"line_end":114,"column_start":75,"column_end":82},"alias_span":null,"name":"Aborted","value":"","parent":{"krate":0,"index":2028}},{"kind":"Use","ref_id":{"krate":0,"index":15080},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":171339,"byte_end":171348,"line_start":116,"line_end":116,"column_start":24,"column_end":33},"alias_span":null,"name":"abortable","value":"","parent":{"krate":0,"index":2028}},{"kind":"Use","ref_id":{"krate":19,"index":96},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lib.rs","byte_start":11386,"byte_end":11392,"line_start":307,"line_end":307,"column_start":25,"column_end":31},"alias_span":null,"name":"Stream","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3744},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lib.rs","byte_start":11394,"byte_end":11403,"line_start":307,"line_end":307,"column_start":33,"column_end":42},"alias_span":null,"name":"StreamExt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":19,"index":127},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lib.rs","byte_start":11405,"byte_end":11414,"line_start":307,"line_end":307,"column_start":44,"column_end":53},"alias_span":null,"name":"TryStream","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4871},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lib.rs","byte_start":11416,"byte_end":11428,"line_start":307,"line_end":307,"column_start":55,"column_end":67},"alias_span":null,"name":"TryStreamExt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":23,"index":17},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/sink/mod.rs","byte_start":396260,"byte_end":396264,"line_start":18,"line_end":18,"column_start":23,"column_end":27},"alias_span":null,"name":"Sink","value":"","parent":{"krate":0,"index":5445}},{"kind":"Use","ref_id":{"krate":0,"index":15144},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/sink/mod.rs","byte_start":396299,"byte_end":396304,"line_start":21,"line_end":21,"column_start":22,"column_end":27},"alias_span":null,"name":"Close","value":"","parent":{"krate":0,"index":5445}},{"kind":"Use","ref_id":{"krate":0,"index":5535},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/sink/mod.rs","byte_start":396340,"byte_end":396345,"line_start":24,"line_end":24,"column_start":23,"column_end":28},"alias_span":null,"name":"drain","value":"","parent":{"krate":0,"index":5445}},{"kind":"Use","ref_id":{"krate":0,"index":15155},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/sink/mod.rs","byte_start":396347,"byte_end":396352,"line_start":24,"line_end":24,"column_start":30,"column_end":35},"alias_span":null,"name":"Drain","value":"","parent":{"krate":0,"index":5445}},{"kind":"Use","ref_id":{"krate":0,"index":15161},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/sink/mod.rs","byte_start":396390,"byte_end":396396,"line_start":27,"line_end":27,"column_start":23,"column_end":29},"alias_span":null,"name":"Fanout","value":"","parent":{"krate":0,"index":5445}},{"kind":"Use","ref_id":{"krate":0,"index":15206},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/sink/mod.rs","byte_start":396429,"byte_end":396433,"line_start":30,"line_end":30,"column_start":21,"column_end":25},"alias_span":null,"name":"Feed","value":"","parent":{"krate":0,"index":5445}},{"kind":"Use","ref_id":{"krate":0,"index":15217},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/sink/mod.rs","byte_start":396468,"byte_end":396473,"line_start":33,"line_end":33,"column_start":22,"column_end":27},"alias_span":null,"name":"Flush","value":"","parent":{"krate":0,"index":5445}},{"kind":"Use","ref_id":{"krate":0,"index":15237},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/sink/mod.rs","byte_start":396514,"byte_end":396525,"line_start":36,"line_end":36,"column_start":25,"column_end":36},"alias_span":null,"name":"SinkErrInto","value":"","parent":{"krate":0,"index":5445}},{"kind":"Use","ref_id":{"krate":0,"index":15299},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/sink/mod.rs","byte_start":396564,"byte_end":396574,"line_start":39,"line_end":39,"column_start":24,"column_end":34},"alias_span":null,"name":"SinkMapErr","value":"","parent":{"krate":0,"index":5445}},{"kind":"Use","ref_id":{"krate":0,"index":15351},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/sink/mod.rs","byte_start":396607,"byte_end":396611,"line_start":42,"line_end":42,"column_start":21,"column_end":25},"alias_span":null,"name":"Send","value":"","parent":{"krate":0,"index":5445}},{"kind":"Use","ref_id":{"krate":0,"index":5855},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/sink/mod.rs","byte_start":396652,"byte_end":396659,"line_start":45,"line_end":45,"column_start":25,"column_end":32},"alias_span":null,"name":"SendAll","value":"","parent":{"krate":0,"index":5445}},{"kind":"Use","ref_id":{"krate":0,"index":5917},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/sink/mod.rs","byte_start":396697,"byte_end":396703,"line_start":48,"line_end":48,"column_start":24,"column_end":30},"alias_span":null,"name":"unfold","value":"","parent":{"krate":0,"index":5445}},{"kind":"Use","ref_id":{"krate":0,"index":15370},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/sink/mod.rs","byte_start":396705,"byte_end":396711,"line_start":48,"line_end":48,"column_start":32,"column_end":38},"alias_span":null,"name":"Unfold","value":"","parent":{"krate":0,"index":5445}},{"kind":"Use","ref_id":{"krate":0,"index":15419},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/sink/mod.rs","byte_start":396745,"byte_end":396749,"line_start":51,"line_end":51,"column_start":21,"column_end":25},"alias_span":null,"name":"With","value":"","parent":{"krate":0,"index":5445}},{"kind":"Use","ref_id":{"krate":0,"index":15502},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/sink/mod.rs","byte_start":396800,"byte_end":396811,"line_start":54,"line_end":54,"column_start":30,"column_end":41},"alias_span":null,"name":"WithFlatMap","value":"","parent":{"krate":0,"index":5445}},{"kind":"Use","ref_id":{"krate":0,"index":15596},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/sink/mod.rs","byte_start":396900,"byte_end":396906,"line_start":59,"line_end":59,"column_start":23,"column_end":29},"alias_span":null,"name":"Buffer","value":"","parent":{"krate":0,"index":5445}},{"kind":"Use","ref_id":{"krate":23,"index":17},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lib.rs","byte_start":11581,"byte_end":11585,"line_start":314,"line_end":314,"column_start":23,"column_end":27},"alias_span":null,"name":"Sink","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":6160},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lib.rs","byte_start":11587,"byte_end":11594,"line_start":314,"line_end":314,"column_start":29,"column_end":36},"alias_span":null,"name":"SinkExt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":2,"index":12353},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/mod.rs","byte_start":436395,"byte_end":436402,"line_start":14,"line_end":14,"column_start":22,"column_end":29},"alias_span":null,"name":"Context","value":"","parent":{"krate":0,"index":6205}},{"kind":"Use","ref_id":{"krate":2,"index":42595},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/mod.rs","byte_start":436404,"byte_end":436408,"line_start":14,"line_end":14,"column_start":31,"column_end":35},"alias_span":null,"name":"Poll","value":"","parent":{"krate":0,"index":6205}},{"kind":"Use","ref_id":{"krate":2,"index":42631},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/mod.rs","byte_start":436410,"byte_end":436418,"line_start":14,"line_end":14,"column_start":37,"column_end":45},"alias_span":null,"name":"RawWaker","value":"","parent":{"krate":0,"index":6205}},{"kind":"Use","ref_id":{"krate":2,"index":42640},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/mod.rs","byte_start":436420,"byte_end":436434,"line_start":14,"line_end":14,"column_start":47,"column_end":61},"alias_span":null,"name":"RawWakerVTable","value":"","parent":{"krate":0,"index":6205}},{"kind":"Use","ref_id":{"krate":2,"index":12363},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/mod.rs","byte_start":436436,"byte_end":436441,"line_start":14,"line_end":14,"column_start":63,"column_end":68},"alias_span":null,"name":"Waker","value":"","parent":{"krate":0,"index":6205}},{"kind":"Use","ref_id":{"krate":22,"index":141},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/mod.rs","byte_start":436468,"byte_end":436477,"line_start":16,"line_end":16,"column_start":24,"column_end":33},"alias_span":null,"name":"FutureObj","value":"","parent":{"krate":0,"index":6205}},{"kind":"Use","ref_id":{"krate":22,"index":107},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/mod.rs","byte_start":436479,"byte_end":436493,"line_start":16,"line_end":16,"column_start":35,"column_end":49},"alias_span":null,"name":"LocalFutureObj","value":"","parent":{"krate":0,"index":6205}},{"kind":"Use","ref_id":{"krate":22,"index":19},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/mod.rs","byte_start":436495,"byte_end":436505,"line_start":16,"line_end":16,"column_start":51,"column_end":61},"alias_span":null,"name":"LocalSpawn","value":"","parent":{"krate":0,"index":6205}},{"kind":"Use","ref_id":{"krate":22,"index":16},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/mod.rs","byte_start":436507,"byte_end":436512,"line_start":16,"line_end":16,"column_start":63,"column_end":68},"alias_span":null,"name":"Spawn","value":"","parent":{"krate":0,"index":6205}},{"kind":"Use","ref_id":{"krate":22,"index":22},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/mod.rs","byte_start":436514,"byte_end":436524,"line_start":16,"line_end":16,"column_start":70,"column_end":80},"alias_span":null,"name":"SpawnError","value":"","parent":{"krate":0,"index":6205}},{"kind":"Use","ref_id":{"krate":22,"index":162},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/mod.rs","byte_start":436526,"byte_end":436541,"line_start":16,"line_end":16,"column_start":82,"column_end":97},"alias_span":null,"name":"UnsafeFutureObj","value":"","parent":{"krate":0,"index":6205}},{"kind":"Use","ref_id":{"krate":22,"index":282},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/mod.rs","byte_start":436567,"byte_end":436577,"line_start":18,"line_end":18,"column_start":23,"column_end":33},"alias_span":null,"name":"noop_waker","value":"","parent":{"krate":0,"index":6205}},{"kind":"Use","ref_id":{"krate":22,"index":283},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/mod.rs","byte_start":436625,"byte_end":436639,"line_start":20,"line_end":20,"column_start":23,"column_end":37},"alias_span":null,"name":"noop_waker_ref","value":"","parent":{"krate":0,"index":6205}},{"kind":"Use","ref_id":{"krate":22,"index":327},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/mod.rs","byte_start":436723,"byte_end":436730,"line_start":24,"line_end":24,"column_start":27,"column_end":34},"alias_span":null,"name":"ArcWake","value":"","parent":{"krate":0,"index":6205}},{"kind":"Use","ref_id":{"krate":22,"index":355},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/mod.rs","byte_start":436789,"byte_end":436794,"line_start":27,"line_end":27,"column_start":27,"column_end":32},"alias_span":null,"name":"waker","value":"","parent":{"krate":0,"index":6205}},{"kind":"Use","ref_id":{"krate":22,"index":403},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/mod.rs","byte_start":436854,"byte_end":436863,"line_start":30,"line_end":30,"column_start":28,"column_end":37},"alias_span":null,"name":"waker_ref","value":"","parent":{"krate":0,"index":6205}},{"kind":"Use","ref_id":{"krate":22,"index":412},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/mod.rs","byte_start":436865,"byte_end":436873,"line_start":30,"line_end":30,"column_start":39,"column_end":47},"alias_span":null,"name":"WakerRef","value":"","parent":{"krate":0,"index":6205}},{"kind":"Use","ref_id":{"krate":19,"index":194},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/mod.rs","byte_start":436921,"byte_end":436932,"line_start":32,"line_end":32,"column_start":45,"column_end":56},"alias_span":null,"name":"AtomicWaker","value":"","parent":{"krate":0,"index":6205}},{"kind":"Use","ref_id":{"krate":0,"index":6287},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/mod.rs","byte_start":436970,"byte_end":436983,"line_start":36,"line_end":36,"column_start":23,"column_end":36},"alias_span":null,"name":"LocalSpawnExt","value":"","parent":{"krate":0,"index":6205}},{"kind":"Use","ref_id":{"krate":0,"index":6282},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/mod.rs","byte_start":436985,"byte_end":436993,"line_start":36,"line_end":36,"column_start":38,"column_end":46},"alias_span":null,"name":"SpawnExt","value":"","parent":{"krate":0,"index":6205}},{"kind":"Use","ref_id":{"krate":1,"index":3753},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":445010,"byte_end":445015,"line_start":33,"line_end":33,"column_start":19,"column_end":24},"alias_span":null,"name":"Error","value":"","parent":{"krate":0,"index":6301}},{"kind":"Use","ref_id":{"krate":1,"index":10376},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":445017,"byte_end":445026,"line_start":33,"line_end":33,"column_start":26,"column_end":35},"alias_span":null,"name":"ErrorKind","value":"","parent":{"krate":0,"index":6301}},{"kind":"Use","ref_id":{"krate":1,"index":10439},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":445028,"byte_end":445035,"line_start":33,"line_end":33,"column_start":37,"column_end":44},"alias_span":null,"name":"IoSlice","value":"","parent":{"krate":0,"index":6301}},{"kind":"Use","ref_id":{"krate":1,"index":4291},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":445037,"byte_end":445047,"line_start":33,"line_end":33,"column_start":46,"column_end":56},"alias_span":null,"name":"IoSliceMut","value":"","parent":{"krate":0,"index":6301}},{"kind":"Use","ref_id":{"krate":1,"index":3751},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":445049,"byte_end":445055,"line_start":33,"line_end":33,"column_start":58,"column_end":64},"alias_span":null,"name":"Result","value":"","parent":{"krate":0,"index":6301}},{"kind":"Use","ref_id":{"krate":1,"index":10453},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":445057,"byte_end":445065,"line_start":33,"line_end":33,"column_start":66,"column_end":74},"alias_span":null,"name":"SeekFrom","value":"","parent":{"krate":0,"index":6301}},{"kind":"Use","ref_id":{"krate":27,"index":49},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":445090,"byte_end":445102,"line_start":35,"line_end":35,"column_start":22,"column_end":34},"alias_span":null,"name":"AsyncBufRead","value":"","parent":{"krate":0,"index":6301}},{"kind":"Use","ref_id":{"krate":27,"index":39},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":445104,"byte_end":445113,"line_start":35,"line_end":35,"column_start":36,"column_end":45},"alias_span":null,"name":"AsyncRead","value":"","parent":{"krate":0,"index":6301}},{"kind":"Use","ref_id":{"krate":27,"index":47},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":445115,"byte_end":445124,"line_start":35,"line_end":35,"column_start":47,"column_end":56},"alias_span":null,"name":"AsyncSeek","value":"","parent":{"krate":0,"index":6301}},{"kind":"Use","ref_id":{"krate":27,"index":42},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":445126,"byte_end":445136,"line_start":35,"line_end":35,"column_start":58,"column_end":68},"alias_span":null,"name":"AsyncWrite","value":"","parent":{"krate":0,"index":6301}},{"kind":"Use","ref_id":{"krate":0,"index":15662},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":445734,"byte_end":445744,"line_start":56,"line_end":56,"column_start":26,"column_end":36},"alias_span":null,"name":"AllowStdIo","value":"","parent":{"krate":0,"index":6301}},{"kind":"Use","ref_id":{"krate":0,"index":15695},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":445789,"byte_end":445798,"line_start":59,"line_end":59,"column_start":27,"column_end":36},"alias_span":null,"name":"BufReader","value":"","parent":{"krate":0,"index":6301}},{"kind":"Use","ref_id":{"krate":0,"index":15748},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":445843,"byte_end":445852,"line_start":62,"line_end":62,"column_start":27,"column_end":36},"alias_span":null,"name":"BufWriter","value":"","parent":{"krate":0,"index":6301}},{"kind":"Use","ref_id":{"krate":0,"index":15797},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":445887,"byte_end":445892,"line_start":65,"line_end":65,"column_start":22,"column_end":27},"alias_span":null,"name":"Chain","value":"","parent":{"krate":0,"index":6301}},{"kind":"Use","ref_id":{"krate":0,"index":15846},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":445927,"byte_end":445932,"line_start":68,"line_end":68,"column_start":22,"column_end":27},"alias_span":null,"name":"Close","value":"","parent":{"krate":0,"index":6301}},{"kind":"Use","ref_id":{"krate":0,"index":6723},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":445966,"byte_end":445970,"line_start":71,"line_end":71,"column_start":22,"column_end":26},"alias_span":null,"name":"copy","value":"","parent":{"krate":0,"index":6301}},{"kind":"Use","ref_id":{"krate":0,"index":15863},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":445972,"byte_end":445976,"line_start":71,"line_end":71,"column_start":28,"column_end":32},"alias_span":null,"name":"Copy","value":"","parent":{"krate":0,"index":6301}},{"kind":"Use","ref_id":{"krate":0,"index":6768},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":446019,"byte_end":446027,"line_start":74,"line_end":74,"column_start":26,"column_end":34},"alias_span":null,"name":"copy_buf","value":"","parent":{"krate":0,"index":6301}},{"kind":"Use","ref_id":{"krate":0,"index":15917},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":446029,"byte_end":446036,"line_start":74,"line_end":74,"column_start":36,"column_end":43},"alias_span":null,"name":"CopyBuf","value":"","parent":{"krate":0,"index":6301}},{"kind":"Use","ref_id":{"krate":0,"index":15970},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":446074,"byte_end":446080,"line_start":77,"line_end":77,"column_start":23,"column_end":29},"alias_span":null,"name":"Cursor","value":"","parent":{"krate":0,"index":6301}},{"kind":"Use","ref_id":{"krate":0,"index":6872},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":446116,"byte_end":446121,"line_start":80,"line_end":80,"column_start":23,"column_end":28},"alias_span":null,"name":"empty","value":"","parent":{"krate":0,"index":6301}},{"kind":"Use","ref_id":{"krate":0,"index":6870},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":446123,"byte_end":446128,"line_start":80,"line_end":80,"column_start":30,"column_end":35},"alias_span":null,"name":"Empty","value":"","parent":{"krate":0,"index":6301}},{"kind":"Use","ref_id":{"krate":0,"index":15998},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":446170,"byte_end":446177,"line_start":83,"line_end":83,"column_start":25,"column_end":32},"alias_span":null,"name":"FillBuf","value":"","parent":{"krate":0,"index":6301}},{"kind":"Use","ref_id":{"krate":0,"index":16006},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":446212,"byte_end":446217,"line_start":86,"line_end":86,"column_start":22,"column_end":27},"alias_span":null,"name":"Flush","value":"","parent":{"krate":0,"index":6301}},{"kind":"Use","ref_id":{"krate":0,"index":16028},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":446406,"byte_end":446414,"line_start":93,"line_end":93,"column_start":26,"column_end":34},"alias_span":null,"name":"IntoSink","value":"","parent":{"krate":0,"index":6301}},{"kind":"Use","ref_id":{"krate":0,"index":16075},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":446449,"byte_end":446454,"line_start":96,"line_end":96,"column_start":22,"column_end":27},"alias_span":null,"name":"Lines","value":"","parent":{"krate":0,"index":6301}},{"kind":"Use","ref_id":{"krate":0,"index":16118},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":446487,"byte_end":446491,"line_start":99,"line_end":99,"column_start":21,"column_end":25},"alias_span":null,"name":"Read","value":"","parent":{"krate":0,"index":6301}},{"kind":"Use","ref_id":{"krate":0,"index":16127},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":446542,"byte_end":446554,"line_start":102,"line_end":102,"column_start":30,"column_end":42},"alias_span":null,"name":"ReadVectored","value":"","parent":{"krate":0,"index":6301}},{"kind":"Use","ref_id":{"krate":0,"index":16136},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":446599,"byte_end":446608,"line_start":105,"line_end":105,"column_start":27,"column_end":36},"alias_span":null,"name":"ReadExact","value":"","parent":{"krate":0,"index":6301}},{"kind":"Use","ref_id":{"krate":0,"index":16145},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":446651,"byte_end":446659,"line_start":108,"line_end":108,"column_start":26,"column_end":34},"alias_span":null,"name":"ReadLine","value":"","parent":{"krate":0,"index":6301}},{"kind":"Use","ref_id":{"krate":0,"index":16156},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":446706,"byte_end":446715,"line_start":111,"line_end":111,"column_start":28,"column_end":37},"alias_span":null,"name":"ReadToEnd","value":"","parent":{"krate":0,"index":6301}},{"kind":"Use","ref_id":{"krate":0,"index":16166},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":446768,"byte_end":446780,"line_start":114,"line_end":114,"column_start":31,"column_end":43},"alias_span":null,"name":"ReadToString","value":"","parent":{"krate":0,"index":6301}},{"kind":"Use","ref_id":{"krate":0,"index":16177},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":446825,"byte_end":446834,"line_start":117,"line_end":117,"column_start":27,"column_end":36},"alias_span":null,"name":"ReadUntil","value":"","parent":{"krate":0,"index":6301}},{"kind":"Use","ref_id":{"krate":0,"index":7364},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":446872,"byte_end":446878,"line_start":120,"line_end":120,"column_start":24,"column_end":30},"alias_span":null,"name":"repeat","value":"","parent":{"krate":0,"index":6301}},{"kind":"Use","ref_id":{"krate":0,"index":7362},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":446880,"byte_end":446886,"line_start":120,"line_end":120,"column_start":32,"column_end":38},"alias_span":null,"name":"Repeat","value":"","parent":{"krate":0,"index":6301}},{"kind":"Use","ref_id":{"krate":0,"index":16188},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":446920,"byte_end":446924,"line_start":123,"line_end":123,"column_start":21,"column_end":25},"alias_span":null,"name":"Seek","value":"","parent":{"krate":0,"index":6301}},{"kind":"Use","ref_id":{"krate":0,"index":7440},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":446958,"byte_end":446962,"line_start":126,"line_end":126,"column_start":22,"column_end":26},"alias_span":null,"name":"sink","value":"","parent":{"krate":0,"index":6301}},{"kind":"Use","ref_id":{"krate":0,"index":7438},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":446964,"byte_end":446968,"line_start":126,"line_end":126,"column_start":28,"column_end":32},"alias_span":null,"name":"Sink","value":"","parent":{"krate":0,"index":6301}},{"kind":"Use","ref_id":{"krate":0,"index":16197},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":447005,"byte_end":447013,"line_start":129,"line_end":129,"column_start":23,"column_end":31},"alias_span":null,"name":"ReadHalf","value":"","parent":{"krate":0,"index":6301}},{"kind":"Use","ref_id":{"krate":0,"index":7522},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":447015,"byte_end":447027,"line_start":129,"line_end":129,"column_start":33,"column_end":45},"alias_span":null,"name":"ReuniteError","value":"","parent":{"krate":0,"index":6301}},{"kind":"Use","ref_id":{"krate":0,"index":7523},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":447015,"byte_end":447027,"line_start":129,"line_end":129,"column_start":33,"column_end":45},"alias_span":null,"name":"ReuniteError","value":"","parent":{"krate":0,"index":6301}},{"kind":"Use","ref_id":{"krate":0,"index":16203},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":447029,"byte_end":447038,"line_start":129,"line_end":129,"column_start":47,"column_end":56},"alias_span":null,"name":"WriteHalf","value":"","parent":{"krate":0,"index":6301}},{"kind":"Use","ref_id":{"krate":0,"index":16214},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":447072,"byte_end":447076,"line_start":132,"line_end":132,"column_start":21,"column_end":25},"alias_span":null,"name":"Take","value":"","parent":{"krate":0,"index":6301}},{"kind":"Use","ref_id":{"krate":0,"index":16253},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":447113,"byte_end":447119,"line_start":135,"line_end":135,"column_start":23,"column_end":29},"alias_span":null,"name":"Window","value":"","parent":{"krate":0,"index":6301}},{"kind":"Use","ref_id":{"krate":0,"index":16260},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":447154,"byte_end":447159,"line_start":138,"line_end":138,"column_start":22,"column_end":27},"alias_span":null,"name":"Write","value":"","parent":{"krate":0,"index":6301}},{"kind":"Use","ref_id":{"krate":0,"index":16269},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":447212,"byte_end":447225,"line_start":141,"line_end":141,"column_start":31,"column_end":44},"alias_span":null,"name":"WriteVectored","value":"","parent":{"krate":0,"index":6301}},{"kind":"Use","ref_id":{"krate":0,"index":16278},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":447268,"byte_end":447276,"line_start":144,"line_end":144,"column_start":26,"column_end":34},"alias_span":null,"name":"WriteAll","value":"","parent":{"krate":0,"index":6301}},{"kind":"Use","ref_id":{"krate":27,"index":49},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lib.rs","byte_start":11915,"byte_end":11927,"line_start":332,"line_end":332,"column_start":5,"column_end":17},"alias_span":null,"name":"AsyncBufRead","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":7765},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lib.rs","byte_start":11929,"byte_end":11944,"line_start":332,"line_end":332,"column_start":19,"column_end":34},"alias_span":null,"name":"AsyncBufReadExt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":27,"index":39},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lib.rs","byte_start":11946,"byte_end":11955,"line_start":332,"line_end":332,"column_start":36,"column_end":45},"alias_span":null,"name":"AsyncRead","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":7730},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lib.rs","byte_start":11957,"byte_end":11969,"line_start":332,"line_end":332,"column_start":47,"column_end":59},"alias_span":null,"name":"AsyncReadExt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":27,"index":47},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lib.rs","byte_start":11971,"byte_end":11980,"line_start":332,"line_end":332,"column_start":61,"column_end":70},"alias_span":null,"name":"AsyncSeek","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":7760},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lib.rs","byte_start":11982,"byte_end":11994,"line_start":332,"line_end":332,"column_start":72,"column_end":84},"alias_span":null,"name":"AsyncSeekExt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":27,"index":42},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lib.rs","byte_start":11996,"byte_end":12006,"line_start":332,"line_end":332,"column_start":86,"column_end":96},"alias_span":null,"name":"AsyncWrite","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":7747},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lib.rs","byte_start":12012,"byte_end":12025,"line_start":333,"line_end":333,"column_start":5,"column_end":18},"alias_span":null,"name":"AsyncWriteExt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":16420},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mod.rs","byte_start":544737,"byte_end":544753,"line_start":10,"line_end":10,"column_start":27,"column_end":43},"alias_span":null,"name":"MappedMutexGuard","value":"","parent":{"krate":0,"index":7804}},{"kind":"Use","ref_id":{"krate":0,"index":16341},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mod.rs","byte_start":544755,"byte_end":544760,"line_start":10,"line_end":10,"column_start":45,"column_end":50},"alias_span":null,"name":"Mutex","value":"","parent":{"krate":0,"index":7804}},{"kind":"Use","ref_id":{"krate":0,"index":16378},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mod.rs","byte_start":544762,"byte_end":544777,"line_start":10,"line_end":10,"column_start":52,"column_end":67},"alias_span":null,"name":"MutexLockFuture","value":"","parent":{"krate":0,"index":7804}},{"kind":"Use","ref_id":{"krate":0,"index":16397},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mod.rs","byte_start":544779,"byte_end":544789,"line_start":10,"line_end":10,"column_start":69,"column_end":79},"alias_span":null,"name":"MutexGuard","value":"","parent":{"krate":0,"index":7804}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lib.rs","byte_start":0,"byte_end":12175,"line_start":1,"line_end":345,"column_start":1,"column_end":18},"name":"","qualname":"::","value":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":7},{"krate":0,"index":10},{"krate":0,"index":128},{"krate":0,"index":129},{"krate":0,"index":163},{"krate":0,"index":2015},{"krate":0,"index":2016},{"krate":0,"index":2019},{"krate":0,"index":2022},{"krate":0,"index":2025},{"krate":0,"index":2028},{"krate":0,"index":5432},{"krate":0,"index":5433},{"krate":0,"index":5436},{"krate":0,"index":5439},{"krate":0,"index":5442},{"krate":0,"index":5445},{"krate":0,"index":6198},{"krate":0,"index":6199},{"krate":0,"index":6202},{"krate":0,"index":6205},{"krate":0,"index":6299},{"krate":0,"index":6301},{"krate":0,"index":7779},{"krate":0,"index":7780},{"krate":0,"index":7783},{"krate":0,"index":7786},{"krate":0,"index":7789},{"krate":0,"index":7792},{"krate":0,"index":7795},{"krate":0,"index":7798},{"krate":0,"index":7801},{"krate":0,"index":7804},{"krate":0,"index":16588},{"krate":0,"index":7805},{"krate":0,"index":8019}],"decl_id":null,"docs":" Combinators and utilities for working with `Future`s, `Stream`s, `Sink`s,\n and the `AsyncRead` and `AsyncWrite` traits.\n","sig":null,"attributes":[{"value":"/ Combinators and utilities for working with `Future`s, `Stream`s, `Sink`s,","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lib.rs","byte_start":0,"byte_end":77,"line_start":1,"line_end":1,"column_start":1,"column_end":78}},{"value":"/ and the `AsyncRead` and `AsyncWrite` traits.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lib.rs","byte_start":78,"byte_end":126,"line_start":2,"line_end":2,"column_start":1,"column_end":49}},{"value":"warn(missing_docs, missing_debug_implementations, rust_2018_idioms,\n       unreachable_pub)","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lib.rs","byte_start":313,"byte_end":401,"line_start":7,"line_end":7,"column_start":1,"column_end":89}},{"value":"warn(clippy :: all)","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lib.rs","byte_start":569,"byte_end":590,"line_start":10,"line_end":10,"column_start":1,"column_end":22}}]},{"kind":"Function","id":{"krate":0,"index":43},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/async_await/poll.rs","byte_start":14362,"byte_end":14366,"line_start":24,"line_end":24,"column_start":8,"column_end":12},"name":"poll","qualname":"::async_await::poll::poll","value":"pub fn poll<F: Future + Unpin>(F) -> PollOnce<F>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":45},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/async_await/poll.rs","byte_start":14507,"byte_end":14515,"line_start":30,"line_end":30,"column_start":12,"column_end":20},"name":"PollOnce","qualname":"::async_await::poll::PollOnce","value":"PollOnce {  }","parent":null,"children":[{"krate":0,"index":47}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/async_await/poll.rs","byte_start":14441,"byte_end":14480,"line_start":28,"line_end":28,"column_start":1,"column_end":40}}]},{"kind":"Function","id":{"krate":0,"index":68},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/async_await/pending.rs","byte_start":15576,"byte_end":15588,"line_start":23,"line_end":23,"column_start":8,"column_end":20},"name":"pending_once","qualname":"::async_await::pending::pending_once","value":"pub fn pending_once() -> PendingOnce","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":69},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/async_await/pending.rs","byte_start":15713,"byte_end":15724,"line_start":29,"line_end":29,"column_start":12,"column_end":23},"name":"PendingOnce","qualname":"::async_await::pending::PendingOnce","value":"PendingOnce {  }","parent":null,"children":[{"krate":0,"index":70}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/async_await/pending.rs","byte_start":15647,"byte_end":15686,"line_start":27,"line_end":27,"column_start":1,"column_end":40}}]},{"kind":"Function","id":{"krate":0,"index":114},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/async_await/random.rs","byte_start":33832,"byte_end":33839,"line_start":13,"line_end":13,"column_start":8,"column_end":15},"name":"shuffle","qualname":"::async_await::random::shuffle","value":"pub fn shuffle<T>(&mut [T])","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":122},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/async_await/mod.rs","byte_start":13377,"byte_end":13389,"line_start":43,"line_end":43,"column_start":8,"column_end":20},"name":"assert_unpin","qualname":"::async_await::assert_unpin","value":"pub fn assert_unpin<T: Unpin>(&T)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/async_await/mod.rs","byte_start":13352,"byte_end":13369,"line_start":42,"line_end":42,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":124},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/async_await/mod.rs","byte_start":13451,"byte_end":13470,"line_start":47,"line_end":47,"column_start":8,"column_end":27},"name":"assert_fused_future","qualname":"::async_await::assert_fused_future","value":"pub fn assert_fused_future<T: Future + FusedFuture>(&T)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/async_await/mod.rs","byte_start":13426,"byte_end":13443,"line_start":46,"line_end":46,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":126},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/async_await/mod.rs","byte_start":13547,"byte_end":13566,"line_start":51,"line_end":51,"column_start":8,"column_end":27},"name":"assert_fused_stream","qualname":"::async_await::assert_fused_stream","value":"pub fn assert_fused_stream<T: Stream + FusedStream>(&T)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/async_await/mod.rs","byte_start":13522,"byte_end":13539,"line_start":50,"line_end":50,"column_start":1,"column_end":18}}]},{"kind":"Mod","id":{"krate":0,"index":129},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lib.rs","byte_start":1432,"byte_end":1441,"line_start":37,"line_end":37,"column_start":9,"column_end":18},"name":"__private","qualname":"::__private","value":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lib.rs","parent":null,"children":[{"krate":0,"index":130},{"krate":0,"index":131},{"krate":0,"index":132},{"krate":0,"index":133},{"krate":0,"index":136},{"krate":0,"index":137},{"krate":0,"index":139},{"krate":0,"index":140},{"krate":0,"index":142},{"krate":0,"index":145},{"krate":0,"index":146},{"krate":0,"index":147},{"krate":0,"index":149},{"krate":0,"index":150},{"krate":0,"index":152}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"async-await\")","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lib.rs","byte_start":1377,"byte_end":1408,"line_start":35,"line_end":35,"column_start":1,"column_end":32}}]},{"kind":"Mod","id":{"krate":0,"index":152},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lib.rs","byte_start":1603,"byte_end":1614,"line_start":45,"line_end":45,"column_start":13,"column_end":24},"name":"async_await","qualname":"::__private::async_await","value":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lib.rs","parent":null,"children":[{"krate":0,"index":153}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":163},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"future","qualname":"::future","value":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","parent":null,"children":[{"krate":0,"index":164},{"krate":0,"index":167},{"krate":0,"index":168},{"krate":0,"index":171},{"krate":0,"index":174},{"krate":0,"index":175},{"krate":0,"index":178},{"krate":0,"index":181},{"krate":0,"index":182},{"krate":0,"index":185},{"krate":0,"index":188},{"krate":0,"index":191},{"krate":0,"index":715},{"krate":0,"index":716},{"krate":0,"index":719},{"krate":0,"index":722},{"krate":0,"index":725},{"krate":0,"index":728},{"krate":0,"index":731},{"krate":0,"index":734},{"krate":0,"index":737},{"krate":0,"index":740},{"krate":0,"index":743},{"krate":0,"index":746},{"krate":0,"index":749},{"krate":0,"index":752},{"krate":0,"index":753},{"krate":0,"index":756},{"krate":0,"index":759},{"krate":0,"index":760},{"krate":0,"index":763},{"krate":0,"index":766},{"krate":0,"index":1019},{"krate":0,"index":1020},{"krate":0,"index":1023},{"krate":0,"index":1026},{"krate":0,"index":1029},{"krate":0,"index":1032},{"krate":0,"index":1035},{"krate":0,"index":1038},{"krate":0,"index":1041},{"krate":0,"index":1044},{"krate":0,"index":1047},{"krate":0,"index":1050},{"krate":0,"index":1053},{"krate":0,"index":1056},{"krate":0,"index":1059},{"krate":0,"index":1062},{"krate":0,"index":1065},{"krate":0,"index":1100},{"krate":0,"index":1101},{"krate":0,"index":1104},{"krate":0,"index":1107},{"krate":0,"index":1145},{"krate":0,"index":1146},{"krate":0,"index":1149},{"krate":0,"index":1152},{"krate":0,"index":1194},{"krate":0,"index":1195},{"krate":0,"index":1198},{"krate":0,"index":1201},{"krate":0,"index":1246},{"krate":0,"index":1247},{"krate":0,"index":1250},{"krate":0,"index":1253},{"krate":0,"index":1284},{"krate":0,"index":1287},{"krate":0,"index":1323},{"krate":0,"index":1324},{"krate":0,"index":1327},{"krate":0,"index":1330},{"krate":0,"index":1371},{"krate":0,"index":1372},{"krate":0,"index":1375},{"krate":0,"index":1378},{"krate":0,"index":1381},{"krate":0,"index":1384},{"krate":0,"index":1437},{"krate":0,"index":1438},{"krate":0,"index":1441},{"krate":0,"index":1444},{"krate":0,"index":1447},{"krate":0,"index":1450},{"krate":0,"index":1453},{"krate":0,"index":1456},{"krate":0,"index":1459},{"krate":0,"index":1462},{"krate":0,"index":1519},{"krate":0,"index":1520},{"krate":0,"index":1523},{"krate":0,"index":1526},{"krate":0,"index":1569},{"krate":0,"index":1570},{"krate":0,"index":1573},{"krate":0,"index":1576},{"krate":0,"index":1621},{"krate":0,"index":1622},{"krate":0,"index":1625},{"krate":0,"index":1628},{"krate":0,"index":1681},{"krate":0,"index":1682},{"krate":0,"index":1685},{"krate":0,"index":1688},{"krate":0,"index":1691},{"krate":0,"index":1694},{"krate":0,"index":1697},{"krate":0,"index":1700},{"krate":0,"index":1703},{"krate":0,"index":1706},{"krate":0,"index":1775},{"krate":0,"index":1776},{"krate":0,"index":1779},{"krate":0,"index":1782},{"krate":0,"index":1818},{"krate":0,"index":1819},{"krate":0,"index":1822},{"krate":0,"index":1825},{"krate":0,"index":1871},{"krate":0,"index":1872},{"krate":0,"index":1875},{"krate":0,"index":1878},{"krate":0,"index":2009},{"krate":0,"index":10593},{"krate":0,"index":10612},{"krate":0,"index":10613},{"krate":0,"index":10616},{"krate":0,"index":10619},{"krate":0,"index":10622},{"krate":0,"index":10623},{"krate":0,"index":10625},{"krate":0,"index":2012}],"decl_id":null,"docs":" Asynchronous values.","sig":null,"attributes":[{"value":"/ Asynchronous values.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":34901,"byte_end":34925,"line_start":1,"line_end":1,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":34926,"byte_end":34929,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module contains:","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":34930,"byte_end":34955,"line_start":3,"line_end":3,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":34956,"byte_end":34959,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ - The [`Future`] trait.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":34960,"byte_end":34987,"line_start":5,"line_end":5,"column_start":1,"column_end":28}},{"value":"/ - The [`FutureExt`] and [`TryFutureExt`] trait, which provides adapters for","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":34988,"byte_end":35067,"line_start":6,"line_end":6,"column_start":1,"column_end":80}},{"value":"/   chaining and composing futures.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":35068,"byte_end":35105,"line_start":7,"line_end":7,"column_start":1,"column_end":38}},{"value":"/ - Top-level future combinators like [`lazy`](lazy()) which creates a future","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":35106,"byte_end":35185,"line_start":8,"line_end":8,"column_start":1,"column_end":80}},{"value":"/   from a closure that defines its return value, and [`ready`](ready()),","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":35186,"byte_end":35261,"line_start":9,"line_end":9,"column_start":1,"column_end":76}},{"value":"/   which constructs a future with an immediate defined value.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":35262,"byte_end":35326,"line_start":10,"line_end":10,"column_start":1,"column_end":65}}]},{"kind":"StructVariant","id":{"krate":0,"index":8046},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/flatten.rs","byte_start":58570,"byte_end":58575,"line_start":14,"line_end":14,"column_start":9,"column_end":14},"name":"First","qualname":"::future::future::flatten::Flatten::First","value":"Flatten::First { f }","parent":{"krate":0,"index":8043},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":8048},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/flatten.rs","byte_start":58604,"byte_end":58610,"line_start":15,"line_end":15,"column_start":9,"column_end":15},"name":"Second","qualname":"::future::future::flatten::Flatten::Second","value":"Flatten::Second { f }","parent":{"krate":0,"index":8043},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":8050},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/flatten.rs","byte_start":58639,"byte_end":58644,"line_start":16,"line_end":16,"column_start":9,"column_end":14},"name":"Empty","qualname":"::future::future::flatten::Flatten::Empty","value":"Flatten::Empty","parent":{"krate":0,"index":8043},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":8043},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/flatten.rs","byte_start":58540,"byte_end":58547,"line_start":13,"line_end":13,"column_start":14,"column_end":21},"name":"Flatten","qualname":"::future::future::flatten::Flatten","value":"pub enum Flatten<Fut1, Fut2> {\n    First {\n        f: Fut1,\n    },\n    Second {\n        f: Fut2,\n    },\n    Empty,\n}","parent":null,"children":[{"krate":0,"index":8046},{"krate":0,"index":8048},{"krate":0,"index":8050}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8091},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/fuse.rs","byte_start":63001,"byte_end":63005,"line_start":11,"line_end":11,"column_start":16,"column_end":20},"name":"Fuse","qualname":"::future::future::fuse::Fuse","value":"Fuse {  }","parent":null,"children":[{"krate":0,"index":8093}],"decl_id":null,"docs":" Future for the [`fuse`](super::FutureExt::fuse) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":12561792,"byte_end":12561801,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":343},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/fuse.rs","byte_start":64824,"byte_end":64834,"line_start":69,"line_end":69,"column_start":12,"column_end":22},"name":"terminated","qualname":"<Fuse<Fut>>::terminated","value":"pub fn terminated() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Fuse`-wrapped future which is already terminated.","sig":null,"attributes":[{"value":"/ Creates a new `Fuse`-wrapped future which is already terminated.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/fuse.rs","byte_start":63202,"byte_end":63270,"line_start":24,"line_end":24,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/fuse.rs","byte_start":63275,"byte_end":63278,"line_start":25,"line_end":25,"column_start":5,"column_end":8}},{"value":"/ This can be useful in combination with looping and the `select!`","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/fuse.rs","byte_start":63283,"byte_end":63351,"line_start":26,"line_end":26,"column_start":5,"column_end":73}},{"value":"/ macro, which bypasses terminated futures.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/fuse.rs","byte_start":63356,"byte_end":63401,"line_start":27,"line_end":27,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/fuse.rs","byte_start":63406,"byte_end":63409,"line_start":28,"line_end":28,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/fuse.rs","byte_start":63414,"byte_end":63428,"line_start":29,"line_end":29,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/fuse.rs","byte_start":63433,"byte_end":63436,"line_start":30,"line_end":30,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/fuse.rs","byte_start":63441,"byte_end":63448,"line_start":31,"line_end":31,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/fuse.rs","byte_start":63453,"byte_end":63494,"line_start":32,"line_end":32,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/fuse.rs","byte_start":63499,"byte_end":63530,"line_start":33,"line_end":33,"column_start":5,"column_end":36}},{"value":"/ use futures::future::{Fuse, FusedFuture, FutureExt};","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/fuse.rs","byte_start":63535,"byte_end":63591,"line_start":34,"line_end":34,"column_start":5,"column_end":61}},{"value":"/ use futures::select;","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/fuse.rs","byte_start":63596,"byte_end":63620,"line_start":35,"line_end":35,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::StreamExt;","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/fuse.rs","byte_start":63625,"byte_end":63660,"line_start":36,"line_end":36,"column_start":5,"column_end":40}},{"value":"/ use futures::pin_mut;","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/fuse.rs","byte_start":63665,"byte_end":63690,"line_start":37,"line_end":37,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/fuse.rs","byte_start":63695,"byte_end":63698,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ let (sender, mut stream) = mpsc::unbounded();","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/fuse.rs","byte_start":63703,"byte_end":63752,"line_start":39,"line_end":39,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/fuse.rs","byte_start":63757,"byte_end":63760,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ // Send a few messages into the stream","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/fuse.rs","byte_start":63765,"byte_end":63807,"line_start":41,"line_end":41,"column_start":5,"column_end":47}},{"value":"/ sender.unbounded_send(()).unwrap();","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/fuse.rs","byte_start":63812,"byte_end":63851,"line_start":42,"line_end":42,"column_start":5,"column_end":44}},{"value":"/ sender.unbounded_send(()).unwrap();","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/fuse.rs","byte_start":63856,"byte_end":63895,"line_start":43,"line_end":43,"column_start":5,"column_end":44}},{"value":"/ drop(sender);","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/fuse.rs","byte_start":63900,"byte_end":63917,"line_start":44,"line_end":44,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/fuse.rs","byte_start":63922,"byte_end":63925,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ // Use `Fuse::terminated()` to create an already-terminated future","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/fuse.rs","byte_start":63930,"byte_end":64000,"line_start":46,"line_end":46,"column_start":5,"column_end":75}},{"value":"/ // which may be instantiated later.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/fuse.rs","byte_start":64005,"byte_end":64044,"line_start":47,"line_end":47,"column_start":5,"column_end":44}},{"value":"/ let foo_printer = Fuse::terminated();","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/fuse.rs","byte_start":64049,"byte_end":64090,"line_start":48,"line_end":48,"column_start":5,"column_end":46}},{"value":"/ pin_mut!(foo_printer);","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/fuse.rs","byte_start":64095,"byte_end":64121,"line_start":49,"line_end":49,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/fuse.rs","byte_start":64126,"byte_end":64129,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ loop {","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/fuse.rs","byte_start":64134,"byte_end":64144,"line_start":51,"line_end":51,"column_start":5,"column_end":15}},{"value":"/     select! {","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/fuse.rs","byte_start":64149,"byte_end":64166,"line_start":52,"line_end":52,"column_start":5,"column_end":22}},{"value":"/         _ = foo_printer => {},","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/fuse.rs","byte_start":64171,"byte_end":64205,"line_start":53,"line_end":53,"column_start":5,"column_end":39}},{"value":"/         () = stream.select_next_some() => {","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/fuse.rs","byte_start":64210,"byte_end":64257,"line_start":54,"line_end":54,"column_start":5,"column_end":52}},{"value":"/             if !foo_printer.is_terminated() {","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/fuse.rs","byte_start":64262,"byte_end":64311,"line_start":55,"line_end":55,"column_start":5,"column_end":54}},{"value":"/                 println!(\"Foo is already being printed!\");","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/fuse.rs","byte_start":64316,"byte_end":64378,"line_start":56,"line_end":56,"column_start":5,"column_end":67}},{"value":"/             } else {","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/fuse.rs","byte_start":64383,"byte_end":64407,"line_start":57,"line_end":57,"column_start":5,"column_end":29}},{"value":"/                 foo_printer.set(async {","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/fuse.rs","byte_start":64412,"byte_end":64455,"line_start":58,"line_end":58,"column_start":5,"column_end":48}},{"value":"/                     // do some other async operations","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/fuse.rs","byte_start":64460,"byte_end":64517,"line_start":59,"line_end":59,"column_start":5,"column_end":62}},{"value":"/                     println!(\"Printing foo from `foo_printer` future\");","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/fuse.rs","byte_start":64522,"byte_end":64597,"line_start":60,"line_end":60,"column_start":5,"column_end":80}},{"value":"/                 }.fuse());","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/fuse.rs","byte_start":64602,"byte_end":64632,"line_start":61,"line_end":61,"column_start":5,"column_end":35}},{"value":"/             }","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/fuse.rs","byte_start":64637,"byte_end":64654,"line_start":62,"line_end":62,"column_start":5,"column_end":22}},{"value":"/         },","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/fuse.rs","byte_start":64659,"byte_end":64673,"line_start":63,"line_end":63,"column_start":5,"column_end":19}},{"value":"/         complete => break, // `foo_printer` is terminated and the stream is done","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/fuse.rs","byte_start":64678,"byte_end":64762,"line_start":64,"line_end":64,"column_start":5,"column_end":89}},{"value":"/     }","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/fuse.rs","byte_start":64767,"byte_end":64776,"line_start":65,"line_end":65,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/fuse.rs","byte_start":64781,"byte_end":64786,"line_start":66,"line_end":66,"column_start":5,"column_end":10}},{"value":"/ # });","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/fuse.rs","byte_start":64791,"byte_end":64800,"line_start":67,"line_end":67,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/fuse.rs","byte_start":64805,"byte_end":64812,"line_start":68,"line_end":68,"column_start":5,"column_end":12}}]},{"kind":"StructVariant","id":{"krate":0,"index":8129},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/map.rs","byte_start":65892,"byte_end":65902,"line_start":16,"line_end":16,"column_start":9,"column_end":19},"name":"Incomplete","qualname":"::future::future::map::Map::Incomplete","value":"Map::Incomplete { future, f }","parent":{"krate":0,"index":8126},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":8132},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/map.rs","byte_start":65986,"byte_end":65994,"line_start":21,"line_end":21,"column_start":9,"column_end":17},"name":"Complete","qualname":"::future::future::map::Map::Complete","value":"Map::Complete","parent":{"krate":0,"index":8126},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":8126},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/map.rs","byte_start":65870,"byte_end":65873,"line_start":15,"line_end":15,"column_start":14,"column_end":17},"name":"Map","qualname":"::future::future::map::Map","value":"pub enum Map<Fut, F> {\n    Incomplete {\n        future: Fut,\n        f: F,\n    },\n    Complete,\n}","parent":null,"children":[{"krate":0,"index":8129},{"krate":0,"index":8132}],"decl_id":null,"docs":" Internal Map future\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":12569681,"byte_end":12569690,"line_start":542,"line_end":542,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":8177},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":38996,"byte_end":39003,"line_start":31,"line_end":31,"column_start":5,"column_end":12},"name":"Flatten","qualname":"::future::future::Flatten","value":"Flatten {  }","parent":null,"children":[{"krate":0,"index":8179}],"decl_id":null,"docs":" Future for the [`flatten`](super::FutureExt::flatten) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":12561792,"byte_end":12561801,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":8225},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":39254,"byte_end":39267,"line_start":39,"line_end":39,"column_start":5,"column_end":18},"name":"FlattenStream","qualname":"::future::future::FlattenStream","value":"FlattenStream {  }","parent":null,"children":[{"krate":0,"index":8227}],"decl_id":null,"docs":" Stream for the [`flatten_stream`](FutureExt::flatten_stream) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":12561792,"byte_end":12561801,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":8283},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":39607,"byte_end":39610,"line_start":50,"line_end":50,"column_start":5,"column_end":8},"name":"Map","qualname":"::future::future::Map","value":"Map {  }","parent":null,"children":[{"krate":0,"index":8286}],"decl_id":null,"docs":" Future for the [`map`](super::FutureExt::map) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":12561792,"byte_end":12561801,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":8343},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":39817,"byte_end":39827,"line_start":57,"line_end":57,"column_start":5,"column_end":15},"name":"IntoStream","qualname":"::future::future::IntoStream","value":"IntoStream {  }","parent":null,"children":[{"krate":0,"index":8345}],"decl_id":null,"docs":" Stream for the [`into_stream`](FutureExt::into_stream) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":12561792,"byte_end":12561801,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":8393},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":40033,"byte_end":40040,"line_start":64,"line_end":64,"column_start":5,"column_end":12},"name":"MapInto","qualname":"::future::future::MapInto","value":"MapInto {  }","parent":null,"children":[{"krate":0,"index":8396}],"decl_id":null,"docs":" Future for the [`map_into`](FutureExt::map_into) combinator.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":12561792,"byte_end":12561801,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":8455},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":40233,"byte_end":40237,"line_start":71,"line_end":71,"column_start":5,"column_end":9},"name":"Then","qualname":"::future::future::Then","value":"Then {  }","parent":null,"children":[{"krate":0,"index":8459}],"decl_id":null,"docs":" Future for the [`then`](FutureExt::then) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":12561792,"byte_end":12561801,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":8528},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":40482,"byte_end":40489,"line_start":78,"line_end":78,"column_start":5,"column_end":12},"name":"Inspect","qualname":"::future::future::Inspect","value":"Inspect {  }","parent":null,"children":[{"krate":0,"index":8531}],"decl_id":null,"docs":" Future for the [`inspect`](FutureExt::inspect) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":12561792,"byte_end":12561801,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":8588},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":40730,"byte_end":40740,"line_start":85,"line_end":85,"column_start":5,"column_end":15},"name":"NeverError","qualname":"::future::future::NeverError","value":"NeverError {  }","parent":null,"children":[{"krate":0,"index":8590}],"decl_id":null,"docs":" Future for the [`never_error`](super::FutureExt::never_error) combinator.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":12561792,"byte_end":12561801,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":8636},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":40953,"byte_end":40962,"line_start":92,"line_end":92,"column_start":5,"column_end":14},"name":"UnitError","qualname":"::future::future::UnitError","value":"UnitError {  }","parent":null,"children":[{"krate":0,"index":8638}],"decl_id":null,"docs":" Future for the [`unit_error`](super::FutureExt::unit_error) combinator.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":12561792,"byte_end":12561801,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":8687},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/catch_unwind.rs","byte_start":67590,"byte_end":67601,"line_start":13,"line_end":13,"column_start":16,"column_end":27},"name":"CatchUnwind","qualname":"::future::future::catch_unwind::CatchUnwind","value":"CatchUnwind {  }","parent":null,"children":[{"krate":0,"index":8689}],"decl_id":null,"docs":" Future for the [`catch_unwind`](super::FutureExt::catch_unwind) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":12561792,"byte_end":12561801,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":8718},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/remote_handle.rs","byte_start":69639,"byte_end":69651,"line_start":42,"line_end":42,"column_start":12,"column_end":24},"name":"RemoteHandle","qualname":"::future::future::remote_handle::RemoteHandle","value":"RemoteHandle {  }","parent":null,"children":[{"krate":0,"index":8720},{"krate":0,"index":8721}],"decl_id":null,"docs":" The handle to a remote future returned by\n [`remote_handle`](crate::future::FutureExt::remote_handle). When you drop this,\n the remote future will be woken up to be dropped by the executor.","sig":null,"attributes":[{"value":"/ The handle to a remote future returned by","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/remote_handle.rs","byte_start":68580,"byte_end":68625,"line_start":23,"line_end":23,"column_start":1,"column_end":46}},{"value":"/ [`remote_handle`](crate::future::FutureExt::remote_handle). When you drop this,","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/remote_handle.rs","byte_start":68626,"byte_end":68709,"line_start":24,"line_end":24,"column_start":1,"column_end":84}},{"value":"/ the remote future will be woken up to be dropped by the executor.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/remote_handle.rs","byte_start":68710,"byte_end":68779,"line_start":25,"line_end":25,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/remote_handle.rs","byte_start":68780,"byte_end":68783,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ ## Unwind safety","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/remote_handle.rs","byte_start":68784,"byte_end":68804,"line_start":27,"line_end":27,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/remote_handle.rs","byte_start":68805,"byte_end":68808,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ When the remote future panics, [Remote] will catch the unwind and transfer it to","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/remote_handle.rs","byte_start":68809,"byte_end":68893,"line_start":29,"line_end":29,"column_start":1,"column_end":85}},{"value":"/ the thread where `RemoteHandle` is being awaited. This is good for the common","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/remote_handle.rs","byte_start":68894,"byte_end":68975,"line_start":30,"line_end":30,"column_start":1,"column_end":82}},{"value":"/ case where [Remote] is spawned on a threadpool. It is unlikely that other code","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/remote_handle.rs","byte_start":68976,"byte_end":69058,"line_start":31,"line_end":31,"column_start":1,"column_end":83}},{"value":"/ in the executor working thread shares mutable data with the spawned future and we","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/remote_handle.rs","byte_start":69059,"byte_end":69144,"line_start":32,"line_end":32,"column_start":1,"column_end":86}},{"value":"/ preserve the executor from losing its working threads.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/remote_handle.rs","byte_start":69145,"byte_end":69203,"line_start":33,"line_end":33,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/remote_handle.rs","byte_start":69204,"byte_end":69207,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ If you run the future locally and send the handle of to be awaited elsewhere, you","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/remote_handle.rs","byte_start":69208,"byte_end":69293,"line_start":35,"line_end":35,"column_start":1,"column_end":86}},{"value":"/ must be careful with regard to unwind safety because the thread in which the future","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/remote_handle.rs","byte_start":69294,"byte_end":69381,"line_start":36,"line_end":36,"column_start":1,"column_end":88}},{"value":"/ is polled will keep running after the panic and the thread running the [RemoteHandle]","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/remote_handle.rs","byte_start":69382,"byte_end":69471,"line_start":37,"line_end":37,"column_start":1,"column_end":90}},{"value":"/ will unwind.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/remote_handle.rs","byte_start":69472,"byte_end":69488,"line_start":38,"line_end":38,"column_start":1,"column_end":17}},{"value":"must_use = \"dropping a remote handle cancels the underlying future\"","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/remote_handle.rs","byte_start":69489,"byte_end":69559,"line_start":39,"line_end":39,"column_start":1,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":506},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/remote_handle.rs","byte_start":69950,"byte_end":69956,"line_start":52,"line_end":52,"column_start":12,"column_end":18},"name":"forget","qualname":"<RemoteHandle<T>>::forget","value":"pub fn forget(Self)","parent":null,"children":[],"decl_id":null,"docs":" Drops this handle *without* canceling the underlying future.","sig":null,"attributes":[{"value":"/ Drops this handle *without* canceling the underlying future.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/remote_handle.rs","byte_start":69762,"byte_end":69826,"line_start":48,"line_end":48,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/remote_handle.rs","byte_start":69831,"byte_end":69834,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ This method can be used if you want to drop the handle, but let the","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/remote_handle.rs","byte_start":69839,"byte_end":69910,"line_start":50,"line_end":50,"column_start":5,"column_end":76}},{"value":"/ execution continue.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/remote_handle.rs","byte_start":69915,"byte_end":69938,"line_start":51,"line_end":51,"column_start":5,"column_end":28}}]},{"kind":"Struct","id":{"krate":0,"index":8725},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/remote_handle.rs","byte_start":70887,"byte_end":70893,"line_start":78,"line_end":78,"column_start":16,"column_end":22},"name":"Remote","qualname":"::future::future::remote_handle::Remote","value":"Remote {  }","parent":null,"children":[{"krate":0,"index":8727},{"krate":0,"index":8728},{"krate":0,"index":8729}],"decl_id":null,"docs":" A future which sends its output to the corresponding `RemoteHandle`.\n Created by [`remote_handle`](crate::future::FutureExt::remote_handle).\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":12561792,"byte_end":12561801,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":586},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/shared.rs","byte_start":72831,"byte_end":72837,"line_start":14,"line_end":14,"column_start":12,"column_end":18},"name":"Shared","qualname":"::future::future::shared::Shared","value":"Shared {  }","parent":null,"children":[{"krate":0,"index":588},{"krate":0,"index":589}],"decl_id":null,"docs":" Future for the [`shared`](super::FutureExt::shared) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`shared`](super::FutureExt::shared) method.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/shared.rs","byte_start":72688,"byte_end":72751,"line_start":12,"line_end":12,"column_start":1,"column_end":64}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/shared.rs","byte_start":72752,"byte_end":72819,"line_start":13,"line_end":13,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":597},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/shared.rs","byte_start":73211,"byte_end":73221,"line_start":30,"line_end":30,"column_start":12,"column_end":22},"name":"WeakShared","qualname":"::future::future::shared::WeakShared","value":"","parent":null,"children":[],"decl_id":null,"docs":" A weak reference to a [`Shared`] that can be upgraded much like an `Arc`.\n","sig":null,"attributes":[{"value":"/ A weak reference to a [`Shared`] that can be upgraded much like an `Arc`.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/shared.rs","byte_start":73122,"byte_end":73199,"line_start":29,"line_end":29,"column_start":1,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":637},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/shared.rs","byte_start":75323,"byte_end":75327,"line_start":112,"line_end":112,"column_start":12,"column_end":16},"name":"peek","qualname":"<Shared<Fut>>::peek","value":"pub fn peek(&Self) -> Option<&Fut::Output>","parent":null,"children":[],"decl_id":null,"docs":" Returns [`Some`] containing a reference to this [`Shared`]'s output if\n it has already been computed by a clone or [`None`] if it hasn't been\n computed yet or this [`Shared`] already returned its output from\n [`poll`](Future::poll).\n","sig":null,"attributes":[{"value":"/ Returns [`Some`] containing a reference to this [`Shared`]'s output if","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/shared.rs","byte_start":75054,"byte_end":75128,"line_start":108,"line_end":108,"column_start":5,"column_end":79}},{"value":"/ it has already been computed by a clone or [`None`] if it hasn't been","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/shared.rs","byte_start":75133,"byte_end":75206,"line_start":109,"line_end":109,"column_start":5,"column_end":78}},{"value":"/ computed yet or this [`Shared`] already returned its output from","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/shared.rs","byte_start":75211,"byte_end":75279,"line_start":110,"line_end":110,"column_start":5,"column_end":73}},{"value":"/ [`poll`](Future::poll).","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/shared.rs","byte_start":75284,"byte_end":75311,"line_start":111,"line_end":111,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":638},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/shared.rs","byte_start":75822,"byte_end":75831,"line_start":126,"line_end":126,"column_start":12,"column_end":21},"name":"downgrade","qualname":"<Shared<Fut>>::downgrade","value":"pub fn downgrade(&Self) -> Option<WeakShared<Fut>>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new [`WeakShared`] for this [`Shared`].","sig":null,"attributes":[{"value":"/ Creates a new [`WeakShared`] for this [`Shared`].","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/shared.rs","byte_start":75679,"byte_end":75732,"line_start":123,"line_end":123,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/shared.rs","byte_start":75737,"byte_end":75740,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ Returns [`None`] if it has already been polled to completion.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/shared.rs","byte_start":75745,"byte_end":75810,"line_start":125,"line_end":125,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":639},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/shared.rs","byte_start":76425,"byte_end":76437,"line_start":142,"line_end":142,"column_start":12,"column_end":24},"name":"strong_count","qualname":"<Shared<Fut>>::strong_count","value":"pub fn strong_count(&Self) -> Option<usize>","parent":null,"children":[],"decl_id":null,"docs":" Gets the number of strong pointers to this allocation.","sig":null,"attributes":[{"value":"/ Gets the number of strong pointers to this allocation.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/shared.rs","byte_start":76013,"byte_end":76071,"line_start":133,"line_end":133,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/shared.rs","byte_start":76076,"byte_end":76079,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ Returns [`None`] if it has already been polled to completion.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/shared.rs","byte_start":76084,"byte_end":76149,"line_start":135,"line_end":135,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/shared.rs","byte_start":76154,"byte_end":76157,"line_start":136,"line_end":136,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/shared.rs","byte_start":76162,"byte_end":76174,"line_start":137,"line_end":137,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/shared.rs","byte_start":76179,"byte_end":76182,"line_start":138,"line_end":138,"column_start":5,"column_end":8}},{"value":"/ This method by itself is safe, but using it correctly requires extra care. Another thread","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/shared.rs","byte_start":76187,"byte_end":76280,"line_start":139,"line_end":139,"column_start":5,"column_end":98}},{"value":"/ can change the strong count at any time, including potentially between calling this method","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/shared.rs","byte_start":76285,"byte_end":76379,"line_start":140,"line_end":140,"column_start":5,"column_end":99}},{"value":"/ and acting on the result.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/shared.rs","byte_start":76384,"byte_end":76413,"line_start":141,"line_end":141,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":641},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/shared.rs","byte_start":76945,"byte_end":76955,"line_start":155,"line_end":155,"column_start":12,"column_end":22},"name":"weak_count","qualname":"<Shared<Fut>>::weak_count","value":"pub fn weak_count(&Self) -> Option<usize>","parent":null,"children":[],"decl_id":null,"docs":" Gets the number of weak pointers to this allocation.","sig":null,"attributes":[{"value":"/ Gets the number of weak pointers to this allocation.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/shared.rs","byte_start":76537,"byte_end":76593,"line_start":146,"line_end":146,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/shared.rs","byte_start":76598,"byte_end":76601,"line_start":147,"line_end":147,"column_start":5,"column_end":8}},{"value":"/ Returns [`None`] if it has already been polled to completion.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/shared.rs","byte_start":76606,"byte_end":76671,"line_start":148,"line_end":148,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/shared.rs","byte_start":76676,"byte_end":76679,"line_start":149,"line_end":149,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/shared.rs","byte_start":76684,"byte_end":76696,"line_start":150,"line_end":150,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/shared.rs","byte_start":76701,"byte_end":76704,"line_start":151,"line_end":151,"column_start":5,"column_end":8}},{"value":"/ This method by itself is safe, but using it correctly requires extra care. Another thread","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/shared.rs","byte_start":76709,"byte_end":76802,"line_start":152,"line_end":152,"column_start":5,"column_end":98}},{"value":"/ can change the weak count at any time, including potentially between calling this method","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/shared.rs","byte_start":76807,"byte_end":76899,"line_start":153,"line_end":153,"column_start":5,"column_end":97}},{"value":"/ and acting on the result.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/shared.rs","byte_start":76904,"byte_end":76933,"line_start":154,"line_end":154,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":675},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/shared.rs","byte_start":83405,"byte_end":83412,"line_start":368,"line_end":368,"column_start":12,"column_end":19},"name":"upgrade","qualname":"<WeakShared<Fut>>::upgrade","value":"pub fn upgrade(&Self) -> Option<Shared<Fut>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to upgrade this [`WeakShared`] into a [`Shared`].","sig":null,"attributes":[{"value":"/ Attempts to upgrade this [`WeakShared`] into a [`Shared`].","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/shared.rs","byte_start":83215,"byte_end":83277,"line_start":364,"line_end":364,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/shared.rs","byte_start":83282,"byte_end":83285,"line_start":365,"line_end":365,"column_start":5,"column_end":8}},{"value":"/ Returns [`None`] if all clones of the [`Shared`] have been dropped or polled","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/shared.rs","byte_start":83290,"byte_end":83370,"line_start":366,"line_end":366,"column_start":5,"column_end":85}},{"value":"/ to completion.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/shared.rs","byte_start":83375,"byte_end":83393,"line_start":367,"line_end":367,"column_start":5,"column_end":23}}]},{"kind":"Trait","id":{"krate":0,"index":685},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":41944,"byte_end":41953,"line_start":123,"line_end":123,"column_start":11,"column_end":20},"name":"FutureExt","qualname":"::future::future::FutureExt","value":"FutureExt: Future","parent":null,"children":[{"krate":0,"index":686},{"krate":0,"index":689},{"krate":0,"index":691},{"krate":0,"index":694},{"krate":0,"index":696},{"krate":0,"index":698},{"krate":0,"index":699},{"krate":0,"index":700},{"krate":0,"index":701},{"krate":0,"index":702},{"krate":0,"index":704},{"krate":0,"index":705},{"krate":0,"index":706},{"krate":0,"index":707},{"krate":0,"index":709},{"krate":0,"index":711},{"krate":0,"index":712},{"krate":0,"index":713},{"krate":0,"index":714}],"decl_id":null,"docs":" An extension trait for `Future`s that provides a variety of convenient\n adapters.\n","sig":null,"attributes":[{"value":"/ An extension trait for `Future`s that provides a variety of convenient","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":41845,"byte_end":41919,"line_start":121,"line_end":121,"column_start":1,"column_end":75}},{"value":"/ adapters.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":41920,"byte_end":41933,"line_start":122,"line_end":122,"column_start":1,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":686},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":42785,"byte_end":42788,"line_start":146,"line_end":146,"column_start":8,"column_end":11},"name":"map","qualname":"::future::future::FutureExt::map","value":"pub fn map<U, F>(Self, F) -> Map<Self, F> where F: FnOnce(Self::Output) -> U,\nSelf: Sized","parent":{"krate":0,"index":685},"children":[],"decl_id":null,"docs":" Map this future's output to a different type, returning a new future of\n the resulting type.","sig":null,"attributes":[{"value":"/ Map this future's output to a different type, returning a new future of","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":41968,"byte_end":42043,"line_start":124,"line_end":124,"column_start":5,"column_end":80}},{"value":"/ the resulting type.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":42048,"byte_end":42071,"line_start":125,"line_end":125,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":42076,"byte_end":42079,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/ This function is similar to the `Option::map` or `Iterator::map` where","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":42084,"byte_end":42158,"line_start":127,"line_end":127,"column_start":5,"column_end":79}},{"value":"/ it will change the type of the underlying future. This is useful to","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":42163,"byte_end":42234,"line_start":128,"line_end":128,"column_start":5,"column_end":76}},{"value":"/ chain along a computation once a future has been resolved.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":42239,"byte_end":42301,"line_start":129,"line_end":129,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":42306,"byte_end":42309,"line_start":130,"line_end":130,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the receiving future and returns a","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":42314,"byte_end":42385,"line_start":131,"line_end":131,"column_start":5,"column_end":76}},{"value":"/ wrapped version of it, similar to the existing `map` methods in the","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":42390,"byte_end":42461,"line_start":132,"line_end":132,"column_start":5,"column_end":76}},{"value":"/ standard library.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":42466,"byte_end":42487,"line_start":133,"line_end":133,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":42492,"byte_end":42495,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":42500,"byte_end":42514,"line_start":135,"line_end":135,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":42519,"byte_end":42522,"line_start":136,"line_end":136,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":42527,"byte_end":42534,"line_start":137,"line_end":137,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":42539,"byte_end":42580,"line_start":138,"line_end":138,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":42585,"byte_end":42620,"line_start":139,"line_end":139,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":42625,"byte_end":42628,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ let future = async { 1 };","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":42633,"byte_end":42662,"line_start":141,"line_end":141,"column_start":5,"column_end":34}},{"value":"/ let new_future = future.map(|x| x + 3);","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":42667,"byte_end":42710,"line_start":142,"line_end":142,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(new_future.await, 4);","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":42715,"byte_end":42751,"line_start":143,"line_end":143,"column_start":5,"column_end":41}},{"value":"/ # });","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":42756,"byte_end":42765,"line_start":144,"line_end":144,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":42770,"byte_end":42777,"line_start":145,"line_end":145,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":689},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":43185,"byte_end":43193,"line_start":159,"line_end":159,"column_start":8,"column_end":16},"name":"map_into","qualname":"::future::future::FutureExt::map_into","value":"pub fn map_into<U>(Self) -> MapInto<Self, U> where Self::Output: Into<U>,\nSelf: Sized","parent":{"krate":0,"index":685},"children":[],"decl_id":null,"docs":" Map this future's output to a different type, returning a new future of\n the resulting type.","sig":null,"attributes":[{"value":"/ Map this future's output to a different type, returning a new future of","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":42958,"byte_end":43033,"line_start":154,"line_end":154,"column_start":5,"column_end":80}},{"value":"/ the resulting type.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":43038,"byte_end":43061,"line_start":155,"line_end":155,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":43066,"byte_end":43069,"line_start":156,"line_end":156,"column_start":5,"column_end":8}},{"value":"/ This function is equivalent to calling `map(Into::into)` but allows naming","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":43074,"byte_end":43152,"line_start":157,"line_end":157,"column_start":5,"column_end":83}},{"value":"/ the return type.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":43157,"byte_end":43177,"line_start":158,"line_end":158,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":691},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":44205,"byte_end":44209,"line_start":191,"line_end":191,"column_start":8,"column_end":12},"name":"then","qualname":"::future::future::FutureExt::then","value":"pub fn then<Fut, F>(Self, F) -> Then<Self, Fut, F> where\nF: FnOnce(Self::Output) -> Fut, Fut: Future, Self: Sized","parent":{"krate":0,"index":685},"children":[],"decl_id":null,"docs":" Chain on a computation for when a future finished, passing the result of\n the future to the provided closure `f`.","sig":null,"attributes":[{"value":"/ Chain on a computation for when a future finished, passing the result of","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":43352,"byte_end":43428,"line_start":167,"line_end":167,"column_start":5,"column_end":81}},{"value":"/ the future to the provided closure `f`.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":43433,"byte_end":43476,"line_start":168,"line_end":168,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":43481,"byte_end":43484,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/ The returned value of the closure must implement the `Future` trait","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":43489,"byte_end":43560,"line_start":170,"line_end":170,"column_start":5,"column_end":76}},{"value":"/ and can represent some more work to be done before the composed future","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":43565,"byte_end":43639,"line_start":171,"line_end":171,"column_start":5,"column_end":79}},{"value":"/ is finished.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":43644,"byte_end":43660,"line_start":172,"line_end":172,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":43665,"byte_end":43668,"line_start":173,"line_end":173,"column_start":5,"column_end":8}},{"value":"/ The closure `f` is only run *after* successful completion of the `self`","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":43673,"byte_end":43748,"line_start":174,"line_end":174,"column_start":5,"column_end":80}},{"value":"/ future.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":43753,"byte_end":43764,"line_start":175,"line_end":175,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":43769,"byte_end":43772,"line_start":176,"line_end":176,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the receiving future and returns a","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":43777,"byte_end":43848,"line_start":177,"line_end":177,"column_start":5,"column_end":76}},{"value":"/ wrapped version of it.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":43853,"byte_end":43879,"line_start":178,"line_end":178,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":43884,"byte_end":43887,"line_start":179,"line_end":179,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":43892,"byte_end":43906,"line_start":180,"line_end":180,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":43911,"byte_end":43914,"line_start":181,"line_end":181,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":43919,"byte_end":43926,"line_start":182,"line_end":182,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":43931,"byte_end":43972,"line_start":183,"line_end":183,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":43977,"byte_end":44012,"line_start":184,"line_end":184,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":44017,"byte_end":44020,"line_start":185,"line_end":185,"column_start":5,"column_end":8}},{"value":"/ let future_of_1 = async { 1 };","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":44025,"byte_end":44059,"line_start":186,"line_end":186,"column_start":5,"column_end":39}},{"value":"/ let future_of_4 = future_of_1.then(|x| async move { x + 3 });","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":44064,"byte_end":44129,"line_start":187,"line_end":187,"column_start":5,"column_end":70}},{"value":"/ assert_eq!(future_of_4.await, 4);","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":44134,"byte_end":44171,"line_start":188,"line_end":188,"column_start":5,"column_end":42}},{"value":"/ # });","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":44176,"byte_end":44185,"line_start":189,"line_end":189,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":44190,"byte_end":44197,"line_start":190,"line_end":190,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":694},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":45079,"byte_end":45090,"line_start":222,"line_end":222,"column_start":8,"column_end":19},"name":"left_future","qualname":"::future::future::FutureExt::left_future","value":"pub fn left_future<B>(Self) -> Either<Self, B> where B: Future<Output =\nSelf::Output>, Self: Sized","parent":{"krate":0,"index":685},"children":[],"decl_id":null,"docs":" Wrap this future in an `Either` future, making it the left-hand variant\n of that `Either`.","sig":null,"attributes":[{"value":"/ Wrap this future in an `Either` future, making it the left-hand variant","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":44421,"byte_end":44496,"line_start":200,"line_end":200,"column_start":5,"column_end":80}},{"value":"/ of that `Either`.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":44501,"byte_end":44522,"line_start":201,"line_end":201,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":44527,"byte_end":44530,"line_start":202,"line_end":202,"column_start":5,"column_end":8}},{"value":"/ This can be used in combination with the `right_future` method to write `if`","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":44535,"byte_end":44615,"line_start":203,"line_end":203,"column_start":5,"column_end":85}},{"value":"/ statements that evaluate to different futures in different branches.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":44620,"byte_end":44692,"line_start":204,"line_end":204,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":44697,"byte_end":44700,"line_start":205,"line_end":205,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":44705,"byte_end":44719,"line_start":206,"line_end":206,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":44724,"byte_end":44727,"line_start":207,"line_end":207,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":44732,"byte_end":44739,"line_start":208,"line_end":208,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":44744,"byte_end":44785,"line_start":209,"line_end":209,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":44790,"byte_end":44825,"line_start":210,"line_end":210,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":44830,"byte_end":44833,"line_start":211,"line_end":211,"column_start":5,"column_end":8}},{"value":"/ let x = 6;","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":44838,"byte_end":44852,"line_start":212,"line_end":212,"column_start":5,"column_end":19}},{"value":"/ let future = if x < 10 {","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":44857,"byte_end":44885,"line_start":213,"line_end":213,"column_start":5,"column_end":33}},{"value":"/     async { true }.left_future()","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":44890,"byte_end":44926,"line_start":214,"line_end":214,"column_start":5,"column_end":41}},{"value":"/ } else {","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":44931,"byte_end":44943,"line_start":215,"line_end":215,"column_start":5,"column_end":17}},{"value":"/     async { false }.right_future()","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":44948,"byte_end":44986,"line_start":216,"line_end":216,"column_start":5,"column_end":43}},{"value":"/ };","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":44991,"byte_end":44997,"line_start":217,"line_end":217,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":45002,"byte_end":45005,"line_start":218,"line_end":218,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(future.await, true);","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":45010,"byte_end":45045,"line_start":219,"line_end":219,"column_start":5,"column_end":40}},{"value":"/ # });","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":45050,"byte_end":45059,"line_start":220,"line_end":220,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":45064,"byte_end":45071,"line_start":221,"line_end":221,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":696},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":45929,"byte_end":45941,"line_start":252,"line_end":252,"column_start":8,"column_end":20},"name":"right_future","qualname":"::future::future::FutureExt::right_future","value":"pub fn right_future<A>(Self) -> Either<A, Self> where A: Future<Output =\nSelf::Output>, Self: Sized","parent":{"krate":0,"index":685},"children":[],"decl_id":null,"docs":" Wrap this future in an `Either` future, making it the right-hand variant\n of that `Either`.","sig":null,"attributes":[{"value":"/ Wrap this future in an `Either` future, making it the right-hand variant","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":45270,"byte_end":45346,"line_start":230,"line_end":230,"column_start":5,"column_end":81}},{"value":"/ of that `Either`.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":45351,"byte_end":45372,"line_start":231,"line_end":231,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":45377,"byte_end":45380,"line_start":232,"line_end":232,"column_start":5,"column_end":8}},{"value":"/ This can be used in combination with the `left_future` method to write `if`","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":45385,"byte_end":45464,"line_start":233,"line_end":233,"column_start":5,"column_end":84}},{"value":"/ statements that evaluate to different futures in different branches.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":45469,"byte_end":45541,"line_start":234,"line_end":234,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":45546,"byte_end":45549,"line_start":235,"line_end":235,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":45554,"byte_end":45568,"line_start":236,"line_end":236,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":45573,"byte_end":45576,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":45581,"byte_end":45588,"line_start":238,"line_end":238,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":45593,"byte_end":45634,"line_start":239,"line_end":239,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":45639,"byte_end":45674,"line_start":240,"line_end":240,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":45679,"byte_end":45682,"line_start":241,"line_end":241,"column_start":5,"column_end":8}},{"value":"/ let x = 6;","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":45687,"byte_end":45701,"line_start":242,"line_end":242,"column_start":5,"column_end":19}},{"value":"/ let future = if x > 10 {","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":45706,"byte_end":45734,"line_start":243,"line_end":243,"column_start":5,"column_end":33}},{"value":"/     async { true }.left_future()","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":45739,"byte_end":45775,"line_start":244,"line_end":244,"column_start":5,"column_end":41}},{"value":"/ } else {","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":45780,"byte_end":45792,"line_start":245,"line_end":245,"column_start":5,"column_end":17}},{"value":"/     async { false }.right_future()","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":45797,"byte_end":45835,"line_start":246,"line_end":246,"column_start":5,"column_end":43}},{"value":"/ };","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":45840,"byte_end":45846,"line_start":247,"line_end":247,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":45851,"byte_end":45854,"line_start":248,"line_end":248,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(future.await, false);","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":45859,"byte_end":45895,"line_start":249,"line_end":249,"column_start":5,"column_end":41}},{"value":"/ # });","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":45900,"byte_end":45909,"line_start":250,"line_end":250,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":45914,"byte_end":45921,"line_start":251,"line_end":251,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":698},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":46720,"byte_end":46731,"line_start":278,"line_end":278,"column_start":8,"column_end":19},"name":"into_stream","qualname":"::future::future::FutureExt::into_stream","value":"pub fn into_stream(Self) -> IntoStream<Self> where Self: Sized","parent":{"krate":0,"index":685},"children":[],"decl_id":null,"docs":" Convert this future into a single element stream.","sig":null,"attributes":[{"value":"/ Convert this future into a single element stream.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":46122,"byte_end":46175,"line_start":260,"line_end":260,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":46180,"byte_end":46183,"line_start":261,"line_end":261,"column_start":5,"column_end":8}},{"value":"/ The returned stream contains single success if this future resolves to","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":46188,"byte_end":46262,"line_start":262,"line_end":262,"column_start":5,"column_end":79}},{"value":"/ success or single error if this future resolves into error.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":46267,"byte_end":46330,"line_start":263,"line_end":263,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":46335,"byte_end":46338,"line_start":264,"line_end":264,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":46343,"byte_end":46357,"line_start":265,"line_end":265,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":46362,"byte_end":46365,"line_start":266,"line_end":266,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":46370,"byte_end":46377,"line_start":267,"line_end":267,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":46382,"byte_end":46423,"line_start":268,"line_end":268,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":46428,"byte_end":46463,"line_start":269,"line_end":269,"column_start":5,"column_end":40}},{"value":"/ use futures::stream::StreamExt;","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":46468,"byte_end":46503,"line_start":270,"line_end":270,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":46508,"byte_end":46511,"line_start":271,"line_end":271,"column_start":5,"column_end":8}},{"value":"/ let future = async { 17 };","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":46516,"byte_end":46546,"line_start":272,"line_end":272,"column_start":5,"column_end":35}},{"value":"/ let stream = future.into_stream();","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":46551,"byte_end":46589,"line_start":273,"line_end":273,"column_start":5,"column_end":43}},{"value":"/ let collected: Vec<_> = stream.collect().await;","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":46594,"byte_end":46645,"line_start":274,"line_end":274,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(collected, vec![17]);","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":46650,"byte_end":46686,"line_start":275,"line_end":275,"column_start":5,"column_end":41}},{"value":"/ # });","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":46691,"byte_end":46700,"line_start":276,"line_end":276,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":46705,"byte_end":46712,"line_start":277,"line_end":277,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":699},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":47596,"byte_end":47603,"line_start":307,"line_end":307,"column_start":8,"column_end":15},"name":"flatten","qualname":"::future::future::FutureExt::flatten","value":"pub fn flatten(Self) -> Flatten<Self> where Self::Output: Future, Self: Sized","parent":{"krate":0,"index":685},"children":[],"decl_id":null,"docs":" Flatten the execution of this future when the output of this\n future is itself another future.","sig":null,"attributes":[{"value":"/ Flatten the execution of this future when the output of this","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":46870,"byte_end":46934,"line_start":285,"line_end":285,"column_start":5,"column_end":69}},{"value":"/ future is itself another future.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":46939,"byte_end":46975,"line_start":286,"line_end":286,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":46980,"byte_end":46983,"line_start":287,"line_end":287,"column_start":5,"column_end":8}},{"value":"/ This can be useful when combining futures together to flatten the","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":46988,"byte_end":47057,"line_start":288,"line_end":288,"column_start":5,"column_end":74}},{"value":"/ computation out the final result.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":47062,"byte_end":47099,"line_start":289,"line_end":289,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":47104,"byte_end":47107,"line_start":290,"line_end":290,"column_start":5,"column_end":8}},{"value":"/ This method is roughly equivalent to `self.then(|x| x)`.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":47112,"byte_end":47172,"line_start":291,"line_end":291,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":47177,"byte_end":47180,"line_start":292,"line_end":292,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the receiving future and returns a","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":47185,"byte_end":47256,"line_start":293,"line_end":293,"column_start":5,"column_end":76}},{"value":"/ wrapped version of it.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":47261,"byte_end":47287,"line_start":294,"line_end":294,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":47292,"byte_end":47295,"line_start":295,"line_end":295,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":47300,"byte_end":47314,"line_start":296,"line_end":296,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":47319,"byte_end":47322,"line_start":297,"line_end":297,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":47327,"byte_end":47334,"line_start":298,"line_end":298,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":47339,"byte_end":47380,"line_start":299,"line_end":299,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":47385,"byte_end":47420,"line_start":300,"line_end":300,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":47425,"byte_end":47428,"line_start":301,"line_end":301,"column_start":5,"column_end":8}},{"value":"/ let nested_future = async { async { 1 } };","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":47433,"byte_end":47479,"line_start":302,"line_end":302,"column_start":5,"column_end":51}},{"value":"/ let future = nested_future.flatten();","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":47484,"byte_end":47525,"line_start":303,"line_end":303,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(future.await, 1);","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":47530,"byte_end":47562,"line_start":304,"line_end":304,"column_start":5,"column_end":37}},{"value":"/ # });","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":47567,"byte_end":47576,"line_start":305,"line_end":305,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":47581,"byte_end":47588,"line_start":306,"line_end":306,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":700},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":48708,"byte_end":48722,"line_start":341,"line_end":341,"column_start":8,"column_end":22},"name":"flatten_stream","qualname":"::future::future::FutureExt::flatten_stream","value":"pub fn flatten_stream(Self) -> FlattenStream<Self> where Self::Output: Stream,\nSelf: Sized","parent":{"krate":0,"index":685},"children":[],"decl_id":null,"docs":" Flatten the execution of this future when the successful result of this\n future is a stream.","sig":null,"attributes":[{"value":"/ Flatten the execution of this future when the successful result of this","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":47817,"byte_end":47892,"line_start":316,"line_end":316,"column_start":5,"column_end":80}},{"value":"/ future is a stream.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":47897,"byte_end":47920,"line_start":317,"line_end":317,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":47925,"byte_end":47928,"line_start":318,"line_end":318,"column_start":5,"column_end":8}},{"value":"/ This can be useful when stream initialization is deferred, and it is","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":47933,"byte_end":48005,"line_start":319,"line_end":319,"column_start":5,"column_end":77}},{"value":"/ convenient to work with that stream as if stream was available at the","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":48010,"byte_end":48083,"line_start":320,"line_end":320,"column_start":5,"column_end":78}},{"value":"/ call site.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":48088,"byte_end":48102,"line_start":321,"line_end":321,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":48107,"byte_end":48110,"line_start":322,"line_end":322,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes this future and returns a wrapped","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":48115,"byte_end":48185,"line_start":323,"line_end":323,"column_start":5,"column_end":75}},{"value":"/ version of it.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":48190,"byte_end":48208,"line_start":324,"line_end":324,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":48213,"byte_end":48216,"line_start":325,"line_end":325,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":48221,"byte_end":48235,"line_start":326,"line_end":326,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":48240,"byte_end":48243,"line_start":327,"line_end":327,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":48248,"byte_end":48255,"line_start":328,"line_end":328,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":48260,"byte_end":48301,"line_start":329,"line_end":329,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":48306,"byte_end":48341,"line_start":330,"line_end":330,"column_start":5,"column_end":40}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":48346,"byte_end":48389,"line_start":331,"line_end":331,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":48394,"byte_end":48397,"line_start":332,"line_end":332,"column_start":5,"column_end":8}},{"value":"/ let stream_items = vec![17, 18, 19];","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":48402,"byte_end":48442,"line_start":333,"line_end":333,"column_start":5,"column_end":45}},{"value":"/ let future_of_a_stream = async { stream::iter(stream_items) };","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":48447,"byte_end":48513,"line_start":334,"line_end":334,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":48518,"byte_end":48521,"line_start":335,"line_end":335,"column_start":5,"column_end":8}},{"value":"/ let stream = future_of_a_stream.flatten_stream();","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":48526,"byte_end":48579,"line_start":336,"line_end":336,"column_start":5,"column_end":58}},{"value":"/ let list: Vec<_> = stream.collect().await;","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":48584,"byte_end":48630,"line_start":337,"line_end":337,"column_start":5,"column_end":51}},{"value":"/ assert_eq!(list, vec![17, 18, 19]);","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":48635,"byte_end":48674,"line_start":338,"line_end":338,"column_start":5,"column_end":44}},{"value":"/ # });","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":48679,"byte_end":48688,"line_start":339,"line_end":339,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":48693,"byte_end":48700,"line_start":340,"line_end":340,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":701},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":49810,"byte_end":49814,"line_start":365,"line_end":365,"column_start":8,"column_end":12},"name":"fuse","qualname":"::future::future::FutureExt::fuse","value":"pub fn fuse(Self) -> Fuse<Self> where Self: Sized","parent":{"krate":0,"index":685},"children":[],"decl_id":null,"docs":" Fuse a future such that `poll` will never again be called once it has\n completed. This method can be used to turn any `Future` into a\n `FusedFuture`.","sig":null,"attributes":[{"value":"/ Fuse a future such that `poll` will never again be called once it has","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":48915,"byte_end":48988,"line_start":349,"line_end":349,"column_start":5,"column_end":78}},{"value":"/ completed. This method can be used to turn any `Future` into a","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":48993,"byte_end":49059,"line_start":350,"line_end":350,"column_start":5,"column_end":71}},{"value":"/ `FusedFuture`.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":49064,"byte_end":49082,"line_start":351,"line_end":351,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":49087,"byte_end":49090,"line_start":352,"line_end":352,"column_start":5,"column_end":8}},{"value":"/ Normally, once a future has returned `Poll::Ready` from `poll`,","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":49095,"byte_end":49162,"line_start":353,"line_end":353,"column_start":5,"column_end":72}},{"value":"/ any further calls could exhibit bad behavior such as blocking","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":49167,"byte_end":49232,"line_start":354,"line_end":354,"column_start":5,"column_end":70}},{"value":"/ forever, panicking, never returning, etc. If it is known that `poll`","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":49237,"byte_end":49309,"line_start":355,"line_end":355,"column_start":5,"column_end":77}},{"value":"/ may be called too often then this method can be used to ensure that it","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":49314,"byte_end":49388,"line_start":356,"line_end":356,"column_start":5,"column_end":79}},{"value":"/ has defined semantics.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":49393,"byte_end":49419,"line_start":357,"line_end":357,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":49424,"byte_end":49427,"line_start":358,"line_end":358,"column_start":5,"column_end":8}},{"value":"/ If a `fuse`d future is `poll`ed after having returned `Poll::Ready`","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":49432,"byte_end":49503,"line_start":359,"line_end":359,"column_start":5,"column_end":76}},{"value":"/ previously, it will return `Poll::Pending`, from `poll` again (and will","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":49508,"byte_end":49583,"line_start":360,"line_end":360,"column_start":5,"column_end":80}},{"value":"/ continue to do so for all future calls to `poll`).","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":49588,"byte_end":49642,"line_start":361,"line_end":361,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":49647,"byte_end":49650,"line_start":362,"line_end":362,"column_start":5,"column_end":8}},{"value":"/ This combinator will drop the underlying future as soon as it has been","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":49655,"byte_end":49729,"line_start":363,"line_end":363,"column_start":5,"column_end":79}},{"value":"/ completed to ensure resources are reclaimed as soon as possible.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":49734,"byte_end":49802,"line_start":364,"line_end":364,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":702},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":50654,"byte_end":50661,"line_start":391,"line_end":391,"column_start":8,"column_end":15},"name":"inspect","qualname":"::future::future::FutureExt::inspect","value":"pub fn inspect<F>(Self, F) -> Inspect<Self, F> where F: FnOnce(&Self::Output)\n-> (), Self: Sized","parent":{"krate":0,"index":685},"children":[],"decl_id":null,"docs":" Do something with the output of a future before passing it on.","sig":null,"attributes":[{"value":"/ Do something with the output of a future before passing it on.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":49960,"byte_end":50026,"line_start":373,"line_end":373,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":50031,"byte_end":50034,"line_start":374,"line_end":374,"column_start":5,"column_end":8}},{"value":"/ When using futures, you'll often chain several of them together.  While","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":50039,"byte_end":50114,"line_start":375,"line_end":375,"column_start":5,"column_end":80}},{"value":"/ working on such code, you might want to check out what's happening at","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":50119,"byte_end":50192,"line_start":376,"line_end":376,"column_start":5,"column_end":78}},{"value":"/ various parts in the pipeline, without consuming the intermediate","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":50197,"byte_end":50266,"line_start":377,"line_end":377,"column_start":5,"column_end":74}},{"value":"/ value. To do that, insert a call to `inspect`.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":50271,"byte_end":50321,"line_start":378,"line_end":378,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":50326,"byte_end":50329,"line_start":379,"line_end":379,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":50334,"byte_end":50348,"line_start":380,"line_end":380,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":50353,"byte_end":50356,"line_start":381,"line_end":381,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":50361,"byte_end":50368,"line_start":382,"line_end":382,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":50373,"byte_end":50414,"line_start":383,"line_end":383,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":50419,"byte_end":50454,"line_start":384,"line_end":384,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":50459,"byte_end":50462,"line_start":385,"line_end":385,"column_start":5,"column_end":8}},{"value":"/ let future = async { 1 };","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":50467,"byte_end":50496,"line_start":386,"line_end":386,"column_start":5,"column_end":34}},{"value":"/ let new_future = future.inspect(|&x| println!(\"about to resolve: {}\", x));","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":50501,"byte_end":50579,"line_start":387,"line_end":387,"column_start":5,"column_end":83}},{"value":"/ assert_eq!(new_future.await, 1);","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":50584,"byte_end":50620,"line_start":388,"line_end":388,"column_start":5,"column_end":41}},{"value":"/ # });","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":50625,"byte_end":50634,"line_start":389,"line_end":389,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":50639,"byte_end":50646,"line_start":390,"line_end":390,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":704},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":52199,"byte_end":52211,"line_start":431,"line_end":431,"column_start":8,"column_end":20},"name":"catch_unwind","qualname":"::future::future::FutureExt::catch_unwind","value":"pub fn catch_unwind(Self) -> CatchUnwind<Self> where Self: Sized +\n::std::panic::UnwindSafe","parent":{"krate":0,"index":685},"children":[],"decl_id":null,"docs":" Catches unwinding panics while polling the future.","sig":null,"attributes":[{"value":"/ Catches unwinding panics while polling the future.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":50843,"byte_end":50897,"line_start":399,"line_end":399,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":50902,"byte_end":50905,"line_start":400,"line_end":400,"column_start":5,"column_end":8}},{"value":"/ In general, panics within a future can propagate all the way out to the","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":50910,"byte_end":50985,"line_start":401,"line_end":401,"column_start":5,"column_end":80}},{"value":"/ task level. This combinator makes it possible to halt unwinding within","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":50990,"byte_end":51064,"line_start":402,"line_end":402,"column_start":5,"column_end":79}},{"value":"/ the future itself. It's most commonly used within task executors. It's","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":51069,"byte_end":51143,"line_start":403,"line_end":403,"column_start":5,"column_end":79}},{"value":"/ not recommended to use this for error handling.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":51148,"byte_end":51199,"line_start":404,"line_end":404,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":51204,"byte_end":51207,"line_start":405,"line_end":405,"column_start":5,"column_end":8}},{"value":"/ Note that this method requires the `UnwindSafe` bound from the standard","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":51212,"byte_end":51287,"line_start":406,"line_end":406,"column_start":5,"column_end":80}},{"value":"/ library. This isn't always applied automatically, and the standard","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":51292,"byte_end":51362,"line_start":407,"line_end":407,"column_start":5,"column_end":75}},{"value":"/ library provides an `AssertUnwindSafe` wrapper type to apply it","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":51367,"byte_end":51434,"line_start":408,"line_end":408,"column_start":5,"column_end":72}},{"value":"/ after-the fact. To assist using this method, the `Future` trait is also","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":51439,"byte_end":51514,"line_start":409,"line_end":409,"column_start":5,"column_end":80}},{"value":"/ implemented for `AssertUnwindSafe<F>` where `F` implements `Future`.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":51519,"byte_end":51591,"line_start":410,"line_end":410,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":51596,"byte_end":51599,"line_start":411,"line_end":411,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` feature of this","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":51604,"byte_end":51668,"line_start":412,"line_end":412,"column_start":5,"column_end":69}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":51673,"byte_end":51730,"line_start":413,"line_end":413,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":51735,"byte_end":51738,"line_start":414,"line_end":414,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":51743,"byte_end":51757,"line_start":415,"line_end":415,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":51762,"byte_end":51765,"line_start":416,"line_end":416,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":51770,"byte_end":51777,"line_start":417,"line_end":417,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":51782,"byte_end":51823,"line_start":418,"line_end":418,"column_start":5,"column_end":46}},{"value":"/ use futures::future::{self, FutureExt, Ready};","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":51828,"byte_end":51878,"line_start":419,"line_end":419,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":51883,"byte_end":51886,"line_start":420,"line_end":420,"column_start":5,"column_end":8}},{"value":"/ let future = future::ready(2);","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":51891,"byte_end":51925,"line_start":421,"line_end":421,"column_start":5,"column_end":39}},{"value":"/ assert!(future.catch_unwind().await.is_ok());","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":51930,"byte_end":51979,"line_start":422,"line_end":422,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":51984,"byte_end":51987,"line_start":423,"line_end":423,"column_start":5,"column_end":8}},{"value":"/ let future = future::lazy(|_| -> Ready<i32> {","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":51992,"byte_end":52041,"line_start":424,"line_end":424,"column_start":5,"column_end":54}},{"value":"/     unimplemented!()","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":52046,"byte_end":52070,"line_start":425,"line_end":425,"column_start":5,"column_end":29}},{"value":"/ });","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":52075,"byte_end":52082,"line_start":426,"line_end":426,"column_start":5,"column_end":12}},{"value":"/ assert!(future.catch_unwind().await.is_err());","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":52087,"byte_end":52137,"line_start":427,"line_end":427,"column_start":5,"column_end":55}},{"value":"/ # });","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":52142,"byte_end":52151,"line_start":428,"line_end":428,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":52156,"byte_end":52163,"line_start":429,"line_end":429,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":52168,"byte_end":52191,"line_start":430,"line_end":430,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":705},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":53963,"byte_end":53969,"line_start":486,"line_end":486,"column_start":8,"column_end":14},"name":"shared","qualname":"::future::future::FutureExt::shared","value":"pub fn shared(Self) -> Shared<Self> where Self: Sized, Self::Output: Clone","parent":{"krate":0,"index":685},"children":[],"decl_id":null,"docs":" Create a cloneable handle to this future where all handles will resolve\n to the same result.","sig":null,"attributes":[{"value":"/ Create a cloneable handle to this future where all handles will resolve","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":52441,"byte_end":52516,"line_start":440,"line_end":440,"column_start":5,"column_end":80}},{"value":"/ to the same result.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":52521,"byte_end":52544,"line_start":441,"line_end":441,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":52549,"byte_end":52552,"line_start":442,"line_end":442,"column_start":5,"column_end":8}},{"value":"/ The `shared` combinator method provides a method to convert any future","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":52557,"byte_end":52631,"line_start":443,"line_end":443,"column_start":5,"column_end":79}},{"value":"/ into a cloneable future. It enables a future to be polled by multiple","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":52636,"byte_end":52709,"line_start":444,"line_end":444,"column_start":5,"column_end":78}},{"value":"/ threads.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":52714,"byte_end":52726,"line_start":445,"line_end":445,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":52731,"byte_end":52734,"line_start":446,"line_end":446,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` feature of this","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":52739,"byte_end":52803,"line_start":447,"line_end":447,"column_start":5,"column_end":69}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":52808,"byte_end":52865,"line_start":448,"line_end":448,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":52870,"byte_end":52873,"line_start":449,"line_end":449,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":52878,"byte_end":52892,"line_start":450,"line_end":450,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":52897,"byte_end":52900,"line_start":451,"line_end":451,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":52905,"byte_end":52912,"line_start":452,"line_end":452,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":52917,"byte_end":52958,"line_start":453,"line_end":453,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":52963,"byte_end":52998,"line_start":454,"line_end":454,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":53003,"byte_end":53006,"line_start":455,"line_end":455,"column_start":5,"column_end":8}},{"value":"/ let future = async { 6 };","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":53011,"byte_end":53040,"line_start":456,"line_end":456,"column_start":5,"column_end":34}},{"value":"/ let shared1 = future.shared();","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":53045,"byte_end":53079,"line_start":457,"line_end":457,"column_start":5,"column_end":39}},{"value":"/ let shared2 = shared1.clone();","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":53084,"byte_end":53118,"line_start":458,"line_end":458,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":53123,"byte_end":53126,"line_start":459,"line_end":459,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(6, shared1.await);","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":53131,"byte_end":53164,"line_start":460,"line_end":460,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(6, shared2.await);","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":53169,"byte_end":53202,"line_start":461,"line_end":461,"column_start":5,"column_end":38}},{"value":"/ # });","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":53207,"byte_end":53216,"line_start":462,"line_end":462,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":53221,"byte_end":53228,"line_start":463,"line_end":463,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":53233,"byte_end":53236,"line_start":464,"line_end":464,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":53241,"byte_end":53248,"line_start":465,"line_end":465,"column_start":5,"column_end":12}},{"value":"/ // Note, unlike most examples this is written in the context of a","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":53253,"byte_end":53322,"line_start":466,"line_end":466,"column_start":5,"column_end":74}},{"value":"/ // synchronous function to better illustrate the cross-thread aspect of","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":53327,"byte_end":53402,"line_start":467,"line_end":467,"column_start":5,"column_end":80}},{"value":"/ // the `shared` combinator.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":53407,"byte_end":53438,"line_start":468,"line_end":468,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":53443,"byte_end":53446,"line_start":469,"line_end":469,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":53451,"byte_end":53492,"line_start":470,"line_end":470,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":53497,"byte_end":53532,"line_start":471,"line_end":471,"column_start":5,"column_end":40}},{"value":"/ use futures::executor::block_on;","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":53537,"byte_end":53573,"line_start":472,"line_end":472,"column_start":5,"column_end":41}},{"value":"/ use std::thread;","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":53578,"byte_end":53598,"line_start":473,"line_end":473,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":53603,"byte_end":53606,"line_start":474,"line_end":474,"column_start":5,"column_end":8}},{"value":"/ let future = async { 6 };","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":53611,"byte_end":53640,"line_start":475,"line_end":475,"column_start":5,"column_end":34}},{"value":"/ let shared1 = future.shared();","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":53645,"byte_end":53679,"line_start":476,"line_end":476,"column_start":5,"column_end":39}},{"value":"/ let shared2 = shared1.clone();","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":53684,"byte_end":53718,"line_start":477,"line_end":477,"column_start":5,"column_end":39}},{"value":"/ let join_handle = thread::spawn(move || {","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":53723,"byte_end":53768,"line_start":478,"line_end":478,"column_start":5,"column_end":50}},{"value":"/     assert_eq!(6, block_on(shared2));","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":53773,"byte_end":53814,"line_start":479,"line_end":479,"column_start":5,"column_end":46}},{"value":"/ });","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":53819,"byte_end":53826,"line_start":480,"line_end":480,"column_start":5,"column_end":12}},{"value":"/ assert_eq!(6, shared1.await);","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":53831,"byte_end":53864,"line_start":481,"line_end":481,"column_start":5,"column_end":38}},{"value":"/ join_handle.join().unwrap();","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":53869,"byte_end":53901,"line_start":482,"line_end":482,"column_start":5,"column_end":37}},{"value":"/ # });","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":53906,"byte_end":53915,"line_start":483,"line_end":483,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":53920,"byte_end":53927,"line_start":484,"line_end":484,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":53932,"byte_end":53955,"line_start":485,"line_end":485,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":706},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":54670,"byte_end":54683,"line_start":505,"line_end":505,"column_start":8,"column_end":21},"name":"remote_handle","qualname":"::future::future::FutureExt::remote_handle","value":"pub fn remote_handle(Self) -> (Remote<Self>, RemoteHandle<Self::Output>) where\nSelf: Sized","parent":{"krate":0,"index":685},"children":[],"decl_id":null,"docs":" Turn this future into a future that yields `()` on completion and sends\n its output to another future on a separate task.","sig":null,"attributes":[{"value":"/ Turn this future into a future that yields `()` on completion and sends","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":54129,"byte_end":54204,"line_start":494,"line_end":494,"column_start":5,"column_end":80}},{"value":"/ its output to another future on a separate task.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":54209,"byte_end":54261,"line_start":495,"line_end":495,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":54266,"byte_end":54269,"line_start":496,"line_end":496,"column_start":5,"column_end":8}},{"value":"/ This can be used with spawning executors to easily retrieve the result","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":54274,"byte_end":54348,"line_start":497,"line_end":497,"column_start":5,"column_end":79}},{"value":"/ of a future executing on a separate task or thread.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":54353,"byte_end":54408,"line_start":498,"line_end":498,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":54413,"byte_end":54416,"line_start":499,"line_end":499,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` feature of this","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":54421,"byte_end":54485,"line_start":500,"line_end":500,"column_start":5,"column_end":69}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":54490,"byte_end":54547,"line_start":501,"line_end":501,"column_start":5,"column_end":62}},{"value":"cfg(feature = \"channel\")","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":54552,"byte_end":54579,"line_start":502,"line_end":502,"column_start":5,"column_end":32}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":54639,"byte_end":54662,"line_start":504,"line_end":504,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":707},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":55131,"byte_end":55136,"line_start":518,"line_end":518,"column_start":8,"column_end":13},"name":"boxed","qualname":"::future::future::FutureExt::boxed","value":"pub fn boxed<'a>(Self) -> BoxFuture where Self: Sized + Send + 'a","parent":{"krate":0,"index":685},"children":[],"decl_id":null,"docs":" Wrap the future in a Box, pinning it.","sig":null,"attributes":[{"value":"/ Wrap the future in a Box, pinning it.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":54902,"byte_end":54943,"line_start":513,"line_end":513,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":54948,"byte_end":54951,"line_start":514,"line_end":514,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":54956,"byte_end":55031,"line_start":515,"line_end":515,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":55036,"byte_end":55093,"line_start":516,"line_end":516,"column_start":5,"column_end":62}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":55098,"byte_end":55123,"line_start":517,"line_end":517,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":709},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":55596,"byte_end":55607,"line_start":532,"line_end":532,"column_start":8,"column_end":19},"name":"boxed_local","qualname":"::future::future::FutureExt::boxed_local","value":"pub fn boxed_local<'a>(Self) -> LocalBoxFuture where Self: Sized + 'a","parent":{"krate":0,"index":685},"children":[],"decl_id":null,"docs":" Wrap the future in a Box, pinning it.","sig":null,"attributes":[{"value":"/ Wrap the future in a Box, pinning it.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":55295,"byte_end":55336,"line_start":525,"line_end":525,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":55341,"byte_end":55344,"line_start":526,"line_end":526,"column_start":5,"column_end":8}},{"value":"/ Similar to `boxed`, but without the `Send` requirement.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":55349,"byte_end":55408,"line_start":527,"line_end":527,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":55413,"byte_end":55416,"line_start":528,"line_end":528,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":55421,"byte_end":55496,"line_start":529,"line_end":529,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":55501,"byte_end":55558,"line_start":530,"line_end":530,"column_start":5,"column_end":62}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":55563,"byte_end":55588,"line_start":531,"line_end":531,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":711},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":55897,"byte_end":55907,"line_start":541,"line_end":541,"column_start":8,"column_end":18},"name":"unit_error","qualname":"::future::future::FutureExt::unit_error","value":"pub fn unit_error(Self) -> UnitError<Self> where Self: Sized","parent":{"krate":0,"index":685},"children":[],"decl_id":null,"docs":" Turns a [`Future<Output = T>`](Future) into a\n [`TryFuture<Ok = T, Error = ()`>](futures_core::future::TryFuture).\n","sig":null,"attributes":[{"value":"/ Turns a [`Future<Output = T>`](Future) into a","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":55764,"byte_end":55813,"line_start":539,"line_end":539,"column_start":5,"column_end":54}},{"value":"/ [`TryFuture<Ok = T, Error = ()`>](futures_core::future::TryFuture).","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":55818,"byte_end":55889,"line_start":540,"line_end":540,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":712},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":56192,"byte_end":56203,"line_start":550,"line_end":550,"column_start":8,"column_end":19},"name":"never_error","qualname":"::future::future::FutureExt::never_error","value":"pub fn never_error(Self) -> NeverError<Self> where Self: Sized","parent":{"krate":0,"index":685},"children":[],"decl_id":null,"docs":" Turns a [`Future<Output = T>`](Future) into a\n [`TryFuture<Ok = T, Error = Never`>](futures_core::future::TryFuture).\n","sig":null,"attributes":[{"value":"/ Turns a [`Future<Output = T>`](Future) into a","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":56056,"byte_end":56105,"line_start":548,"line_end":548,"column_start":5,"column_end":54}},{"value":"/ [`TryFuture<Ok = T, Error = Never`>](futures_core::future::TryFuture).","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":56110,"byte_end":56184,"line_start":549,"line_end":549,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":713},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":56434,"byte_end":56444,"line_start":558,"line_end":558,"column_start":8,"column_end":18},"name":"poll_unpin","qualname":"::future::future::FutureExt::poll_unpin","value":"pub fn poll_unpin(&mut Self, &mut Context) -> Poll<Self::Output> where\nSelf: Unpin","parent":{"krate":0,"index":685},"children":[],"decl_id":null,"docs":" A convenience for calling `Future::poll` on `Unpin` future types.\n","sig":null,"attributes":[{"value":"/ A convenience for calling `Future::poll` on `Unpin` future types.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":56357,"byte_end":56426,"line_start":557,"line_end":557,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":714},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":57840,"byte_end":57852,"line_start":596,"line_end":596,"column_start":8,"column_end":20},"name":"now_or_never","qualname":"::future::future::FutureExt::now_or_never","value":"pub fn now_or_never(Self) -> Option<Self::Output> where Self: Sized","parent":{"krate":0,"index":685},"children":[],"decl_id":null,"docs":" Evaluates and consumes the future, returning the resulting output if\n the future is ready after the first call to `Future::poll`.","sig":null,"attributes":[{"value":"/ Evaluates and consumes the future, returning the resulting output if","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":56580,"byte_end":56652,"line_start":565,"line_end":565,"column_start":5,"column_end":77}},{"value":"/ the future is ready after the first call to `Future::poll`.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":56657,"byte_end":56720,"line_start":566,"line_end":566,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":56725,"byte_end":56728,"line_start":567,"line_end":567,"column_start":5,"column_end":8}},{"value":"/ If `poll` instead returns `Poll::Pending`, `None` is returned.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":56733,"byte_end":56799,"line_start":568,"line_end":568,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":56804,"byte_end":56807,"line_start":569,"line_end":569,"column_start":5,"column_end":8}},{"value":"/ This method is useful in cases where immediacy is more important than","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":56812,"byte_end":56885,"line_start":570,"line_end":570,"column_start":5,"column_end":78}},{"value":"/ waiting for a result. It is also convenient for quickly obtaining","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":56890,"byte_end":56959,"line_start":571,"line_end":571,"column_start":5,"column_end":74}},{"value":"/ the value of a future that is known to always resolve immediately.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":56964,"byte_end":57034,"line_start":572,"line_end":572,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":57039,"byte_end":57042,"line_start":573,"line_end":573,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":57047,"byte_end":57061,"line_start":574,"line_end":574,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":57066,"byte_end":57069,"line_start":575,"line_end":575,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":57074,"byte_end":57081,"line_start":576,"line_end":576,"column_start":5,"column_end":12}},{"value":"/ # use futures::prelude::*;","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":57086,"byte_end":57116,"line_start":577,"line_end":577,"column_start":5,"column_end":35}},{"value":"/ use futures::{future::ready, future::pending};","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":57121,"byte_end":57171,"line_start":578,"line_end":578,"column_start":5,"column_end":55}},{"value":"/ let future_ready = ready(\"foobar\");","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":57176,"byte_end":57215,"line_start":579,"line_end":579,"column_start":5,"column_end":44}},{"value":"/ let future_pending = pending::<&'static str>();","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":57220,"byte_end":57271,"line_start":580,"line_end":580,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":57276,"byte_end":57279,"line_start":581,"line_end":581,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(future_ready.now_or_never(), Some(\"foobar\"));","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":57284,"byte_end":57344,"line_start":582,"line_end":582,"column_start":5,"column_end":65}},{"value":"/ assert_eq!(future_pending.now_or_never(), None);","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":57349,"byte_end":57401,"line_start":583,"line_end":583,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":57406,"byte_end":57413,"line_start":584,"line_end":584,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":57418,"byte_end":57421,"line_start":585,"line_end":585,"column_start":5,"column_end":8}},{"value":"/ In cases where it is absolutely known that a future should always","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":57426,"byte_end":57495,"line_start":586,"line_end":586,"column_start":5,"column_end":74}},{"value":"/ resolve immediately and never return `Poll::Pending`, this method can","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":57500,"byte_end":57573,"line_start":587,"line_end":587,"column_start":5,"column_end":78}},{"value":"/ be combined with `expect()`:","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":57578,"byte_end":57610,"line_start":588,"line_end":588,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":57615,"byte_end":57618,"line_start":589,"line_end":589,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":57623,"byte_end":57630,"line_start":590,"line_end":590,"column_start":5,"column_end":12}},{"value":"/ # use futures::{prelude::*, future::ready};","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":57635,"byte_end":57682,"line_start":591,"line_end":591,"column_start":5,"column_end":52}},{"value":"/ let future_ready = ready(\"foobar\");","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":57687,"byte_end":57726,"line_start":592,"line_end":592,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":57731,"byte_end":57734,"line_start":593,"line_end":593,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(future_ready.now_or_never().expect(\"Future not ready\"), \"foobar\");","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":57739,"byte_end":57820,"line_start":594,"line_end":594,"column_start":5,"column_end":86}},{"value":"/ ```","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":57825,"byte_end":57832,"line_start":595,"line_end":595,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":8771},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/into_future.rs","byte_start":105556,"byte_end":105566,"line_start":10,"line_end":10,"column_start":16,"column_end":26},"name":"IntoFuture","qualname":"::future::try_future::into_future::IntoFuture","value":"IntoFuture {  }","parent":null,"children":[{"krate":0,"index":8773}],"decl_id":null,"docs":" Future for the [`into_future`](super::TryFutureExt::into_future) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":12561792,"byte_end":12561801,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"StructVariant","id":{"krate":0,"index":8809},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/try_flatten.rs","byte_start":106540,"byte_end":106545,"line_start":14,"line_end":14,"column_start":9,"column_end":14},"name":"First","qualname":"::future::try_future::try_flatten::TryFlatten::First","value":"TryFlatten::First { f }","parent":{"krate":0,"index":8806},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":8811},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/try_flatten.rs","byte_start":106574,"byte_end":106580,"line_start":15,"line_end":15,"column_start":9,"column_end":15},"name":"Second","qualname":"::future::try_future::try_flatten::TryFlatten::Second","value":"TryFlatten::Second { f }","parent":{"krate":0,"index":8806},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":8813},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/try_flatten.rs","byte_start":106609,"byte_end":106614,"line_start":16,"line_end":16,"column_start":9,"column_end":14},"name":"Empty","qualname":"::future::try_future::try_flatten::TryFlatten::Empty","value":"TryFlatten::Empty","parent":{"krate":0,"index":8806},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":8806},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/try_flatten.rs","byte_start":106507,"byte_end":106517,"line_start":13,"line_end":13,"column_start":14,"column_end":24},"name":"TryFlatten","qualname":"::future::try_future::try_flatten::TryFlatten","value":"pub enum TryFlatten<Fut1, Fut2> {\n    First {\n        f: Fut1,\n    },\n    Second {\n        f: Fut2,\n    },\n    Empty,\n}","parent":null,"children":[{"krate":0,"index":8809},{"krate":0,"index":8811},{"krate":0,"index":8813}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":8856},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/try_flatten_err.rs","byte_start":111483,"byte_end":111488,"line_start":11,"line_end":11,"column_start":9,"column_end":14},"name":"First","qualname":"::future::try_future::try_flatten_err::TryFlattenErr::First","value":"TryFlattenErr::First { f }","parent":{"krate":0,"index":8853},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":8858},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/try_flatten_err.rs","byte_start":111517,"byte_end":111523,"line_start":12,"line_end":12,"column_start":9,"column_end":15},"name":"Second","qualname":"::future::try_future::try_flatten_err::TryFlattenErr::Second","value":"TryFlattenErr::Second { f }","parent":{"krate":0,"index":8853},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":8860},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/try_flatten_err.rs","byte_start":111552,"byte_end":111557,"line_start":13,"line_end":13,"column_start":9,"column_end":14},"name":"Empty","qualname":"::future::try_future::try_flatten_err::TryFlattenErr::Empty","value":"TryFlattenErr::Empty","parent":{"krate":0,"index":8853},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":8853},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/try_flatten_err.rs","byte_start":111447,"byte_end":111460,"line_start":10,"line_end":10,"column_start":14,"column_end":27},"name":"TryFlattenErr","qualname":"::future::try_future::try_flatten_err::TryFlattenErr","value":"pub enum TryFlattenErr<Fut1, Fut2> {\n    First {\n        f: Fut1,\n    },\n    Second {\n        f: Fut2,\n    },\n    Empty,\n}","parent":null,"children":[{"krate":0,"index":8856},{"krate":0,"index":8858},{"krate":0,"index":8860}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8899},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":84391,"byte_end":84401,"line_start":32,"line_end":32,"column_start":5,"column_end":15},"name":"TryFlatten","qualname":"::future::try_future::TryFlatten","value":"TryFlatten {  }","parent":null,"children":[{"krate":0,"index":8902}],"decl_id":null,"docs":" Future for the [`try_flatten`](TryFutureExt::try_flatten) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":12561792,"byte_end":12561801,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":8960},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":84649,"byte_end":84662,"line_start":39,"line_end":39,"column_start":5,"column_end":18},"name":"TryFlattenErr","qualname":"::future::try_future::TryFlattenErr","value":"TryFlattenErr {  }","parent":null,"children":[{"krate":0,"index":8963}],"decl_id":null,"docs":" Future for the [`try_flatten_err`](TryFutureExt::try_flatten_err) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":12561792,"byte_end":12561801,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9020},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":84930,"byte_end":84946,"line_start":46,"line_end":46,"column_start":5,"column_end":21},"name":"TryFlattenStream","qualname":"::future::try_future::TryFlattenStream","value":"TryFlattenStream {  }","parent":null,"children":[{"krate":0,"index":9022}],"decl_id":null,"docs":" Future for the [`try_flatten_stream`](TryFutureExt::try_flatten_stream) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":12561792,"byte_end":12561801,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9078},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":85289,"byte_end":85300,"line_start":56,"line_end":56,"column_start":5,"column_end":16},"name":"FlattenSink","qualname":"::future::try_future::FlattenSink","value":"FlattenSink {  }","parent":null,"children":[{"krate":0,"index":9081}],"decl_id":null,"docs":" Sink for the [`flatten_sink`](TryFutureExt::flatten_sink) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":12561792,"byte_end":12561801,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9150},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":85534,"byte_end":85541,"line_start":63,"line_end":63,"column_start":5,"column_end":12},"name":"AndThen","qualname":"::future::try_future::AndThen","value":"AndThen {  }","parent":null,"children":[{"krate":0,"index":9154}],"decl_id":null,"docs":" Future for the [`and_then`](TryFutureExt::and_then) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":12561792,"byte_end":12561801,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9224},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":85781,"byte_end":85787,"line_start":70,"line_end":70,"column_start":5,"column_end":11},"name":"OrElse","qualname":"::future::try_future::OrElse","value":"OrElse {  }","parent":null,"children":[{"krate":0,"index":9228}],"decl_id":null,"docs":" Future for the [`or_else`](TryFutureExt::or_else) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":12561792,"byte_end":12561801,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9297},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":86037,"byte_end":86044,"line_start":77,"line_end":77,"column_start":5,"column_end":12},"name":"ErrInto","qualname":"::future::try_future::ErrInto","value":"ErrInto {  }","parent":null,"children":[{"krate":0,"index":9300}],"decl_id":null,"docs":" Future for the [`err_into`](TryFutureExt::err_into) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":12561792,"byte_end":12561801,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9358},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":86252,"byte_end":86258,"line_start":84,"line_end":84,"column_start":5,"column_end":11},"name":"OkInto","qualname":"::future::try_future::OkInto","value":"OkInto {  }","parent":null,"children":[{"krate":0,"index":9361}],"decl_id":null,"docs":" Future for the [`ok_into`](TryFutureExt::ok_into) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":12561792,"byte_end":12561801,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9419},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":86477,"byte_end":86486,"line_start":91,"line_end":91,"column_start":5,"column_end":14},"name":"InspectOk","qualname":"::future::try_future::InspectOk","value":"InspectOk {  }","parent":null,"children":[{"krate":0,"index":9422}],"decl_id":null,"docs":" Future for the [`inspect_ok`](super::TryFutureExt::inspect_ok) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":12561792,"byte_end":12561801,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9480},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":86758,"byte_end":86768,"line_start":98,"line_end":98,"column_start":5,"column_end":15},"name":"InspectErr","qualname":"::future::try_future::InspectErr","value":"InspectErr {  }","parent":null,"children":[{"krate":0,"index":9483}],"decl_id":null,"docs":" Future for the [`inspect_err`](super::TryFutureExt::inspect_err) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":12561792,"byte_end":12561801,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9541},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":87141,"byte_end":87146,"line_start":108,"line_end":108,"column_start":5,"column_end":10},"name":"MapOk","qualname":"::future::try_future::MapOk","value":"MapOk {  }","parent":null,"children":[{"krate":0,"index":9544}],"decl_id":null,"docs":" Future for the [`map_ok`](TryFutureExt::map_ok) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":12561792,"byte_end":12561801,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9602},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":87387,"byte_end":87393,"line_start":115,"line_end":115,"column_start":5,"column_end":11},"name":"MapErr","qualname":"::future::try_future::MapErr","value":"MapErr {  }","parent":null,"children":[{"krate":0,"index":9605}],"decl_id":null,"docs":" Future for the [`map_err`](TryFutureExt::map_err) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":12561792,"byte_end":12561801,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9664},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":87650,"byte_end":87661,"line_start":122,"line_end":122,"column_start":5,"column_end":16},"name":"MapOkOrElse","qualname":"::future::try_future::MapOkOrElse","value":"MapOkOrElse {  }","parent":null,"children":[{"krate":0,"index":9668}],"decl_id":null,"docs":" Future for the [`map_ok_or_else`](TryFutureExt::map_ok_or_else) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":12561792,"byte_end":12561801,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9737},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":87945,"byte_end":87957,"line_start":129,"line_end":129,"column_start":5,"column_end":17},"name":"UnwrapOrElse","qualname":"::future::try_future::UnwrapOrElse","value":"UnwrapOrElse {  }","parent":null,"children":[{"krate":0,"index":9740}],"decl_id":null,"docs":" Future for the [`unwrap_or_else`](TryFutureExt::unwrap_or_else) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":12561792,"byte_end":12561801,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Trait","id":{"krate":0,"index":986},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":88247,"byte_end":88259,"line_start":137,"line_end":137,"column_start":11,"column_end":23},"name":"TryFutureExt","qualname":"::future::try_future::TryFutureExt","value":"TryFutureExt: TryFuture","parent":null,"children":[{"krate":0,"index":987},{"krate":0,"index":989},{"krate":0,"index":992},{"krate":0,"index":996},{"krate":0,"index":999},{"krate":0,"index":1001},{"krate":0,"index":1003},{"krate":0,"index":1006},{"krate":0,"index":1009},{"krate":0,"index":1011},{"krate":0,"index":1013},{"krate":0,"index":1014},{"krate":0,"index":1015},{"krate":0,"index":1017},{"krate":0,"index":1018}],"decl_id":null,"docs":" Adapters specific to [`Result`]-returning futures\n","sig":null,"attributes":[{"value":"/ Adapters specific to [`Result`]-returning futures","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":88183,"byte_end":88236,"line_start":136,"line_end":136,"column_start":1,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":987},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":89411,"byte_end":89423,"line_start":171,"line_end":171,"column_start":8,"column_end":20},"name":"flatten_sink","qualname":"::future::try_future::TryFutureExt::flatten_sink","value":"pub fn flatten_sink<Item>(Self) -> FlattenSink<Self, Self::Ok> where\nSelf::Ok: Sink<Item, Error = Self::Error>, Self: Sized","parent":{"krate":0,"index":986},"children":[],"decl_id":null,"docs":" Flattens the execution of this future when the successful result of this\n future is a [`Sink`].","sig":null,"attributes":[{"value":"/ Flattens the execution of this future when the successful result of this","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":88277,"byte_end":88353,"line_start":138,"line_end":138,"column_start":5,"column_end":81}},{"value":"/ future is a [`Sink`].","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":88358,"byte_end":88383,"line_start":139,"line_end":139,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":88388,"byte_end":88391,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ This can be useful when sink initialization is deferred, and it is","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":88396,"byte_end":88466,"line_start":141,"line_end":141,"column_start":5,"column_end":75}},{"value":"/ convenient to work with that sink as if the sink was available at the","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":88471,"byte_end":88544,"line_start":142,"line_end":142,"column_start":5,"column_end":78}},{"value":"/ call site.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":88549,"byte_end":88563,"line_start":143,"line_end":143,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":88568,"byte_end":88571,"line_start":144,"line_end":144,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes this future and returns a wrapped","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":88576,"byte_end":88646,"line_start":145,"line_end":145,"column_start":5,"column_end":75}},{"value":"/ version of it.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":88651,"byte_end":88669,"line_start":146,"line_end":146,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":88674,"byte_end":88677,"line_start":147,"line_end":147,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":88682,"byte_end":88696,"line_start":148,"line_end":148,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":88701,"byte_end":88704,"line_start":149,"line_end":149,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":88709,"byte_end":88716,"line_start":150,"line_end":150,"column_start":5,"column_end":12}},{"value":"/ use futures::future::{Future, TryFutureExt};","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":88721,"byte_end":88769,"line_start":151,"line_end":151,"column_start":5,"column_end":53}},{"value":"/ use futures::sink::Sink;","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":88774,"byte_end":88802,"line_start":152,"line_end":152,"column_start":5,"column_end":33}},{"value":"/ # use futures::channel::mpsc::{self, SendError};","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":88807,"byte_end":88859,"line_start":153,"line_end":153,"column_start":5,"column_end":57}},{"value":"/ # type T = i32;","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":88864,"byte_end":88883,"line_start":154,"line_end":154,"column_start":5,"column_end":24}},{"value":"/ # type E = SendError;","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":88888,"byte_end":88913,"line_start":155,"line_end":155,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":88918,"byte_end":88921,"line_start":156,"line_end":156,"column_start":5,"column_end":8}},{"value":"/ fn make_sink_async() -> impl Future<Output = Result<","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":88926,"byte_end":88982,"line_start":157,"line_end":157,"column_start":5,"column_end":61}},{"value":"/     impl Sink<T, Error = E>,","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":88987,"byte_end":89019,"line_start":158,"line_end":158,"column_start":5,"column_end":37}},{"value":"/     E,","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":89024,"byte_end":89034,"line_start":159,"line_end":159,"column_start":5,"column_end":15}},{"value":"/ >> { // ... }","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":89039,"byte_end":89056,"line_start":160,"line_end":160,"column_start":5,"column_end":22}},{"value":"/ # let (tx, _rx) = mpsc::unbounded::<i32>();","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":89061,"byte_end":89108,"line_start":161,"line_end":161,"column_start":5,"column_end":52}},{"value":"/ # futures::future::ready(Ok(tx))","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":89113,"byte_end":89149,"line_start":162,"line_end":162,"column_start":5,"column_end":41}},{"value":"/ # }","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":89154,"byte_end":89161,"line_start":163,"line_end":163,"column_start":5,"column_end":12}},{"value":"/ fn take_sink(sink: impl Sink<T, Error = E>) { /* ... */ }","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":89166,"byte_end":89227,"line_start":164,"line_end":164,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":89232,"byte_end":89235,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ let fut = make_sink_async();","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":89240,"byte_end":89272,"line_start":166,"line_end":166,"column_start":5,"column_end":37}},{"value":"/ take_sink(fut.flatten_sink())","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":89277,"byte_end":89310,"line_start":167,"line_end":167,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":89315,"byte_end":89322,"line_start":168,"line_end":168,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"sink\")","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":89327,"byte_end":89351,"line_start":169,"line_end":169,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":989},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":91019,"byte_end":91025,"line_start":217,"line_end":217,"column_start":8,"column_end":14},"name":"map_ok","qualname":"::future::try_future::TryFutureExt::map_ok","value":"pub fn map_ok<T, F>(Self, F) -> MapOk<Self, F> where F: FnOnce(Self::Ok) -> T,\nSelf: Sized","parent":{"krate":0,"index":986},"children":[],"decl_id":null,"docs":" Maps this future's success value to a different value.","sig":null,"attributes":[{"value":"/ Maps this future's success value to a different value.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":89647,"byte_end":89705,"line_start":179,"line_end":179,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":89710,"byte_end":89713,"line_start":180,"line_end":180,"column_start":5,"column_end":8}},{"value":"/ This method can be used to change the [`Ok`](TryFuture::Ok) type of the","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":89718,"byte_end":89793,"line_start":181,"line_end":181,"column_start":5,"column_end":80}},{"value":"/ future into a different type. It is similar to the [`Result::map`]","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":89798,"byte_end":89868,"line_start":182,"line_end":182,"column_start":5,"column_end":75}},{"value":"/ method. You can use this method to chain along a computation once the","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":89873,"byte_end":89946,"line_start":183,"line_end":183,"column_start":5,"column_end":78}},{"value":"/ future has been resolved.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":89951,"byte_end":89980,"line_start":184,"line_end":184,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":89985,"byte_end":89988,"line_start":185,"line_end":185,"column_start":5,"column_end":8}},{"value":"/ The provided closure `f` will only be called if this future is resolved","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":89993,"byte_end":90068,"line_start":186,"line_end":186,"column_start":5,"column_end":80}},{"value":"/ to an [`Ok`]. If it resolves to an [`Err`], panics, or is dropped, then","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":90073,"byte_end":90148,"line_start":187,"line_end":187,"column_start":5,"column_end":80}},{"value":"/ the provided closure will never be invoked.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":90153,"byte_end":90200,"line_start":188,"line_end":188,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":90205,"byte_end":90208,"line_start":189,"line_end":189,"column_start":5,"column_end":8}},{"value":"/ Note that this method consumes the future it is called on and returns a","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":90213,"byte_end":90288,"line_start":190,"line_end":190,"column_start":5,"column_end":80}},{"value":"/ wrapped version of it.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":90293,"byte_end":90319,"line_start":191,"line_end":191,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":90324,"byte_end":90327,"line_start":192,"line_end":192,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":90332,"byte_end":90346,"line_start":193,"line_end":193,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":90351,"byte_end":90354,"line_start":194,"line_end":194,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":90359,"byte_end":90366,"line_start":195,"line_end":195,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":90371,"byte_end":90409,"line_start":196,"line_end":196,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":90414,"byte_end":90417,"line_start":197,"line_end":197,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":90422,"byte_end":90463,"line_start":198,"line_end":198,"column_start":5,"column_end":46}},{"value":"/ let future = async { Ok::<i32, i32>(1) };","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":90468,"byte_end":90513,"line_start":199,"line_end":199,"column_start":5,"column_end":50}},{"value":"/ let future = future.map_ok(|x| x + 3);","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":90518,"byte_end":90560,"line_start":200,"line_end":200,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(future.await, Ok(4));","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":90565,"byte_end":90601,"line_start":201,"line_end":201,"column_start":5,"column_end":41}},{"value":"/ # });","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":90606,"byte_end":90615,"line_start":202,"line_end":202,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":90620,"byte_end":90627,"line_start":203,"line_end":203,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":90632,"byte_end":90635,"line_start":204,"line_end":204,"column_start":5,"column_end":8}},{"value":"/ Calling [`map_ok`](TryFutureExt::map_ok) on an errored future has no","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":90640,"byte_end":90712,"line_start":205,"line_end":205,"column_start":5,"column_end":77}},{"value":"/ effect:","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":90717,"byte_end":90728,"line_start":206,"line_end":206,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":90733,"byte_end":90736,"line_start":207,"line_end":207,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":90741,"byte_end":90748,"line_start":208,"line_end":208,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":90753,"byte_end":90791,"line_start":209,"line_end":209,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":90796,"byte_end":90799,"line_start":210,"line_end":210,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":90804,"byte_end":90845,"line_start":211,"line_end":211,"column_start":5,"column_end":46}},{"value":"/ let future = async { Err::<i32, i32>(1) };","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":90850,"byte_end":90896,"line_start":212,"line_end":212,"column_start":5,"column_end":51}},{"value":"/ let future = future.map_ok(|x| x + 3);","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":90901,"byte_end":90943,"line_start":213,"line_end":213,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(future.await, Err(1));","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":90948,"byte_end":90985,"line_start":214,"line_end":214,"column_start":5,"column_end":42}},{"value":"/ # });","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":90990,"byte_end":90999,"line_start":215,"line_end":215,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":91004,"byte_end":91011,"line_start":216,"line_end":216,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":992},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":92584,"byte_end":92598,"line_start":257,"line_end":257,"column_start":8,"column_end":22},"name":"map_ok_or_else","qualname":"::future::try_future::TryFutureExt::map_ok_or_else","value":"pub fn map_ok_or_else<T, E, F>(Self, E, F) -> MapOkOrElse<Self, F, E> where\nF: FnOnce(Self::Ok) -> T, E: FnOnce(Self::Error) -> T, Self: Sized","parent":{"krate":0,"index":986},"children":[],"decl_id":null,"docs":" Maps this future's success value to a different value, and permits for error handling resulting in the same type.","sig":null,"attributes":[{"value":"/ Maps this future's success value to a different value, and permits for error handling resulting in the same type.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":91216,"byte_end":91333,"line_start":225,"line_end":225,"column_start":5,"column_end":122}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":91338,"byte_end":91341,"line_start":226,"line_end":226,"column_start":5,"column_end":8}},{"value":"/ This method can be used to coalesce your [`Ok`](TryFuture::Ok) type and [`Error`](TryFuture::Error) into another type,","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":91346,"byte_end":91468,"line_start":227,"line_end":227,"column_start":5,"column_end":127}},{"value":"/ where that type is the same for both outcomes.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":91473,"byte_end":91523,"line_start":228,"line_end":228,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":91528,"byte_end":91531,"line_start":229,"line_end":229,"column_start":5,"column_end":8}},{"value":"/ The provided closure `f` will only be called if this future is resolved","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":91536,"byte_end":91611,"line_start":230,"line_end":230,"column_start":5,"column_end":80}},{"value":"/ to an [`Ok`]. If it resolves to an [`Err`], panics, or is dropped, then","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":91616,"byte_end":91691,"line_start":231,"line_end":231,"column_start":5,"column_end":80}},{"value":"/ the provided closure will never be invoked.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":91696,"byte_end":91743,"line_start":232,"line_end":232,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":91748,"byte_end":91751,"line_start":233,"line_end":233,"column_start":5,"column_end":8}},{"value":"/ The provided closure `e` will only be called if this future is resolved","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":91756,"byte_end":91831,"line_start":234,"line_end":234,"column_start":5,"column_end":80}},{"value":"/ to an [`Err`]. If it resolves to an [`Ok`], panics, or is dropped, then","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":91836,"byte_end":91911,"line_start":235,"line_end":235,"column_start":5,"column_end":80}},{"value":"/ the provided closure will never be invoked.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":91916,"byte_end":91963,"line_start":236,"line_end":236,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":91968,"byte_end":91971,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/ Note that this method consumes the future it is called on and returns a","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":91976,"byte_end":92051,"line_start":238,"line_end":238,"column_start":5,"column_end":80}},{"value":"/ wrapped version of it.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":92056,"byte_end":92082,"line_start":239,"line_end":239,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":92087,"byte_end":92090,"line_start":240,"line_end":240,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":92095,"byte_end":92109,"line_start":241,"line_end":241,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":92114,"byte_end":92117,"line_start":242,"line_end":242,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":92122,"byte_end":92129,"line_start":243,"line_end":243,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":92134,"byte_end":92172,"line_start":244,"line_end":244,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":92177,"byte_end":92180,"line_start":245,"line_end":245,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":92185,"byte_end":92226,"line_start":246,"line_end":246,"column_start":5,"column_end":46}},{"value":"/ let future = async { Ok::<i32, i32>(5) };","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":92231,"byte_end":92276,"line_start":247,"line_end":247,"column_start":5,"column_end":50}},{"value":"/ let future = future.map_ok_or_else(|x| x * 2, |x| x + 3);","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":92281,"byte_end":92342,"line_start":248,"line_end":248,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(future.await, 8);","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":92347,"byte_end":92379,"line_start":249,"line_end":249,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":92384,"byte_end":92387,"line_start":250,"line_end":250,"column_start":5,"column_end":8}},{"value":"/ let future = async { Err::<i32, i32>(5) };","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":92392,"byte_end":92438,"line_start":251,"line_end":251,"column_start":5,"column_end":51}},{"value":"/ let future = future.map_ok_or_else(|x| x * 2, |x| x + 3);","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":92443,"byte_end":92504,"line_start":252,"line_end":252,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(future.await, 10);","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":92509,"byte_end":92542,"line_start":253,"line_end":253,"column_start":5,"column_end":38}},{"value":"/ # });","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":92547,"byte_end":92556,"line_start":254,"line_end":254,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":92561,"byte_end":92568,"line_start":255,"line_end":255,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":92573,"byte_end":92576,"line_start":256,"line_end":256,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":996},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":94281,"byte_end":94288,"line_start":305,"line_end":305,"column_start":8,"column_end":15},"name":"map_err","qualname":"::future::try_future::TryFutureExt::map_err","value":"pub fn map_err<E, F>(Self, F) -> MapErr<Self, F> where F: FnOnce(Self::Error)\n-> E, Self: Sized","parent":{"krate":0,"index":986},"children":[],"decl_id":null,"docs":" Maps this future's error value to a different value.","sig":null,"attributes":[{"value":"/ Maps this future's error value to a different value.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":92832,"byte_end":92888,"line_start":266,"line_end":266,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":92893,"byte_end":92896,"line_start":267,"line_end":267,"column_start":5,"column_end":8}},{"value":"/ This method can be used to change the [`Error`](TryFuture::Error) type","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":92901,"byte_end":92975,"line_start":268,"line_end":268,"column_start":5,"column_end":79}},{"value":"/ of the future into a different type. It is similar to the","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":92980,"byte_end":93041,"line_start":269,"line_end":269,"column_start":5,"column_end":66}},{"value":"/ [`Result::map_err`] method. You can use this method for example to","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":93046,"byte_end":93116,"line_start":270,"line_end":270,"column_start":5,"column_end":75}},{"value":"/ ensure that futures have the same [`Error`](TryFuture::Error) type when","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":93121,"byte_end":93196,"line_start":271,"line_end":271,"column_start":5,"column_end":80}},{"value":"/ using [`select!`] or [`join!`].","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":93201,"byte_end":93236,"line_start":272,"line_end":272,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":93241,"byte_end":93244,"line_start":273,"line_end":273,"column_start":5,"column_end":8}},{"value":"/ The provided closure `f` will only be called if this future is resolved","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":93249,"byte_end":93324,"line_start":274,"line_end":274,"column_start":5,"column_end":80}},{"value":"/ to an [`Err`]. If it resolves to an [`Ok`], panics, or is dropped, then","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":93329,"byte_end":93404,"line_start":275,"line_end":275,"column_start":5,"column_end":80}},{"value":"/ the provided closure will never be invoked.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":93409,"byte_end":93456,"line_start":276,"line_end":276,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":93461,"byte_end":93464,"line_start":277,"line_end":277,"column_start":5,"column_end":8}},{"value":"/ Note that this method consumes the future it is called on and returns a","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":93469,"byte_end":93544,"line_start":278,"line_end":278,"column_start":5,"column_end":80}},{"value":"/ wrapped version of it.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":93549,"byte_end":93575,"line_start":279,"line_end":279,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":93580,"byte_end":93583,"line_start":280,"line_end":280,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":93588,"byte_end":93602,"line_start":281,"line_end":281,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":93607,"byte_end":93610,"line_start":282,"line_end":282,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":93615,"byte_end":93622,"line_start":283,"line_end":283,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":93627,"byte_end":93665,"line_start":284,"line_end":284,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":93670,"byte_end":93673,"line_start":285,"line_end":285,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":93678,"byte_end":93719,"line_start":286,"line_end":286,"column_start":5,"column_end":46}},{"value":"/ let future = async { Err::<i32, i32>(1) };","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":93724,"byte_end":93770,"line_start":287,"line_end":287,"column_start":5,"column_end":51}},{"value":"/ let future = future.map_err(|x| x + 3);","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":93775,"byte_end":93818,"line_start":288,"line_end":288,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(future.await, Err(4));","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":93823,"byte_end":93860,"line_start":289,"line_end":289,"column_start":5,"column_end":42}},{"value":"/ # });","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":93865,"byte_end":93874,"line_start":290,"line_end":290,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":93879,"byte_end":93886,"line_start":291,"line_end":291,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":93891,"byte_end":93894,"line_start":292,"line_end":292,"column_start":5,"column_end":8}},{"value":"/ Calling [`map_err`](TryFutureExt::map_err) on a successful future has","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":93899,"byte_end":93972,"line_start":293,"line_end":293,"column_start":5,"column_end":78}},{"value":"/ no effect:","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":93977,"byte_end":93991,"line_start":294,"line_end":294,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":93996,"byte_end":93999,"line_start":295,"line_end":295,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":94004,"byte_end":94011,"line_start":296,"line_end":296,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":94016,"byte_end":94054,"line_start":297,"line_end":297,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":94059,"byte_end":94062,"line_start":298,"line_end":298,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":94067,"byte_end":94108,"line_start":299,"line_end":299,"column_start":5,"column_end":46}},{"value":"/ let future = async { Ok::<i32, i32>(1) };","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":94113,"byte_end":94158,"line_start":300,"line_end":300,"column_start":5,"column_end":50}},{"value":"/ let future = future.map_err(|x| x + 3);","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":94163,"byte_end":94206,"line_start":301,"line_end":301,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(future.await, Ok(1));","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":94211,"byte_end":94247,"line_start":302,"line_end":302,"column_start":5,"column_end":41}},{"value":"/ # });","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":94252,"byte_end":94261,"line_start":303,"line_end":303,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":94266,"byte_end":94273,"line_start":304,"line_end":304,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":999},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":95378,"byte_end":95386,"line_start":335,"line_end":335,"column_start":8,"column_end":16},"name":"err_into","qualname":"::future::try_future::TryFutureExt::err_into","value":"pub fn err_into<E>(Self) -> ErrInto<Self, E> where Self: Sized,\nSelf::Error: Into<E>","parent":{"krate":0,"index":986},"children":[],"decl_id":null,"docs":" Maps this future's [`Error`](TryFuture::Error) to a new error type\n using the [`Into`](std::convert::Into) trait.","sig":null,"attributes":[{"value":"/ Maps this future's [`Error`](TryFuture::Error) to a new error type","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":94481,"byte_end":94551,"line_start":313,"line_end":313,"column_start":5,"column_end":75}},{"value":"/ using the [`Into`](std::convert::Into) trait.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":94556,"byte_end":94605,"line_start":314,"line_end":314,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":94610,"byte_end":94613,"line_start":315,"line_end":315,"column_start":5,"column_end":8}},{"value":"/ This method does for futures what the `?`-operator does for","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":94618,"byte_end":94681,"line_start":316,"line_end":316,"column_start":5,"column_end":68}},{"value":"/ [`Result`]: It lets the compiler infer the type of the resulting","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":94686,"byte_end":94754,"line_start":317,"line_end":317,"column_start":5,"column_end":73}},{"value":"/ error. Just as [`map_err`](TryFutureExt::map_err), this is useful for","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":94759,"byte_end":94832,"line_start":318,"line_end":318,"column_start":5,"column_end":78}},{"value":"/ example to ensure that futures have the same [`Error`](TryFuture::Error)","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":94837,"byte_end":94913,"line_start":319,"line_end":319,"column_start":5,"column_end":81}},{"value":"/ type when using [`select!`] or [`join!`].","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":94918,"byte_end":94963,"line_start":320,"line_end":320,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":94968,"byte_end":94971,"line_start":321,"line_end":321,"column_start":5,"column_end":8}},{"value":"/ Note that this method consumes the future it is called on and returns a","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":94976,"byte_end":95051,"line_start":322,"line_end":322,"column_start":5,"column_end":80}},{"value":"/ wrapped version of it.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":95056,"byte_end":95082,"line_start":323,"line_end":323,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":95087,"byte_end":95090,"line_start":324,"line_end":324,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":95095,"byte_end":95109,"line_start":325,"line_end":325,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":95114,"byte_end":95117,"line_start":326,"line_end":326,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":95122,"byte_end":95129,"line_start":327,"line_end":327,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":95134,"byte_end":95172,"line_start":328,"line_end":328,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":95177,"byte_end":95180,"line_start":329,"line_end":329,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":95185,"byte_end":95226,"line_start":330,"line_end":330,"column_start":5,"column_end":46}},{"value":"/ let future_err_u8 = async { Err::<(), u8>(1) };","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":95231,"byte_end":95282,"line_start":331,"line_end":331,"column_start":5,"column_end":56}},{"value":"/ let future_err_i32 = future_err_u8.err_into::<i32>();","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":95287,"byte_end":95344,"line_start":332,"line_end":332,"column_start":5,"column_end":62}},{"value":"/ # });","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":95349,"byte_end":95358,"line_start":333,"line_end":333,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":95363,"byte_end":95370,"line_start":334,"line_end":334,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1001},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":95682,"byte_end":95689,"line_start":345,"line_end":345,"column_start":8,"column_end":15},"name":"ok_into","qualname":"::future::try_future::TryFutureExt::ok_into","value":"pub fn ok_into<U>(Self) -> OkInto<Self, U> where Self: Sized,\nSelf::Ok: Into<U>","parent":{"krate":0,"index":986},"children":[],"decl_id":null,"docs":" Maps this future's [`Ok`](TryFuture::Ok) to a new type\n using the [`Into`](std::convert::Into) trait.\n","sig":null,"attributes":[{"value":"/ Maps this future's [`Ok`](TryFuture::Ok) to a new type","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":95562,"byte_end":95620,"line_start":343,"line_end":343,"column_start":5,"column_end":63}},{"value":"/ using the [`Into`](std::convert::Into) trait.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":95625,"byte_end":95674,"line_start":344,"line_end":344,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":1003},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":97244,"byte_end":97252,"line_start":389,"line_end":389,"column_start":8,"column_end":16},"name":"and_then","qualname":"::future::try_future::TryFutureExt::and_then","value":"pub fn and_then<Fut, F>(Self, F) -> AndThen<Self, Fut, F> where\nF: FnOnce(Self::Ok) -> Fut, Fut: TryFuture<Error = Self::Error>, Self: Sized","parent":{"krate":0,"index":986},"children":[],"decl_id":null,"docs":" Executes another future after this one resolves successfully. The\n success value is passed to a closure to create this subsequent future.","sig":null,"attributes":[{"value":"/ Executes another future after this one resolves successfully. The","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":95863,"byte_end":95932,"line_start":353,"line_end":353,"column_start":5,"column_end":74}},{"value":"/ success value is passed to a closure to create this subsequent future.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":95937,"byte_end":96011,"line_start":354,"line_end":354,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":96016,"byte_end":96019,"line_start":355,"line_end":355,"column_start":5,"column_end":8}},{"value":"/ The provided closure `f` will only be called if this future is resolved","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":96024,"byte_end":96099,"line_start":356,"line_end":356,"column_start":5,"column_end":80}},{"value":"/ to an [`Ok`]. If this future resolves to an [`Err`], panics, or is","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":96104,"byte_end":96174,"line_start":357,"line_end":357,"column_start":5,"column_end":75}},{"value":"/ dropped, then the provided closure will never be invoked. The","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":96179,"byte_end":96244,"line_start":358,"line_end":358,"column_start":5,"column_end":70}},{"value":"/ [`Error`](TryFuture::Error) type of this future and the future","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":96249,"byte_end":96315,"line_start":359,"line_end":359,"column_start":5,"column_end":71}},{"value":"/ returned by `f` have to match.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":96320,"byte_end":96354,"line_start":360,"line_end":360,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":96359,"byte_end":96362,"line_start":361,"line_end":361,"column_start":5,"column_end":8}},{"value":"/ Note that this method consumes the future it is called on and returns a","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":96367,"byte_end":96442,"line_start":362,"line_end":362,"column_start":5,"column_end":80}},{"value":"/ wrapped version of it.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":96447,"byte_end":96473,"line_start":363,"line_end":363,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":96478,"byte_end":96481,"line_start":364,"line_end":364,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":96486,"byte_end":96500,"line_start":365,"line_end":365,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":96505,"byte_end":96508,"line_start":366,"line_end":366,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":96513,"byte_end":96520,"line_start":367,"line_end":367,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":96525,"byte_end":96563,"line_start":368,"line_end":368,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":96568,"byte_end":96571,"line_start":369,"line_end":369,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":96576,"byte_end":96617,"line_start":370,"line_end":370,"column_start":5,"column_end":46}},{"value":"/ let future = async { Ok::<i32, i32>(1) };","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":96622,"byte_end":96667,"line_start":371,"line_end":371,"column_start":5,"column_end":50}},{"value":"/ let future = future.and_then(|x| async move { Ok::<i32, i32>(x + 3) });","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":96672,"byte_end":96747,"line_start":372,"line_end":372,"column_start":5,"column_end":80}},{"value":"/ assert_eq!(future.await, Ok(4));","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":96752,"byte_end":96788,"line_start":373,"line_end":373,"column_start":5,"column_end":41}},{"value":"/ # });","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":96793,"byte_end":96802,"line_start":374,"line_end":374,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":96807,"byte_end":96814,"line_start":375,"line_end":375,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":96819,"byte_end":96822,"line_start":376,"line_end":376,"column_start":5,"column_end":8}},{"value":"/ Calling [`and_then`](TryFutureExt::and_then) on an errored future has no","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":96827,"byte_end":96903,"line_start":377,"line_end":377,"column_start":5,"column_end":81}},{"value":"/ effect:","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":96908,"byte_end":96919,"line_start":378,"line_end":378,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":96924,"byte_end":96927,"line_start":379,"line_end":379,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":96932,"byte_end":96939,"line_start":380,"line_end":380,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":96944,"byte_end":96982,"line_start":381,"line_end":381,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":96987,"byte_end":96990,"line_start":382,"line_end":382,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":96995,"byte_end":97036,"line_start":383,"line_end":383,"column_start":5,"column_end":46}},{"value":"/ let future = async { Err::<i32, i32>(1) };","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":97041,"byte_end":97087,"line_start":384,"line_end":384,"column_start":5,"column_end":51}},{"value":"/ let future = future.and_then(|x| async move { Err::<i32, i32>(x + 3) });","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":97092,"byte_end":97168,"line_start":385,"line_end":385,"column_start":5,"column_end":81}},{"value":"/ assert_eq!(future.await, Err(1));","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":97173,"byte_end":97210,"line_start":386,"line_end":386,"column_start":5,"column_end":42}},{"value":"/ # });","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":97215,"byte_end":97224,"line_start":387,"line_end":387,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":97229,"byte_end":97236,"line_start":388,"line_end":388,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1006},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":98873,"byte_end":98880,"line_start":434,"line_end":434,"column_start":8,"column_end":15},"name":"or_else","qualname":"::future::try_future::TryFutureExt::or_else","value":"pub fn or_else<Fut, F>(Self, F) -> OrElse<Self, Fut, F> where\nF: FnOnce(Self::Error) -> Fut, Fut: TryFuture<Ok = Self::Ok>, Self: Sized","parent":{"krate":0,"index":986},"children":[],"decl_id":null,"docs":" Executes another future if this one resolves to an error. The\n error value is passed to a closure to create this subsequent future.","sig":null,"attributes":[{"value":"/ Executes another future if this one resolves to an error. The","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":97506,"byte_end":97571,"line_start":398,"line_end":398,"column_start":5,"column_end":70}},{"value":"/ error value is passed to a closure to create this subsequent future.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":97576,"byte_end":97648,"line_start":399,"line_end":399,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":97653,"byte_end":97656,"line_start":400,"line_end":400,"column_start":5,"column_end":8}},{"value":"/ The provided closure `f` will only be called if this future is resolved","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":97661,"byte_end":97736,"line_start":401,"line_end":401,"column_start":5,"column_end":80}},{"value":"/ to an [`Err`]. If this future resolves to an [`Ok`], panics, or is","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":97741,"byte_end":97811,"line_start":402,"line_end":402,"column_start":5,"column_end":75}},{"value":"/ dropped, then the provided closure will never be invoked. The","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":97816,"byte_end":97881,"line_start":403,"line_end":403,"column_start":5,"column_end":70}},{"value":"/ [`Ok`](TryFuture::Ok) type of this future and the future returned by `f`","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":97886,"byte_end":97962,"line_start":404,"line_end":404,"column_start":5,"column_end":81}},{"value":"/ have to match.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":97967,"byte_end":97985,"line_start":405,"line_end":405,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":97990,"byte_end":97993,"line_start":406,"line_end":406,"column_start":5,"column_end":8}},{"value":"/ Note that this method consumes the future it is called on and returns a","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":97998,"byte_end":98073,"line_start":407,"line_end":407,"column_start":5,"column_end":80}},{"value":"/ wrapped version of it.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":98078,"byte_end":98104,"line_start":408,"line_end":408,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":98109,"byte_end":98112,"line_start":409,"line_end":409,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":98117,"byte_end":98131,"line_start":410,"line_end":410,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":98136,"byte_end":98139,"line_start":411,"line_end":411,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":98144,"byte_end":98151,"line_start":412,"line_end":412,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":98156,"byte_end":98194,"line_start":413,"line_end":413,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":98199,"byte_end":98202,"line_start":414,"line_end":414,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":98207,"byte_end":98248,"line_start":415,"line_end":415,"column_start":5,"column_end":46}},{"value":"/ let future = async { Err::<i32, i32>(1) };","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":98253,"byte_end":98299,"line_start":416,"line_end":416,"column_start":5,"column_end":51}},{"value":"/ let future = future.or_else(|x| async move { Err::<i32, i32>(x + 3) });","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":98304,"byte_end":98379,"line_start":417,"line_end":417,"column_start":5,"column_end":80}},{"value":"/ assert_eq!(future.await, Err(4));","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":98384,"byte_end":98421,"line_start":418,"line_end":418,"column_start":5,"column_end":42}},{"value":"/ # });","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":98426,"byte_end":98435,"line_start":419,"line_end":419,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":98440,"byte_end":98447,"line_start":420,"line_end":420,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":98452,"byte_end":98455,"line_start":421,"line_end":421,"column_start":5,"column_end":8}},{"value":"/ Calling [`or_else`](TryFutureExt::or_else) on a successful future has","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":98460,"byte_end":98533,"line_start":422,"line_end":422,"column_start":5,"column_end":78}},{"value":"/ no effect:","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":98538,"byte_end":98552,"line_start":423,"line_end":423,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":98557,"byte_end":98560,"line_start":424,"line_end":424,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":98565,"byte_end":98572,"line_start":425,"line_end":425,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":98577,"byte_end":98615,"line_start":426,"line_end":426,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":98620,"byte_end":98623,"line_start":427,"line_end":427,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":98628,"byte_end":98669,"line_start":428,"line_end":428,"column_start":5,"column_end":46}},{"value":"/ let future = async { Ok::<i32, i32>(1) };","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":98674,"byte_end":98719,"line_start":429,"line_end":429,"column_start":5,"column_end":50}},{"value":"/ let future = future.or_else(|x| async move { Ok::<i32, i32>(x + 3) });","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":98724,"byte_end":98798,"line_start":430,"line_end":430,"column_start":5,"column_end":79}},{"value":"/ assert_eq!(future.await, Ok(1));","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":98803,"byte_end":98839,"line_start":431,"line_end":431,"column_start":5,"column_end":41}},{"value":"/ # });","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":98844,"byte_end":98853,"line_start":432,"line_end":432,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":98858,"byte_end":98865,"line_start":433,"line_end":433,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1009},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":99856,"byte_end":99866,"line_start":461,"line_end":461,"column_start":8,"column_end":18},"name":"inspect_ok","qualname":"::future::try_future::TryFutureExt::inspect_ok","value":"pub fn inspect_ok<F>(Self, F) -> InspectOk<Self, F> where F: FnOnce(&Self::Ok)\n-> (), Self: Sized","parent":{"krate":0,"index":986},"children":[],"decl_id":null,"docs":" Do something with the success value of a future before passing it on.","sig":null,"attributes":[{"value":"/ Do something with the success value of a future before passing it on.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":99129,"byte_end":99202,"line_start":443,"line_end":443,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":99207,"byte_end":99210,"line_start":444,"line_end":444,"column_start":5,"column_end":8}},{"value":"/ When using futures, you'll often chain several of them together.  While","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":99215,"byte_end":99290,"line_start":445,"line_end":445,"column_start":5,"column_end":80}},{"value":"/ working on such code, you might want to check out what's happening at","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":99295,"byte_end":99368,"line_start":446,"line_end":446,"column_start":5,"column_end":78}},{"value":"/ various parts in the pipeline, without consuming the intermediate","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":99373,"byte_end":99442,"line_start":447,"line_end":447,"column_start":5,"column_end":74}},{"value":"/ value. To do that, insert a call to `inspect_ok`.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":99447,"byte_end":99500,"line_start":448,"line_end":448,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":99505,"byte_end":99508,"line_start":449,"line_end":449,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":99513,"byte_end":99527,"line_start":450,"line_end":450,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":99532,"byte_end":99535,"line_start":451,"line_end":451,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":99540,"byte_end":99547,"line_start":452,"line_end":452,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":99552,"byte_end":99593,"line_start":453,"line_end":453,"column_start":5,"column_end":46}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":99598,"byte_end":99636,"line_start":454,"line_end":454,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":99641,"byte_end":99644,"line_start":455,"line_end":455,"column_start":5,"column_end":8}},{"value":"/ let future = async { Ok::<_, ()>(1) };","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":99649,"byte_end":99691,"line_start":456,"line_end":456,"column_start":5,"column_end":47}},{"value":"/ let new_future = future.inspect_ok(|&x| println!(\"about to resolve: {}\", x));","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":99696,"byte_end":99777,"line_start":457,"line_end":457,"column_start":5,"column_end":86}},{"value":"/ assert_eq!(new_future.await, Ok(1));","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":99782,"byte_end":99822,"line_start":458,"line_end":458,"column_start":5,"column_end":45}},{"value":"/ # });","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":99827,"byte_end":99836,"line_start":459,"line_end":459,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":99841,"byte_end":99848,"line_start":460,"line_end":460,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1011},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":100792,"byte_end":100803,"line_start":487,"line_end":487,"column_start":8,"column_end":19},"name":"inspect_err","qualname":"::future::try_future::TryFutureExt::inspect_err","value":"pub fn inspect_err<F>(Self, F) -> InspectErr<Self, F> where\nF: FnOnce(&Self::Error) -> (), Self: Sized","parent":{"krate":0,"index":986},"children":[],"decl_id":null,"docs":" Do something with the error value of a future before passing it on.","sig":null,"attributes":[{"value":"/ Do something with the error value of a future before passing it on.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":100065,"byte_end":100136,"line_start":469,"line_end":469,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":100141,"byte_end":100144,"line_start":470,"line_end":470,"column_start":5,"column_end":8}},{"value":"/ When using futures, you'll often chain several of them together.  While","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":100149,"byte_end":100224,"line_start":471,"line_end":471,"column_start":5,"column_end":80}},{"value":"/ working on such code, you might want to check out what's happening at","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":100229,"byte_end":100302,"line_start":472,"line_end":472,"column_start":5,"column_end":78}},{"value":"/ various parts in the pipeline, without consuming the intermediate","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":100307,"byte_end":100376,"line_start":473,"line_end":473,"column_start":5,"column_end":74}},{"value":"/ value. To do that, insert a call to `inspect_err`.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":100381,"byte_end":100435,"line_start":474,"line_end":474,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":100440,"byte_end":100443,"line_start":475,"line_end":475,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":100448,"byte_end":100462,"line_start":476,"line_end":476,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":100467,"byte_end":100470,"line_start":477,"line_end":477,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":100475,"byte_end":100482,"line_start":478,"line_end":478,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":100487,"byte_end":100528,"line_start":479,"line_end":479,"column_start":5,"column_end":46}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":100533,"byte_end":100571,"line_start":480,"line_end":480,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":100576,"byte_end":100579,"line_start":481,"line_end":481,"column_start":5,"column_end":8}},{"value":"/ let future = async { Err::<(), _>(1) };","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":100584,"byte_end":100627,"line_start":482,"line_end":482,"column_start":5,"column_end":48}},{"value":"/ let new_future = future.inspect_err(|&x| println!(\"about to error: {}\", x));","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":100632,"byte_end":100712,"line_start":483,"line_end":483,"column_start":5,"column_end":85}},{"value":"/ assert_eq!(new_future.await, Err(1));","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":100717,"byte_end":100758,"line_start":484,"line_end":484,"column_start":5,"column_end":46}},{"value":"/ # });","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":100763,"byte_end":100772,"line_start":485,"line_end":485,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":100777,"byte_end":100784,"line_start":486,"line_end":486,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1013},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":101188,"byte_end":101199,"line_start":499,"line_end":499,"column_start":8,"column_end":19},"name":"try_flatten","qualname":"::future::try_future::TryFutureExt::try_flatten","value":"pub fn try_flatten(Self) -> TryFlatten<Self, Self::Ok> where\nSelf::Ok: TryFuture<Error = Self::Error>, Self: Sized","parent":{"krate":0,"index":986},"children":[],"decl_id":null,"docs":" Flatten the execution of this future when the successful result of this\n future is another future.","sig":null,"attributes":[{"value":"/ Flatten the execution of this future when the successful result of this","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":101007,"byte_end":101082,"line_start":495,"line_end":495,"column_start":5,"column_end":80}},{"value":"/ future is another future.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":101087,"byte_end":101116,"line_start":496,"line_end":496,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":101121,"byte_end":101124,"line_start":497,"line_end":497,"column_start":5,"column_end":8}},{"value":"/ This is equivalent to `future.and_then(|x| x)`.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":101129,"byte_end":101180,"line_start":498,"line_end":498,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":1014},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":102378,"byte_end":102396,"line_start":532,"line_end":532,"column_start":8,"column_end":26},"name":"try_flatten_stream","qualname":"::future::try_future::TryFutureExt::try_flatten_stream","value":"pub fn try_flatten_stream(Self) -> TryFlattenStream<Self> where\nSelf::Ok: TryStream<Error = Self::Error>, Self: Sized","parent":{"krate":0,"index":986},"children":[],"decl_id":null,"docs":" Flatten the execution of this future when the successful result of this\n future is a stream.","sig":null,"attributes":[{"value":"/ Flatten the execution of this future when the successful result of this","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":101434,"byte_end":101509,"line_start":507,"line_end":507,"column_start":5,"column_end":80}},{"value":"/ future is a stream.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":101514,"byte_end":101537,"line_start":508,"line_end":508,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":101542,"byte_end":101545,"line_start":509,"line_end":509,"column_start":5,"column_end":8}},{"value":"/ This can be useful when stream initialization is deferred, and it is","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":101550,"byte_end":101622,"line_start":510,"line_end":510,"column_start":5,"column_end":77}},{"value":"/ convenient to work with that stream as if stream was available at the","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":101627,"byte_end":101700,"line_start":511,"line_end":511,"column_start":5,"column_end":78}},{"value":"/ call site.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":101705,"byte_end":101719,"line_start":512,"line_end":512,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":101724,"byte_end":101727,"line_start":513,"line_end":513,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes this future and returns a wrapped","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":101732,"byte_end":101802,"line_start":514,"line_end":514,"column_start":5,"column_end":75}},{"value":"/ version of it.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":101807,"byte_end":101825,"line_start":515,"line_end":515,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":101830,"byte_end":101833,"line_start":516,"line_end":516,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":101838,"byte_end":101852,"line_start":517,"line_end":517,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":101857,"byte_end":101860,"line_start":518,"line_end":518,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":101865,"byte_end":101872,"line_start":519,"line_end":519,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":101877,"byte_end":101918,"line_start":520,"line_end":520,"column_start":5,"column_end":46}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":101923,"byte_end":101961,"line_start":521,"line_end":521,"column_start":5,"column_end":43}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":101966,"byte_end":102012,"line_start":522,"line_end":522,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":102017,"byte_end":102020,"line_start":523,"line_end":523,"column_start":5,"column_end":8}},{"value":"/ let stream_items = vec![17, 18, 19].into_iter().map(Ok);","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":102025,"byte_end":102085,"line_start":524,"line_end":524,"column_start":5,"column_end":65}},{"value":"/ let future_of_a_stream = async { Ok::<_, ()>(stream::iter(stream_items)) };","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":102090,"byte_end":102169,"line_start":525,"line_end":525,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":102174,"byte_end":102177,"line_start":526,"line_end":526,"column_start":5,"column_end":8}},{"value":"/ let stream = future_of_a_stream.try_flatten_stream();","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":102182,"byte_end":102239,"line_start":527,"line_end":527,"column_start":5,"column_end":62}},{"value":"/ let list = stream.try_collect::<Vec<_>>().await;","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":102244,"byte_end":102296,"line_start":528,"line_end":528,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(list, Ok(vec![17, 18, 19]));","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":102301,"byte_end":102344,"line_start":529,"line_end":529,"column_start":5,"column_end":48}},{"value":"/ # });","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":102349,"byte_end":102358,"line_start":530,"line_end":530,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":102363,"byte_end":102370,"line_start":531,"line_end":531,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1015},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":103487,"byte_end":103501,"line_start":564,"line_end":564,"column_start":8,"column_end":22},"name":"unwrap_or_else","qualname":"::future::try_future::TryFutureExt::unwrap_or_else","value":"pub fn unwrap_or_else<F>(Self, F) -> UnwrapOrElse<Self, F> where Self: Sized,\nF: FnOnce(Self::Error) -> Self::Ok","parent":{"krate":0,"index":986},"children":[],"decl_id":null,"docs":" Unwraps this future's output, producing a future with this future's\n [`Ok`](TryFuture::Ok) type as its\n [`Output`](std::future::Future::Output) type.","sig":null,"attributes":[{"value":"/ Unwraps this future's output, producing a future with this future's","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":102656,"byte_end":102727,"line_start":542,"line_end":542,"column_start":5,"column_end":76}},{"value":"/ [`Ok`](TryFuture::Ok) type as its","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":102732,"byte_end":102769,"line_start":543,"line_end":543,"column_start":5,"column_end":42}},{"value":"/ [`Output`](std::future::Future::Output) type.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":102774,"byte_end":102823,"line_start":544,"line_end":544,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":102828,"byte_end":102831,"line_start":545,"line_end":545,"column_start":5,"column_end":8}},{"value":"/ If this future is resolved successfully, the returned future will","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":102836,"byte_end":102905,"line_start":546,"line_end":546,"column_start":5,"column_end":74}},{"value":"/ contain the original future's success value as output. Otherwise, the","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":102910,"byte_end":102983,"line_start":547,"line_end":547,"column_start":5,"column_end":78}},{"value":"/ closure `f` is called with the error value to produce an alternate","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":102988,"byte_end":103058,"line_start":548,"line_end":548,"column_start":5,"column_end":75}},{"value":"/ success value.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":103063,"byte_end":103081,"line_start":549,"line_end":549,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":103086,"byte_end":103089,"line_start":550,"line_end":550,"column_start":5,"column_end":8}},{"value":"/ This method is similar to the [`Result::unwrap_or_else`] method.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":103094,"byte_end":103162,"line_start":551,"line_end":551,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":103167,"byte_end":103170,"line_start":552,"line_end":552,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":103175,"byte_end":103189,"line_start":553,"line_end":553,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":103194,"byte_end":103197,"line_start":554,"line_end":554,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":103202,"byte_end":103209,"line_start":555,"line_end":555,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":103214,"byte_end":103252,"line_start":556,"line_end":556,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":103257,"byte_end":103260,"line_start":557,"line_end":557,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":103265,"byte_end":103306,"line_start":558,"line_end":558,"column_start":5,"column_end":46}},{"value":"/ let future = async { Err::<(), &str>(\"Boom!\") };","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":103311,"byte_end":103363,"line_start":559,"line_end":559,"column_start":5,"column_end":57}},{"value":"/ let future = future.unwrap_or_else(|_| ());","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":103368,"byte_end":103415,"line_start":560,"line_end":560,"column_start":5,"column_end":52}},{"value":"/ assert_eq!(future.await, ());","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":103420,"byte_end":103453,"line_start":561,"line_end":561,"column_start":5,"column_end":38}},{"value":"/ # });","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":103458,"byte_end":103467,"line_start":562,"line_end":562,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":103472,"byte_end":103479,"line_start":563,"line_end":563,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1017},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":104756,"byte_end":104767,"line_start":604,"line_end":604,"column_start":8,"column_end":19},"name":"into_future","qualname":"::future::try_future::TryFutureExt::into_future","value":"pub fn into_future(Self) -> IntoFuture<Self> where Self: Sized","parent":{"krate":0,"index":986},"children":[],"decl_id":null,"docs":" Wraps a [`TryFuture`] into a type that implements\n [`Future`](std::future::Future).","sig":null,"attributes":[{"value":"/ Wraps a [`TryFuture`] into a type that implements","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":104055,"byte_end":104108,"line_start":583,"line_end":583,"column_start":5,"column_end":58}},{"value":"/ [`Future`](std::future::Future).","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":104113,"byte_end":104149,"line_start":584,"line_end":584,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":104154,"byte_end":104157,"line_start":585,"line_end":585,"column_start":5,"column_end":8}},{"value":"/ [`TryFuture`]s currently do not implement the","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":104162,"byte_end":104211,"line_start":586,"line_end":586,"column_start":5,"column_end":54}},{"value":"/ [`Future`](std::future::Future) trait due to limitations of the","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":104216,"byte_end":104283,"line_start":587,"line_end":587,"column_start":5,"column_end":72}},{"value":"/ compiler.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":104288,"byte_end":104301,"line_start":588,"line_end":588,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":104306,"byte_end":104309,"line_start":589,"line_end":589,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":104314,"byte_end":104328,"line_start":590,"line_end":590,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":104333,"byte_end":104336,"line_start":591,"line_end":591,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":104341,"byte_end":104348,"line_start":592,"line_end":592,"column_start":5,"column_end":12}},{"value":"/ use futures::future::{Future, TryFuture, TryFutureExt};","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":104353,"byte_end":104412,"line_start":593,"line_end":593,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":104417,"byte_end":104420,"line_start":594,"line_end":594,"column_start":5,"column_end":8}},{"value":"/ # type T = i32;","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":104425,"byte_end":104444,"line_start":595,"line_end":595,"column_start":5,"column_end":24}},{"value":"/ # type E = ();","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":104449,"byte_end":104467,"line_start":596,"line_end":596,"column_start":5,"column_end":23}},{"value":"/ fn make_try_future() -> impl TryFuture<Ok = T, Error = E> { // ... }","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":104472,"byte_end":104544,"line_start":597,"line_end":597,"column_start":5,"column_end":77}},{"value":"/ # async { Ok::<i32, ()>(1) }","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":104549,"byte_end":104581,"line_start":598,"line_end":598,"column_start":5,"column_end":37}},{"value":"/ # }","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":104586,"byte_end":104593,"line_start":599,"line_end":599,"column_start":5,"column_end":12}},{"value":"/ fn take_future(future: impl Future<Output = Result<T, E>>) { /* ... */ }","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":104598,"byte_end":104674,"line_start":600,"line_end":600,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":104679,"byte_end":104682,"line_start":601,"line_end":601,"column_start":5,"column_end":8}},{"value":"/ take_future(make_try_future().into_future());","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":104687,"byte_end":104736,"line_start":602,"line_end":602,"column_start":5,"column_end":54}},{"value":"/ ```","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":104741,"byte_end":104748,"line_start":603,"line_end":603,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1018},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":105026,"byte_end":105040,"line_start":613,"line_end":613,"column_start":8,"column_end":22},"name":"try_poll_unpin","qualname":"::future::try_future::TryFutureExt::try_poll_unpin","value":"pub fn try_poll_unpin(&mut Self, &mut Context)\n-> Poll<Result<Self::Ok, Self::Error>> where Self: Unpin","parent":{"krate":0,"index":986},"children":[],"decl_id":null,"docs":" A convenience method for calling [`TryFuture::try_poll`] on [`Unpin`]\n future types.\n","sig":null,"attributes":[{"value":"/ A convenience method for calling [`TryFuture::try_poll`] on [`Unpin`]","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":104923,"byte_end":104996,"line_start":611,"line_end":611,"column_start":5,"column_end":78}},{"value":"/ future types.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":105001,"byte_end":105018,"line_start":612,"line_end":612,"column_start":5,"column_end":22}}]},{"kind":"Struct","id":{"krate":0,"index":9795},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/lazy.rs","byte_start":113209,"byte_end":113213,"line_start":9,"line_end":9,"column_start":12,"column_end":16},"name":"Lazy","qualname":"::future::lazy::Lazy","value":"Lazy {  }","parent":null,"children":[{"krate":0,"index":9797}],"decl_id":null,"docs":" Future for the [`lazy`] function.\n","sig":null,"attributes":[{"value":"/ Future for the [`lazy`] function.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/lazy.rs","byte_start":113075,"byte_end":113112,"line_start":6,"line_end":6,"column_start":1,"column_end":38}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/lazy.rs","byte_start":113130,"byte_end":113197,"line_start":8,"line_end":8,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":1088},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/lazy.rs","byte_start":113755,"byte_end":113759,"line_start":35,"line_end":35,"column_start":8,"column_end":12},"name":"lazy","qualname":"::future::lazy::lazy","value":"pub fn lazy<F, R>(F) -> Lazy<F> where F: FnOnce(&mut Context) -> R","parent":null,"children":[],"decl_id":null,"docs":" Creates a new future that allows delayed execution of a closure.","sig":null,"attributes":[{"value":"/ Creates a new future that allows delayed execution of a closure.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/lazy.rs","byte_start":113318,"byte_end":113386,"line_start":16,"line_end":16,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/lazy.rs","byte_start":113387,"byte_end":113390,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ The provided closure is only run once the future is polled.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/lazy.rs","byte_start":113391,"byte_end":113454,"line_start":18,"line_end":18,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/lazy.rs","byte_start":113455,"byte_end":113458,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/lazy.rs","byte_start":113459,"byte_end":113473,"line_start":20,"line_end":20,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/lazy.rs","byte_start":113474,"byte_end":113477,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/lazy.rs","byte_start":113478,"byte_end":113485,"line_start":22,"line_end":22,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/lazy.rs","byte_start":113486,"byte_end":113527,"line_start":23,"line_end":23,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/lazy.rs","byte_start":113528,"byte_end":113552,"line_start":24,"line_end":24,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/lazy.rs","byte_start":113553,"byte_end":113556,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ let a = future::lazy(|_| 1);","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/lazy.rs","byte_start":113557,"byte_end":113589,"line_start":26,"line_end":26,"column_start":1,"column_end":33}},{"value":"/ assert_eq!(a.await, 1);","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/lazy.rs","byte_start":113590,"byte_end":113617,"line_start":27,"line_end":27,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/lazy.rs","byte_start":113618,"byte_end":113621,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ let b = future::lazy(|_| -> i32 {","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/lazy.rs","byte_start":113622,"byte_end":113659,"line_start":29,"line_end":29,"column_start":1,"column_end":38}},{"value":"/     panic!(\"oh no!\")","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/lazy.rs","byte_start":113660,"byte_end":113684,"line_start":30,"line_end":30,"column_start":1,"column_end":25}},{"value":"/ });","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/lazy.rs","byte_start":113685,"byte_end":113692,"line_start":31,"line_end":31,"column_start":1,"column_end":8}},{"value":"/ drop(b); // closure is never run","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/lazy.rs","byte_start":113693,"byte_end":113729,"line_start":32,"line_end":32,"column_start":1,"column_end":37}},{"value":"/ # });","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/lazy.rs","byte_start":113730,"byte_end":113739,"line_start":33,"line_end":33,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/lazy.rs","byte_start":113740,"byte_end":113747,"line_start":34,"line_end":34,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":9801},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/pending.rs","byte_start":114586,"byte_end":114593,"line_start":10,"line_end":10,"column_start":12,"column_end":19},"name":"Pending","qualname":"::future::pending::Pending","value":"Pending {  }","parent":null,"children":[{"krate":0,"index":9803}],"decl_id":null,"docs":" Future for the [`pending()`] function.\n","sig":null,"attributes":[{"value":"/ Future for the [`pending()`] function.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/pending.rs","byte_start":114447,"byte_end":114489,"line_start":7,"line_end":7,"column_start":1,"column_end":43}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/pending.rs","byte_start":114507,"byte_end":114574,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":1134},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/pending.rs","byte_start":115112,"byte_end":115119,"line_start":36,"line_end":36,"column_start":8,"column_end":15},"name":"pending","qualname":"::future::pending::pending","value":"pub fn pending<T>() -> Pending<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a future which never resolves, representing a computation that never\n finishes.","sig":null,"attributes":[{"value":"/ Creates a future which never resolves, representing a computation that never","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/pending.rs","byte_start":114734,"byte_end":114814,"line_start":20,"line_end":20,"column_start":1,"column_end":81}},{"value":"/ finishes.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/pending.rs","byte_start":114815,"byte_end":114828,"line_start":21,"line_end":21,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/pending.rs","byte_start":114829,"byte_end":114832,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ The returned future will forever return [`Poll::Pending`].","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/pending.rs","byte_start":114833,"byte_end":114895,"line_start":23,"line_end":23,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/pending.rs","byte_start":114896,"byte_end":114899,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/pending.rs","byte_start":114900,"byte_end":114914,"line_start":25,"line_end":25,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/pending.rs","byte_start":114915,"byte_end":114918,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ ```ignore","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/pending.rs","byte_start":114919,"byte_end":114932,"line_start":27,"line_end":27,"column_start":1,"column_end":14}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/pending.rs","byte_start":114933,"byte_end":114974,"line_start":28,"line_end":28,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/pending.rs","byte_start":114975,"byte_end":114999,"line_start":29,"line_end":29,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/pending.rs","byte_start":115000,"byte_end":115003,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ let future = future::pending();","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/pending.rs","byte_start":115004,"byte_end":115039,"line_start":31,"line_end":31,"column_start":1,"column_end":36}},{"value":"/ let () = future.await;","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/pending.rs","byte_start":115040,"byte_end":115066,"line_start":32,"line_end":32,"column_start":1,"column_end":27}},{"value":"/ unreachable!();","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/pending.rs","byte_start":115067,"byte_end":115086,"line_start":33,"line_end":33,"column_start":1,"column_end":20}},{"value":"/ # });","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/pending.rs","byte_start":115087,"byte_end":115096,"line_start":34,"line_end":34,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/pending.rs","byte_start":115097,"byte_end":115104,"line_start":35,"line_end":35,"column_start":1,"column_end":8}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9809},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/maybe_done.rs","byte_start":115891,"byte_end":115897,"line_start":16,"line_end":16,"column_start":5,"column_end":11},"name":"Future","qualname":"::future::maybe_done::MaybeDone::Future","value":"MaybeDone::Future(Fut)","parent":{"krate":0,"index":9807},"children":[],"decl_id":null,"docs":" A not-yet-completed future\n","sig":null,"attributes":[{"value":"/ A not-yet-completed future","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/maybe_done.rs","byte_start":115856,"byte_end":115886,"line_start":15,"line_end":15,"column_start":5,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9812},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/maybe_done.rs","byte_start":115964,"byte_end":115968,"line_start":18,"line_end":18,"column_start":5,"column_end":9},"name":"Done","qualname":"::future::maybe_done::MaybeDone::Done","value":"MaybeDone::Done(Fut::Output)","parent":{"krate":0,"index":9807},"children":[],"decl_id":null,"docs":" The output of the completed future\n","sig":null,"attributes":[{"value":"/ The output of the completed future","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/maybe_done.rs","byte_start":115921,"byte_end":115959,"line_start":17,"line_end":17,"column_start":5,"column_end":43}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9815},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/maybe_done.rs","byte_start":116130,"byte_end":116134,"line_start":21,"line_end":21,"column_start":5,"column_end":9},"name":"Gone","qualname":"::future::maybe_done::MaybeDone::Gone","value":"MaybeDone::Gone","parent":{"krate":0,"index":9807},"children":[],"decl_id":null,"docs":" The empty variant after the result of a [`MaybeDone`] has been\n taken using the [`take_output`](MaybeDone::take_output) method.\n","sig":null,"attributes":[{"value":"/ The empty variant after the result of a [`MaybeDone`] has been","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/maybe_done.rs","byte_start":115987,"byte_end":116053,"line_start":19,"line_end":19,"column_start":5,"column_end":71}},{"value":"/ taken using the [`take_output`](MaybeDone::take_output) method.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/maybe_done.rs","byte_start":116058,"byte_end":116125,"line_start":20,"line_end":20,"column_start":5,"column_end":72}}]},{"kind":"Enum","id":{"krate":0,"index":9807},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/maybe_done.rs","byte_start":115827,"byte_end":115836,"line_start":14,"line_end":14,"column_start":10,"column_end":19},"name":"MaybeDone","qualname":"::future::maybe_done::MaybeDone","value":"pub enum MaybeDone<Fut: Future> { Future(Fut), Done(Fut::Output), Gone, }","parent":null,"children":[{"krate":0,"index":9809},{"krate":0,"index":9812},{"krate":0,"index":9815}],"decl_id":null,"docs":" A future that may have completed.","sig":null,"attributes":[{"value":"/ A future that may have completed.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/maybe_done.rs","byte_start":115705,"byte_end":115742,"line_start":10,"line_end":10,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/maybe_done.rs","byte_start":115743,"byte_end":115746,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ This is created by the [`maybe_done()`] function.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/maybe_done.rs","byte_start":115747,"byte_end":115800,"line_start":12,"line_end":12,"column_start":1,"column_end":54}}]},{"kind":"Function","id":{"krate":0,"index":1181},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/maybe_done.rs","byte_start":116655,"byte_end":116665,"line_start":43,"line_end":43,"column_start":8,"column_end":18},"name":"maybe_done","qualname":"::future::maybe_done::maybe_done","value":"pub fn maybe_done<Fut: Future>(Fut) -> MaybeDone<Fut>","parent":null,"children":[],"decl_id":null,"docs":" Wraps a future into a `MaybeDone`","sig":null,"attributes":[{"value":"/ Wraps a future into a `MaybeDone`","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/maybe_done.rs","byte_start":116194,"byte_end":116231,"line_start":26,"line_end":26,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/maybe_done.rs","byte_start":116232,"byte_end":116235,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/maybe_done.rs","byte_start":116236,"byte_end":116250,"line_start":28,"line_end":28,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/maybe_done.rs","byte_start":116251,"byte_end":116254,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/maybe_done.rs","byte_start":116255,"byte_end":116262,"line_start":30,"line_end":30,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/maybe_done.rs","byte_start":116263,"byte_end":116304,"line_start":31,"line_end":31,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/maybe_done.rs","byte_start":116305,"byte_end":116329,"line_start":32,"line_end":32,"column_start":1,"column_end":25}},{"value":"/ use futures::pin_mut;","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/maybe_done.rs","byte_start":116330,"byte_end":116355,"line_start":33,"line_end":33,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/maybe_done.rs","byte_start":116356,"byte_end":116359,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ let future = future::maybe_done(async { 5 });","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/maybe_done.rs","byte_start":116360,"byte_end":116409,"line_start":35,"line_end":35,"column_start":1,"column_end":50}},{"value":"/ pin_mut!(future);","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/maybe_done.rs","byte_start":116410,"byte_end":116431,"line_start":36,"line_end":36,"column_start":1,"column_end":22}},{"value":"/ assert_eq!(future.as_mut().take_output(), None);","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/maybe_done.rs","byte_start":116432,"byte_end":116484,"line_start":37,"line_end":37,"column_start":1,"column_end":53}},{"value":"/ let () = future.as_mut().await;","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/maybe_done.rs","byte_start":116485,"byte_end":116520,"line_start":38,"line_end":38,"column_start":1,"column_end":36}},{"value":"/ assert_eq!(future.as_mut().take_output(), Some(5));","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/maybe_done.rs","byte_start":116521,"byte_end":116576,"line_start":39,"line_end":39,"column_start":1,"column_end":56}},{"value":"/ assert_eq!(future.as_mut().take_output(), None);","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/maybe_done.rs","byte_start":116577,"byte_end":116629,"line_start":40,"line_end":40,"column_start":1,"column_end":53}},{"value":"/ # });","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/maybe_done.rs","byte_start":116630,"byte_end":116639,"line_start":41,"line_end":41,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/maybe_done.rs","byte_start":116640,"byte_end":116647,"line_start":42,"line_end":42,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":1185},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/maybe_done.rs","byte_start":117106,"byte_end":117116,"line_start":53,"line_end":53,"column_start":12,"column_end":22},"name":"output_mut","qualname":"<MaybeDone<Fut>>::output_mut","value":"pub fn output_mut(Pin<&mut Self>) -> Option<&mut Fut::Output>","parent":null,"children":[],"decl_id":null,"docs":" Returns an [`Option`] containing a mutable reference to the output of the future.\n The output of this method will be [`Some`] if and only if the inner\n future has been completed and [`take_output`](MaybeDone::take_output)\n has not yet been called.\n","sig":null,"attributes":[{"value":"/ Returns an [`Option`] containing a mutable reference to the output of the future.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/maybe_done.rs","byte_start":116808,"byte_end":116893,"line_start":48,"line_end":48,"column_start":5,"column_end":90}},{"value":"/ The output of this method will be [`Some`] if and only if the inner","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/maybe_done.rs","byte_start":116898,"byte_end":116969,"line_start":49,"line_end":49,"column_start":5,"column_end":76}},{"value":"/ future has been completed and [`take_output`](MaybeDone::take_output)","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/maybe_done.rs","byte_start":116974,"byte_end":117047,"line_start":50,"line_end":50,"column_start":5,"column_end":78}},{"value":"/ has not yet been called.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/maybe_done.rs","byte_start":117052,"byte_end":117080,"line_start":51,"line_end":51,"column_start":5,"column_end":33}},{"value":"inline","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/maybe_done.rs","byte_start":117085,"byte_end":117094,"line_start":52,"line_end":52,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1186},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/maybe_done.rs","byte_start":117464,"byte_end":117475,"line_start":65,"line_end":65,"column_start":12,"column_end":23},"name":"take_output","qualname":"<MaybeDone<Fut>>::take_output","value":"pub fn take_output(Pin<&mut Self>) -> Option<Fut::Output>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to take the output of a `MaybeDone` without driving it\n towards completion.\n","sig":null,"attributes":[{"value":"/ Attempt to take the output of a `MaybeDone` without driving it","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/maybe_done.rs","byte_start":117344,"byte_end":117410,"line_start":62,"line_end":62,"column_start":5,"column_end":71}},{"value":"/ towards completion.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/maybe_done.rs","byte_start":117415,"byte_end":117438,"line_start":63,"line_end":63,"column_start":5,"column_end":28}},{"value":"inline","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/maybe_done.rs","byte_start":117443,"byte_end":117452,"line_start":64,"line_end":64,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9822},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_maybe_done.rs","byte_start":119100,"byte_end":119106,"line_start":16,"line_end":16,"column_start":5,"column_end":11},"name":"Future","qualname":"::future::try_maybe_done::TryMaybeDone::Future","value":"TryMaybeDone::Future(Fut)","parent":{"krate":0,"index":9820},"children":[],"decl_id":null,"docs":" A not-yet-completed future\n","sig":null,"attributes":[{"value":"/ A not-yet-completed future","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_maybe_done.rs","byte_start":119065,"byte_end":119095,"line_start":15,"line_end":15,"column_start":5,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9825},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_maybe_done.rs","byte_start":119173,"byte_end":119177,"line_start":18,"line_end":18,"column_start":5,"column_end":9},"name":"Done","qualname":"::future::try_maybe_done::TryMaybeDone::Done","value":"TryMaybeDone::Done(Fut::Ok)","parent":{"krate":0,"index":9820},"children":[],"decl_id":null,"docs":" The output of the completed future\n","sig":null,"attributes":[{"value":"/ The output of the completed future","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_maybe_done.rs","byte_start":119130,"byte_end":119168,"line_start":17,"line_end":17,"column_start":5,"column_end":43}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9828},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_maybe_done.rs","byte_start":119385,"byte_end":119389,"line_start":22,"line_end":22,"column_start":5,"column_end":9},"name":"Gone","qualname":"::future::try_maybe_done::TryMaybeDone::Gone","value":"TryMaybeDone::Gone","parent":{"krate":0,"index":9820},"children":[],"decl_id":null,"docs":" The empty variant after the result of a [`TryMaybeDone`] has been\n taken using the [`take_output`](TryMaybeDone::take_output) method,\n or if the future returned an error.\n","sig":null,"attributes":[{"value":"/ The empty variant after the result of a [`TryMaybeDone`] has been","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_maybe_done.rs","byte_start":119192,"byte_end":119261,"line_start":19,"line_end":19,"column_start":5,"column_end":74}},{"value":"/ taken using the [`take_output`](TryMaybeDone::take_output) method,","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_maybe_done.rs","byte_start":119266,"byte_end":119336,"line_start":20,"line_end":20,"column_start":5,"column_end":75}},{"value":"/ or if the future returned an error.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_maybe_done.rs","byte_start":119341,"byte_end":119380,"line_start":21,"line_end":21,"column_start":5,"column_end":44}}]},{"kind":"Enum","id":{"krate":0,"index":9820},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_maybe_done.rs","byte_start":119030,"byte_end":119042,"line_start":14,"line_end":14,"column_start":10,"column_end":22},"name":"TryMaybeDone","qualname":"::future::try_maybe_done::TryMaybeDone","value":"pub enum TryMaybeDone<Fut: TryFuture> { Future(Fut), Done(Fut::Ok), Gone, }","parent":null,"children":[{"krate":0,"index":9822},{"krate":0,"index":9825},{"krate":0,"index":9828}],"decl_id":null,"docs":" A future that may have completed with an error.","sig":null,"attributes":[{"value":"/ A future that may have completed with an error.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_maybe_done.rs","byte_start":118890,"byte_end":118941,"line_start":10,"line_end":10,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_maybe_done.rs","byte_start":118942,"byte_end":118945,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ This is created by the [`try_maybe_done()`] function.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_maybe_done.rs","byte_start":118946,"byte_end":119003,"line_start":12,"line_end":12,"column_start":1,"column_end":58}}]},{"kind":"Function","id":{"krate":0,"index":1233},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_maybe_done.rs","byte_start":119503,"byte_end":119517,"line_start":28,"line_end":28,"column_start":8,"column_end":22},"name":"try_maybe_done","qualname":"::future::try_maybe_done::try_maybe_done","value":"pub fn try_maybe_done<Fut: TryFuture>(Fut) -> TryMaybeDone<Fut>","parent":null,"children":[],"decl_id":null,"docs":" Wraps a future into a `TryMaybeDone`\n","sig":null,"attributes":[{"value":"/ Wraps a future into a `TryMaybeDone`","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_maybe_done.rs","byte_start":119455,"byte_end":119495,"line_start":27,"line_end":27,"column_start":1,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":1237},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_maybe_done.rs","byte_start":120004,"byte_end":120014,"line_start":38,"line_end":38,"column_start":12,"column_end":22},"name":"output_mut","qualname":"<TryMaybeDone<Fut>>::output_mut","value":"pub fn output_mut(Pin<&mut Self>) -> Option<&mut Fut::Ok>","parent":null,"children":[],"decl_id":null,"docs":" Returns an [`Option`] containing a mutable reference to the output of the future.\n The output of this method will be [`Some`] if and only if the inner\n future has completed successfully and [`take_output`](TryMaybeDone::take_output)\n has not yet been called.\n","sig":null,"attributes":[{"value":"/ Returns an [`Option`] containing a mutable reference to the output of the future.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_maybe_done.rs","byte_start":119695,"byte_end":119780,"line_start":33,"line_end":33,"column_start":5,"column_end":90}},{"value":"/ The output of this method will be [`Some`] if and only if the inner","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_maybe_done.rs","byte_start":119785,"byte_end":119856,"line_start":34,"line_end":34,"column_start":5,"column_end":76}},{"value":"/ future has completed successfully and [`take_output`](TryMaybeDone::take_output)","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_maybe_done.rs","byte_start":119861,"byte_end":119945,"line_start":35,"line_end":35,"column_start":5,"column_end":89}},{"value":"/ has not yet been called.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_maybe_done.rs","byte_start":119950,"byte_end":119978,"line_start":36,"line_end":36,"column_start":5,"column_end":33}},{"value":"inline","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_maybe_done.rs","byte_start":119983,"byte_end":119992,"line_start":37,"line_end":37,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1238},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_maybe_done.rs","byte_start":120364,"byte_end":120375,"line_start":50,"line_end":50,"column_start":12,"column_end":23},"name":"take_output","qualname":"<TryMaybeDone<Fut>>::take_output","value":"pub fn take_output(Pin<&mut Self>) -> Option<Fut::Ok>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to take the output of a `TryMaybeDone` without driving it\n towards completion.\n","sig":null,"attributes":[{"value":"/ Attempt to take the output of a `TryMaybeDone` without driving it","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_maybe_done.rs","byte_start":120241,"byte_end":120310,"line_start":47,"line_end":47,"column_start":5,"column_end":74}},{"value":"/ towards completion.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_maybe_done.rs","byte_start":120315,"byte_end":120338,"line_start":48,"line_end":48,"column_start":5,"column_end":28}},{"value":"inline","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_maybe_done.rs","byte_start":120343,"byte_end":120352,"line_start":49,"line_end":49,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":9838},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/option.rs","byte_start":122586,"byte_end":122598,"line_start":28,"line_end":28,"column_start":16,"column_end":28},"name":"OptionFuture","qualname":"::future::option::OptionFuture","value":"OptionFuture {  }","parent":null,"children":[{"krate":0,"index":9840}],"decl_id":null,"docs":" A future representing a value which may or may not be present.","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":12561792,"byte_end":12561801,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":1307},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/poll_fn.rs","byte_start":123613,"byte_end":123619,"line_start":11,"line_end":11,"column_start":12,"column_end":18},"name":"PollFn","qualname":"::future::poll_fn::PollFn","value":"PollFn {  }","parent":null,"children":[{"krate":0,"index":1309}],"decl_id":null,"docs":" Future for the [`poll_fn`] function.\n","sig":null,"attributes":[{"value":"/ Future for the [`poll_fn`] function.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/poll_fn.rs","byte_start":123493,"byte_end":123533,"line_start":9,"line_end":9,"column_start":1,"column_end":41}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/poll_fn.rs","byte_start":123534,"byte_end":123601,"line_start":10,"line_end":10,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":1312},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/poll_fn.rs","byte_start":124206,"byte_end":124213,"line_start":36,"line_end":36,"column_start":8,"column_end":15},"name":"poll_fn","qualname":"::future::poll_fn::poll_fn","value":"pub fn poll_fn<T, F>(F) -> PollFn<F> where F: FnMut(&mut Context) -> Poll<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new future wrapping around a function returning [`Poll`].","sig":null,"attributes":[{"value":"/ Creates a new future wrapping around a function returning [`Poll`].","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/poll_fn.rs","byte_start":123670,"byte_end":123741,"line_start":17,"line_end":17,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/poll_fn.rs","byte_start":123742,"byte_end":123745,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ Polling the returned future delegates to the wrapped function.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/poll_fn.rs","byte_start":123746,"byte_end":123812,"line_start":19,"line_end":19,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/poll_fn.rs","byte_start":123813,"byte_end":123816,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/poll_fn.rs","byte_start":123817,"byte_end":123831,"line_start":21,"line_end":21,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/poll_fn.rs","byte_start":123832,"byte_end":123835,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/poll_fn.rs","byte_start":123836,"byte_end":123843,"line_start":23,"line_end":23,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/poll_fn.rs","byte_start":123844,"byte_end":123885,"line_start":24,"line_end":24,"column_start":1,"column_end":42}},{"value":"/ use futures::future::poll_fn;","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/poll_fn.rs","byte_start":123886,"byte_end":123919,"line_start":25,"line_end":25,"column_start":1,"column_end":34}},{"value":"/ use futures::task::{Context, Poll};","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/poll_fn.rs","byte_start":123920,"byte_end":123959,"line_start":26,"line_end":26,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/poll_fn.rs","byte_start":123960,"byte_end":123963,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ fn read_line(_cx: &mut Context<'_>) -> Poll<String> {","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/poll_fn.rs","byte_start":123964,"byte_end":124021,"line_start":28,"line_end":28,"column_start":1,"column_end":58}},{"value":"/     Poll::Ready(\"Hello, World!\".into())","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/poll_fn.rs","byte_start":124022,"byte_end":124065,"line_start":29,"line_end":29,"column_start":1,"column_end":44}},{"value":"/ }","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/poll_fn.rs","byte_start":124066,"byte_end":124071,"line_start":30,"line_end":30,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/poll_fn.rs","byte_start":124072,"byte_end":124075,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ let read_future = poll_fn(read_line);","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/poll_fn.rs","byte_start":124076,"byte_end":124117,"line_start":32,"line_end":32,"column_start":1,"column_end":42}},{"value":"/ assert_eq!(read_future.await, \"Hello, World!\".to_owned());","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/poll_fn.rs","byte_start":124118,"byte_end":124180,"line_start":33,"line_end":33,"column_start":1,"column_end":63}},{"value":"/ # });","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/poll_fn.rs","byte_start":124181,"byte_end":124190,"line_start":34,"line_end":34,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/poll_fn.rs","byte_start":124191,"byte_end":124198,"line_start":35,"line_end":35,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":9872},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/ready.rs","byte_start":124983,"byte_end":124988,"line_start":9,"line_end":9,"column_start":12,"column_end":17},"name":"Ready","qualname":"::future::ready::Ready","value":"","parent":null,"children":[],"decl_id":null,"docs":" Future for the [`ready`](ready()) function.\n","sig":null,"attributes":[{"value":"/ Future for the [`ready`](ready()) function.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/ready.rs","byte_start":124832,"byte_end":124879,"line_start":6,"line_end":6,"column_start":1,"column_end":48}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/ready.rs","byte_start":124904,"byte_end":124971,"line_start":8,"line_end":8,"column_start":1,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":1353},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/ready.rs","byte_start":125111,"byte_end":125121,"line_start":14,"line_end":14,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Ready<T>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Unwraps the value from this immediately ready future.\n","sig":null,"attributes":[{"value":"/ Unwraps the value from this immediately ready future.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/ready.rs","byte_start":125028,"byte_end":125085,"line_start":12,"line_end":12,"column_start":5,"column_end":62}},{"value":"inline","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/ready.rs","byte_start":125090,"byte_end":125099,"line_start":13,"line_end":13,"column_start":5,"column_end":14}}]},{"kind":"Function","id":{"krate":0,"index":1363},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/ready.rs","byte_start":125787,"byte_end":125792,"line_start":48,"line_end":48,"column_start":8,"column_end":13},"name":"ready","qualname":"::future::ready::ready","value":"pub fn ready<T>(T) -> Ready<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a future that is immediately ready with a value.","sig":null,"attributes":[{"value":"/ Creates a future that is immediately ready with a value.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/ready.rs","byte_start":125541,"byte_end":125601,"line_start":36,"line_end":36,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/ready.rs","byte_start":125602,"byte_end":125605,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/ready.rs","byte_start":125606,"byte_end":125620,"line_start":38,"line_end":38,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/ready.rs","byte_start":125621,"byte_end":125624,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/ready.rs","byte_start":125625,"byte_end":125632,"line_start":40,"line_end":40,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/ready.rs","byte_start":125633,"byte_end":125674,"line_start":41,"line_end":41,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/ready.rs","byte_start":125675,"byte_end":125699,"line_start":42,"line_end":42,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/ready.rs","byte_start":125700,"byte_end":125703,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ let a = future::ready(1);","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/ready.rs","byte_start":125704,"byte_end":125733,"line_start":44,"line_end":44,"column_start":1,"column_end":30}},{"value":"/ assert_eq!(a.await, 1);","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/ready.rs","byte_start":125734,"byte_end":125761,"line_start":45,"line_end":45,"column_start":1,"column_end":28}},{"value":"/ # });","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/ready.rs","byte_start":125762,"byte_end":125771,"line_start":46,"line_end":46,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/ready.rs","byte_start":125772,"byte_end":125779,"line_start":47,"line_end":47,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1365},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/ready.rs","byte_start":126127,"byte_end":126129,"line_start":64,"line_end":64,"column_start":8,"column_end":10},"name":"ok","qualname":"::future::ready::ok","value":"pub fn ok<T, E>(T) -> Ready<Result<T, E>>","parent":null,"children":[],"decl_id":null,"docs":" Create a future that is immediately ready with a success value.","sig":null,"attributes":[{"value":"/ Create a future that is immediately ready with a success value.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/ready.rs","byte_start":125861,"byte_end":125928,"line_start":52,"line_end":52,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/ready.rs","byte_start":125929,"byte_end":125932,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/ready.rs","byte_start":125933,"byte_end":125947,"line_start":54,"line_end":54,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/ready.rs","byte_start":125948,"byte_end":125951,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/ready.rs","byte_start":125952,"byte_end":125959,"line_start":56,"line_end":56,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/ready.rs","byte_start":125960,"byte_end":126001,"line_start":57,"line_end":57,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/ready.rs","byte_start":126002,"byte_end":126026,"line_start":58,"line_end":58,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/ready.rs","byte_start":126027,"byte_end":126030,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ let a = future::ok::<i32, i32>(1);","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/ready.rs","byte_start":126031,"byte_end":126069,"line_start":60,"line_end":60,"column_start":1,"column_end":39}},{"value":"/ assert_eq!(a.await, Ok(1));","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/ready.rs","byte_start":126070,"byte_end":126101,"line_start":61,"line_end":61,"column_start":1,"column_end":32}},{"value":"/ # });","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/ready.rs","byte_start":126102,"byte_end":126111,"line_start":62,"line_end":62,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/ready.rs","byte_start":126112,"byte_end":126119,"line_start":63,"line_end":63,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1368},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/ready.rs","byte_start":126460,"byte_end":126463,"line_start":80,"line_end":80,"column_start":8,"column_end":11},"name":"err","qualname":"::future::ready::err","value":"pub fn err<T, E>(E) -> Ready<Result<T, E>>","parent":null,"children":[],"decl_id":null,"docs":" Create a future that is immediately ready with an error value.","sig":null,"attributes":[{"value":"/ Create a future that is immediately ready with an error value.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/ready.rs","byte_start":126193,"byte_end":126259,"line_start":68,"line_end":68,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/ready.rs","byte_start":126260,"byte_end":126263,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/ready.rs","byte_start":126264,"byte_end":126278,"line_start":70,"line_end":70,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/ready.rs","byte_start":126279,"byte_end":126282,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/ready.rs","byte_start":126283,"byte_end":126290,"line_start":72,"line_end":72,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/ready.rs","byte_start":126291,"byte_end":126332,"line_start":73,"line_end":73,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/ready.rs","byte_start":126333,"byte_end":126357,"line_start":74,"line_end":74,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/ready.rs","byte_start":126358,"byte_end":126361,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ let a = future::err::<i32, i32>(1);","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/ready.rs","byte_start":126362,"byte_end":126401,"line_start":76,"line_end":76,"column_start":1,"column_end":40}},{"value":"/ assert_eq!(a.await, Err(1));","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/ready.rs","byte_start":126402,"byte_end":126434,"line_start":77,"line_end":77,"column_start":1,"column_end":33}},{"value":"/ # });","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/ready.rs","byte_start":126435,"byte_end":126444,"line_start":78,"line_end":78,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/ready.rs","byte_start":126445,"byte_end":126452,"line_start":79,"line_end":79,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":9974},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join.rs","byte_start":128749,"byte_end":128753,"line_start":78,"line_end":78,"column_start":6,"column_end":10},"name":"Join","qualname":"::future::join::Join","value":"Join {  }","parent":null,"children":[{"krate":0,"index":9977},{"krate":0,"index":9978}],"decl_id":null,"docs":" Future for the [`join`](join()) function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":12561792,"byte_end":12561801,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":10019},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join.rs","byte_start":128819,"byte_end":128824,"line_start":81,"line_end":81,"column_start":6,"column_end":11},"name":"Join3","qualname":"::future::join::Join3","value":"Join3 {  }","parent":null,"children":[{"krate":0,"index":10023},{"krate":0,"index":10024},{"krate":0,"index":10025}],"decl_id":null,"docs":" Future for the [`join3`] function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":12561792,"byte_end":12561801,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":10076},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join.rs","byte_start":128896,"byte_end":128901,"line_start":84,"line_end":84,"column_start":6,"column_end":11},"name":"Join4","qualname":"::future::join::Join4","value":"Join4 {  }","parent":null,"children":[{"krate":0,"index":10081},{"krate":0,"index":10082},{"krate":0,"index":10083},{"krate":0,"index":10084}],"decl_id":null,"docs":" Future for the [`join4`] function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":12561792,"byte_end":12561801,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":10145},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join.rs","byte_start":128979,"byte_end":128984,"line_start":87,"line_end":87,"column_start":6,"column_end":11},"name":"Join5","qualname":"::future::join::Join5","value":"Join5 {  }","parent":null,"children":[{"krate":0,"index":10151},{"krate":0,"index":10152},{"krate":0,"index":10153},{"krate":0,"index":10154},{"krate":0,"index":10155}],"decl_id":null,"docs":" Future for the [`join5`] function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":12561792,"byte_end":12561801,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":1419},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join.rs","byte_start":129599,"byte_end":129603,"line_start":111,"line_end":111,"column_start":8,"column_end":12},"name":"join","qualname":"::future::join::join","value":"pub fn join<Fut1, Fut2>(Fut1, Fut2) -> Join<Fut1, Fut2> where Fut1: Future,\nFut2: Future","parent":null,"children":[],"decl_id":null,"docs":" Joins the result of two futures, waiting for them both to complete.","sig":null,"attributes":[{"value":"/ Joins the result of two futures, waiting for them both to complete.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join.rs","byte_start":129022,"byte_end":129093,"line_start":90,"line_end":90,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join.rs","byte_start":129094,"byte_end":129097,"line_start":91,"line_end":91,"column_start":1,"column_end":4}},{"value":"/ This function will return a new future which awaits both futures to","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join.rs","byte_start":129098,"byte_end":129169,"line_start":92,"line_end":92,"column_start":1,"column_end":72}},{"value":"/ complete. The returned future will finish with a tuple of both results.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join.rs","byte_start":129170,"byte_end":129245,"line_start":93,"line_end":93,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join.rs","byte_start":129246,"byte_end":129249,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/ Note that this function consumes the passed futures and returns a","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join.rs","byte_start":129250,"byte_end":129319,"line_start":95,"line_end":95,"column_start":1,"column_end":70}},{"value":"/ wrapped version of it.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join.rs","byte_start":129320,"byte_end":129346,"line_start":96,"line_end":96,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join.rs","byte_start":129347,"byte_end":129350,"line_start":97,"line_end":97,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join.rs","byte_start":129351,"byte_end":129365,"line_start":98,"line_end":98,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join.rs","byte_start":129366,"byte_end":129369,"line_start":99,"line_end":99,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join.rs","byte_start":129370,"byte_end":129377,"line_start":100,"line_end":100,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join.rs","byte_start":129378,"byte_end":129419,"line_start":101,"line_end":101,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join.rs","byte_start":129420,"byte_end":129444,"line_start":102,"line_end":102,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join.rs","byte_start":129445,"byte_end":129448,"line_start":103,"line_end":103,"column_start":1,"column_end":4}},{"value":"/ let a = async { 1 };","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join.rs","byte_start":129449,"byte_end":129473,"line_start":104,"line_end":104,"column_start":1,"column_end":25}},{"value":"/ let b = async { 2 };","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join.rs","byte_start":129474,"byte_end":129498,"line_start":105,"line_end":105,"column_start":1,"column_end":25}},{"value":"/ let pair = future::join(a, b);","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join.rs","byte_start":129499,"byte_end":129533,"line_start":106,"line_end":106,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join.rs","byte_start":129534,"byte_end":129537,"line_start":107,"line_end":107,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(pair.await, (1, 2));","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join.rs","byte_start":129538,"byte_end":129573,"line_start":108,"line_end":108,"column_start":1,"column_end":36}},{"value":"/ # });","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join.rs","byte_start":129574,"byte_end":129583,"line_start":109,"line_end":109,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join.rs","byte_start":129584,"byte_end":129591,"line_start":110,"line_end":110,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1422},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join.rs","byte_start":130149,"byte_end":130154,"line_start":136,"line_end":136,"column_start":8,"column_end":13},"name":"join3","qualname":"::future::join::join3","value":"pub fn join3<Fut1, Fut2, Fut3>(Fut1, Fut2, Fut3) -> Join3<Fut1, Fut2, Fut3>\nwhere Fut1: Future, Fut2: Future, Fut3: Future","parent":null,"children":[],"decl_id":null,"docs":" Same as [`join`](join()), but with more futures.","sig":null,"attributes":[{"value":"/ Same as [`join`](join()), but with more futures.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join.rs","byte_start":129810,"byte_end":129862,"line_start":120,"line_end":120,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join.rs","byte_start":129863,"byte_end":129866,"line_start":121,"line_end":121,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join.rs","byte_start":129867,"byte_end":129881,"line_start":122,"line_end":122,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join.rs","byte_start":129882,"byte_end":129885,"line_start":123,"line_end":123,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join.rs","byte_start":129886,"byte_end":129893,"line_start":124,"line_end":124,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join.rs","byte_start":129894,"byte_end":129935,"line_start":125,"line_end":125,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join.rs","byte_start":129936,"byte_end":129960,"line_start":126,"line_end":126,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join.rs","byte_start":129961,"byte_end":129964,"line_start":127,"line_end":127,"column_start":1,"column_end":4}},{"value":"/ let a = async { 1 };","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join.rs","byte_start":129965,"byte_end":129989,"line_start":128,"line_end":128,"column_start":1,"column_end":25}},{"value":"/ let b = async { 2 };","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join.rs","byte_start":129990,"byte_end":130014,"line_start":129,"line_end":129,"column_start":1,"column_end":25}},{"value":"/ let c = async { 3 };","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join.rs","byte_start":130015,"byte_end":130039,"line_start":130,"line_end":130,"column_start":1,"column_end":25}},{"value":"/ let tuple = future::join3(a, b, c);","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join.rs","byte_start":130040,"byte_end":130079,"line_start":131,"line_end":131,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join.rs","byte_start":130080,"byte_end":130083,"line_start":132,"line_end":132,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(tuple.await, (1, 2, 3));","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join.rs","byte_start":130084,"byte_end":130123,"line_start":133,"line_end":133,"column_start":1,"column_end":40}},{"value":"/ # });","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join.rs","byte_start":130124,"byte_end":130133,"line_start":134,"line_end":134,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join.rs","byte_start":130134,"byte_end":130141,"line_start":135,"line_end":135,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1426},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join.rs","byte_start":130816,"byte_end":130821,"line_start":167,"line_end":167,"column_start":8,"column_end":13},"name":"join4","qualname":"::future::join::join4","value":"pub fn join4<Fut1, Fut2, Fut3, Fut4>(Fut1, Fut2, Fut3, Fut4)\n-> Join4<Fut1, Fut2, Fut3, Fut4> where Fut1: Future, Fut2: Future,\nFut3: Future, Fut4: Future","parent":null,"children":[],"decl_id":null,"docs":" Same as [`join`](join()), but with more futures.","sig":null,"attributes":[{"value":"/ Same as [`join`](join()), but with more futures.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join.rs","byte_start":130446,"byte_end":130498,"line_start":150,"line_end":150,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join.rs","byte_start":130499,"byte_end":130502,"line_start":151,"line_end":151,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join.rs","byte_start":130503,"byte_end":130517,"line_start":152,"line_end":152,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join.rs","byte_start":130518,"byte_end":130521,"line_start":153,"line_end":153,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join.rs","byte_start":130522,"byte_end":130529,"line_start":154,"line_end":154,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join.rs","byte_start":130530,"byte_end":130571,"line_start":155,"line_end":155,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join.rs","byte_start":130572,"byte_end":130596,"line_start":156,"line_end":156,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join.rs","byte_start":130597,"byte_end":130600,"line_start":157,"line_end":157,"column_start":1,"column_end":4}},{"value":"/ let a = async { 1 };","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join.rs","byte_start":130601,"byte_end":130625,"line_start":158,"line_end":158,"column_start":1,"column_end":25}},{"value":"/ let b = async { 2 };","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join.rs","byte_start":130626,"byte_end":130650,"line_start":159,"line_end":159,"column_start":1,"column_end":25}},{"value":"/ let c = async { 3 };","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join.rs","byte_start":130651,"byte_end":130675,"line_start":160,"line_end":160,"column_start":1,"column_end":25}},{"value":"/ let d = async { 4 };","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join.rs","byte_start":130676,"byte_end":130700,"line_start":161,"line_end":161,"column_start":1,"column_end":25}},{"value":"/ let tuple = future::join4(a, b, c, d);","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join.rs","byte_start":130701,"byte_end":130743,"line_start":162,"line_end":162,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join.rs","byte_start":130744,"byte_end":130747,"line_start":163,"line_end":163,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(tuple.await, (1, 2, 3, 4));","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join.rs","byte_start":130748,"byte_end":130790,"line_start":164,"line_end":164,"column_start":1,"column_end":43}},{"value":"/ # });","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join.rs","byte_start":130791,"byte_end":130800,"line_start":165,"line_end":165,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join.rs","byte_start":130801,"byte_end":130808,"line_start":166,"line_end":166,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1431},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join.rs","byte_start":131586,"byte_end":131591,"line_start":201,"line_end":201,"column_start":8,"column_end":13},"name":"join5","qualname":"::future::join::join5","value":"pub fn join5<Fut1, Fut2, Fut3, Fut4, Fut5>(Fut1, Fut2, Fut3, Fut4, Fut5)\n-> Join5<Fut1, Fut2, Fut3, Fut4, Fut5> where Fut1: Future, Fut2: Future,\nFut3: Future, Fut4: Future, Fut5: Future","parent":null,"children":[],"decl_id":null,"docs":" Same as [`join`](join()), but with more futures.","sig":null,"attributes":[{"value":"/ Same as [`join`](join()), but with more futures.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join.rs","byte_start":131185,"byte_end":131237,"line_start":183,"line_end":183,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join.rs","byte_start":131238,"byte_end":131241,"line_start":184,"line_end":184,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join.rs","byte_start":131242,"byte_end":131256,"line_start":185,"line_end":185,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join.rs","byte_start":131257,"byte_end":131260,"line_start":186,"line_end":186,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join.rs","byte_start":131261,"byte_end":131268,"line_start":187,"line_end":187,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join.rs","byte_start":131269,"byte_end":131310,"line_start":188,"line_end":188,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join.rs","byte_start":131311,"byte_end":131335,"line_start":189,"line_end":189,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join.rs","byte_start":131336,"byte_end":131339,"line_start":190,"line_end":190,"column_start":1,"column_end":4}},{"value":"/ let a = async { 1 };","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join.rs","byte_start":131340,"byte_end":131364,"line_start":191,"line_end":191,"column_start":1,"column_end":25}},{"value":"/ let b = async { 2 };","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join.rs","byte_start":131365,"byte_end":131389,"line_start":192,"line_end":192,"column_start":1,"column_end":25}},{"value":"/ let c = async { 3 };","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join.rs","byte_start":131390,"byte_end":131414,"line_start":193,"line_end":193,"column_start":1,"column_end":25}},{"value":"/ let d = async { 4 };","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join.rs","byte_start":131415,"byte_end":131439,"line_start":194,"line_end":194,"column_start":1,"column_end":25}},{"value":"/ let e = async { 5 };","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join.rs","byte_start":131440,"byte_end":131464,"line_start":195,"line_end":195,"column_start":1,"column_end":25}},{"value":"/ let tuple = future::join5(a, b, c, d, e);","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join.rs","byte_start":131465,"byte_end":131510,"line_start":196,"line_end":196,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join.rs","byte_start":131511,"byte_end":131514,"line_start":197,"line_end":197,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(tuple.await, (1, 2, 3, 4, 5));","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join.rs","byte_start":131515,"byte_end":131560,"line_start":198,"line_end":198,"column_start":1,"column_end":46}},{"value":"/ # });","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join.rs","byte_start":131561,"byte_end":131570,"line_start":199,"line_end":199,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join.rs","byte_start":131571,"byte_end":131578,"line_start":200,"line_end":200,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":1502},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join_all.rs","byte_start":132858,"byte_end":132865,"line_start":24,"line_end":24,"column_start":12,"column_end":19},"name":"JoinAll","qualname":"::future::join_all::JoinAll","value":"JoinAll {  }","parent":null,"children":[{"krate":0,"index":1504}],"decl_id":null,"docs":" Future for the [`join_all`] function.\n","sig":null,"attributes":[{"value":"/ Future for the [`join_all`] function.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join_all.rs","byte_start":132737,"byte_end":132778,"line_start":22,"line_end":22,"column_start":1,"column_end":42}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join_all.rs","byte_start":132779,"byte_end":132846,"line_start":23,"line_end":23,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":1508},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join_all.rs","byte_start":134479,"byte_end":134487,"line_start":78,"line_end":78,"column_start":8,"column_end":16},"name":"join_all","qualname":"::future::join_all::join_all","value":"pub fn join_all<I>(I) -> JoinAll<I::Item> where I: IntoIterator,\nI::Item: Future","parent":null,"children":[],"decl_id":null,"docs":" Creates a future which represents a collection of the outputs of the futures\n given.","sig":null,"attributes":[{"value":"/ Creates a future which represents a collection of the outputs of the futures","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join_all.rs","byte_start":133172,"byte_end":133252,"line_start":41,"line_end":41,"column_start":1,"column_end":81}},{"value":"/ given.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join_all.rs","byte_start":133253,"byte_end":133263,"line_start":42,"line_end":42,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join_all.rs","byte_start":133264,"byte_end":133267,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ The returned future will drive execution for all of its underlying futures,","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join_all.rs","byte_start":133268,"byte_end":133347,"line_start":44,"line_end":44,"column_start":1,"column_end":80}},{"value":"/ collecting the results into a destination `Vec<T>` in the same order as they","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join_all.rs","byte_start":133348,"byte_end":133428,"line_start":45,"line_end":45,"column_start":1,"column_end":81}},{"value":"/ were provided.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join_all.rs","byte_start":133429,"byte_end":133447,"line_start":46,"line_end":46,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join_all.rs","byte_start":133448,"byte_end":133451,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ This function is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join_all.rs","byte_start":133452,"byte_end":133529,"line_start":48,"line_end":48,"column_start":1,"column_end":78}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join_all.rs","byte_start":133530,"byte_end":133587,"line_start":49,"line_end":49,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join_all.rs","byte_start":133588,"byte_end":133591,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ # See Also","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join_all.rs","byte_start":133592,"byte_end":133606,"line_start":51,"line_end":51,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join_all.rs","byte_start":133607,"byte_end":133610,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ This is purposefully a very simple API for basic use-cases. In a lot of","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join_all.rs","byte_start":133611,"byte_end":133686,"line_start":53,"line_end":53,"column_start":1,"column_end":76}},{"value":"/ cases you will want to use the more powerful","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join_all.rs","byte_start":133687,"byte_end":133735,"line_start":54,"line_end":54,"column_start":1,"column_end":49}},{"value":"/ [`FuturesOrdered`][crate::stream::FuturesOrdered] APIs, or, if order does","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join_all.rs","byte_start":133736,"byte_end":133813,"line_start":55,"line_end":55,"column_start":1,"column_end":78}},{"value":"/ not matter, [`FuturesUnordered`][crate::stream::FuturesUnordered].","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join_all.rs","byte_start":133814,"byte_end":133884,"line_start":56,"line_end":56,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join_all.rs","byte_start":133885,"byte_end":133888,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ Some examples for additional functionality provided by these are:","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join_all.rs","byte_start":133889,"byte_end":133958,"line_start":58,"line_end":58,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join_all.rs","byte_start":133959,"byte_end":133962,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/  * Adding new futures to the set even after it has been started.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join_all.rs","byte_start":133963,"byte_end":134031,"line_start":60,"line_end":60,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join_all.rs","byte_start":134032,"byte_end":134035,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/  * Only polling the specific futures that have been woken. In cases where","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join_all.rs","byte_start":134036,"byte_end":134113,"line_start":62,"line_end":62,"column_start":1,"column_end":78}},{"value":"/    you have a lot of futures this will result in much more efficient polling.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join_all.rs","byte_start":134114,"byte_end":134195,"line_start":63,"line_end":63,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join_all.rs","byte_start":134196,"byte_end":134199,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join_all.rs","byte_start":134200,"byte_end":134214,"line_start":65,"line_end":65,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join_all.rs","byte_start":134215,"byte_end":134218,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join_all.rs","byte_start":134219,"byte_end":134226,"line_start":67,"line_end":67,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join_all.rs","byte_start":134227,"byte_end":134268,"line_start":68,"line_end":68,"column_start":1,"column_end":42}},{"value":"/ use futures::future::join_all;","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join_all.rs","byte_start":134269,"byte_end":134303,"line_start":69,"line_end":69,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join_all.rs","byte_start":134304,"byte_end":134307,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/ async fn foo(i: u32) -> u32 { i }","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join_all.rs","byte_start":134308,"byte_end":134345,"line_start":71,"line_end":71,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join_all.rs","byte_start":134346,"byte_end":134349,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ let futures = vec![foo(1), foo(2), foo(3)];","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join_all.rs","byte_start":134350,"byte_end":134397,"line_start":73,"line_end":73,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join_all.rs","byte_start":134398,"byte_end":134401,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(join_all(futures).await, [1, 2, 3]);","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join_all.rs","byte_start":134402,"byte_end":134453,"line_start":75,"line_end":75,"column_start":1,"column_end":52}},{"value":"/ # });","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join_all.rs","byte_start":134454,"byte_end":134463,"line_start":76,"line_end":76,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join_all.rs","byte_start":134464,"byte_end":134471,"line_start":77,"line_end":77,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":10226},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select.rs","byte_start":135846,"byte_end":135852,"line_start":10,"line_end":10,"column_start":12,"column_end":18},"name":"Select","qualname":"::future::select::Select","value":"Select {  }","parent":null,"children":[{"krate":0,"index":10229}],"decl_id":null,"docs":" Future for the [`select()`] function.\n","sig":null,"attributes":[{"value":"/ Future for the [`select()`] function.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select.rs","byte_start":135708,"byte_end":135749,"line_start":7,"line_end":7,"column_start":1,"column_end":42}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select.rs","byte_start":135750,"byte_end":135817,"line_start":8,"line_end":8,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":1557},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select.rs","byte_start":138116,"byte_end":138122,"line_start":84,"line_end":84,"column_start":8,"column_end":14},"name":"select","qualname":"::future::select::select","value":"pub fn select<A, B>(A, B) -> Select<A, B> where A: Future + Unpin, B: Future +\nUnpin","parent":null,"children":[],"decl_id":null,"docs":" Waits for either one of two differently-typed futures to complete.","sig":null,"attributes":[{"value":"/ Waits for either one of two differently-typed futures to complete.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select.rs","byte_start":135943,"byte_end":136013,"line_start":16,"line_end":16,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select.rs","byte_start":136014,"byte_end":136017,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ This function will return a new future which awaits for either one of both","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select.rs","byte_start":136018,"byte_end":136096,"line_start":18,"line_end":18,"column_start":1,"column_end":79}},{"value":"/ futures to complete. The returned future will finish with both the value","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select.rs","byte_start":136097,"byte_end":136173,"line_start":19,"line_end":19,"column_start":1,"column_end":77}},{"value":"/ resolved and a future representing the completion of the other work.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select.rs","byte_start":136174,"byte_end":136246,"line_start":20,"line_end":20,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select.rs","byte_start":136247,"byte_end":136250,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ Note that this function consumes the receiving futures and returns a","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select.rs","byte_start":136251,"byte_end":136323,"line_start":22,"line_end":22,"column_start":1,"column_end":73}},{"value":"/ wrapped version of them.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select.rs","byte_start":136324,"byte_end":136352,"line_start":23,"line_end":23,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select.rs","byte_start":136353,"byte_end":136356,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ Also note that if both this and the second future have the same","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select.rs","byte_start":136357,"byte_end":136424,"line_start":25,"line_end":25,"column_start":1,"column_end":68}},{"value":"/ output type you can use the `Either::factor_first` method to","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select.rs","byte_start":136425,"byte_end":136489,"line_start":26,"line_end":26,"column_start":1,"column_end":65}},{"value":"/ conveniently extract out the value at the end.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select.rs","byte_start":136490,"byte_end":136540,"line_start":27,"line_end":27,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select.rs","byte_start":136541,"byte_end":136544,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select.rs","byte_start":136545,"byte_end":136559,"line_start":29,"line_end":29,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select.rs","byte_start":136560,"byte_end":136563,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ A simple example","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select.rs","byte_start":136564,"byte_end":136584,"line_start":31,"line_end":31,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select.rs","byte_start":136585,"byte_end":136588,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select.rs","byte_start":136589,"byte_end":136596,"line_start":33,"line_end":33,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select.rs","byte_start":136597,"byte_end":136638,"line_start":34,"line_end":34,"column_start":1,"column_end":42}},{"value":"/ use futures::{","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select.rs","byte_start":136639,"byte_end":136657,"line_start":35,"line_end":35,"column_start":1,"column_end":19}},{"value":"/     pin_mut,","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select.rs","byte_start":136658,"byte_end":136674,"line_start":36,"line_end":36,"column_start":1,"column_end":17}},{"value":"/     future::Either,","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select.rs","byte_start":136675,"byte_end":136698,"line_start":37,"line_end":37,"column_start":1,"column_end":24}},{"value":"/     future::self,","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select.rs","byte_start":136699,"byte_end":136720,"line_start":38,"line_end":38,"column_start":1,"column_end":22}},{"value":"/ };","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select.rs","byte_start":136721,"byte_end":136727,"line_start":39,"line_end":39,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select.rs","byte_start":136728,"byte_end":136731,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ // These two futures have different types even though their outputs have the same type.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select.rs","byte_start":136732,"byte_end":136823,"line_start":41,"line_end":41,"column_start":1,"column_end":92}},{"value":"/ let future1 = async {","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select.rs","byte_start":136824,"byte_end":136849,"line_start":42,"line_end":42,"column_start":1,"column_end":26}},{"value":"/     future::pending::<()>().await; // will never finish","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select.rs","byte_start":136850,"byte_end":136909,"line_start":43,"line_end":43,"column_start":1,"column_end":60}},{"value":"/     1","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select.rs","byte_start":136910,"byte_end":136919,"line_start":44,"line_end":44,"column_start":1,"column_end":10}},{"value":"/ };","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select.rs","byte_start":136920,"byte_end":136926,"line_start":45,"line_end":45,"column_start":1,"column_end":7}},{"value":"/ let future2 = async {","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select.rs","byte_start":136927,"byte_end":136952,"line_start":46,"line_end":46,"column_start":1,"column_end":26}},{"value":"/     future::ready(2).await","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select.rs","byte_start":136953,"byte_end":136983,"line_start":47,"line_end":47,"column_start":1,"column_end":31}},{"value":"/ };","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select.rs","byte_start":136984,"byte_end":136990,"line_start":48,"line_end":48,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select.rs","byte_start":136991,"byte_end":136994,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ // 'select' requires Future + Unpin bounds","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select.rs","byte_start":136995,"byte_end":137041,"line_start":50,"line_end":50,"column_start":1,"column_end":47}},{"value":"/ pin_mut!(future1);","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select.rs","byte_start":137042,"byte_end":137064,"line_start":51,"line_end":51,"column_start":1,"column_end":23}},{"value":"/ pin_mut!(future2);","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select.rs","byte_start":137065,"byte_end":137087,"line_start":52,"line_end":52,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select.rs","byte_start":137088,"byte_end":137091,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ let value = match future::select(future1, future2).await {","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select.rs","byte_start":137092,"byte_end":137154,"line_start":54,"line_end":54,"column_start":1,"column_end":63}},{"value":"/     Either::Left((value1, _)) => value1,  // `value1` is resolved from `future1`","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select.rs","byte_start":137155,"byte_end":137239,"line_start":55,"line_end":55,"column_start":1,"column_end":85}},{"value":"/                                           // `_` represents `future2`","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select.rs","byte_start":137240,"byte_end":137313,"line_start":56,"line_end":56,"column_start":1,"column_end":74}},{"value":"/     Either::Right((value2, _)) => value2, // `value2` is resolved from `future2`","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select.rs","byte_start":137314,"byte_end":137398,"line_start":57,"line_end":57,"column_start":1,"column_end":85}},{"value":"/                                           // `_` represents `future1`","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select.rs","byte_start":137399,"byte_end":137472,"line_start":58,"line_end":58,"column_start":1,"column_end":74}},{"value":"/ };","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select.rs","byte_start":137473,"byte_end":137479,"line_start":59,"line_end":59,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select.rs","byte_start":137480,"byte_end":137483,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/ assert!(value == 2);","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select.rs","byte_start":137484,"byte_end":137508,"line_start":61,"line_end":61,"column_start":1,"column_end":25}},{"value":"/ # });","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select.rs","byte_start":137509,"byte_end":137518,"line_start":62,"line_end":62,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select.rs","byte_start":137519,"byte_end":137526,"line_start":63,"line_end":63,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select.rs","byte_start":137527,"byte_end":137530,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ A more complex example","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select.rs","byte_start":137531,"byte_end":137557,"line_start":65,"line_end":65,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select.rs","byte_start":137558,"byte_end":137561,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select.rs","byte_start":137562,"byte_end":137569,"line_start":67,"line_end":67,"column_start":1,"column_end":8}},{"value":"/ use futures::future::{self, Either, Future, FutureExt};","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select.rs","byte_start":137570,"byte_end":137629,"line_start":68,"line_end":68,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select.rs","byte_start":137630,"byte_end":137633,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ // A poor-man's join implemented on top of select","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select.rs","byte_start":137634,"byte_end":137687,"line_start":70,"line_end":70,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select.rs","byte_start":137688,"byte_end":137691,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ fn join<A, B>(a: A, b: B) -> impl Future<Output=(A::Output, B::Output)>","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select.rs","byte_start":137692,"byte_end":137767,"line_start":72,"line_end":72,"column_start":1,"column_end":76}},{"value":"/     where A: Future + Unpin,","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select.rs","byte_start":137768,"byte_end":137800,"line_start":73,"line_end":73,"column_start":1,"column_end":33}},{"value":"/           B: Future + Unpin,","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select.rs","byte_start":137801,"byte_end":137833,"line_start":74,"line_end":74,"column_start":1,"column_end":33}},{"value":"/ {","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select.rs","byte_start":137834,"byte_end":137839,"line_start":75,"line_end":75,"column_start":1,"column_end":6}},{"value":"/     future::select(a, b).then(|either| {","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select.rs","byte_start":137840,"byte_end":137884,"line_start":76,"line_end":76,"column_start":1,"column_end":45}},{"value":"/         match either {","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select.rs","byte_start":137885,"byte_end":137911,"line_start":77,"line_end":77,"column_start":1,"column_end":27}},{"value":"/             Either::Left((x, b)) => b.map(move |y| (x, y)).left_future(),","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select.rs","byte_start":137912,"byte_end":137989,"line_start":78,"line_end":78,"column_start":1,"column_end":78}},{"value":"/             Either::Right((y, a)) => a.map(move |x| (x, y)).right_future(),","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select.rs","byte_start":137990,"byte_end":138069,"line_start":79,"line_end":79,"column_start":1,"column_end":80}},{"value":"/         }","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select.rs","byte_start":138070,"byte_end":138083,"line_start":80,"line_end":80,"column_start":1,"column_end":14}},{"value":"/     })","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select.rs","byte_start":138084,"byte_end":138094,"line_start":81,"line_end":81,"column_start":1,"column_end":11}},{"value":"/ }","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select.rs","byte_start":138095,"byte_end":138100,"line_start":82,"line_end":82,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select.rs","byte_start":138101,"byte_end":138108,"line_start":83,"line_end":83,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":10234},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select_all.rs","byte_start":139579,"byte_end":139588,"line_start":13,"line_end":13,"column_start":12,"column_end":21},"name":"SelectAll","qualname":"::future::select_all::SelectAll","value":"SelectAll {  }","parent":null,"children":[{"krate":0,"index":10236}],"decl_id":null,"docs":" Future for the [`select_all`] function.\n","sig":null,"attributes":[{"value":"/ Future for the [`select_all`] function.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select_all.rs","byte_start":139439,"byte_end":139482,"line_start":10,"line_end":10,"column_start":1,"column_end":44}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select_all.rs","byte_start":139500,"byte_end":139567,"line_start":12,"line_end":12,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":1607},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select_all.rs","byte_start":140368,"byte_end":140378,"line_start":34,"line_end":34,"column_start":8,"column_end":18},"name":"select_all","qualname":"::future::select_all::select_all","value":"pub fn select_all<I>(I) -> SelectAll<I::Item> where I: IntoIterator,\nI::Item: Future + Unpin","parent":null,"children":[],"decl_id":null,"docs":" Creates a new future which will select over a list of futures.","sig":null,"attributes":[{"value":"/ Creates a new future which will select over a list of futures.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select_all.rs","byte_start":139666,"byte_end":139732,"line_start":19,"line_end":19,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select_all.rs","byte_start":139733,"byte_end":139736,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ The returned future will wait for any future within `iter` to be ready. Upon","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select_all.rs","byte_start":139737,"byte_end":139817,"line_start":21,"line_end":21,"column_start":1,"column_end":81}},{"value":"/ completion the item resolved will be returned, along with the index of the","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select_all.rs","byte_start":139818,"byte_end":139896,"line_start":22,"line_end":22,"column_start":1,"column_end":79}},{"value":"/ future that was ready and the list of all the remaining futures.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select_all.rs","byte_start":139897,"byte_end":139965,"line_start":23,"line_end":23,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select_all.rs","byte_start":139966,"byte_end":139969,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ There are no guarantees provided on the order of the list with the remaining","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select_all.rs","byte_start":139970,"byte_end":140050,"line_start":25,"line_end":25,"column_start":1,"column_end":81}},{"value":"/ futures. They might be swapped around, reversed, or completely random.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select_all.rs","byte_start":140051,"byte_end":140125,"line_start":26,"line_end":26,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select_all.rs","byte_start":140126,"byte_end":140129,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ This function is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select_all.rs","byte_start":140130,"byte_end":140207,"line_start":28,"line_end":28,"column_start":1,"column_end":78}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select_all.rs","byte_start":140208,"byte_end":140265,"line_start":29,"line_end":29,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select_all.rs","byte_start":140266,"byte_end":140269,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ # Panics","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select_all.rs","byte_start":140270,"byte_end":140282,"line_start":31,"line_end":31,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select_all.rs","byte_start":140283,"byte_end":140286,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ This function will panic if the iterator specified contains no items.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select_all.rs","byte_start":140287,"byte_end":140360,"line_start":33,"line_end":33,"column_start":1,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":1611},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select_all.rs","byte_start":140759,"byte_end":140769,"line_start":46,"line_end":46,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<SelectAll<Fut>>::into_inner","value":"pub fn into_inner(Self) -> Vec<Fut>","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying futures.\n","sig":null,"attributes":[{"value":"/ Consumes this combinator, returning the underlying futures.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select_all.rs","byte_start":140684,"byte_end":140747,"line_start":45,"line_end":45,"column_start":5,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":10310},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":144530,"byte_end":144537,"line_start":94,"line_end":94,"column_start":6,"column_end":13},"name":"TryJoin","qualname":"::future::try_join::TryJoin","value":"TryJoin {  }","parent":null,"children":[{"krate":0,"index":10313},{"krate":0,"index":10314}],"decl_id":null,"docs":" Future for the [`try_join`](try_join()) function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":12561792,"byte_end":12561801,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":10355},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":144607,"byte_end":144615,"line_start":97,"line_end":97,"column_start":6,"column_end":14},"name":"TryJoin3","qualname":"::future::try_join::TryJoin3","value":"TryJoin3 {  }","parent":null,"children":[{"krate":0,"index":10359},{"krate":0,"index":10360},{"krate":0,"index":10361}],"decl_id":null,"docs":" Future for the [`try_join3`] function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":12561792,"byte_end":12561801,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":10412},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":144691,"byte_end":144699,"line_start":100,"line_end":100,"column_start":6,"column_end":14},"name":"TryJoin4","qualname":"::future::try_join::TryJoin4","value":"TryJoin4 {  }","parent":null,"children":[{"krate":0,"index":10417},{"krate":0,"index":10418},{"krate":0,"index":10419},{"krate":0,"index":10420}],"decl_id":null,"docs":" Future for the [`try_join4`] function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":12561792,"byte_end":12561801,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":10481},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":144781,"byte_end":144789,"line_start":103,"line_end":103,"column_start":6,"column_end":14},"name":"TryJoin5","qualname":"::future::try_join::TryJoin5","value":"TryJoin5 {  }","parent":null,"children":[{"krate":0,"index":10487},{"krate":0,"index":10488},{"krate":0,"index":10489},{"krate":0,"index":10490},{"krate":0,"index":10491}],"decl_id":null,"docs":" Future for the [`try_join5`] function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":12561792,"byte_end":12561801,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":1663},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":146062,"byte_end":146070,"line_start":148,"line_end":148,"column_start":8,"column_end":16},"name":"try_join","qualname":"::future::try_join::try_join","value":"pub fn try_join<Fut1, Fut2>(Fut1, Fut2) -> TryJoin<Fut1, Fut2> where\nFut1: TryFuture, Fut2: TryFuture<Error = Fut1::Error>","parent":null,"children":[],"decl_id":null,"docs":" Joins the result of two futures, waiting for them both to complete or\n for one to produce an error.","sig":null,"attributes":[{"value":"/ Joins the result of two futures, waiting for them both to complete or","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":144827,"byte_end":144900,"line_start":106,"line_end":106,"column_start":1,"column_end":74}},{"value":"/ for one to produce an error.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":144901,"byte_end":144933,"line_start":107,"line_end":107,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":144934,"byte_end":144937,"line_start":108,"line_end":108,"column_start":1,"column_end":4}},{"value":"/ This function will return a new future which awaits both futures to","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":144938,"byte_end":145009,"line_start":109,"line_end":109,"column_start":1,"column_end":72}},{"value":"/ complete. If successful, the returned future will finish with a tuple of","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":145010,"byte_end":145086,"line_start":110,"line_end":110,"column_start":1,"column_end":77}},{"value":"/ both results. If unsuccessful, it will complete with the first error","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":145087,"byte_end":145159,"line_start":111,"line_end":111,"column_start":1,"column_end":73}},{"value":"/ encountered.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":145160,"byte_end":145176,"line_start":112,"line_end":112,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":145177,"byte_end":145180,"line_start":113,"line_end":113,"column_start":1,"column_end":4}},{"value":"/ Note that this function consumes the passed futures and returns a","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":145181,"byte_end":145250,"line_start":114,"line_end":114,"column_start":1,"column_end":70}},{"value":"/ wrapped version of it.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":145251,"byte_end":145277,"line_start":115,"line_end":115,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":145278,"byte_end":145281,"line_start":116,"line_end":116,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":145282,"byte_end":145296,"line_start":117,"line_end":117,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":145297,"byte_end":145300,"line_start":118,"line_end":118,"column_start":1,"column_end":4}},{"value":"/ When used on multiple futures that return [`Ok`], `try_join` will return","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":145301,"byte_end":145377,"line_start":119,"line_end":119,"column_start":1,"column_end":77}},{"value":"/ [`Ok`] of a tuple of the values:","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":145378,"byte_end":145414,"line_start":120,"line_end":120,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":145415,"byte_end":145418,"line_start":121,"line_end":121,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":145419,"byte_end":145426,"line_start":122,"line_end":122,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":145427,"byte_end":145468,"line_start":123,"line_end":123,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":145469,"byte_end":145493,"line_start":124,"line_end":124,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":145494,"byte_end":145497,"line_start":125,"line_end":125,"column_start":1,"column_end":4}},{"value":"/ let a = future::ready(Ok::<i32, i32>(1));","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":145498,"byte_end":145543,"line_start":126,"line_end":126,"column_start":1,"column_end":46}},{"value":"/ let b = future::ready(Ok::<i32, i32>(2));","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":145544,"byte_end":145589,"line_start":127,"line_end":127,"column_start":1,"column_end":46}},{"value":"/ let pair = future::try_join(a, b);","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":145590,"byte_end":145628,"line_start":128,"line_end":128,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":145629,"byte_end":145632,"line_start":129,"line_end":129,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(pair.await, Ok((1, 2)));","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":145633,"byte_end":145672,"line_start":130,"line_end":130,"column_start":1,"column_end":40}},{"value":"/ # });","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":145673,"byte_end":145682,"line_start":131,"line_end":131,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":145683,"byte_end":145690,"line_start":132,"line_end":132,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":145691,"byte_end":145694,"line_start":133,"line_end":133,"column_start":1,"column_end":4}},{"value":"/ If one of the futures resolves to an error, `try_join` will return","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":145695,"byte_end":145765,"line_start":134,"line_end":134,"column_start":1,"column_end":71}},{"value":"/ that error:","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":145766,"byte_end":145781,"line_start":135,"line_end":135,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":145782,"byte_end":145785,"line_start":136,"line_end":136,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":145786,"byte_end":145793,"line_start":137,"line_end":137,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":145794,"byte_end":145835,"line_start":138,"line_end":138,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":145836,"byte_end":145860,"line_start":139,"line_end":139,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":145861,"byte_end":145864,"line_start":140,"line_end":140,"column_start":1,"column_end":4}},{"value":"/ let a = future::ready(Ok::<i32, i32>(1));","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":145865,"byte_end":145910,"line_start":141,"line_end":141,"column_start":1,"column_end":46}},{"value":"/ let b = future::ready(Err::<i32, i32>(2));","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":145911,"byte_end":145957,"line_start":142,"line_end":142,"column_start":1,"column_end":47}},{"value":"/ let pair = future::try_join(a, b);","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":145958,"byte_end":145996,"line_start":143,"line_end":143,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":145997,"byte_end":146000,"line_start":144,"line_end":144,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(pair.await, Err(2));","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":146001,"byte_end":146036,"line_start":145,"line_end":145,"column_start":1,"column_end":36}},{"value":"/ # });","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":146037,"byte_end":146046,"line_start":146,"line_end":146,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":146047,"byte_end":146054,"line_start":147,"line_end":147,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1666},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":146726,"byte_end":146735,"line_start":172,"line_end":172,"column_start":8,"column_end":17},"name":"try_join3","qualname":"::future::try_join::try_join3","value":"pub fn try_join3<Fut1, Fut2, Fut3>(Fut1, Fut2, Fut3)\n-> TryJoin3<Fut1, Fut2, Fut3> where Fut1: TryFuture, Fut2: TryFuture<Error =\nFut1::Error>, Fut3: TryFuture<Error = Fut1::Error>","parent":null,"children":[],"decl_id":null,"docs":" Same as [`try_join`](try_join()), but with more futures.","sig":null,"attributes":[{"value":"/ Same as [`try_join`](try_join()), but with more futures.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":146308,"byte_end":146368,"line_start":156,"line_end":156,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":146369,"byte_end":146372,"line_start":157,"line_end":157,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":146373,"byte_end":146387,"line_start":158,"line_end":158,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":146388,"byte_end":146391,"line_start":159,"line_end":159,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":146392,"byte_end":146399,"line_start":160,"line_end":160,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":146400,"byte_end":146441,"line_start":161,"line_end":161,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":146442,"byte_end":146466,"line_start":162,"line_end":162,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":146467,"byte_end":146470,"line_start":163,"line_end":163,"column_start":1,"column_end":4}},{"value":"/ let a = future::ready(Ok::<i32, i32>(1));","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":146471,"byte_end":146516,"line_start":164,"line_end":164,"column_start":1,"column_end":46}},{"value":"/ let b = future::ready(Ok::<i32, i32>(2));","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":146517,"byte_end":146562,"line_start":165,"line_end":165,"column_start":1,"column_end":46}},{"value":"/ let c = future::ready(Ok::<i32, i32>(3));","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":146563,"byte_end":146608,"line_start":166,"line_end":166,"column_start":1,"column_end":46}},{"value":"/ let tuple = future::try_join3(a, b, c);","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":146609,"byte_end":146652,"line_start":167,"line_end":167,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":146653,"byte_end":146656,"line_start":168,"line_end":168,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(tuple.await, Ok((1, 2, 3)));","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":146657,"byte_end":146700,"line_start":169,"line_end":169,"column_start":1,"column_end":44}},{"value":"/ # });","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":146701,"byte_end":146710,"line_start":170,"line_end":170,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":146711,"byte_end":146718,"line_start":171,"line_end":171,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1670},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":147563,"byte_end":147572,"line_start":204,"line_end":204,"column_start":8,"column_end":17},"name":"try_join4","qualname":"::future::try_join::try_join4","value":"pub fn try_join4<Fut1, Fut2, Fut3, Fut4>(Fut1, Fut2, Fut3, Fut4)\n-> TryJoin4<Fut1, Fut2, Fut3, Fut4> where Fut1: TryFuture,\nFut2: TryFuture<Error = Fut1::Error>, Fut3: TryFuture<Error = Fut1::Error>,\nFut4: TryFuture<Error = Fut1::Error>","parent":null,"children":[],"decl_id":null,"docs":" Same as [`try_join`](try_join()), but with more futures.","sig":null,"attributes":[{"value":"/ Same as [`try_join`](try_join()), but with more futures.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":147093,"byte_end":147153,"line_start":187,"line_end":187,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":147154,"byte_end":147157,"line_start":188,"line_end":188,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":147158,"byte_end":147172,"line_start":189,"line_end":189,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":147173,"byte_end":147176,"line_start":190,"line_end":190,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":147177,"byte_end":147184,"line_start":191,"line_end":191,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":147185,"byte_end":147226,"line_start":192,"line_end":192,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":147227,"byte_end":147251,"line_start":193,"line_end":193,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":147252,"byte_end":147255,"line_start":194,"line_end":194,"column_start":1,"column_end":4}},{"value":"/ let a = future::ready(Ok::<i32, i32>(1));","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":147256,"byte_end":147301,"line_start":195,"line_end":195,"column_start":1,"column_end":46}},{"value":"/ let b = future::ready(Ok::<i32, i32>(2));","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":147302,"byte_end":147347,"line_start":196,"line_end":196,"column_start":1,"column_end":46}},{"value":"/ let c = future::ready(Ok::<i32, i32>(3));","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":147348,"byte_end":147393,"line_start":197,"line_end":197,"column_start":1,"column_end":46}},{"value":"/ let d = future::ready(Ok::<i32, i32>(4));","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":147394,"byte_end":147439,"line_start":198,"line_end":198,"column_start":1,"column_end":46}},{"value":"/ let tuple = future::try_join4(a, b, c, d);","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":147440,"byte_end":147486,"line_start":199,"line_end":199,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":147487,"byte_end":147490,"line_start":200,"line_end":200,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(tuple.await, Ok((1, 2, 3, 4)));","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":147491,"byte_end":147537,"line_start":201,"line_end":201,"column_start":1,"column_end":47}},{"value":"/ # });","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":147538,"byte_end":147547,"line_start":202,"line_end":202,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":147548,"byte_end":147555,"line_start":203,"line_end":203,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1675},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":148544,"byte_end":148553,"line_start":239,"line_end":239,"column_start":8,"column_end":17},"name":"try_join5","qualname":"::future::try_join::try_join5","value":"pub fn try_join5<Fut1, Fut2, Fut3, Fut4, Fut5>(Fut1, Fut2, Fut3, Fut4, Fut5)\n-> TryJoin5<Fut1, Fut2, Fut3, Fut4, Fut5> where Fut1: TryFuture,\nFut2: TryFuture<Error = Fut1::Error>, Fut3: TryFuture<Error = Fut1::Error>,\nFut4: TryFuture<Error = Fut1::Error>, Fut5: TryFuture<Error = Fut1::Error>","parent":null,"children":[],"decl_id":null,"docs":" Same as [`try_join`](try_join()), but with more futures.","sig":null,"attributes":[{"value":"/ Same as [`try_join`](try_join()), but with more futures.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":148022,"byte_end":148082,"line_start":221,"line_end":221,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":148083,"byte_end":148086,"line_start":222,"line_end":222,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":148087,"byte_end":148101,"line_start":223,"line_end":223,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":148102,"byte_end":148105,"line_start":224,"line_end":224,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":148106,"byte_end":148113,"line_start":225,"line_end":225,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":148114,"byte_end":148155,"line_start":226,"line_end":226,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":148156,"byte_end":148180,"line_start":227,"line_end":227,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":148181,"byte_end":148184,"line_start":228,"line_end":228,"column_start":1,"column_end":4}},{"value":"/ let a = future::ready(Ok::<i32, i32>(1));","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":148185,"byte_end":148230,"line_start":229,"line_end":229,"column_start":1,"column_end":46}},{"value":"/ let b = future::ready(Ok::<i32, i32>(2));","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":148231,"byte_end":148276,"line_start":230,"line_end":230,"column_start":1,"column_end":46}},{"value":"/ let c = future::ready(Ok::<i32, i32>(3));","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":148277,"byte_end":148322,"line_start":231,"line_end":231,"column_start":1,"column_end":46}},{"value":"/ let d = future::ready(Ok::<i32, i32>(4));","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":148323,"byte_end":148368,"line_start":232,"line_end":232,"column_start":1,"column_end":46}},{"value":"/ let e = future::ready(Ok::<i32, i32>(5));","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":148369,"byte_end":148414,"line_start":233,"line_end":233,"column_start":1,"column_end":46}},{"value":"/ let tuple = future::try_join5(a, b, c, d, e);","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":148415,"byte_end":148464,"line_start":234,"line_end":234,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":148465,"byte_end":148468,"line_start":235,"line_end":235,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(tuple.await, Ok((1, 2, 3, 4, 5)));","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":148469,"byte_end":148518,"line_start":236,"line_end":236,"column_start":1,"column_end":50}},{"value":"/ # });","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":148519,"byte_end":148528,"line_start":237,"line_end":237,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":148529,"byte_end":148536,"line_start":238,"line_end":238,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":1758},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join_all.rs","byte_start":150045,"byte_end":150055,"line_start":30,"line_end":30,"column_start":12,"column_end":22},"name":"TryJoinAll","qualname":"::future::try_join_all::TryJoinAll","value":"TryJoinAll {  }","parent":null,"children":[{"krate":0,"index":1760}],"decl_id":null,"docs":" Future for the [`try_join_all`] function.\n","sig":null,"attributes":[{"value":"/ Future for the [`try_join_all`] function.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join_all.rs","byte_start":149920,"byte_end":149965,"line_start":28,"line_end":28,"column_start":1,"column_end":46}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join_all.rs","byte_start":149966,"byte_end":150033,"line_start":29,"line_end":29,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":1764},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join_all.rs","byte_start":151648,"byte_end":151660,"line_start":86,"line_end":86,"column_start":8,"column_end":20},"name":"try_join_all","qualname":"::future::try_join_all::try_join_all","value":"pub fn try_join_all<I>(I) -> TryJoinAll<I::Item> where I: IntoIterator,\nI::Item: TryFuture","parent":null,"children":[],"decl_id":null,"docs":" Creates a future which represents either a collection of the results of the\n futures given or an error.","sig":null,"attributes":[{"value":"/ Creates a future which represents either a collection of the results of the","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join_all.rs","byte_start":150399,"byte_end":150478,"line_start":48,"line_end":48,"column_start":1,"column_end":80}},{"value":"/ futures given or an error.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join_all.rs","byte_start":150479,"byte_end":150509,"line_start":49,"line_end":49,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join_all.rs","byte_start":150510,"byte_end":150513,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ The returned future will drive execution for all of its underlying futures,","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join_all.rs","byte_start":150514,"byte_end":150593,"line_start":51,"line_end":51,"column_start":1,"column_end":80}},{"value":"/ collecting the results into a destination `Vec<T>` in the same order as they","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join_all.rs","byte_start":150594,"byte_end":150674,"line_start":52,"line_end":52,"column_start":1,"column_end":81}},{"value":"/ were provided.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join_all.rs","byte_start":150675,"byte_end":150693,"line_start":53,"line_end":53,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join_all.rs","byte_start":150694,"byte_end":150697,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ If any future returns an error then all other futures will be canceled and","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join_all.rs","byte_start":150698,"byte_end":150776,"line_start":55,"line_end":55,"column_start":1,"column_end":79}},{"value":"/ an error will be returned immediately. If all futures complete successfully,","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join_all.rs","byte_start":150777,"byte_end":150857,"line_start":56,"line_end":56,"column_start":1,"column_end":81}},{"value":"/ however, then the returned future will succeed with a `Vec` of all the","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join_all.rs","byte_start":150858,"byte_end":150932,"line_start":57,"line_end":57,"column_start":1,"column_end":75}},{"value":"/ successful results.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join_all.rs","byte_start":150933,"byte_end":150956,"line_start":58,"line_end":58,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join_all.rs","byte_start":150957,"byte_end":150960,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ This function is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join_all.rs","byte_start":150961,"byte_end":151038,"line_start":60,"line_end":60,"column_start":1,"column_end":78}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join_all.rs","byte_start":151039,"byte_end":151096,"line_start":61,"line_end":61,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join_all.rs","byte_start":151097,"byte_end":151100,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join_all.rs","byte_start":151101,"byte_end":151115,"line_start":63,"line_end":63,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join_all.rs","byte_start":151116,"byte_end":151119,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join_all.rs","byte_start":151120,"byte_end":151127,"line_start":65,"line_end":65,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join_all.rs","byte_start":151128,"byte_end":151169,"line_start":66,"line_end":66,"column_start":1,"column_end":42}},{"value":"/ use futures::future::{self, try_join_all};","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join_all.rs","byte_start":151170,"byte_end":151216,"line_start":67,"line_end":67,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join_all.rs","byte_start":151217,"byte_end":151220,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ let futures = vec![","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join_all.rs","byte_start":151221,"byte_end":151244,"line_start":69,"line_end":69,"column_start":1,"column_end":24}},{"value":"/     future::ok::<u32, u32>(1),","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join_all.rs","byte_start":151245,"byte_end":151279,"line_start":70,"line_end":70,"column_start":1,"column_end":35}},{"value":"/     future::ok::<u32, u32>(2),","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join_all.rs","byte_start":151280,"byte_end":151314,"line_start":71,"line_end":71,"column_start":1,"column_end":35}},{"value":"/     future::ok::<u32, u32>(3),","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join_all.rs","byte_start":151315,"byte_end":151349,"line_start":72,"line_end":72,"column_start":1,"column_end":35}},{"value":"/ ];","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join_all.rs","byte_start":151350,"byte_end":151356,"line_start":73,"line_end":73,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join_all.rs","byte_start":151357,"byte_end":151360,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(try_join_all(futures).await, Ok(vec![1, 2, 3]));","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join_all.rs","byte_start":151361,"byte_end":151424,"line_start":75,"line_end":75,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join_all.rs","byte_start":151425,"byte_end":151428,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ let futures = vec![","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join_all.rs","byte_start":151429,"byte_end":151452,"line_start":77,"line_end":77,"column_start":1,"column_end":24}},{"value":"/     future::ok::<u32, u32>(1),","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join_all.rs","byte_start":151453,"byte_end":151487,"line_start":78,"line_end":78,"column_start":1,"column_end":35}},{"value":"/     future::err::<u32, u32>(2),","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join_all.rs","byte_start":151488,"byte_end":151523,"line_start":79,"line_end":79,"column_start":1,"column_end":36}},{"value":"/     future::ok::<u32, u32>(3),","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join_all.rs","byte_start":151524,"byte_end":151558,"line_start":80,"line_end":80,"column_start":1,"column_end":35}},{"value":"/ ];","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join_all.rs","byte_start":151559,"byte_end":151565,"line_start":81,"line_end":81,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join_all.rs","byte_start":151566,"byte_end":151569,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(try_join_all(futures).await, Err(2));","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join_all.rs","byte_start":151570,"byte_end":151622,"line_start":83,"line_end":83,"column_start":1,"column_end":53}},{"value":"/ # });","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join_all.rs","byte_start":151623,"byte_end":151632,"line_start":84,"line_end":84,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join_all.rs","byte_start":151633,"byte_end":151640,"line_start":85,"line_end":85,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":10562},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_select.rs","byte_start":153558,"byte_end":153567,"line_start":9,"line_end":9,"column_start":12,"column_end":21},"name":"TrySelect","qualname":"::future::try_select::TrySelect","value":"TrySelect {  }","parent":null,"children":[{"krate":0,"index":10565}],"decl_id":null,"docs":" Future for the [`try_select()`] function.\n","sig":null,"attributes":[{"value":"/ Future for the [`try_select()`] function.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_select.rs","byte_start":153416,"byte_end":153461,"line_start":6,"line_end":6,"column_start":1,"column_end":46}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_select.rs","byte_start":153462,"byte_end":153529,"line_start":7,"line_end":7,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":1810},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_select.rs","byte_start":155152,"byte_end":155162,"line_start":50,"line_end":50,"column_start":8,"column_end":18},"name":"try_select","qualname":"::future::try_select::try_select","value":"pub fn try_select<A, B>(A, B) -> TrySelect<A, B> where A: TryFuture + Unpin,\nB: TryFuture + Unpin","parent":null,"children":[],"decl_id":null,"docs":" Waits for either one of two differently-typed futures to complete.","sig":null,"attributes":[{"value":"/ Waits for either one of two differently-typed futures to complete.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_select.rs","byte_start":153661,"byte_end":153731,"line_start":15,"line_end":15,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_select.rs","byte_start":153732,"byte_end":153735,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ This function will return a new future which awaits for either one of both","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_select.rs","byte_start":153736,"byte_end":153814,"line_start":17,"line_end":17,"column_start":1,"column_end":79}},{"value":"/ futures to complete. The returned future will finish with both the value","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_select.rs","byte_start":153815,"byte_end":153891,"line_start":18,"line_end":18,"column_start":1,"column_end":77}},{"value":"/ resolved and a future representing the completion of the other work.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_select.rs","byte_start":153892,"byte_end":153964,"line_start":19,"line_end":19,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_select.rs","byte_start":153965,"byte_end":153968,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ Note that this function consumes the receiving futures and returns a","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_select.rs","byte_start":153969,"byte_end":154041,"line_start":21,"line_end":21,"column_start":1,"column_end":73}},{"value":"/ wrapped version of them.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_select.rs","byte_start":154042,"byte_end":154070,"line_start":22,"line_end":22,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_select.rs","byte_start":154071,"byte_end":154074,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ Also note that if both this and the second future have the same","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_select.rs","byte_start":154075,"byte_end":154142,"line_start":24,"line_end":24,"column_start":1,"column_end":68}},{"value":"/ success/error type you can use the `Either::factor_first` method to","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_select.rs","byte_start":154143,"byte_end":154214,"line_start":25,"line_end":25,"column_start":1,"column_end":72}},{"value":"/ conveniently extract out the value at the end.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_select.rs","byte_start":154215,"byte_end":154265,"line_start":26,"line_end":26,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_select.rs","byte_start":154266,"byte_end":154269,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_select.rs","byte_start":154270,"byte_end":154284,"line_start":28,"line_end":28,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_select.rs","byte_start":154285,"byte_end":154288,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_select.rs","byte_start":154289,"byte_end":154296,"line_start":30,"line_end":30,"column_start":1,"column_end":8}},{"value":"/ use futures::future::{self, Either, Future, FutureExt, TryFuture, TryFutureExt};","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_select.rs","byte_start":154297,"byte_end":154381,"line_start":31,"line_end":31,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_select.rs","byte_start":154382,"byte_end":154385,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ // A poor-man's try_join implemented on top of select","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_select.rs","byte_start":154386,"byte_end":154443,"line_start":33,"line_end":33,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_select.rs","byte_start":154444,"byte_end":154447,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ fn try_join<A, B, E>(a: A, b: B) -> impl TryFuture<Ok=(A::Ok, B::Ok), Error=E>","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_select.rs","byte_start":154448,"byte_end":154530,"line_start":35,"line_end":35,"column_start":1,"column_end":83}},{"value":"/      where A: TryFuture<Error = E> + Unpin + 'static,","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_select.rs","byte_start":154531,"byte_end":154588,"line_start":36,"line_end":36,"column_start":1,"column_end":58}},{"value":"/            B: TryFuture<Error = E> + Unpin + 'static,","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_select.rs","byte_start":154589,"byte_end":154646,"line_start":37,"line_end":37,"column_start":1,"column_end":58}},{"value":"/            E: 'static,","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_select.rs","byte_start":154647,"byte_end":154673,"line_start":38,"line_end":38,"column_start":1,"column_end":27}},{"value":"/ {","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_select.rs","byte_start":154674,"byte_end":154679,"line_start":39,"line_end":39,"column_start":1,"column_end":6}},{"value":"/     future::try_select(a, b).then(|res| -> Box<dyn Future<Output = Result<_, _>> + Unpin> {","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_select.rs","byte_start":154680,"byte_end":154775,"line_start":40,"line_end":40,"column_start":1,"column_end":96}},{"value":"/         match res {","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_select.rs","byte_start":154776,"byte_end":154799,"line_start":41,"line_end":41,"column_start":1,"column_end":24}},{"value":"/             Ok(Either::Left((x, b))) => Box::new(b.map_ok(move |y| (x, y))),","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_select.rs","byte_start":154800,"byte_end":154880,"line_start":42,"line_end":42,"column_start":1,"column_end":81}},{"value":"/             Ok(Either::Right((y, a))) => Box::new(a.map_ok(move |x| (x, y))),","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_select.rs","byte_start":154881,"byte_end":154962,"line_start":43,"line_end":43,"column_start":1,"column_end":82}},{"value":"/             Err(Either::Left((e, _))) => Box::new(future::err(e)),","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_select.rs","byte_start":154963,"byte_end":155033,"line_start":44,"line_end":44,"column_start":1,"column_end":71}},{"value":"/             Err(Either::Right((e, _))) => Box::new(future::err(e)),","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_select.rs","byte_start":155034,"byte_end":155105,"line_start":45,"line_end":45,"column_start":1,"column_end":72}},{"value":"/         }","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_select.rs","byte_start":155106,"byte_end":155119,"line_start":46,"line_end":46,"column_start":1,"column_end":14}},{"value":"/     })","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_select.rs","byte_start":155120,"byte_end":155130,"line_start":47,"line_end":47,"column_start":1,"column_end":11}},{"value":"/ }","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_select.rs","byte_start":155131,"byte_end":155136,"line_start":48,"line_end":48,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_select.rs","byte_start":155137,"byte_end":155144,"line_start":49,"line_end":49,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":10570},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select_ok.rs","byte_start":156793,"byte_end":156801,"line_start":13,"line_end":13,"column_start":12,"column_end":20},"name":"SelectOk","qualname":"::future::select_ok::SelectOk","value":"SelectOk {  }","parent":null,"children":[{"krate":0,"index":10572}],"decl_id":null,"docs":" Future for the [`select_ok`] function.\n","sig":null,"attributes":[{"value":"/ Future for the [`select_ok`] function.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select_ok.rs","byte_start":156654,"byte_end":156696,"line_start":10,"line_end":10,"column_start":1,"column_end":43}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select_ok.rs","byte_start":156714,"byte_end":156781,"line_start":12,"line_end":12,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":1860},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select_ok.rs","byte_start":157523,"byte_end":157532,"line_start":32,"line_end":32,"column_start":8,"column_end":17},"name":"select_ok","qualname":"::future::select_ok::select_ok","value":"pub fn select_ok<I>(I) -> SelectOk<I::Item> where I: IntoIterator,\nI::Item: TryFuture + Unpin","parent":null,"children":[],"decl_id":null,"docs":" Creates a new future which will select the first successful future over a list of futures.","sig":null,"attributes":[{"value":"/ Creates a new future which will select the first successful future over a list of futures.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select_ok.rs","byte_start":156878,"byte_end":156972,"line_start":19,"line_end":19,"column_start":1,"column_end":95}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select_ok.rs","byte_start":156973,"byte_end":156976,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ The returned future will wait for any future within `iter` to be ready and Ok. Unlike","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select_ok.rs","byte_start":156977,"byte_end":157066,"line_start":21,"line_end":21,"column_start":1,"column_end":90}},{"value":"/ `select_all`, this will only return the first successful completion, or the last","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select_ok.rs","byte_start":157067,"byte_end":157151,"line_start":22,"line_end":22,"column_start":1,"column_end":85}},{"value":"/ failure. This is useful in contexts where any success is desired and failures","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select_ok.rs","byte_start":157152,"byte_end":157233,"line_start":23,"line_end":23,"column_start":1,"column_end":82}},{"value":"/ are ignored, unless all the futures fail.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select_ok.rs","byte_start":157234,"byte_end":157279,"line_start":24,"line_end":24,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select_ok.rs","byte_start":157280,"byte_end":157283,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/  This function is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select_ok.rs","byte_start":157284,"byte_end":157362,"line_start":26,"line_end":26,"column_start":1,"column_end":79}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select_ok.rs","byte_start":157363,"byte_end":157420,"line_start":27,"line_end":27,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select_ok.rs","byte_start":157421,"byte_end":157424,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ # Panics","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select_ok.rs","byte_start":157425,"byte_end":157437,"line_start":29,"line_end":29,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select_ok.rs","byte_start":157438,"byte_end":157441,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ This function will panic if the iterator specified contains no items.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select_ok.rs","byte_start":157442,"byte_end":157515,"line_start":31,"line_end":31,"column_start":1,"column_end":74}}]},{"kind":"TupleVariant","id":{"krate":0,"index":10579},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/either.rs","byte_start":160275,"byte_end":160279,"line_start":30,"line_end":30,"column_start":5,"column_end":9},"name":"Left","qualname":"::future::either::Either::Left","value":"Either::Left(A)","parent":{"krate":0,"index":10576},"children":[],"decl_id":null,"docs":" First branch of the type\n","sig":null,"attributes":[{"value":"/ First branch of the type","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/either.rs","byte_start":160242,"byte_end":160270,"line_start":29,"line_end":29,"column_start":5,"column_end":33}}]},{"kind":"TupleVariant","id":{"krate":0,"index":10582},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/either.rs","byte_start":160335,"byte_end":160340,"line_start":32,"line_end":32,"column_start":5,"column_end":10},"name":"Right","qualname":"::future::either::Either::Right","value":"Either::Right(B)","parent":{"krate":0,"index":10576},"children":[],"decl_id":null,"docs":" Second branch of the type\n","sig":null,"attributes":[{"value":"/ Second branch of the type","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/either.rs","byte_start":160301,"byte_end":160330,"line_start":31,"line_end":31,"column_start":5,"column_end":34}}]},{"kind":"Enum","id":{"krate":0,"index":10576},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/either.rs","byte_start":160223,"byte_end":160229,"line_start":28,"line_end":28,"column_start":10,"column_end":16},"name":"Either","qualname":"::future::either::Either","value":"pub enum Either<A, B> { Left(A), Right(B), }","parent":null,"children":[{"krate":0,"index":10579},{"krate":0,"index":10582}],"decl_id":null,"docs":" Combines two different futures, streams, or sinks having the same associated types into a single type.","sig":null,"attributes":[{"value":"/ Combines two different futures, streams, or sinks having the same associated types into a single type.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/either.rs","byte_start":159700,"byte_end":159806,"line_start":8,"line_end":8,"column_start":1,"column_end":107}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/either.rs","byte_start":159807,"byte_end":159810,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This is useful when conditionally choosing between two distinct future types:","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/either.rs","byte_start":159811,"byte_end":159892,"line_start":10,"line_end":10,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/either.rs","byte_start":159893,"byte_end":159896,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/either.rs","byte_start":159897,"byte_end":159908,"line_start":12,"line_end":12,"column_start":1,"column_end":12}},{"value":"/ use futures::future::Either;","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/either.rs","byte_start":159909,"byte_end":159941,"line_start":13,"line_end":13,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/either.rs","byte_start":159942,"byte_end":159945,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/either.rs","byte_start":159946,"byte_end":159987,"line_start":15,"line_end":15,"column_start":1,"column_end":42}},{"value":"/ let cond = true;","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/either.rs","byte_start":159988,"byte_end":160008,"line_start":16,"line_end":16,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/either.rs","byte_start":160009,"byte_end":160012,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ let fut = if cond {","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/either.rs","byte_start":160013,"byte_end":160036,"line_start":18,"line_end":18,"column_start":1,"column_end":24}},{"value":"/     Either::Left(async move { 12 })","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/either.rs","byte_start":160037,"byte_end":160076,"line_start":19,"line_end":19,"column_start":1,"column_end":40}},{"value":"/ } else {","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/either.rs","byte_start":160077,"byte_end":160089,"line_start":20,"line_end":20,"column_start":1,"column_end":13}},{"value":"/     Either::Right(async move { 44 })","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/either.rs","byte_start":160090,"byte_end":160130,"line_start":21,"line_end":21,"column_start":1,"column_end":41}},{"value":"/ };","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/either.rs","byte_start":160131,"byte_end":160137,"line_start":22,"line_end":22,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/either.rs","byte_start":160138,"byte_end":160141,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(fut.await, 12);","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/either.rs","byte_start":160142,"byte_end":160172,"line_start":24,"line_end":24,"column_start":1,"column_end":31}},{"value":"/ # })","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/either.rs","byte_start":160173,"byte_end":160181,"line_start":25,"line_end":25,"column_start":1,"column_end":9}},{"value":"/ ```","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/either.rs","byte_start":160182,"byte_end":160189,"line_start":26,"line_end":26,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":1914},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/either.rs","byte_start":160894,"byte_end":160906,"line_start":50,"line_end":50,"column_start":12,"column_end":24},"name":"factor_first","qualname":"<Either<(T, A), (T, B)>>::factor_first","value":"pub fn factor_first(Self) -> (T, Either<A, B>)","parent":null,"children":[],"decl_id":null,"docs":" Factor out a homogeneous type from an either of pairs.","sig":null,"attributes":[{"value":"/ Factor out a homogeneous type from an either of pairs.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/either.rs","byte_start":160746,"byte_end":160804,"line_start":47,"line_end":47,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/either.rs","byte_start":160809,"byte_end":160812,"line_start":48,"line_end":48,"column_start":5,"column_end":8}},{"value":"/ Here, the homogeneous type is the first element of the pairs.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/either.rs","byte_start":160817,"byte_end":160882,"line_start":49,"line_end":49,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":1919},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/either.rs","byte_start":161286,"byte_end":161299,"line_start":62,"line_end":62,"column_start":12,"column_end":25},"name":"factor_second","qualname":"<Either<(A, T), (B, T)>>::factor_second","value":"pub fn factor_second(Self) -> (Either<A, B>, T)","parent":null,"children":[],"decl_id":null,"docs":" Factor out a homogeneous type from an either of pairs.","sig":null,"attributes":[{"value":"/ Factor out a homogeneous type from an either of pairs.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/either.rs","byte_start":161137,"byte_end":161195,"line_start":59,"line_end":59,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/either.rs","byte_start":161200,"byte_end":161203,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ Here, the homogeneous type is the second element of the pairs.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/either.rs","byte_start":161208,"byte_end":161274,"line_start":61,"line_end":61,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":1922},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/either.rs","byte_start":161587,"byte_end":161597,"line_start":72,"line_end":72,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Either<T, T>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Extract the value of an either over two equivalent types.\n","sig":null,"attributes":[{"value":"/ Extract the value of an either over two equivalent types.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/either.rs","byte_start":161514,"byte_end":161575,"line_start":71,"line_end":71,"column_start":5,"column_end":66}}]},{"kind":"Function","id":{"krate":0,"index":10610},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/abortable.rs","byte_start":12750690,"byte_end":12750699,"line_start":12,"line_end":12,"column_start":8,"column_end":17},"name":"abortable","qualname":"::future::abortable::abortable","value":"pub fn abortable<Fut>(Fut) -> (Abortable<Fut>, AbortHandle) where Fut: Future","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Abortable` future and an `AbortHandle` which can be used to stop it.","sig":null,"attributes":[{"value":"/ Creates a new `Abortable` future and an `AbortHandle` which can be used to stop it.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/abortable.rs","byte_start":12750320,"byte_end":12750407,"line_start":5,"line_end":5,"column_start":1,"column_end":88}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/abortable.rs","byte_start":12750408,"byte_end":12750411,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ This function is a convenient (but less flexible) alternative to calling","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/abortable.rs","byte_start":12750412,"byte_end":12750488,"line_start":7,"line_end":7,"column_start":1,"column_end":77}},{"value":"/ `AbortHandle::new` and `Abortable::new` manually.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/abortable.rs","byte_start":12750489,"byte_end":12750542,"line_start":8,"line_end":8,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/abortable.rs","byte_start":12750543,"byte_end":12750546,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This function is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/abortable.rs","byte_start":12750547,"byte_end":12750624,"line_start":10,"line_end":10,"column_start":1,"column_end":78}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/abortable.rs","byte_start":12750625,"byte_end":12750682,"line_start":11,"line_end":11,"column_start":1,"column_end":58}}]},{"kind":"Mod","id":{"krate":0,"index":2028},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"stream","qualname":"::stream","value":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","parent":null,"children":[{"krate":0,"index":2029},{"krate":0,"index":2030},{"krate":0,"index":2033},{"krate":0,"index":2036},{"krate":0,"index":2037},{"krate":0,"index":2040},{"krate":0,"index":2043},{"krate":0,"index":2046},{"krate":0,"index":3828},{"krate":0,"index":3829},{"krate":0,"index":3832},{"krate":0,"index":3835},{"krate":0,"index":3838},{"krate":0,"index":3841},{"krate":0,"index":3844},{"krate":0,"index":3847},{"krate":0,"index":3850},{"krate":0,"index":3853},{"krate":0,"index":3856},{"krate":0,"index":3859},{"krate":0,"index":3862},{"krate":0,"index":3865},{"krate":0,"index":3868},{"krate":0,"index":3871},{"krate":0,"index":3874},{"krate":0,"index":3877},{"krate":0,"index":3880},{"krate":0,"index":3883},{"krate":0,"index":3886},{"krate":0,"index":3889},{"krate":0,"index":3892},{"krate":0,"index":3895},{"krate":0,"index":3898},{"krate":0,"index":3901},{"krate":0,"index":3904},{"krate":0,"index":3907},{"krate":0,"index":3910},{"krate":0,"index":3913},{"krate":0,"index":3916},{"krate":0,"index":3919},{"krate":0,"index":3922},{"krate":0,"index":3925},{"krate":0,"index":3928},{"krate":0,"index":3931},{"krate":0,"index":3934},{"krate":0,"index":3935},{"krate":0,"index":3938},{"krate":0,"index":3941},{"krate":0,"index":3944},{"krate":0,"index":3945},{"krate":0,"index":3946},{"krate":0,"index":3948},{"krate":0,"index":3951},{"krate":0,"index":3954},{"krate":0,"index":4924},{"krate":0,"index":4925},{"krate":0,"index":4928},{"krate":0,"index":4931},{"krate":0,"index":4934},{"krate":0,"index":4937},{"krate":0,"index":4940},{"krate":0,"index":4943},{"krate":0,"index":4946},{"krate":0,"index":4949},{"krate":0,"index":4952},{"krate":0,"index":4955},{"krate":0,"index":4958},{"krate":0,"index":4961},{"krate":0,"index":4964},{"krate":0,"index":4967},{"krate":0,"index":4970},{"krate":0,"index":4973},{"krate":0,"index":4976},{"krate":0,"index":4979},{"krate":0,"index":4982},{"krate":0,"index":4985},{"krate":0,"index":4988},{"krate":0,"index":4991},{"krate":0,"index":4992},{"krate":0,"index":4995},{"krate":0,"index":4998},{"krate":0,"index":5001},{"krate":0,"index":5027},{"krate":0,"index":5028},{"krate":0,"index":5031},{"krate":0,"index":5034},{"krate":0,"index":5067},{"krate":0,"index":5068},{"krate":0,"index":5071},{"krate":0,"index":5074},{"krate":0,"index":5111},{"krate":0,"index":5112},{"krate":0,"index":5115},{"krate":0,"index":5118},{"krate":0,"index":5157},{"krate":0,"index":5158},{"krate":0,"index":5161},{"krate":0,"index":5164},{"krate":0,"index":5207},{"krate":0,"index":5208},{"krate":0,"index":5211},{"krate":0,"index":5214},{"krate":0,"index":5253},{"krate":0,"index":5254},{"krate":0,"index":5257},{"krate":0,"index":5260},{"krate":0,"index":5296},{"krate":0,"index":5297},{"krate":0,"index":5300},{"krate":0,"index":5303},{"krate":0,"index":5356},{"krate":0,"index":5357},{"krate":0,"index":5360},{"krate":0,"index":5363},{"krate":0,"index":5422},{"krate":0,"index":5423},{"krate":0,"index":5426},{"krate":0,"index":14425},{"krate":0,"index":14532},{"krate":0,"index":14535},{"krate":0,"index":14934},{"krate":0,"index":14937},{"krate":0,"index":15059},{"krate":0,"index":15060},{"krate":0,"index":15063},{"krate":0,"index":15066},{"krate":0,"index":15082},{"krate":0,"index":15083},{"krate":0,"index":15086},{"krate":0,"index":15089},{"krate":0,"index":15092},{"krate":0,"index":15093},{"krate":0,"index":15095},{"krate":0,"index":5429}],"decl_id":null,"docs":" Asynchronous streams.","sig":null,"attributes":[{"value":"/ Asynchronous streams.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":168044,"byte_end":168069,"line_start":1,"line_end":1,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":168070,"byte_end":168073,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module contains:","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":168074,"byte_end":168099,"line_start":3,"line_end":3,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":168100,"byte_end":168103,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ - The [`Stream`] trait, for objects that can asynchronously produce a","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":168104,"byte_end":168177,"line_start":5,"line_end":5,"column_start":1,"column_end":74}},{"value":"/   sequence of values.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":168178,"byte_end":168203,"line_start":6,"line_end":6,"column_start":1,"column_end":26}},{"value":"/ - The [`StreamExt`] and [`TryStreamExt`] trait, which provides adapters for","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":168204,"byte_end":168283,"line_start":7,"line_end":7,"column_start":1,"column_end":80}},{"value":"/   chaining and composing streams.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":168284,"byte_end":168321,"line_start":8,"line_end":8,"column_start":1,"column_end":38}},{"value":"/ - Top-level stream constructors like [`iter`](iter()) which creates a","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":168322,"byte_end":168395,"line_start":9,"line_end":9,"column_start":1,"column_end":74}},{"value":"/   stream from an iterator.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":168396,"byte_end":168426,"line_start":10,"line_end":10,"column_start":1,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":10635},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/chain.rs","byte_start":222585,"byte_end":222590,"line_start":11,"line_end":11,"column_start":16,"column_end":21},"name":"Chain","qualname":"::stream::stream::chain::Chain","value":"Chain {  }","parent":null,"children":[{"krate":0,"index":10638},{"krate":0,"index":10639}],"decl_id":null,"docs":" Stream for the [`chain`](super::StreamExt::chain) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":12561792,"byte_end":12561801,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":10684},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/collect.rs","byte_start":224715,"byte_end":224722,"line_start":13,"line_end":13,"column_start":16,"column_end":23},"name":"Collect","qualname":"::stream::stream::collect::Collect","value":"Collect {  }","parent":null,"children":[{"krate":0,"index":10687},{"krate":0,"index":10688}],"decl_id":null,"docs":" Future for the [`collect`](super::StreamExt::collect) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":12561792,"byte_end":12561801,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":10735},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/unzip.rs","byte_start":226156,"byte_end":226161,"line_start":13,"line_end":13,"column_start":16,"column_end":21},"name":"Unzip","qualname":"::stream::stream::unzip::Unzip","value":"Unzip {  }","parent":null,"children":[{"krate":0,"index":10739},{"krate":0,"index":10740},{"krate":0,"index":10741}],"decl_id":null,"docs":" Future for the [`unzip`](super::StreamExt::unzip) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":12561792,"byte_end":12561801,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":10793},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/concat.rs","byte_start":227995,"byte_end":228001,"line_start":12,"line_end":12,"column_start":16,"column_end":22},"name":"Concat","qualname":"::stream::stream::concat::Concat","value":"Concat {  }","parent":null,"children":[{"krate":0,"index":10795},{"krate":0,"index":10796}],"decl_id":null,"docs":" Future for the [`concat`](super::StreamExt::concat) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":12561792,"byte_end":12561801,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":10833},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/cycle.rs","byte_start":229628,"byte_end":229633,"line_start":12,"line_end":12,"column_start":16,"column_end":21},"name":"Cycle","qualname":"::stream::stream::cycle::Cycle","value":"Cycle {  }","parent":null,"children":[{"krate":0,"index":10835},{"krate":0,"index":10836}],"decl_id":null,"docs":" Stream for the [`cycle`](super::StreamExt::cycle) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":12561792,"byte_end":12561801,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":10873},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/enumerate.rs","byte_start":231280,"byte_end":231289,"line_start":13,"line_end":13,"column_start":16,"column_end":25},"name":"Enumerate","qualname":"::stream::stream::enumerate::Enumerate","value":"Enumerate {  }","parent":null,"children":[{"krate":0,"index":10875},{"krate":0,"index":10876}],"decl_id":null,"docs":" Stream for the [`enumerate`](super::StreamExt::enumerate) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":12561792,"byte_end":12561801,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":10916},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/filter.rs","byte_start":232921,"byte_end":232927,"line_start":15,"line_end":15,"column_start":16,"column_end":22},"name":"Filter","qualname":"::stream::stream::filter::Filter","value":"Filter {  }","parent":null,"children":[{"krate":0,"index":10920},{"krate":0,"index":10921},{"krate":0,"index":10922},{"krate":0,"index":10923}],"decl_id":null,"docs":" Stream for the [`filter`](super::StreamExt::filter) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":12561792,"byte_end":12561801,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":10985},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/filter_map.rs","byte_start":236321,"byte_end":236330,"line_start":15,"line_end":15,"column_start":16,"column_end":25},"name":"FilterMap","qualname":"::stream::stream::filter_map::FilterMap","value":"FilterMap {  }","parent":null,"children":[{"krate":0,"index":10989},{"krate":0,"index":10990},{"krate":0,"index":10991}],"decl_id":null,"docs":" Stream for the [`filter_map`](super::StreamExt::filter_map) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":12561792,"byte_end":12561801,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":11057},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/flatten.rs","byte_start":239336,"byte_end":239343,"line_start":13,"line_end":13,"column_start":16,"column_end":23},"name":"Flatten","qualname":"::stream::stream::flatten::Flatten","value":"Flatten {  }","parent":null,"children":[{"krate":0,"index":11060},{"krate":0,"index":11061}],"decl_id":null,"docs":" Stream for the [`flatten`](super::StreamExt::flatten) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":12561792,"byte_end":12561801,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":11109},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":173315,"byte_end":173322,"line_start":63,"line_end":63,"column_start":5,"column_end":12},"name":"Flatten","qualname":"::stream::stream::Flatten","value":"Flatten {  }","parent":null,"children":[{"krate":0,"index":11111}],"decl_id":null,"docs":" Stream for the [`flatten`](StreamExt::flatten) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":12561792,"byte_end":12561801,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":11170},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/fold.rs","byte_start":241160,"byte_end":241164,"line_start":12,"line_end":12,"column_start":16,"column_end":20},"name":"Fold","qualname":"::stream::stream::fold::Fold","value":"Fold {  }","parent":null,"children":[{"krate":0,"index":11175},{"krate":0,"index":11176},{"krate":0,"index":11177},{"krate":0,"index":11178}],"decl_id":null,"docs":" Future for the [`fold`](super::StreamExt::fold) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":12561792,"byte_end":12561801,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":11248},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/forward.rs","byte_start":243713,"byte_end":243720,"line_start":15,"line_end":15,"column_start":16,"column_end":23},"name":"Forward","qualname":"::stream::stream::forward::Forward","value":"Forward {  }","parent":null,"children":[{"krate":0,"index":11252},{"krate":0,"index":11253},{"krate":0,"index":11254}],"decl_id":null,"docs":" Future for the [`forward`](super::StreamExt::forward) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":12561792,"byte_end":12561801,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":11304},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":173816,"byte_end":173823,"line_start":80,"line_end":80,"column_start":5,"column_end":12},"name":"Forward","qualname":"::stream::stream::Forward","value":"Forward {  }","parent":null,"children":[{"krate":0,"index":11307}],"decl_id":null,"docs":" Future for the [`forward`](super::StreamExt::forward) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":12561792,"byte_end":12561801,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":11362},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/for_each.rs","byte_start":245956,"byte_end":245963,"line_start":12,"line_end":12,"column_start":16,"column_end":23},"name":"ForEach","qualname":"::stream::stream::for_each::ForEach","value":"ForEach {  }","parent":null,"children":[{"krate":0,"index":11366},{"krate":0,"index":11367},{"krate":0,"index":11368}],"decl_id":null,"docs":" Future for the [`for_each`](super::StreamExt::for_each) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":12561792,"byte_end":12561801,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":11424},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/fuse.rs","byte_start":247920,"byte_end":247924,"line_start":13,"line_end":13,"column_start":16,"column_end":20},"name":"Fuse","qualname":"::stream::stream::fuse::Fuse","value":"Fuse {  }","parent":null,"children":[{"krate":0,"index":11426},{"krate":0,"index":11427}],"decl_id":null,"docs":" Stream for the [`fuse`](super::StreamExt::fuse) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":12561792,"byte_end":12561801,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":2761},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/fuse.rs","byte_start":248376,"byte_end":248383,"line_start":30,"line_end":30,"column_start":12,"column_end":19},"name":"is_done","qualname":"<Fuse<St>>::is_done","value":"pub fn is_done(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether the underlying stream has finished or not.","sig":null,"attributes":[{"value":"/ Returns whether the underlying stream has finished or not.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/fuse.rs","byte_start":248107,"byte_end":248169,"line_start":25,"line_end":25,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/fuse.rs","byte_start":248174,"byte_end":248177,"line_start":26,"line_end":26,"column_start":5,"column_end":8}},{"value":"/ If this method returns `true`, then all future calls to poll are","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/fuse.rs","byte_start":248182,"byte_end":248250,"line_start":27,"line_end":27,"column_start":5,"column_end":73}},{"value":"/ guaranteed to return `None`. If this returns `false`, then the","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/fuse.rs","byte_start":248255,"byte_end":248321,"line_start":28,"line_end":28,"column_start":5,"column_end":71}},{"value":"/ underlying stream is still in use.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/fuse.rs","byte_start":248326,"byte_end":248364,"line_start":29,"line_end":29,"column_start":5,"column_end":43}}]},{"kind":"Struct","id":{"krate":0,"index":11467},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/into_future.rs","byte_start":249742,"byte_end":249754,"line_start":11,"line_end":11,"column_start":12,"column_end":24},"name":"StreamFuture","qualname":"::stream::stream::into_future::StreamFuture","value":"StreamFuture {  }","parent":null,"children":[{"krate":0,"index":11469}],"decl_id":null,"docs":" Future for the [`into_future`](super::StreamExt::into_future) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`into_future`](super::StreamExt::into_future) method.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/into_future.rs","byte_start":249572,"byte_end":249645,"line_start":8,"line_end":8,"column_start":1,"column_end":74}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/into_future.rs","byte_start":249663,"byte_end":249730,"line_start":10,"line_end":10,"column_start":1,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":2807},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/into_future.rs","byte_start":250317,"byte_end":250324,"line_start":27,"line_end":27,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<StreamFuture<St>>::get_ref","value":"pub fn get_ref(&Self) -> Option<&St>","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying stream that this combinator is\n pulling from.","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying stream that this combinator is","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/into_future.rs","byte_start":249925,"byte_end":249998,"line_start":20,"line_end":20,"column_start":5,"column_end":78}},{"value":"/ pulling from.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/into_future.rs","byte_start":250003,"byte_end":250020,"line_start":21,"line_end":21,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/into_future.rs","byte_start":250025,"byte_end":250028,"line_start":22,"line_end":22,"column_start":5,"column_end":8}},{"value":"/ This method returns an `Option` to account for the fact that `StreamFuture`'s","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/into_future.rs","byte_start":250033,"byte_end":250114,"line_start":23,"line_end":23,"column_start":5,"column_end":86}},{"value":"/ implementation of `Future::poll` consumes the underlying stream during polling","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/into_future.rs","byte_start":250119,"byte_end":250201,"line_start":24,"line_end":24,"column_start":5,"column_end":87}},{"value":"/ in order to return it to the caller of `Future::poll` if the stream yielded","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/into_future.rs","byte_start":250206,"byte_end":250285,"line_start":25,"line_end":25,"column_start":5,"column_end":84}},{"value":"/ an element.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/into_future.rs","byte_start":250290,"byte_end":250305,"line_start":26,"line_end":26,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":2808},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/into_future.rs","byte_start":250935,"byte_end":250942,"line_start":41,"line_end":41,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<StreamFuture<St>>::get_mut","value":"pub fn get_mut(&mut Self) -> Option<&mut St>","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying stream that this","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/into_future.rs","byte_start":250389,"byte_end":250456,"line_start":31,"line_end":31,"column_start":5,"column_end":72}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/into_future.rs","byte_start":250461,"byte_end":250492,"line_start":32,"line_end":32,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/into_future.rs","byte_start":250497,"byte_end":250500,"line_start":33,"line_end":33,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/into_future.rs","byte_start":250505,"byte_end":250578,"line_start":34,"line_end":34,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/into_future.rs","byte_start":250583,"byte_end":250638,"line_start":35,"line_end":35,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/into_future.rs","byte_start":250643,"byte_end":250646,"line_start":36,"line_end":36,"column_start":5,"column_end":8}},{"value":"/ This method returns an `Option` to account for the fact that `StreamFuture`'s","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/into_future.rs","byte_start":250651,"byte_end":250732,"line_start":37,"line_end":37,"column_start":5,"column_end":86}},{"value":"/ implementation of `Future::poll` consumes the underlying stream during polling","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/into_future.rs","byte_start":250737,"byte_end":250819,"line_start":38,"line_end":38,"column_start":5,"column_end":87}},{"value":"/ in order to return it to the caller of `Future::poll` if the stream yielded","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/into_future.rs","byte_start":250824,"byte_end":250903,"line_start":39,"line_end":39,"column_start":5,"column_end":84}},{"value":"/ an element.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/into_future.rs","byte_start":250908,"byte_end":250923,"line_start":40,"line_end":40,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":2809},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/into_future.rs","byte_start":251568,"byte_end":251579,"line_start":55,"line_end":55,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<StreamFuture<St>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> Option<Pin<&mut St>>","parent":null,"children":[],"decl_id":null,"docs":" Acquires a pinned mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a pinned mutable reference to the underlying stream that this","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/into_future.rs","byte_start":251015,"byte_end":251089,"line_start":45,"line_end":45,"column_start":5,"column_end":79}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/into_future.rs","byte_start":251094,"byte_end":251125,"line_start":46,"line_end":46,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/into_future.rs","byte_start":251130,"byte_end":251133,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/into_future.rs","byte_start":251138,"byte_end":251211,"line_start":48,"line_end":48,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/into_future.rs","byte_start":251216,"byte_end":251271,"line_start":49,"line_end":49,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/into_future.rs","byte_start":251276,"byte_end":251279,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ This method returns an `Option` to account for the fact that `StreamFuture`'s","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/into_future.rs","byte_start":251284,"byte_end":251365,"line_start":51,"line_end":51,"column_start":5,"column_end":86}},{"value":"/ implementation of `Future::poll` consumes the underlying stream during polling","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/into_future.rs","byte_start":251370,"byte_end":251452,"line_start":52,"line_end":52,"column_start":5,"column_end":87}},{"value":"/ in order to return it to the caller of `Future::poll` if the stream yielded","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/into_future.rs","byte_start":251457,"byte_end":251536,"line_start":53,"line_end":53,"column_start":5,"column_end":84}},{"value":"/ an element.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/into_future.rs","byte_start":251541,"byte_end":251556,"line_start":54,"line_end":54,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":2810},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/into_future.rs","byte_start":252212,"byte_end":252222,"line_start":68,"line_end":68,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<StreamFuture<St>>::into_inner","value":"pub fn into_inner(Self) -> Option<St>","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying stream.","sig":null,"attributes":[{"value":"/ Consumes this combinator, returning the underlying stream.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/into_future.rs","byte_start":251692,"byte_end":251754,"line_start":59,"line_end":59,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/into_future.rs","byte_start":251759,"byte_end":251762,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ Note that this may discard intermediate state of this combinator, so","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/into_future.rs","byte_start":251767,"byte_end":251839,"line_start":61,"line_end":61,"column_start":5,"column_end":77}},{"value":"/ care should be taken to avoid losing resources when this is called.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/into_future.rs","byte_start":251844,"byte_end":251915,"line_start":62,"line_end":62,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/into_future.rs","byte_start":251920,"byte_end":251923,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ This method returns an `Option` to account for the fact that `StreamFuture`'s","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/into_future.rs","byte_start":251928,"byte_end":252009,"line_start":64,"line_end":64,"column_start":5,"column_end":86}},{"value":"/ implementation of `Future::poll` consumes the underlying stream during polling","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/into_future.rs","byte_start":252014,"byte_end":252096,"line_start":65,"line_end":65,"column_start":5,"column_end":87}},{"value":"/ in order to return it to the caller of `Future::poll` if the stream yielded","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/into_future.rs","byte_start":252101,"byte_end":252180,"line_start":66,"line_end":66,"column_start":5,"column_end":84}},{"value":"/ an element.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/into_future.rs","byte_start":252185,"byte_end":252200,"line_start":67,"line_end":67,"column_start":5,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":11476},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":174442,"byte_end":174449,"line_start":100,"line_end":100,"column_start":5,"column_end":12},"name":"Inspect","qualname":"::stream::stream::Inspect","value":"Inspect {  }","parent":null,"children":[{"krate":0,"index":11479}],"decl_id":null,"docs":" Stream for the [`inspect`](StreamExt::inspect) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":12561792,"byte_end":12561801,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":11551},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/map.rs","byte_start":253246,"byte_end":253249,"line_start":15,"line_end":15,"column_start":16,"column_end":19},"name":"Map","qualname":"::stream::stream::map::Map","value":"Map {  }","parent":null,"children":[{"krate":0,"index":11554},{"krate":0,"index":11555}],"decl_id":null,"docs":" Stream for the [`map`](super::StreamExt::map) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":12561792,"byte_end":12561801,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":11608},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":174810,"byte_end":174817,"line_start":111,"line_end":111,"column_start":5,"column_end":12},"name":"FlatMap","qualname":"::stream::stream::FlatMap","value":"FlatMap {  }","parent":null,"children":[{"krate":0,"index":11612}],"decl_id":null,"docs":" Stream for the [`flat_map`](StreamExt::flat_map) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":12561792,"byte_end":12561801,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":11697},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/next.rs","byte_start":254909,"byte_end":254913,"line_start":10,"line_end":10,"column_start":12,"column_end":16},"name":"Next","qualname":"::stream::stream::next::Next","value":"Next {  }","parent":null,"children":[{"krate":0,"index":11700}],"decl_id":null,"docs":" Future for the [`next`](super::StreamExt::next) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`next`](super::StreamExt::next) method.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/next.rs","byte_start":254753,"byte_end":254812,"line_start":7,"line_end":7,"column_start":1,"column_end":60}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/next.rs","byte_start":254830,"byte_end":254897,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":11705},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/select_next_some.rs","byte_start":255921,"byte_end":255935,"line_start":12,"line_end":12,"column_start":12,"column_end":26},"name":"SelectNextSome","qualname":"::stream::stream::select_next_some::SelectNextSome","value":"SelectNextSome {  }","parent":null,"children":[{"krate":0,"index":11708}],"decl_id":null,"docs":" Future for the [`select_next_some`](super::StreamExt::select_next_some)\n method.\n","sig":null,"attributes":[{"value":"/ Future for the [`select_next_some`](super::StreamExt::select_next_some)","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/select_next_some.rs","byte_start":255737,"byte_end":255812,"line_start":8,"line_end":8,"column_start":1,"column_end":76}},{"value":"/ method.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/select_next_some.rs","byte_start":255813,"byte_end":255824,"line_start":9,"line_end":9,"column_start":1,"column_end":12}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/select_next_some.rs","byte_start":255842,"byte_end":255909,"line_start":11,"line_end":11,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":11718},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":257526,"byte_end":257534,"line_start":22,"line_end":22,"column_start":16,"column_end":24},"name":"Peekable","qualname":"::stream::stream::peek::Peekable","value":"Peekable {  }","parent":null,"children":[{"krate":0,"index":11720},{"krate":0,"index":11721}],"decl_id":null,"docs":" A `Stream` that implements a `peek` method.","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":12561792,"byte_end":12561801,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":3019},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":257974,"byte_end":257978,"line_start":38,"line_end":38,"column_start":12,"column_end":16},"name":"peek","qualname":"<Peekable<St>>::peek","value":"pub fn peek(Pin<&mut Self>) -> Peek<, St>","parent":null,"children":[],"decl_id":null,"docs":" Produces a `Peek` future which retrieves a reference to the next item\n in the stream, or `None` if the underlying stream terminates.\n","sig":null,"attributes":[{"value":"/ Produces a `Peek` future which retrieves a reference to the next item","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":257819,"byte_end":257892,"line_start":36,"line_end":36,"column_start":5,"column_end":78}},{"value":"/ in the stream, or `None` if the underlying stream terminates.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":257897,"byte_end":257962,"line_start":37,"line_end":37,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":3020},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":258303,"byte_end":258312,"line_start":46,"line_end":46,"column_start":12,"column_end":21},"name":"poll_peek","qualname":"<Peekable<St>>::poll_peek","value":"pub fn poll_peek(Pin<&mut Self>, &mut Context) -> Poll<Option<&St::Item>>","parent":null,"children":[],"decl_id":null,"docs":" Peek retrieves a reference to the next item in the stream.","sig":null,"attributes":[{"value":"/ Peek retrieves a reference to the next item in the stream.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":258065,"byte_end":258127,"line_start":42,"line_end":42,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":258132,"byte_end":258135,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/ This method polls the underlying stream and return either a reference","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":258140,"byte_end":258213,"line_start":44,"line_end":44,"column_start":5,"column_end":78}},{"value":"/ to the next item if the stream is ready or passes through any errors.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":258218,"byte_end":258291,"line_start":45,"line_end":45,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":3021},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":260276,"byte_end":260283,"line_start":101,"line_end":101,"column_start":12,"column_end":19},"name":"next_if","qualname":"<Peekable<St>>::next_if","value":"pub fn next_if<F>(Pin<&mut Self>, F) -> NextIf<, St, F> where\nF: FnOnce(&St::Item) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Creates a future which will consume and return the next value of this\n stream if a condition is true.","sig":null,"attributes":[{"value":"/ Creates a future which will consume and return the next value of this","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":258748,"byte_end":258821,"line_start":60,"line_end":60,"column_start":5,"column_end":78}},{"value":"/ stream if a condition is true.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":258826,"byte_end":258860,"line_start":61,"line_end":61,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":258865,"byte_end":258868,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ If `func` returns `true` for the next value of this stream, consume and","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":258873,"byte_end":258948,"line_start":63,"line_end":63,"column_start":5,"column_end":80}},{"value":"/ return it. Otherwise, return `None`.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":258953,"byte_end":258993,"line_start":64,"line_end":64,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":258998,"byte_end":259001,"line_start":65,"line_end":65,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":259006,"byte_end":259020,"line_start":66,"line_end":66,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":259025,"byte_end":259028,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ Consume a number if it's equal to 0.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":259033,"byte_end":259073,"line_start":68,"line_end":68,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":259078,"byte_end":259081,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":259086,"byte_end":259093,"line_start":70,"line_end":70,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":259098,"byte_end":259139,"line_start":71,"line_end":71,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":259144,"byte_end":259187,"line_start":72,"line_end":72,"column_start":5,"column_end":48}},{"value":"/ use futures::pin_mut;","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":259192,"byte_end":259217,"line_start":73,"line_end":73,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":259222,"byte_end":259225,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(0..5).peekable();","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":259230,"byte_end":259277,"line_start":75,"line_end":75,"column_start":5,"column_end":52}},{"value":"/ pin_mut!(stream);","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":259282,"byte_end":259303,"line_start":76,"line_end":76,"column_start":5,"column_end":26}},{"value":"/ // The first item of the stream is 0; consume it.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":259308,"byte_end":259361,"line_start":77,"line_end":77,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(stream.as_mut().next_if(|&x| x == 0).await, Some(0));","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":259366,"byte_end":259434,"line_start":78,"line_end":78,"column_start":5,"column_end":73}},{"value":"/ // The next item returned is now 1, so `consume` will return `false`.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":259439,"byte_end":259512,"line_start":79,"line_end":79,"column_start":5,"column_end":78}},{"value":"/ assert_eq!(stream.as_mut().next_if(|&x| x == 0).await, None);","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":259517,"byte_end":259582,"line_start":80,"line_end":80,"column_start":5,"column_end":70}},{"value":"/ // `next_if` saves the value of the next item if it was not equal to `expected`.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":259587,"byte_end":259671,"line_start":81,"line_end":81,"column_start":5,"column_end":89}},{"value":"/ assert_eq!(stream.next().await, Some(1));","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":259676,"byte_end":259721,"line_start":82,"line_end":82,"column_start":5,"column_end":50}},{"value":"/ # });","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":259726,"byte_end":259735,"line_start":83,"line_end":83,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":259740,"byte_end":259747,"line_start":84,"line_end":84,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":259752,"byte_end":259755,"line_start":85,"line_end":85,"column_start":5,"column_end":8}},{"value":"/ Consume any number less than 10.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":259760,"byte_end":259796,"line_start":86,"line_end":86,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":259801,"byte_end":259804,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":259809,"byte_end":259816,"line_start":88,"line_end":88,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":259821,"byte_end":259862,"line_start":89,"line_end":89,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":259867,"byte_end":259910,"line_start":90,"line_end":90,"column_start":5,"column_end":48}},{"value":"/ use futures::pin_mut;","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":259915,"byte_end":259940,"line_start":91,"line_end":91,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":259945,"byte_end":259948,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..20).peekable();","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":259953,"byte_end":260001,"line_start":93,"line_end":93,"column_start":5,"column_end":53}},{"value":"/ pin_mut!(stream);","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":260006,"byte_end":260027,"line_start":94,"line_end":94,"column_start":5,"column_end":26}},{"value":"/ // Consume all numbers less than 10","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":260032,"byte_end":260071,"line_start":95,"line_end":95,"column_start":5,"column_end":44}},{"value":"/ while stream.as_mut().next_if(|&x| x < 10).await.is_some() {}","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":260076,"byte_end":260141,"line_start":96,"line_end":96,"column_start":5,"column_end":70}},{"value":"/ // The next value returned will be 10","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":260146,"byte_end":260187,"line_start":97,"line_end":97,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(stream.next().await, Some(10));","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":260192,"byte_end":260238,"line_start":98,"line_end":98,"column_start":5,"column_end":51}},{"value":"/ # });","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":260243,"byte_end":260252,"line_start":99,"line_end":99,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":260257,"byte_end":260264,"line_start":100,"line_end":100,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3023},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":261307,"byte_end":261317,"line_start":130,"line_end":130,"column_start":12,"column_end":22},"name":"next_if_eq","qualname":"<Peekable<St>>::next_if_eq","value":"pub fn next_if_eq<'a, T: ?Sized>(Pin<&'a mut Self>, &'a T) -> NextIfEq where\nT, St::Item: PartialEq<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a future which will consume and return the next item if it is\n equal to `expected`.","sig":null,"attributes":[{"value":"/ Creates a future which will consume and return the next item if it is","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":260449,"byte_end":260522,"line_start":108,"line_end":108,"column_start":5,"column_end":78}},{"value":"/ equal to `expected`.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":260527,"byte_end":260551,"line_start":109,"line_end":109,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":260556,"byte_end":260559,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":260564,"byte_end":260577,"line_start":111,"line_end":111,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":260582,"byte_end":260585,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ Consume a number if it's equal to 0.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":260590,"byte_end":260630,"line_start":113,"line_end":113,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":260635,"byte_end":260638,"line_start":114,"line_end":114,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":260643,"byte_end":260650,"line_start":115,"line_end":115,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":260655,"byte_end":260696,"line_start":116,"line_end":116,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":260701,"byte_end":260744,"line_start":117,"line_end":117,"column_start":5,"column_end":48}},{"value":"/ use futures::pin_mut;","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":260749,"byte_end":260774,"line_start":118,"line_end":118,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":260779,"byte_end":260782,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(0..5).peekable();","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":260787,"byte_end":260834,"line_start":120,"line_end":120,"column_start":5,"column_end":52}},{"value":"/ pin_mut!(stream);","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":260839,"byte_end":260860,"line_start":121,"line_end":121,"column_start":5,"column_end":26}},{"value":"/ // The first item of the stream is 0; consume it.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":260865,"byte_end":260918,"line_start":122,"line_end":122,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(stream.as_mut().next_if_eq(&0).await, Some(0));","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":260923,"byte_end":260985,"line_start":123,"line_end":123,"column_start":5,"column_end":67}},{"value":"/ // The next item returned is now 1, so `consume` will return `false`.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":260990,"byte_end":261063,"line_start":124,"line_end":124,"column_start":5,"column_end":78}},{"value":"/ assert_eq!(stream.as_mut().next_if_eq(&0).await, None);","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":261068,"byte_end":261127,"line_start":125,"line_end":125,"column_start":5,"column_end":64}},{"value":"/ // `next_if_eq` saves the value of the next item if it was not equal to `expected`.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":261132,"byte_end":261219,"line_start":126,"line_end":126,"column_start":5,"column_end":92}},{"value":"/ assert_eq!(stream.next().await, Some(1));","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":261224,"byte_end":261269,"line_start":127,"line_end":127,"column_start":5,"column_end":50}},{"value":"/ # });","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":261274,"byte_end":261283,"line_start":128,"line_end":128,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":261288,"byte_end":261295,"line_start":129,"line_end":129,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":11761},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":262835,"byte_end":262839,"line_start":184,"line_end":184,"column_start":16,"column_end":20},"name":"Peek","qualname":"::stream::stream::peek::Peek","value":"Peek {  }","parent":null,"children":[{"krate":0,"index":11764}],"decl_id":null,"docs":" Future for the [`Peekable::peek`](self::Peekable::peek) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless polled\"","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":12561792,"byte_end":12561801,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":11802},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":263895,"byte_end":263901,"line_start":226,"line_end":226,"column_start":16,"column_end":22},"name":"NextIf","qualname":"::stream::stream::peek::NextIf","value":"NextIf {  }","parent":null,"children":[{"krate":0,"index":11806}],"decl_id":null,"docs":" Future for the [`Peekable::next_if`](self::Peekable::next_if) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless polled\"","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":12561792,"byte_end":12561801,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":11851},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":265765,"byte_end":265773,"line_start":285,"line_end":285,"column_start":16,"column_end":24},"name":"NextIfEq","qualname":"::stream::stream::peek::NextIfEq","value":"NextIfEq {  }","parent":null,"children":[{"krate":0,"index":11855}],"decl_id":null,"docs":" Future for the [`Peekable::next_if_eq`](self::Peekable::next_if_eq) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless polled\"","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":12561792,"byte_end":12561801,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":11905},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/skip.rs","byte_start":267390,"byte_end":267394,"line_start":13,"line_end":13,"column_start":16,"column_end":20},"name":"Skip","qualname":"::stream::stream::skip::Skip","value":"Skip {  }","parent":null,"children":[{"krate":0,"index":11907},{"krate":0,"index":11908}],"decl_id":null,"docs":" Stream for the [`skip`](super::StreamExt::skip) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":12561792,"byte_end":12561801,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":11948},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/skip_while.rs","byte_start":269157,"byte_end":269166,"line_start":14,"line_end":14,"column_start":16,"column_end":25},"name":"SkipWhile","qualname":"::stream::stream::skip_while::SkipWhile","value":"SkipWhile {  }","parent":null,"children":[{"krate":0,"index":11952},{"krate":0,"index":11953},{"krate":0,"index":11954},{"krate":0,"index":11955},{"krate":0,"index":11956}],"decl_id":null,"docs":" Stream for the [`skip_while`](super::StreamExt::skip_while) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":12561792,"byte_end":12561801,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":12026},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/take.rs","byte_start":272670,"byte_end":272674,"line_start":14,"line_end":14,"column_start":16,"column_end":20},"name":"Take","qualname":"::stream::stream::take::Take","value":"Take {  }","parent":null,"children":[{"krate":0,"index":12028},{"krate":0,"index":12029}],"decl_id":null,"docs":" Stream for the [`take`](super::StreamExt::take) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":12561792,"byte_end":12561801,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":12069},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/take_while.rs","byte_start":274710,"byte_end":274719,"line_start":14,"line_end":14,"column_start":16,"column_end":25},"name":"TakeWhile","qualname":"::stream::stream::take_while::TakeWhile","value":"TakeWhile {  }","parent":null,"children":[{"krate":0,"index":12073},{"krate":0,"index":12074},{"krate":0,"index":12075},{"krate":0,"index":12076},{"krate":0,"index":12077}],"decl_id":null,"docs":" Stream for the [`take_while`](super::StreamExt::take_while) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":12561792,"byte_end":12561801,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":12142},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/take_until.rs","byte_start":278199,"byte_end":278208,"line_start":16,"line_end":16,"column_start":16,"column_end":25},"name":"TakeUntil","qualname":"::stream::stream::take_until::TakeUntil","value":"TakeUntil {  }","parent":null,"children":[{"krate":0,"index":12145},{"krate":0,"index":12146},{"krate":0,"index":12147},{"krate":0,"index":12148}],"decl_id":null,"docs":" Stream for the [`take_until`](super::StreamExt::take_until) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":12561792,"byte_end":12561801,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":3366},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/take_until.rs","byte_start":279492,"byte_end":279503,"line_start":56,"line_end":56,"column_start":12,"column_end":23},"name":"take_future","qualname":"<TakeUntil<St, Fut>>::take_future","value":"pub fn take_future(&mut Self) -> Option<Fut>","parent":null,"children":[],"decl_id":null,"docs":" Extract the stopping future out of the combinator.\n The future is returned only if it isn't resolved yet, ie. if the stream isn't stopped yet.\n Taking out the future means the combinator will be yielding\n elements from the wrapped stream without ever stopping it.\n","sig":null,"attributes":[{"value":"/ Extract the stopping future out of the combinator.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/take_until.rs","byte_start":279192,"byte_end":279246,"line_start":52,"line_end":52,"column_start":5,"column_end":59}},{"value":"/ The future is returned only if it isn't resolved yet, ie. if the stream isn't stopped yet.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/take_until.rs","byte_start":279251,"byte_end":279345,"line_start":53,"line_end":53,"column_start":5,"column_end":99}},{"value":"/ Taking out the future means the combinator will be yielding","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/take_until.rs","byte_start":279350,"byte_end":279413,"line_start":54,"line_end":54,"column_start":5,"column_end":68}},{"value":"/ elements from the wrapped stream without ever stopping it.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/take_until.rs","byte_start":279418,"byte_end":279480,"line_start":55,"line_end":55,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":3367},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/take_until.rs","byte_start":280787,"byte_end":280798,"line_start":100,"line_end":100,"column_start":12,"column_end":23},"name":"take_result","qualname":"<TakeUntil<St, Fut>>::take_result","value":"pub fn take_result(&mut Self) -> Option<Fut::Output>","parent":null,"children":[],"decl_id":null,"docs":" Once the stopping future is resolved, this method can be used\n to extract the value returned by the stopping future.","sig":null,"attributes":[{"value":"/ Once the stopping future is resolved, this method can be used","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/take_until.rs","byte_start":279640,"byte_end":279705,"line_start":64,"line_end":64,"column_start":5,"column_end":70}},{"value":"/ to extract the value returned by the stopping future.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/take_until.rs","byte_start":279710,"byte_end":279767,"line_start":65,"line_end":65,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/take_until.rs","byte_start":279772,"byte_end":279775,"line_start":66,"line_end":66,"column_start":5,"column_end":8}},{"value":"/ This may be used to retrieve arbitrary data from the stopping","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/take_until.rs","byte_start":279780,"byte_end":279845,"line_start":67,"line_end":67,"column_start":5,"column_end":70}},{"value":"/ future, for example a reason why the stream was stopped.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/take_until.rs","byte_start":279850,"byte_end":279910,"line_start":68,"line_end":68,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/take_until.rs","byte_start":279915,"byte_end":279918,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ This method will return `None` if the future isn't resolved yet,","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/take_until.rs","byte_start":279923,"byte_end":279991,"line_start":70,"line_end":70,"column_start":5,"column_end":73}},{"value":"/ or if the result was already taken out.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/take_until.rs","byte_start":279996,"byte_end":280039,"line_start":71,"line_end":71,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/take_until.rs","byte_start":280044,"byte_end":280047,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/take_until.rs","byte_start":280052,"byte_end":280066,"line_start":73,"line_end":73,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/take_until.rs","byte_start":280071,"byte_end":280074,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/take_until.rs","byte_start":280079,"byte_end":280086,"line_start":75,"line_end":75,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/take_until.rs","byte_start":280091,"byte_end":280132,"line_start":76,"line_end":76,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/take_until.rs","byte_start":280137,"byte_end":280161,"line_start":77,"line_end":77,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/take_until.rs","byte_start":280166,"byte_end":280209,"line_start":78,"line_end":78,"column_start":5,"column_end":48}},{"value":"/ use futures::task::Poll;","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/take_until.rs","byte_start":280214,"byte_end":280242,"line_start":79,"line_end":79,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/take_until.rs","byte_start":280247,"byte_end":280250,"line_start":80,"line_end":80,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=10);","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/take_until.rs","byte_start":280255,"byte_end":280293,"line_start":81,"line_end":81,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/take_until.rs","byte_start":280298,"byte_end":280301,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ let mut i = 0;","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/take_until.rs","byte_start":280306,"byte_end":280324,"line_start":83,"line_end":83,"column_start":5,"column_end":23}},{"value":"/ let stop_fut = future::poll_fn(|_cx| {","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/take_until.rs","byte_start":280329,"byte_end":280371,"line_start":84,"line_end":84,"column_start":5,"column_end":47}},{"value":"/     i += 1;","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/take_until.rs","byte_start":280376,"byte_end":280391,"line_start":85,"line_end":85,"column_start":5,"column_end":20}},{"value":"/     if i <= 5 {","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/take_until.rs","byte_start":280396,"byte_end":280415,"line_start":86,"line_end":86,"column_start":5,"column_end":24}},{"value":"/         Poll::Pending","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/take_until.rs","byte_start":280420,"byte_end":280445,"line_start":87,"line_end":87,"column_start":5,"column_end":30}},{"value":"/     } else {","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/take_until.rs","byte_start":280450,"byte_end":280466,"line_start":88,"line_end":88,"column_start":5,"column_end":21}},{"value":"/         Poll::Ready(\"reason\")","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/take_until.rs","byte_start":280471,"byte_end":280504,"line_start":89,"line_end":89,"column_start":5,"column_end":38}},{"value":"/     }","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/take_until.rs","byte_start":280509,"byte_end":280518,"line_start":90,"line_end":90,"column_start":5,"column_end":14}},{"value":"/ });","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/take_until.rs","byte_start":280523,"byte_end":280530,"line_start":91,"line_end":91,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/take_until.rs","byte_start":280535,"byte_end":280538,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ let mut stream = stream.take_until(stop_fut);","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/take_until.rs","byte_start":280543,"byte_end":280592,"line_start":93,"line_end":93,"column_start":5,"column_end":54}},{"value":"/ let _ = stream.by_ref().collect::<Vec<_>>().await;","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/take_until.rs","byte_start":280597,"byte_end":280651,"line_start":94,"line_end":94,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/take_until.rs","byte_start":280656,"byte_end":280659,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ let result = stream.take_result().unwrap();","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/take_until.rs","byte_start":280664,"byte_end":280711,"line_start":96,"line_end":96,"column_start":5,"column_end":52}},{"value":"/ assert_eq!(result, \"reason\");","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/take_until.rs","byte_start":280716,"byte_end":280749,"line_start":97,"line_end":97,"column_start":5,"column_end":38}},{"value":"/ # });","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/take_until.rs","byte_start":280754,"byte_end":280763,"line_start":98,"line_end":98,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/take_until.rs","byte_start":280768,"byte_end":280775,"line_start":99,"line_end":99,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3368},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/take_until.rs","byte_start":280974,"byte_end":280984,"line_start":106,"line_end":106,"column_start":12,"column_end":22},"name":"is_stopped","qualname":"<TakeUntil<St, Fut>>::is_stopped","value":"pub fn is_stopped(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Whether the stream was stopped yet by the stopping future\n being resolved.\n","sig":null,"attributes":[{"value":"/ Whether the stream was stopped yet by the stopping future","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/take_until.rs","byte_start":280877,"byte_end":280938,"line_start":104,"line_end":104,"column_start":5,"column_end":66}},{"value":"/ being resolved.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/take_until.rs","byte_start":280943,"byte_end":280962,"line_start":105,"line_end":105,"column_start":5,"column_end":24}}]},{"kind":"Struct","id":{"krate":0,"index":12203},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/then.rs","byte_start":282916,"byte_end":282920,"line_start":14,"line_end":14,"column_start":16,"column_end":20},"name":"Then","qualname":"::stream::stream::then::Then","value":"Then {  }","parent":null,"children":[{"krate":0,"index":12207},{"krate":0,"index":12208},{"krate":0,"index":12209}],"decl_id":null,"docs":" Stream for the [`then`](super::StreamExt::then) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":12561792,"byte_end":12561801,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":12275},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/zip.rs","byte_start":285460,"byte_end":285463,"line_start":12,"line_end":12,"column_start":16,"column_end":19},"name":"Zip","qualname":"::stream::stream::zip::Zip","value":"Zip {  }","parent":null,"children":[{"krate":0,"index":12278},{"krate":0,"index":12279},{"krate":0,"index":12280},{"krate":0,"index":12281}],"decl_id":null,"docs":" Stream for the [`zip`](super::StreamExt::zip) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":12561792,"byte_end":12561801,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":3486},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/zip.rs","byte_start":285981,"byte_end":285988,"line_start":29,"line_end":29,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Zip<St1, St2>>::get_ref","value":"pub fn get_ref(&Self) -> (&St1, &St2)","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying streams that this combinator is\n pulling from.\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying streams that this combinator is","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/zip.rs","byte_start":285873,"byte_end":285947,"line_start":27,"line_end":27,"column_start":5,"column_end":79}},{"value":"/ pulling from.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/zip.rs","byte_start":285952,"byte_end":285969,"line_start":28,"line_end":28,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":3487},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/zip.rs","byte_start":286344,"byte_end":286351,"line_start":38,"line_end":38,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Zip<St1, St2>>::get_mut","value":"pub fn get_mut(&mut Self) -> (&mut St1, &mut St2)","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying streams that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying streams that this","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/zip.rs","byte_start":286082,"byte_end":286150,"line_start":33,"line_end":33,"column_start":5,"column_end":73}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/zip.rs","byte_start":286155,"byte_end":286186,"line_start":34,"line_end":34,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/zip.rs","byte_start":286191,"byte_end":286194,"line_start":35,"line_end":35,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/zip.rs","byte_start":286199,"byte_end":286272,"line_start":36,"line_end":36,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/zip.rs","byte_start":286277,"byte_end":286332,"line_start":37,"line_end":37,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":3488},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/zip.rs","byte_start":286726,"byte_end":286737,"line_start":47,"line_end":47,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<Zip<St1, St2>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> (Pin<&mut St1>, Pin<&mut St2>)","parent":null,"children":[],"decl_id":null,"docs":" Acquires a pinned mutable reference to the underlying streams that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a pinned mutable reference to the underlying streams that this","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/zip.rs","byte_start":286457,"byte_end":286532,"line_start":42,"line_end":42,"column_start":5,"column_end":80}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/zip.rs","byte_start":286537,"byte_end":286568,"line_start":43,"line_end":43,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/zip.rs","byte_start":286573,"byte_end":286576,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/zip.rs","byte_start":286581,"byte_end":286654,"line_start":45,"line_end":45,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/zip.rs","byte_start":286659,"byte_end":286714,"line_start":46,"line_end":46,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":3489},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/zip.rs","byte_start":287143,"byte_end":287153,"line_start":56,"line_end":56,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Zip<St1, St2>>::into_inner","value":"pub fn into_inner(Self) -> (St1, St2)","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying streams.","sig":null,"attributes":[{"value":"/ Consumes this combinator, returning the underlying streams.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/zip.rs","byte_start":286907,"byte_end":286970,"line_start":52,"line_end":52,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/zip.rs","byte_start":286975,"byte_end":286978,"line_start":53,"line_end":53,"column_start":5,"column_end":8}},{"value":"/ Note that this may discard intermediate state of this combinator, so","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/zip.rs","byte_start":286983,"byte_end":287055,"line_start":54,"line_end":54,"column_start":5,"column_end":77}},{"value":"/ care should be taken to avoid losing resources when this is called.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/zip.rs","byte_start":287060,"byte_end":287131,"line_start":55,"line_end":55,"column_start":5,"column_end":76}}]},{"kind":"Struct","id":{"krate":0,"index":12330},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/chunks.rs","byte_start":289982,"byte_end":289988,"line_start":16,"line_end":16,"column_start":16,"column_end":22},"name":"Chunks","qualname":"::stream::stream::chunks::Chunks","value":"Chunks {  }","parent":null,"children":[{"krate":0,"index":12332},{"krate":0,"index":12333},{"krate":0,"index":12334}],"decl_id":null,"docs":" Stream for the [`chunks`](super::StreamExt::chunks) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":12561792,"byte_end":12561801,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":12382},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/ready_chunks.rs","byte_start":293091,"byte_end":293102,"line_start":15,"line_end":15,"column_start":16,"column_end":27},"name":"ReadyChunks","qualname":"::stream::stream::ready_chunks::ReadyChunks","value":"ReadyChunks {  }","parent":null,"children":[{"krate":0,"index":12384},{"krate":0,"index":12385},{"krate":0,"index":12386}],"decl_id":null,"docs":" Stream for the [`ready_chunks`](super::StreamExt::ready_chunks) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":12561792,"byte_end":12561801,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":12429},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/scan.rs","byte_start":296648,"byte_end":296652,"line_start":19,"line_end":19,"column_start":16,"column_end":20},"name":"Scan","qualname":"::stream::stream::scan::Scan","value":"Scan {  }","parent":null,"children":[{"krate":0,"index":12434},{"krate":0,"index":12435},{"krate":0,"index":12436}],"decl_id":null,"docs":" Stream for the [`scan`](super::StreamExt::scan) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":12561792,"byte_end":12561801,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":17284},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/buffer_unordered.rs","byte_start":12751430,"byte_end":12751445,"line_start":15,"line_end":15,"column_start":16,"column_end":31},"name":"BufferUnordered","qualname":"::stream::stream::buffer_unordered::BufferUnordered","value":"BufferUnordered {  }","parent":null,"children":[{"krate":0,"index":17286},{"krate":0,"index":17287},{"krate":0,"index":17288}],"decl_id":null,"docs":" Stream for the [`buffer_unordered`](super::StreamExt::buffer_unordered)\n method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":12561792,"byte_end":12561801,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":17243},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/buffered.rs","byte_start":12754756,"byte_end":12754764,"line_start":15,"line_end":15,"column_start":16,"column_end":24},"name":"Buffered","qualname":"::stream::stream::buffered::Buffered","value":"Buffered {  }","parent":null,"children":[{"krate":0,"index":17245},{"krate":0,"index":17246},{"krate":0,"index":17247}],"decl_id":null,"docs":" Stream for the [`buffered`](super::StreamExt::buffered) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":12561792,"byte_end":12561801,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":17182},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/for_each_concurrent.rs","byte_start":12757759,"byte_end":12757776,"line_start":14,"line_end":14,"column_start":16,"column_end":33},"name":"ForEachConcurrent","qualname":"::stream::stream::for_each_concurrent::ForEachConcurrent","value":"ForEachConcurrent {  }","parent":null,"children":[{"krate":0,"index":17186},{"krate":0,"index":17187},{"krate":0,"index":17188},{"krate":0,"index":17189}],"decl_id":null,"docs":" Future for the [`for_each_concurrent`](super::StreamExt::for_each_concurrent)\n method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":12561792,"byte_end":12561801,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":12788},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/split.rs","byte_start":12761221,"byte_end":12761232,"line_start":14,"line_end":14,"column_start":12,"column_end":23},"name":"SplitStream","qualname":"::stream::stream::split::SplitStream","value":"","parent":null,"children":[],"decl_id":null,"docs":" A `Stream` part of the split pair\n","sig":null,"attributes":[{"value":"/ A `Stream` part of the split pair","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/split.rs","byte_start":12761058,"byte_end":12761095,"line_start":10,"line_end":10,"column_start":1,"column_end":38}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/split.rs","byte_start":12761113,"byte_end":12761161,"line_start":12,"line_end":12,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":12712},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/split.rs","byte_start":12761559,"byte_end":12761566,"line_start":22,"line_end":22,"column_start":12,"column_end":19},"name":"reunite","qualname":"<SplitStream<S>>::reunite","value":"pub fn reunite<Item>(Self, SplitSink<S, Item>)\n-> Result<S, ReuniteError<S, Item>> where S: Sink<Item>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to put the two \"halves\" of a split `Stream + Sink` back\n together. Succeeds only if the `SplitStream<S>` and `SplitSink<S>` are\n a matching pair originating from the same call to `StreamExt::split`.\n","sig":null,"attributes":[{"value":"/ Attempts to put the two \"halves\" of a split `Stream + Sink` back","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/split.rs","byte_start":12761322,"byte_end":12761390,"line_start":19,"line_end":19,"column_start":5,"column_end":73}},{"value":"/ together. Succeeds only if the `SplitStream<S>` and `SplitSink<S>` are","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/split.rs","byte_start":12761395,"byte_end":12761469,"line_start":20,"line_end":20,"column_start":5,"column_end":79}},{"value":"/ a matching pair originating from the same call to `StreamExt::split`.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/split.rs","byte_start":12761474,"byte_end":12761547,"line_start":21,"line_end":21,"column_start":5,"column_end":78}}]},{"kind":"Struct","id":{"krate":0,"index":12795},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/split.rs","byte_start":12762241,"byte_end":12762250,"line_start":47,"line_end":47,"column_start":12,"column_end":21},"name":"SplitSink","qualname":"::stream::stream::split::SplitSink","value":"SplitSink {  }","parent":null,"children":[{"krate":0,"index":12798},{"krate":0,"index":12799}],"decl_id":null,"docs":" A `Sink` part of the split pair\n","sig":null,"attributes":[{"value":"/ A `Sink` part of the split pair","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/split.rs","byte_start":12762082,"byte_end":12762117,"line_start":43,"line_end":43,"column_start":1,"column_end":36}},{"value":"must_use = \"sinks do nothing unless polled\"","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/split.rs","byte_start":12762135,"byte_end":12762181,"line_start":45,"line_end":45,"column_start":1,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":12727},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/split.rs","byte_start":12762653,"byte_end":12762660,"line_start":58,"line_end":58,"column_start":12,"column_end":19},"name":"reunite","qualname":"<SplitSink<S, Item>>::reunite","value":"pub fn reunite(Self, SplitStream<S>) -> Result<S, ReuniteError<S, Item>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to put the two \"halves\" of a split `Stream + Sink` back\n together. Succeeds only if the `SplitStream<S>` and `SplitSink<S>` are\n a matching pair originating from the same call to `StreamExt::split`.\n","sig":null,"attributes":[{"value":"/ Attempts to put the two \"halves\" of a split `Stream + Sink` back","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/split.rs","byte_start":12762416,"byte_end":12762484,"line_start":55,"line_end":55,"column_start":5,"column_end":73}},{"value":"/ together. Succeeds only if the `SplitStream<S>` and `SplitSink<S>` are","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/split.rs","byte_start":12762489,"byte_end":12762563,"line_start":56,"line_end":56,"column_start":5,"column_end":79}},{"value":"/ a matching pair originating from the same call to `StreamExt::split`.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/split.rs","byte_start":12762568,"byte_end":12762641,"line_start":57,"line_end":57,"column_start":5,"column_end":78}}]},{"kind":"Struct","id":{"krate":0,"index":12745},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/split.rs","byte_start":12765114,"byte_end":12765126,"line_start":129,"line_end":129,"column_start":12,"column_end":24},"name":"ReuniteError","qualname":"::stream::stream::split::ReuniteError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error indicating a `SplitSink<S>` and `SplitStream<S>` were not two halves\n of a `Stream + Split`, and thus could not be `reunite`d.\n","sig":null,"attributes":[{"value":"/ Error indicating a `SplitSink<S>` and `SplitStream<S>` were not two halves","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/split.rs","byte_start":12764915,"byte_end":12764993,"line_start":126,"line_end":126,"column_start":1,"column_end":79}},{"value":"/ of a `Stream + Split`, and thus could not be `reunite`d.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/split.rs","byte_start":12764994,"byte_end":12765054,"line_start":127,"line_end":127,"column_start":1,"column_end":61}}]},{"kind":"Field","id":{"krate":0,"index":12749},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/split.rs","byte_start":12765136,"byte_end":12765158,"line_start":129,"line_end":129,"column_start":34,"column_end":56},"name":"0","qualname":"::stream::stream::split::ReuniteError::0","value":"stream::stream::split::SplitSink<T, Item>","parent":{"krate":0,"index":12745},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12750},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/split.rs","byte_start":12765160,"byte_end":12765178,"line_start":129,"line_end":129,"column_start":58,"column_end":76},"name":"1","qualname":"::stream::stream::split::ReuniteError::1","value":"stream::stream::split::SplitStream<T>","parent":{"krate":0,"index":12745},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":12809},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/catch_unwind.rs","byte_start":300000,"byte_end":300011,"line_start":12,"line_end":12,"column_start":16,"column_end":27},"name":"CatchUnwind","qualname":"::stream::stream::catch_unwind::CatchUnwind","value":"CatchUnwind {  }","parent":null,"children":[{"krate":0,"index":12811},{"krate":0,"index":12812}],"decl_id":null,"docs":" Stream for the [`catch_unwind`](super::StreamExt::catch_unwind) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":12561792,"byte_end":12561801,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Trait","id":{"krate":0,"index":3744},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":178116,"byte_end":178125,"line_start":212,"line_end":212,"column_start":11,"column_end":20},"name":"StreamExt","qualname":"::stream::stream::StreamExt","value":"StreamExt: Stream","parent":null,"children":[{"krate":0,"index":3745},{"krate":0,"index":3746},{"krate":0,"index":3747},{"krate":0,"index":3750},{"krate":0,"index":3751},{"krate":0,"index":3754},{"krate":0,"index":3758},{"krate":0,"index":3761},{"krate":0,"index":3763},{"krate":0,"index":3768},{"krate":0,"index":3769},{"krate":0,"index":3770},{"krate":0,"index":3774},{"krate":0,"index":3775},{"krate":0,"index":3778},{"krate":0,"index":3783},{"krate":0,"index":3786},{"krate":0,"index":3789},{"krate":0,"index":3791},{"krate":0,"index":3794},{"krate":0,"index":3798},{"krate":0,"index":3799},{"krate":0,"index":3800},{"krate":0,"index":3801},{"krate":0,"index":3802},{"krate":0,"index":3803},{"krate":0,"index":3805},{"krate":0,"index":3807},{"krate":0,"index":3808},{"krate":0,"index":3809},{"krate":0,"index":3811},{"krate":0,"index":3813},{"krate":0,"index":3814},{"krate":0,"index":3815},{"krate":0,"index":3816},{"krate":0,"index":3818},{"krate":0,"index":3820},{"krate":0,"index":3822},{"krate":0,"index":3824},{"krate":0,"index":3826},{"krate":0,"index":3827}],"decl_id":null,"docs":" An extension trait for `Stream`s that provides a variety of convenient\n combinator functions.\n","sig":null,"attributes":[{"value":"/ An extension trait for `Stream`s that provides a variety of convenient","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":178005,"byte_end":178079,"line_start":210,"line_end":210,"column_start":1,"column_end":75}},{"value":"/ combinator functions.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":178080,"byte_end":178105,"line_start":211,"line_end":211,"column_start":1,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":3745},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":179035,"byte_end":179039,"line_start":236,"line_end":236,"column_start":8,"column_end":12},"name":"next","qualname":"::stream::stream::StreamExt::next","value":"pub fn next(&mut Self) -> Next<, Self> where Self: Unpin","parent":{"krate":0,"index":3744},"children":[],"decl_id":null,"docs":" Creates a future that resolves to the next item in the stream.","sig":null,"attributes":[{"value":"/ Creates a future that resolves to the next item in the stream.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":178140,"byte_end":178206,"line_start":213,"line_end":213,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":178211,"byte_end":178214,"line_start":214,"line_end":214,"column_start":5,"column_end":8}},{"value":"/ Note that because `next` doesn't take ownership over the stream,","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":178219,"byte_end":178287,"line_start":215,"line_end":215,"column_start":5,"column_end":73}},{"value":"/ the [`Stream`] type must be [`Unpin`]. If you want to use `next` with a","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":178292,"byte_end":178367,"line_start":216,"line_end":216,"column_start":5,"column_end":80}},{"value":"/ [`!Unpin`](Unpin) stream, you'll first have to pin the stream. This can","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":178372,"byte_end":178447,"line_start":217,"line_end":217,"column_start":5,"column_end":80}},{"value":"/ be done by boxing the stream using [`Box::pin`] or","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":178452,"byte_end":178506,"line_start":218,"line_end":218,"column_start":5,"column_end":59}},{"value":"/ pinning it to the stack using the `pin_mut!` macro from the `pin_utils`","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":178511,"byte_end":178586,"line_start":219,"line_end":219,"column_start":5,"column_end":80}},{"value":"/ crate.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":178591,"byte_end":178601,"line_start":220,"line_end":220,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":178606,"byte_end":178609,"line_start":221,"line_end":221,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":178614,"byte_end":178628,"line_start":222,"line_end":222,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":178633,"byte_end":178636,"line_start":223,"line_end":223,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":178641,"byte_end":178648,"line_start":224,"line_end":224,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":178653,"byte_end":178694,"line_start":225,"line_end":225,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":178699,"byte_end":178742,"line_start":226,"line_end":226,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":178747,"byte_end":178750,"line_start":227,"line_end":227,"column_start":5,"column_end":8}},{"value":"/ let mut stream = stream::iter(1..=3);","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":178755,"byte_end":178796,"line_start":228,"line_end":228,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":178801,"byte_end":178804,"line_start":229,"line_end":229,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.next().await, Some(1));","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":178809,"byte_end":178854,"line_start":230,"line_end":230,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(stream.next().await, Some(2));","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":178859,"byte_end":178904,"line_start":231,"line_end":231,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(stream.next().await, Some(3));","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":178909,"byte_end":178954,"line_start":232,"line_end":232,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(stream.next().await, None);","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":178959,"byte_end":179001,"line_start":233,"line_end":233,"column_start":5,"column_end":47}},{"value":"/ # });","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":179006,"byte_end":179015,"line_start":234,"line_end":234,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":179020,"byte_end":179027,"line_start":235,"line_end":235,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3746},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":180278,"byte_end":180289,"line_start":271,"line_end":271,"column_start":8,"column_end":19},"name":"into_future","qualname":"::stream::stream::StreamExt::into_future","value":"pub fn into_future(Self) -> StreamFuture<Self> where Self: Sized + Unpin","parent":{"krate":0,"index":3744},"children":[],"decl_id":null,"docs":" Converts this stream into a future of `(next_item, tail_of_stream)`.\n If the stream terminates, then the next item is [`None`].","sig":null,"attributes":[{"value":"/ Converts this stream into a future of `(next_item, tail_of_stream)`.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":179181,"byte_end":179253,"line_start":243,"line_end":243,"column_start":5,"column_end":77}},{"value":"/ If the stream terminates, then the next item is [`None`].","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":179258,"byte_end":179319,"line_start":244,"line_end":244,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":179324,"byte_end":179327,"line_start":245,"line_end":245,"column_start":5,"column_end":8}},{"value":"/ The returned future can be used to compose streams and futures together","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":179332,"byte_end":179407,"line_start":246,"line_end":246,"column_start":5,"column_end":80}},{"value":"/ by placing everything into the \"world of futures\".","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":179412,"byte_end":179466,"line_start":247,"line_end":247,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":179471,"byte_end":179474,"line_start":248,"line_end":248,"column_start":5,"column_end":8}},{"value":"/ Note that because `into_future` moves the stream, the [`Stream`] type","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":179479,"byte_end":179552,"line_start":249,"line_end":249,"column_start":5,"column_end":78}},{"value":"/ must be [`Unpin`]. If you want to use `into_future` with a","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":179557,"byte_end":179619,"line_start":250,"line_end":250,"column_start":5,"column_end":67}},{"value":"/ [`!Unpin`](Unpin) stream, you'll first have to pin the stream. This can","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":179624,"byte_end":179699,"line_start":251,"line_end":251,"column_start":5,"column_end":80}},{"value":"/ be done by boxing the stream using [`Box::pin`] or","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":179704,"byte_end":179758,"line_start":252,"line_end":252,"column_start":5,"column_end":59}},{"value":"/ pinning it to the stack using the `pin_mut!` macro from the `pin_utils`","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":179763,"byte_end":179838,"line_start":253,"line_end":253,"column_start":5,"column_end":80}},{"value":"/ crate.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":179843,"byte_end":179853,"line_start":254,"line_end":254,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":179858,"byte_end":179861,"line_start":255,"line_end":255,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":179866,"byte_end":179880,"line_start":256,"line_end":256,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":179885,"byte_end":179888,"line_start":257,"line_end":257,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":179893,"byte_end":179900,"line_start":258,"line_end":258,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":179905,"byte_end":179946,"line_start":259,"line_end":259,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":179951,"byte_end":179994,"line_start":260,"line_end":260,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":179999,"byte_end":180002,"line_start":261,"line_end":261,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=3);","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":180007,"byte_end":180044,"line_start":262,"line_end":262,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":180049,"byte_end":180052,"line_start":263,"line_end":263,"column_start":5,"column_end":8}},{"value":"/ let (item, stream) = stream.into_future().await;","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":180057,"byte_end":180109,"line_start":264,"line_end":264,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(Some(1), item);","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":180114,"byte_end":180144,"line_start":265,"line_end":265,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":180149,"byte_end":180152,"line_start":266,"line_end":266,"column_start":5,"column_end":8}},{"value":"/ let (item, stream) = stream.into_future().await;","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":180157,"byte_end":180209,"line_start":267,"line_end":267,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(Some(2), item);","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":180214,"byte_end":180244,"line_start":268,"line_end":268,"column_start":5,"column_end":35}},{"value":"/ # });","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":180249,"byte_end":180258,"line_start":269,"line_end":269,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":180263,"byte_end":180270,"line_start":270,"line_end":270,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3747},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":181290,"byte_end":181293,"line_start":301,"line_end":301,"column_start":8,"column_end":11},"name":"map","qualname":"::stream::stream::StreamExt::map","value":"pub fn map<T, F>(Self, F) -> Map<Self, F> where F: FnMut(Self::Item) -> T,\nSelf: Sized","parent":{"krate":0,"index":3744},"children":[],"decl_id":null,"docs":" Maps this stream's items to a different type, returning a new stream of\n the resulting type.","sig":null,"attributes":[{"value":"/ Maps this stream's items to a different type, returning a new stream of","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":180454,"byte_end":180529,"line_start":278,"line_end":278,"column_start":5,"column_end":80}},{"value":"/ the resulting type.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":180534,"byte_end":180557,"line_start":279,"line_end":279,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":180562,"byte_end":180565,"line_start":280,"line_end":280,"column_start":5,"column_end":8}},{"value":"/ The provided closure is executed over all elements of this stream as","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":180570,"byte_end":180642,"line_start":281,"line_end":281,"column_start":5,"column_end":77}},{"value":"/ they are made available. It is executed inline with calls to","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":180647,"byte_end":180711,"line_start":282,"line_end":282,"column_start":5,"column_end":69}},{"value":"/ [`poll_next`](Stream::poll_next).","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":180716,"byte_end":180753,"line_start":283,"line_end":283,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":180758,"byte_end":180761,"line_start":284,"line_end":284,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the stream passed into it and returns a","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":180766,"byte_end":180842,"line_start":285,"line_end":285,"column_start":5,"column_end":81}},{"value":"/ wrapped version of it, similar to the existing `map` methods in the","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":180847,"byte_end":180918,"line_start":286,"line_end":286,"column_start":5,"column_end":76}},{"value":"/ standard library.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":180923,"byte_end":180944,"line_start":287,"line_end":287,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":180949,"byte_end":180952,"line_start":288,"line_end":288,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":180957,"byte_end":180971,"line_start":289,"line_end":289,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":180976,"byte_end":180979,"line_start":290,"line_end":290,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":180984,"byte_end":180991,"line_start":291,"line_end":291,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":180996,"byte_end":181037,"line_start":292,"line_end":292,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":181042,"byte_end":181085,"line_start":293,"line_end":293,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":181090,"byte_end":181093,"line_start":294,"line_end":294,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=3);","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":181098,"byte_end":181135,"line_start":295,"line_end":295,"column_start":5,"column_end":42}},{"value":"/ let stream = stream.map(|x| x + 3);","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":181140,"byte_end":181179,"line_start":296,"line_end":296,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":181184,"byte_end":181187,"line_start":297,"line_end":297,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![4, 5, 6], stream.collect::<Vec<_>>().await);","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":181192,"byte_end":181256,"line_start":298,"line_end":298,"column_start":5,"column_end":69}},{"value":"/ # });","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":181261,"byte_end":181270,"line_start":299,"line_end":299,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":181275,"byte_end":181282,"line_start":300,"line_end":300,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3750},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":182853,"byte_end":182862,"line_start":347,"line_end":347,"column_start":8,"column_end":17},"name":"enumerate","qualname":"::stream::stream::StreamExt::enumerate","value":"pub fn enumerate(Self) -> Enumerate<Self> where Self: Sized","parent":{"krate":0,"index":3744},"children":[],"decl_id":null,"docs":" Creates a stream which gives the current iteration count as well as\n the next value.","sig":null,"attributes":[{"value":"/ Creates a stream which gives the current iteration count as well as","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":181460,"byte_end":181531,"line_start":309,"line_end":309,"column_start":5,"column_end":76}},{"value":"/ the next value.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":181536,"byte_end":181555,"line_start":310,"line_end":310,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":181560,"byte_end":181563,"line_start":311,"line_end":311,"column_start":5,"column_end":8}},{"value":"/ The stream returned yields pairs `(i, val)`, where `i` is the","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":181568,"byte_end":181633,"line_start":312,"line_end":312,"column_start":5,"column_end":70}},{"value":"/ current index of iteration and `val` is the value returned by the","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":181638,"byte_end":181707,"line_start":313,"line_end":313,"column_start":5,"column_end":74}},{"value":"/ stream.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":181712,"byte_end":181723,"line_start":314,"line_end":314,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":181728,"byte_end":181731,"line_start":315,"line_end":315,"column_start":5,"column_end":8}},{"value":"/ `enumerate()` keeps its count as a [`usize`]. If you want to count by a","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":181736,"byte_end":181811,"line_start":316,"line_end":316,"column_start":5,"column_end":80}},{"value":"/ different sized integer, the [`zip`](StreamExt::zip) function provides similar","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":181816,"byte_end":181898,"line_start":317,"line_end":317,"column_start":5,"column_end":87}},{"value":"/ functionality.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":181903,"byte_end":181921,"line_start":318,"line_end":318,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":181926,"byte_end":181929,"line_start":319,"line_end":319,"column_start":5,"column_end":8}},{"value":"/ # Overflow Behavior","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":181934,"byte_end":181957,"line_start":320,"line_end":320,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":181962,"byte_end":181965,"line_start":321,"line_end":321,"column_start":5,"column_end":8}},{"value":"/ The method does no guarding against overflows, so enumerating more than","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":181970,"byte_end":182045,"line_start":322,"line_end":322,"column_start":5,"column_end":80}},{"value":"/ [`prim@usize::max_value()`] elements either produces the wrong result or panics. If","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":182050,"byte_end":182137,"line_start":323,"line_end":323,"column_start":5,"column_end":92}},{"value":"/ debug assertions are enabled, a panic is guaranteed.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":182142,"byte_end":182198,"line_start":324,"line_end":324,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":182203,"byte_end":182206,"line_start":325,"line_end":325,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":182211,"byte_end":182223,"line_start":326,"line_end":326,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":182228,"byte_end":182231,"line_start":327,"line_end":327,"column_start":5,"column_end":8}},{"value":"/ The returned stream might panic if the to-be-returned index would","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":182236,"byte_end":182305,"line_start":328,"line_end":328,"column_start":5,"column_end":74}},{"value":"/ overflow a [`usize`].","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":182310,"byte_end":182335,"line_start":329,"line_end":329,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":182340,"byte_end":182343,"line_start":330,"line_end":330,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":182348,"byte_end":182362,"line_start":331,"line_end":331,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":182367,"byte_end":182370,"line_start":332,"line_end":332,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":182375,"byte_end":182382,"line_start":333,"line_end":333,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":182387,"byte_end":182428,"line_start":334,"line_end":334,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":182433,"byte_end":182476,"line_start":335,"line_end":335,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":182481,"byte_end":182484,"line_start":336,"line_end":336,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(vec!['a', 'b', 'c']);","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":182489,"byte_end":182540,"line_start":337,"line_end":337,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":182545,"byte_end":182548,"line_start":338,"line_end":338,"column_start":5,"column_end":8}},{"value":"/ let mut stream = stream.enumerate();","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":182553,"byte_end":182593,"line_start":339,"line_end":339,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":182598,"byte_end":182601,"line_start":340,"line_end":340,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.next().await, Some((0, 'a')));","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":182606,"byte_end":182658,"line_start":341,"line_end":341,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(stream.next().await, Some((1, 'b')));","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":182663,"byte_end":182715,"line_start":342,"line_end":342,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(stream.next().await, Some((2, 'c')));","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":182720,"byte_end":182772,"line_start":343,"line_end":343,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(stream.next().await, None);","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":182777,"byte_end":182819,"line_start":344,"line_end":344,"column_start":5,"column_end":47}},{"value":"/ # });","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":182824,"byte_end":182833,"line_start":345,"line_end":345,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":182838,"byte_end":182845,"line_start":346,"line_end":346,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3751},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":184091,"byte_end":184097,"line_start":380,"line_end":380,"column_start":8,"column_end":14},"name":"filter","qualname":"::stream::stream::StreamExt::filter","value":"pub fn filter<Fut, F>(Self, F) -> Filter<Self, Fut, F> where\nF: FnMut(&Self::Item) -> Fut, Fut: Future<Output = bool>, Self: Sized","parent":{"krate":0,"index":3744},"children":[],"decl_id":null,"docs":" Filters the values produced by this stream according to the provided\n asynchronous predicate.","sig":null,"attributes":[{"value":"/ Filters the values produced by this stream according to the provided","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":183006,"byte_end":183078,"line_start":354,"line_end":354,"column_start":5,"column_end":77}},{"value":"/ asynchronous predicate.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":183083,"byte_end":183110,"line_start":355,"line_end":355,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":183115,"byte_end":183118,"line_start":356,"line_end":356,"column_start":5,"column_end":8}},{"value":"/ As values of this stream are made available, the provided predicate `f`","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":183123,"byte_end":183198,"line_start":357,"line_end":357,"column_start":5,"column_end":80}},{"value":"/ will be run against them. If the predicate returns a `Future` which","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":183203,"byte_end":183274,"line_start":358,"line_end":358,"column_start":5,"column_end":76}},{"value":"/ resolves to `true`, then the stream will yield the value, but if the","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":183279,"byte_end":183351,"line_start":359,"line_end":359,"column_start":5,"column_end":77}},{"value":"/ predicate returns a `Future` which resolves to `false`, then the value","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":183356,"byte_end":183430,"line_start":360,"line_end":360,"column_start":5,"column_end":79}},{"value":"/ will be discarded and the next value will be produced.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":183435,"byte_end":183493,"line_start":361,"line_end":361,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":183498,"byte_end":183501,"line_start":362,"line_end":362,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the stream passed into it and returns a","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":183506,"byte_end":183582,"line_start":363,"line_end":363,"column_start":5,"column_end":81}},{"value":"/ wrapped version of it, similar to the existing `filter` methods in the","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":183587,"byte_end":183661,"line_start":364,"line_end":364,"column_start":5,"column_end":79}},{"value":"/ standard library.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":183666,"byte_end":183687,"line_start":365,"line_end":365,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":183692,"byte_end":183695,"line_start":366,"line_end":366,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":183700,"byte_end":183714,"line_start":367,"line_end":367,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":183719,"byte_end":183722,"line_start":368,"line_end":368,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":183727,"byte_end":183734,"line_start":369,"line_end":369,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":183739,"byte_end":183780,"line_start":370,"line_end":370,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":183785,"byte_end":183809,"line_start":371,"line_end":371,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":183814,"byte_end":183857,"line_start":372,"line_end":372,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":183862,"byte_end":183865,"line_start":373,"line_end":373,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=10);","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":183870,"byte_end":183908,"line_start":374,"line_end":374,"column_start":5,"column_end":43}},{"value":"/ let evens = stream.filter(|x| future::ready(x % 2 == 0));","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":183913,"byte_end":183974,"line_start":375,"line_end":375,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":183979,"byte_end":183982,"line_start":376,"line_end":376,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![2, 4, 6, 8, 10], evens.collect::<Vec<_>>().await);","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":183987,"byte_end":184057,"line_start":377,"line_end":377,"column_start":5,"column_end":75}},{"value":"/ # });","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":184062,"byte_end":184071,"line_start":378,"line_end":378,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":184076,"byte_end":184083,"line_start":379,"line_end":379,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3754},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":185422,"byte_end":185432,"line_start":414,"line_end":414,"column_start":8,"column_end":18},"name":"filter_map","qualname":"::stream::stream::StreamExt::filter_map","value":"pub fn filter_map<Fut, T, F>(Self, F) -> FilterMap<Self, Fut, F> where\nF: FnMut(Self::Item) -> Fut, Fut: Future<Output = Option<T>>, Self: Sized","parent":{"krate":0,"index":3744},"children":[],"decl_id":null,"docs":" Filters the values produced by this stream while simultaneously mapping\n them to a different type according to the provided asynchronous closure.","sig":null,"attributes":[{"value":"/ Filters the values produced by this stream while simultaneously mapping","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":184325,"byte_end":184400,"line_start":389,"line_end":389,"column_start":5,"column_end":80}},{"value":"/ them to a different type according to the provided asynchronous closure.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":184405,"byte_end":184481,"line_start":390,"line_end":390,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":184486,"byte_end":184489,"line_start":391,"line_end":391,"column_start":5,"column_end":8}},{"value":"/ As values of this stream are made available, the provided function will","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":184494,"byte_end":184569,"line_start":392,"line_end":392,"column_start":5,"column_end":80}},{"value":"/ be run on them. If the future returned by the predicate `f` resolves to","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":184574,"byte_end":184649,"line_start":393,"line_end":393,"column_start":5,"column_end":80}},{"value":"/ [`Some(item)`](Some) then the stream will yield the value `item`, but if","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":184654,"byte_end":184730,"line_start":394,"line_end":394,"column_start":5,"column_end":81}},{"value":"/ it resolves to [`None`] then the next value will be produced.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":184735,"byte_end":184800,"line_start":395,"line_end":395,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":184805,"byte_end":184808,"line_start":396,"line_end":396,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the stream passed into it and returns a","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":184813,"byte_end":184889,"line_start":397,"line_end":397,"column_start":5,"column_end":81}},{"value":"/ wrapped version of it, similar to the existing `filter_map` methods in","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":184894,"byte_end":184968,"line_start":398,"line_end":398,"column_start":5,"column_end":79}},{"value":"/ the standard library.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":184973,"byte_end":184998,"line_start":399,"line_end":399,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":185003,"byte_end":185006,"line_start":400,"line_end":400,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":185011,"byte_end":185025,"line_start":401,"line_end":401,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":185030,"byte_end":185037,"line_start":402,"line_end":402,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":185042,"byte_end":185083,"line_start":403,"line_end":403,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":185088,"byte_end":185131,"line_start":404,"line_end":404,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":185136,"byte_end":185139,"line_start":405,"line_end":405,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=10);","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":185144,"byte_end":185182,"line_start":406,"line_end":406,"column_start":5,"column_end":43}},{"value":"/ let evens = stream.filter_map(|x| async move {","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":185187,"byte_end":185237,"line_start":407,"line_end":407,"column_start":5,"column_end":55}},{"value":"/     if x % 2 == 0 { Some(x + 1) } else { None }","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":185242,"byte_end":185293,"line_start":408,"line_end":408,"column_start":5,"column_end":56}},{"value":"/ });","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":185298,"byte_end":185305,"line_start":409,"line_end":409,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":185310,"byte_end":185313,"line_start":410,"line_end":410,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![3, 5, 7, 9, 11], evens.collect::<Vec<_>>().await);","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":185318,"byte_end":185388,"line_start":411,"line_end":411,"column_start":5,"column_end":75}},{"value":"/ # });","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":185393,"byte_end":185402,"line_start":412,"line_end":412,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":185407,"byte_end":185414,"line_start":413,"line_end":413,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3758},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":186461,"byte_end":186465,"line_start":445,"line_end":445,"column_start":8,"column_end":12},"name":"then","qualname":"::stream::stream::StreamExt::then","value":"pub fn then<Fut, F>(Self, F) -> Then<Self, Fut, F> where F: FnMut(Self::Item)\n-> Fut, Fut: Future, Self: Sized","parent":{"krate":0,"index":3744},"children":[],"decl_id":null,"docs":" Computes from this stream's items new items of a different type using\n an asynchronous closure.","sig":null,"attributes":[{"value":"/ Computes from this stream's items new items of a different type using","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":185664,"byte_end":185737,"line_start":423,"line_end":423,"column_start":5,"column_end":78}},{"value":"/ an asynchronous closure.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":185742,"byte_end":185770,"line_start":424,"line_end":424,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":185775,"byte_end":185778,"line_start":425,"line_end":425,"column_start":5,"column_end":8}},{"value":"/ The provided closure `f` will be called with an `Item` once a value is","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":185783,"byte_end":185857,"line_start":426,"line_end":426,"column_start":5,"column_end":79}},{"value":"/ ready, it returns a future which will then be run to completion","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":185862,"byte_end":185929,"line_start":427,"line_end":427,"column_start":5,"column_end":72}},{"value":"/ to produce the next value on this stream.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":185934,"byte_end":185979,"line_start":428,"line_end":428,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":185984,"byte_end":185987,"line_start":429,"line_end":429,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the stream passed into it and returns a","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":185992,"byte_end":186068,"line_start":430,"line_end":430,"column_start":5,"column_end":81}},{"value":"/ wrapped version of it.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":186073,"byte_end":186099,"line_start":431,"line_end":431,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":186104,"byte_end":186107,"line_start":432,"line_end":432,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":186112,"byte_end":186126,"line_start":433,"line_end":433,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":186131,"byte_end":186134,"line_start":434,"line_end":434,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":186139,"byte_end":186146,"line_start":435,"line_end":435,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":186151,"byte_end":186192,"line_start":436,"line_end":436,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":186197,"byte_end":186240,"line_start":437,"line_end":437,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":186245,"byte_end":186248,"line_start":438,"line_end":438,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=3);","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":186253,"byte_end":186290,"line_start":439,"line_end":439,"column_start":5,"column_end":42}},{"value":"/ let stream = stream.then(|x| async move { x + 3 });","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":186295,"byte_end":186350,"line_start":440,"line_end":440,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":186355,"byte_end":186358,"line_start":441,"line_end":441,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![4, 5, 6], stream.collect::<Vec<_>>().await);","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":186363,"byte_end":186427,"line_start":442,"line_end":442,"column_start":5,"column_end":69}},{"value":"/ # });","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":186432,"byte_end":186441,"line_start":443,"line_end":443,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":186446,"byte_end":186453,"line_start":444,"line_end":444,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3761},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":187399,"byte_end":187406,"line_start":479,"line_end":479,"column_start":8,"column_end":15},"name":"collect","qualname":"::stream::stream::StreamExt::collect","value":"pub fn collect<C: Default + Extend<Self::Item>>(Self) -> Collect<Self, C>\nwhere Self: Sized","parent":{"krate":0,"index":3744},"children":[],"decl_id":null,"docs":" Transforms a stream into a collection, returning a\n future representing the result of that computation.","sig":null,"attributes":[{"value":"/ Transforms a stream into a collection, returning a","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":186674,"byte_end":186728,"line_start":454,"line_end":454,"column_start":5,"column_end":59}},{"value":"/ future representing the result of that computation.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":186733,"byte_end":186788,"line_start":455,"line_end":455,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":186793,"byte_end":186796,"line_start":456,"line_end":456,"column_start":5,"column_end":8}},{"value":"/ The returned future will be resolved when the stream terminates.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":186801,"byte_end":186869,"line_start":457,"line_end":457,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":186874,"byte_end":186877,"line_start":458,"line_end":458,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":186882,"byte_end":186896,"line_start":459,"line_end":459,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":186901,"byte_end":186904,"line_start":460,"line_end":460,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":186909,"byte_end":186916,"line_start":461,"line_end":461,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":186921,"byte_end":186962,"line_start":462,"line_end":462,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":186967,"byte_end":186998,"line_start":463,"line_end":463,"column_start":5,"column_end":36}},{"value":"/ use futures::stream::StreamExt;","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":187003,"byte_end":187038,"line_start":464,"line_end":464,"column_start":5,"column_end":40}},{"value":"/ use std::thread;","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":187043,"byte_end":187063,"line_start":465,"line_end":465,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":187068,"byte_end":187071,"line_start":466,"line_end":466,"column_start":5,"column_end":8}},{"value":"/ let (tx, rx) = mpsc::unbounded();","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":187076,"byte_end":187113,"line_start":467,"line_end":467,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":187118,"byte_end":187121,"line_start":468,"line_end":468,"column_start":5,"column_end":8}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":187126,"byte_end":187153,"line_start":469,"line_end":469,"column_start":5,"column_end":32}},{"value":"/     for i in 1..=5 {","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":187158,"byte_end":187182,"line_start":470,"line_end":470,"column_start":5,"column_end":29}},{"value":"/         tx.unbounded_send(i).unwrap();","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":187187,"byte_end":187229,"line_start":471,"line_end":471,"column_start":5,"column_end":47}},{"value":"/     }","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":187234,"byte_end":187243,"line_start":472,"line_end":472,"column_start":5,"column_end":14}},{"value":"/ });","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":187248,"byte_end":187255,"line_start":473,"line_end":473,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":187260,"byte_end":187263,"line_start":474,"line_end":474,"column_start":5,"column_end":8}},{"value":"/ let output = rx.collect::<Vec<i32>>().await;","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":187268,"byte_end":187316,"line_start":475,"line_end":475,"column_start":5,"column_end":53}},{"value":"/ assert_eq!(output, vec![1, 2, 3, 4, 5]);","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":187321,"byte_end":187365,"line_start":476,"line_end":476,"column_start":5,"column_end":49}},{"value":"/ # });","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":187370,"byte_end":187379,"line_start":477,"line_end":477,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":187384,"byte_end":187391,"line_start":478,"line_end":478,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3763},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":188525,"byte_end":188530,"line_start":516,"line_end":516,"column_start":8,"column_end":13},"name":"unzip","qualname":"::stream::stream::StreamExt::unzip","value":"pub fn unzip<A, B, FromA, FromB>(Self) -> Unzip<Self, FromA, FromB> where\nFromA: Default + Extend<A>, FromB: Default + Extend<B>, Self: Sized +\nStream<Item = (A, B)>","parent":{"krate":0,"index":3744},"children":[],"decl_id":null,"docs":" Converts a stream of pairs into a future, which\n resolves to pair of containers.","sig":null,"attributes":[{"value":"/ Converts a stream of pairs into a future, which","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":187564,"byte_end":187615,"line_start":486,"line_end":486,"column_start":5,"column_end":56}},{"value":"/ resolves to pair of containers.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":187620,"byte_end":187655,"line_start":487,"line_end":487,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":187660,"byte_end":187663,"line_start":488,"line_end":488,"column_start":5,"column_end":8}},{"value":"/ `unzip()` produces a future, which resolves to two","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":187668,"byte_end":187722,"line_start":489,"line_end":489,"column_start":5,"column_end":59}},{"value":"/ collections: one from the left elements of the pairs,","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":187727,"byte_end":187784,"line_start":490,"line_end":490,"column_start":5,"column_end":62}},{"value":"/ and one from the right elements.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":187789,"byte_end":187825,"line_start":491,"line_end":491,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":187830,"byte_end":187833,"line_start":492,"line_end":492,"column_start":5,"column_end":8}},{"value":"/ The returned future will be resolved when the stream terminates.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":187838,"byte_end":187906,"line_start":493,"line_end":493,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":187911,"byte_end":187914,"line_start":494,"line_end":494,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":187919,"byte_end":187933,"line_start":495,"line_end":495,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":187938,"byte_end":187941,"line_start":496,"line_end":496,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":187946,"byte_end":187953,"line_start":497,"line_end":497,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":187958,"byte_end":187999,"line_start":498,"line_end":498,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":188004,"byte_end":188035,"line_start":499,"line_end":499,"column_start":5,"column_end":36}},{"value":"/ use futures::stream::StreamExt;","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":188040,"byte_end":188075,"line_start":500,"line_end":500,"column_start":5,"column_end":40}},{"value":"/ use std::thread;","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":188080,"byte_end":188100,"line_start":501,"line_end":501,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":188105,"byte_end":188108,"line_start":502,"line_end":502,"column_start":5,"column_end":8}},{"value":"/ let (tx, rx) = mpsc::unbounded();","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":188113,"byte_end":188150,"line_start":503,"line_end":503,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":188155,"byte_end":188158,"line_start":504,"line_end":504,"column_start":5,"column_end":8}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":188163,"byte_end":188190,"line_start":505,"line_end":505,"column_start":5,"column_end":32}},{"value":"/     tx.unbounded_send((1, 2)).unwrap();","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":188195,"byte_end":188238,"line_start":506,"line_end":506,"column_start":5,"column_end":48}},{"value":"/     tx.unbounded_send((3, 4)).unwrap();","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":188243,"byte_end":188286,"line_start":507,"line_end":507,"column_start":5,"column_end":48}},{"value":"/     tx.unbounded_send((5, 6)).unwrap();","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":188291,"byte_end":188334,"line_start":508,"line_end":508,"column_start":5,"column_end":48}},{"value":"/ });","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":188339,"byte_end":188346,"line_start":509,"line_end":509,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":188351,"byte_end":188354,"line_start":510,"line_end":510,"column_start":5,"column_end":8}},{"value":"/ let (o1, o2): (Vec<_>, Vec<_>) = rx.unzip().await;","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":188359,"byte_end":188413,"line_start":511,"line_end":511,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(o1, vec![1, 3, 5]);","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":188418,"byte_end":188452,"line_start":512,"line_end":512,"column_start":5,"column_end":39}},{"value":"/ assert_eq!(o2, vec![2, 4, 6]);","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":188457,"byte_end":188491,"line_start":513,"line_end":513,"column_start":5,"column_end":39}},{"value":"/ # });","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":188496,"byte_end":188505,"line_start":514,"line_end":514,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":188510,"byte_end":188517,"line_start":515,"line_end":515,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3768},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":189826,"byte_end":189832,"line_start":557,"line_end":557,"column_start":8,"column_end":14},"name":"concat","qualname":"::stream::stream::StreamExt::concat","value":"pub fn concat(Self) -> Concat<Self> where Self: Sized,\nSelf::Item: Extend<<<Self as Stream>::Item as IntoIterator>::Item> +\nIntoIterator + Default","parent":{"krate":0,"index":3744},"children":[],"decl_id":null,"docs":" Concatenate all items of a stream into a single extendable\n destination, returning a future representing the end result.","sig":null,"attributes":[{"value":"/ Concatenate all items of a stream into a single extendable","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":188791,"byte_end":188853,"line_start":525,"line_end":525,"column_start":5,"column_end":67}},{"value":"/ destination, returning a future representing the end result.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":188858,"byte_end":188922,"line_start":526,"line_end":526,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":188927,"byte_end":188930,"line_start":527,"line_end":527,"column_start":5,"column_end":8}},{"value":"/ This combinator will extend the first item with the contents","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":188935,"byte_end":188999,"line_start":528,"line_end":528,"column_start":5,"column_end":69}},{"value":"/ of all the subsequent results of the stream. If the stream is","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":189004,"byte_end":189069,"line_start":529,"line_end":529,"column_start":5,"column_end":70}},{"value":"/ empty, the default value will be returned.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":189074,"byte_end":189120,"line_start":530,"line_end":530,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":189125,"byte_end":189128,"line_start":531,"line_end":531,"column_start":5,"column_end":8}},{"value":"/ Works with all collections that implement the","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":189133,"byte_end":189182,"line_start":532,"line_end":532,"column_start":5,"column_end":54}},{"value":"/ [`Extend`](std::iter::Extend) trait.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":189187,"byte_end":189227,"line_start":533,"line_end":533,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":189232,"byte_end":189235,"line_start":534,"line_end":534,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":189240,"byte_end":189254,"line_start":535,"line_end":535,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":189259,"byte_end":189262,"line_start":536,"line_end":536,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":189267,"byte_end":189274,"line_start":537,"line_end":537,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":189279,"byte_end":189320,"line_start":538,"line_end":538,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":189325,"byte_end":189356,"line_start":539,"line_end":539,"column_start":5,"column_end":36}},{"value":"/ use futures::stream::StreamExt;","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":189361,"byte_end":189396,"line_start":540,"line_end":540,"column_start":5,"column_end":40}},{"value":"/ use std::thread;","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":189401,"byte_end":189421,"line_start":541,"line_end":541,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":189426,"byte_end":189429,"line_start":542,"line_end":542,"column_start":5,"column_end":8}},{"value":"/ let (tx, rx) = mpsc::unbounded();","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":189434,"byte_end":189471,"line_start":543,"line_end":543,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":189476,"byte_end":189479,"line_start":544,"line_end":544,"column_start":5,"column_end":8}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":189484,"byte_end":189511,"line_start":545,"line_end":545,"column_start":5,"column_end":32}},{"value":"/     for i in (0..3).rev() {","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":189516,"byte_end":189547,"line_start":546,"line_end":546,"column_start":5,"column_end":36}},{"value":"/         let n = i * 3;","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":189552,"byte_end":189578,"line_start":547,"line_end":547,"column_start":5,"column_end":31}},{"value":"/         tx.unbounded_send(vec![n + 1, n + 2, n + 3]).unwrap();","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":189583,"byte_end":189649,"line_start":548,"line_end":548,"column_start":5,"column_end":71}},{"value":"/     }","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":189654,"byte_end":189663,"line_start":549,"line_end":549,"column_start":5,"column_end":14}},{"value":"/ });","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":189668,"byte_end":189675,"line_start":550,"line_end":550,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":189680,"byte_end":189683,"line_start":551,"line_end":551,"column_start":5,"column_end":8}},{"value":"/ let result = rx.concat().await;","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":189688,"byte_end":189723,"line_start":552,"line_end":552,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":189728,"byte_end":189731,"line_start":553,"line_end":553,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(result, vec![7, 8, 9, 4, 5, 6, 1, 2, 3]);","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":189736,"byte_end":189792,"line_start":554,"line_end":554,"column_start":5,"column_end":61}},{"value":"/ # });","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":189797,"byte_end":189806,"line_start":555,"line_end":555,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":189811,"byte_end":189818,"line_start":556,"line_end":556,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3769},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":190896,"byte_end":190901,"line_start":588,"line_end":588,"column_start":8,"column_end":13},"name":"cycle","qualname":"::stream::stream::StreamExt::cycle","value":"pub fn cycle(Self) -> Cycle<Self> where Self: Sized + Clone","parent":{"krate":0,"index":3744},"children":[],"decl_id":null,"docs":" Repeats a stream endlessly.","sig":null,"attributes":[{"value":"/ Repeats a stream endlessly.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":190062,"byte_end":190093,"line_start":565,"line_end":565,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":190098,"byte_end":190101,"line_start":566,"line_end":566,"column_start":5,"column_end":8}},{"value":"/ The stream never terminates. Note that you likely want to avoid","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":190106,"byte_end":190173,"line_start":567,"line_end":567,"column_start":5,"column_end":72}},{"value":"/ usage of `collect` or such on the returned stream as it will exhaust","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":190178,"byte_end":190250,"line_start":568,"line_end":568,"column_start":5,"column_end":77}},{"value":"/ available memory as it tries to just fill up all RAM.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":190255,"byte_end":190312,"line_start":569,"line_end":569,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":190317,"byte_end":190320,"line_start":570,"line_end":570,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":190325,"byte_end":190339,"line_start":571,"line_end":571,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":190344,"byte_end":190347,"line_start":572,"line_end":572,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":190352,"byte_end":190359,"line_start":573,"line_end":573,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":190364,"byte_end":190405,"line_start":574,"line_end":574,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":190410,"byte_end":190453,"line_start":575,"line_end":575,"column_start":5,"column_end":48}},{"value":"/ let a = [1, 2, 3];","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":190458,"byte_end":190480,"line_start":576,"line_end":576,"column_start":5,"column_end":27}},{"value":"/ let mut s = stream::iter(a.iter()).cycle();","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":190485,"byte_end":190532,"line_start":577,"line_end":577,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":190537,"byte_end":190540,"line_start":578,"line_end":578,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(s.next().await, Some(&1));","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":190545,"byte_end":190586,"line_start":579,"line_end":579,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(s.next().await, Some(&2));","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":190591,"byte_end":190632,"line_start":580,"line_end":580,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(s.next().await, Some(&3));","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":190637,"byte_end":190678,"line_start":581,"line_end":581,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(s.next().await, Some(&1));","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":190683,"byte_end":190724,"line_start":582,"line_end":582,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(s.next().await, Some(&2));","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":190729,"byte_end":190770,"line_start":583,"line_end":583,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(s.next().await, Some(&3));","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":190775,"byte_end":190816,"line_start":584,"line_end":584,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(s.next().await, Some(&1));","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":190821,"byte_end":190862,"line_start":585,"line_end":585,"column_start":5,"column_end":46}},{"value":"/ # });","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":190867,"byte_end":190876,"line_start":586,"line_end":586,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":190881,"byte_end":190888,"line_start":587,"line_end":587,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3770},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":191851,"byte_end":191855,"line_start":615,"line_end":615,"column_start":8,"column_end":12},"name":"fold","qualname":"::stream::stream::StreamExt::fold","value":"pub fn fold<T, Fut, F>(Self, T, F) -> Fold<Self, Fut, T, F> where\nF: FnMut(T, Self::Item) -> Fut, Fut: Future<Output = T>, Self: Sized","parent":{"krate":0,"index":3744},"children":[],"decl_id":null,"docs":" Execute an accumulating asynchronous computation over a stream,\n collecting all the values into one final result.","sig":null,"attributes":[{"value":"/ Execute an accumulating asynchronous computation over a stream,","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":191036,"byte_end":191103,"line_start":595,"line_end":595,"column_start":5,"column_end":72}},{"value":"/ collecting all the values into one final result.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":191108,"byte_end":191160,"line_start":596,"line_end":596,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":191165,"byte_end":191168,"line_start":597,"line_end":597,"column_start":5,"column_end":8}},{"value":"/ This combinator will accumulate all values returned by this stream","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":191173,"byte_end":191243,"line_start":598,"line_end":598,"column_start":5,"column_end":75}},{"value":"/ according to the closure provided. The initial state is also provided to","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":191248,"byte_end":191324,"line_start":599,"line_end":599,"column_start":5,"column_end":81}},{"value":"/ this method and then is returned again by each execution of the closure.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":191329,"byte_end":191405,"line_start":600,"line_end":600,"column_start":5,"column_end":81}},{"value":"/ Once the entire stream has been exhausted the returned future will","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":191410,"byte_end":191480,"line_start":601,"line_end":601,"column_start":5,"column_end":75}},{"value":"/ resolve to this value.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":191485,"byte_end":191511,"line_start":602,"line_end":602,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":191516,"byte_end":191519,"line_start":603,"line_end":603,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":191524,"byte_end":191538,"line_start":604,"line_end":604,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":191543,"byte_end":191546,"line_start":605,"line_end":605,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":191551,"byte_end":191558,"line_start":606,"line_end":606,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":191563,"byte_end":191604,"line_start":607,"line_end":607,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":191609,"byte_end":191652,"line_start":608,"line_end":608,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":191657,"byte_end":191660,"line_start":609,"line_end":609,"column_start":5,"column_end":8}},{"value":"/ let number_stream = stream::iter(0..6);","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":191665,"byte_end":191708,"line_start":610,"line_end":610,"column_start":5,"column_end":48}},{"value":"/ let sum = number_stream.fold(0, |acc, x| async move { acc + x });","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":191713,"byte_end":191782,"line_start":611,"line_end":611,"column_start":5,"column_end":74}},{"value":"/ assert_eq!(sum.await, 15);","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":191787,"byte_end":191817,"line_start":612,"line_end":612,"column_start":5,"column_end":35}},{"value":"/ # });","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":191822,"byte_end":191831,"line_start":613,"line_end":613,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":191836,"byte_end":191843,"line_start":614,"line_end":614,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3774},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":193049,"byte_end":193056,"line_start":655,"line_end":655,"column_start":8,"column_end":15},"name":"flatten","qualname":"::stream::stream::StreamExt::flatten","value":"pub fn flatten(Self) -> Flatten<Self> where Self::Item: Stream, Self: Sized","parent":{"krate":0,"index":3744},"children":[],"decl_id":null,"docs":" Flattens a stream of streams into just one continuous stream.","sig":null,"attributes":[{"value":"/ Flattens a stream of streams into just one continuous stream.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":192090,"byte_end":192155,"line_start":624,"line_end":624,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":192160,"byte_end":192163,"line_start":625,"line_end":625,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":192168,"byte_end":192182,"line_start":626,"line_end":626,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":192187,"byte_end":192190,"line_start":627,"line_end":627,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":192195,"byte_end":192202,"line_start":628,"line_end":628,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":192207,"byte_end":192248,"line_start":629,"line_end":629,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":192253,"byte_end":192284,"line_start":630,"line_end":630,"column_start":5,"column_end":36}},{"value":"/ use futures::stream::StreamExt;","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":192289,"byte_end":192324,"line_start":631,"line_end":631,"column_start":5,"column_end":40}},{"value":"/ use std::thread;","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":192329,"byte_end":192349,"line_start":632,"line_end":632,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":192354,"byte_end":192357,"line_start":633,"line_end":633,"column_start":5,"column_end":8}},{"value":"/ let (tx1, rx1) = mpsc::unbounded();","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":192362,"byte_end":192401,"line_start":634,"line_end":634,"column_start":5,"column_end":44}},{"value":"/ let (tx2, rx2) = mpsc::unbounded();","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":192406,"byte_end":192445,"line_start":635,"line_end":635,"column_start":5,"column_end":44}},{"value":"/ let (tx3, rx3) = mpsc::unbounded();","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":192450,"byte_end":192489,"line_start":636,"line_end":636,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":192494,"byte_end":192497,"line_start":637,"line_end":637,"column_start":5,"column_end":8}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":192502,"byte_end":192529,"line_start":638,"line_end":638,"column_start":5,"column_end":32}},{"value":"/     tx1.unbounded_send(1).unwrap();","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":192534,"byte_end":192573,"line_start":639,"line_end":639,"column_start":5,"column_end":44}},{"value":"/     tx1.unbounded_send(2).unwrap();","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":192578,"byte_end":192617,"line_start":640,"line_end":640,"column_start":5,"column_end":44}},{"value":"/ });","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":192622,"byte_end":192629,"line_start":641,"line_end":641,"column_start":5,"column_end":12}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":192634,"byte_end":192661,"line_start":642,"line_end":642,"column_start":5,"column_end":32}},{"value":"/     tx2.unbounded_send(3).unwrap();","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":192666,"byte_end":192705,"line_start":643,"line_end":643,"column_start":5,"column_end":44}},{"value":"/     tx2.unbounded_send(4).unwrap();","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":192710,"byte_end":192749,"line_start":644,"line_end":644,"column_start":5,"column_end":44}},{"value":"/ });","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":192754,"byte_end":192761,"line_start":645,"line_end":645,"column_start":5,"column_end":12}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":192766,"byte_end":192793,"line_start":646,"line_end":646,"column_start":5,"column_end":32}},{"value":"/     tx3.unbounded_send(rx1).unwrap();","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":192798,"byte_end":192839,"line_start":647,"line_end":647,"column_start":5,"column_end":46}},{"value":"/     tx3.unbounded_send(rx2).unwrap();","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":192844,"byte_end":192885,"line_start":648,"line_end":648,"column_start":5,"column_end":46}},{"value":"/ });","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":192890,"byte_end":192897,"line_start":649,"line_end":649,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":192902,"byte_end":192905,"line_start":650,"line_end":650,"column_start":5,"column_end":8}},{"value":"/ let output = rx3.flatten().collect::<Vec<i32>>().await;","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":192910,"byte_end":192969,"line_start":651,"line_end":651,"column_start":5,"column_end":64}},{"value":"/ assert_eq!(output, vec![1, 2, 3, 4]);","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":192974,"byte_end":193015,"line_start":652,"line_end":652,"column_start":5,"column_end":46}},{"value":"/ # });","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":193020,"byte_end":193029,"line_start":653,"line_end":653,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":193034,"byte_end":193041,"line_start":654,"line_end":654,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3775},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":194318,"byte_end":194326,"line_start":688,"line_end":688,"column_start":8,"column_end":16},"name":"flat_map","qualname":"::stream::stream::StreamExt::flat_map","value":"pub fn flat_map<U, F>(Self, F) -> FlatMap<Self, U, F> where\nF: FnMut(Self::Item) -> U, U: Stream, Self: Sized","parent":{"krate":0,"index":3744},"children":[],"decl_id":null,"docs":" Maps a stream like [`StreamExt::map`] but flattens nested `Stream`s.","sig":null,"attributes":[{"value":"/ Maps a stream like [`StreamExt::map`] but flattens nested `Stream`s.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":193233,"byte_end":193305,"line_start":663,"line_end":663,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":193310,"byte_end":193313,"line_start":664,"line_end":664,"column_start":5,"column_end":8}},{"value":"/ [`StreamExt::map`] is very useful, but if it produces a `Stream` instead,","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":193318,"byte_end":193395,"line_start":665,"line_end":665,"column_start":5,"column_end":82}},{"value":"/ you would have to chain combinators like `.map(f).flatten()` while this","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":193400,"byte_end":193475,"line_start":666,"line_end":666,"column_start":5,"column_end":80}},{"value":"/ combinator provides ability to write `.flat_map(f)` instead of chaining.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":193480,"byte_end":193556,"line_start":667,"line_end":667,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":193561,"byte_end":193564,"line_start":668,"line_end":668,"column_start":5,"column_end":8}},{"value":"/ The provided closure which produce inner streams is executed over all elements","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":193569,"byte_end":193651,"line_start":669,"line_end":669,"column_start":5,"column_end":87}},{"value":"/ of stream as last inner stream is terminated and next stream item is available.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":193656,"byte_end":193739,"line_start":670,"line_end":670,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":193744,"byte_end":193747,"line_start":671,"line_end":671,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the stream passed into it and returns a","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":193752,"byte_end":193828,"line_start":672,"line_end":672,"column_start":5,"column_end":81}},{"value":"/ wrapped version of it, similar to the existing `flat_map` methods in the","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":193833,"byte_end":193909,"line_start":673,"line_end":673,"column_start":5,"column_end":81}},{"value":"/ standard library.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":193914,"byte_end":193935,"line_start":674,"line_end":674,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":193940,"byte_end":193943,"line_start":675,"line_end":675,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":193948,"byte_end":193962,"line_start":676,"line_end":676,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":193967,"byte_end":193970,"line_start":677,"line_end":677,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":193975,"byte_end":193982,"line_start":678,"line_end":678,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":193987,"byte_end":194028,"line_start":679,"line_end":679,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":194033,"byte_end":194076,"line_start":680,"line_end":680,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":194081,"byte_end":194084,"line_start":681,"line_end":681,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=3);","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":194089,"byte_end":194126,"line_start":682,"line_end":682,"column_start":5,"column_end":42}},{"value":"/ let stream = stream.flat_map(|x| stream::iter(vec![x + 3; x]));","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":194131,"byte_end":194198,"line_start":683,"line_end":683,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":194203,"byte_end":194206,"line_start":684,"line_end":684,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![4, 5, 5, 6, 6, 6], stream.collect::<Vec<_>>().await);","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":194211,"byte_end":194284,"line_start":685,"line_end":685,"column_start":5,"column_end":78}},{"value":"/ # });","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":194289,"byte_end":194298,"line_start":686,"line_end":686,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":194303,"byte_end":194310,"line_start":687,"line_end":687,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3778},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":195338,"byte_end":195342,"line_start":721,"line_end":721,"column_start":8,"column_end":12},"name":"scan","qualname":"::stream::stream::StreamExt::scan","value":"pub fn scan<S, B, Fut, F>(Self, S, F) -> Scan<Self, S, Fut, F> where\nF: FnMut(&mut S, Self::Item) -> Fut, Fut: Future<Output = Option<B>>,\nSelf: Sized","parent":{"krate":0,"index":3744},"children":[],"decl_id":null,"docs":" Combinator similar to [`StreamExt::fold`] that holds internal state\n and produces a new stream.","sig":null,"attributes":[{"value":"/ Combinator similar to [`StreamExt::fold`] that holds internal state","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":194529,"byte_end":194600,"line_start":697,"line_end":697,"column_start":5,"column_end":76}},{"value":"/ and produces a new stream.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":194605,"byte_end":194635,"line_start":698,"line_end":698,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":194640,"byte_end":194643,"line_start":699,"line_end":699,"column_start":5,"column_end":8}},{"value":"/ Accepts initial state and closure which will be applied to each element","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":194648,"byte_end":194723,"line_start":700,"line_end":700,"column_start":5,"column_end":80}},{"value":"/ of the stream until provided closure returns `None`. Once `None` is","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":194728,"byte_end":194799,"line_start":701,"line_end":701,"column_start":5,"column_end":76}},{"value":"/ returned, stream will be terminated.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":194804,"byte_end":194844,"line_start":702,"line_end":702,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":194849,"byte_end":194852,"line_start":703,"line_end":703,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":194857,"byte_end":194871,"line_start":704,"line_end":704,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":194876,"byte_end":194879,"line_start":705,"line_end":705,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":194884,"byte_end":194891,"line_start":706,"line_end":706,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":194896,"byte_end":194937,"line_start":707,"line_end":707,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":194942,"byte_end":194966,"line_start":708,"line_end":708,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":194971,"byte_end":195014,"line_start":709,"line_end":709,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":195019,"byte_end":195022,"line_start":710,"line_end":710,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=10);","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":195027,"byte_end":195065,"line_start":711,"line_end":711,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":195070,"byte_end":195073,"line_start":712,"line_end":712,"column_start":5,"column_end":8}},{"value":"/ let stream = stream.scan(0, |state, x| {","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":195078,"byte_end":195122,"line_start":713,"line_end":713,"column_start":5,"column_end":49}},{"value":"/     *state += x;","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":195127,"byte_end":195147,"line_start":714,"line_end":714,"column_start":5,"column_end":25}},{"value":"/     future::ready(if *state < 10 { Some(x) } else { None })","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":195152,"byte_end":195215,"line_start":715,"line_end":715,"column_start":5,"column_end":68}},{"value":"/ });","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":195220,"byte_end":195227,"line_start":716,"line_end":716,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":195232,"byte_end":195235,"line_start":717,"line_end":717,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![1, 2, 3], stream.collect::<Vec<_>>().await);","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":195240,"byte_end":195304,"line_start":718,"line_end":718,"column_start":5,"column_end":69}},{"value":"/ # });","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":195309,"byte_end":195318,"line_start":719,"line_end":719,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":195323,"byte_end":195330,"line_start":720,"line_end":720,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3783},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":196389,"byte_end":196399,"line_start":752,"line_end":752,"column_start":8,"column_end":18},"name":"skip_while","qualname":"::stream::stream::StreamExt::skip_while","value":"pub fn skip_while<Fut, F>(Self, F) -> SkipWhile<Self, Fut, F> where\nF: FnMut(&Self::Item) -> Fut, Fut: Future<Output = bool>, Self: Sized","parent":{"krate":0,"index":3744},"children":[],"decl_id":null,"docs":" Skip elements on this stream while the provided asynchronous predicate\n resolves to `true`.","sig":null,"attributes":[{"value":"/ Skip elements on this stream while the provided asynchronous predicate","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":195611,"byte_end":195685,"line_start":730,"line_end":730,"column_start":5,"column_end":79}},{"value":"/ resolves to `true`.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":195690,"byte_end":195713,"line_start":731,"line_end":731,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":195718,"byte_end":195721,"line_start":732,"line_end":732,"column_start":5,"column_end":8}},{"value":"/ This function, like `Iterator::skip_while`, will skip elements on the","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":195726,"byte_end":195799,"line_start":733,"line_end":733,"column_start":5,"column_end":78}},{"value":"/ stream until the predicate `f` resolves to `false`. Once one element","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":195804,"byte_end":195876,"line_start":734,"line_end":734,"column_start":5,"column_end":77}},{"value":"/ returns `false`, all future elements will be returned from the underlying","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":195881,"byte_end":195958,"line_start":735,"line_end":735,"column_start":5,"column_end":82}},{"value":"/ stream.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":195963,"byte_end":195974,"line_start":736,"line_end":736,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":195979,"byte_end":195982,"line_start":737,"line_end":737,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":195987,"byte_end":196001,"line_start":738,"line_end":738,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":196006,"byte_end":196009,"line_start":739,"line_end":739,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":196014,"byte_end":196021,"line_start":740,"line_end":740,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":196026,"byte_end":196067,"line_start":741,"line_end":741,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":196072,"byte_end":196096,"line_start":742,"line_end":742,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":196101,"byte_end":196144,"line_start":743,"line_end":743,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":196149,"byte_end":196152,"line_start":744,"line_end":744,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=10);","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":196157,"byte_end":196195,"line_start":745,"line_end":745,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":196200,"byte_end":196203,"line_start":746,"line_end":746,"column_start":5,"column_end":8}},{"value":"/ let stream = stream.skip_while(|x| future::ready(*x <= 5));","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":196208,"byte_end":196271,"line_start":747,"line_end":747,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":196276,"byte_end":196279,"line_start":748,"line_end":748,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![6, 7, 8, 9, 10], stream.collect::<Vec<_>>().await);","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":196284,"byte_end":196355,"line_start":749,"line_end":749,"column_start":5,"column_end":76}},{"value":"/ # });","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":196360,"byte_end":196369,"line_start":750,"line_end":750,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":196374,"byte_end":196381,"line_start":751,"line_end":751,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3786},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":197388,"byte_end":197398,"line_start":782,"line_end":782,"column_start":8,"column_end":18},"name":"take_while","qualname":"::stream::stream::StreamExt::take_while","value":"pub fn take_while<Fut, F>(Self, F) -> TakeWhile<Self, Fut, F> where\nF: FnMut(&Self::Item) -> Fut, Fut: Future<Output = bool>, Self: Sized","parent":{"krate":0,"index":3744},"children":[],"decl_id":null,"docs":" Take elements from this stream while the provided asynchronous predicate\n resolves to `true`.","sig":null,"attributes":[{"value":"/ Take elements from this stream while the provided asynchronous predicate","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":196633,"byte_end":196709,"line_start":761,"line_end":761,"column_start":5,"column_end":81}},{"value":"/ resolves to `true`.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":196714,"byte_end":196737,"line_start":762,"line_end":762,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":196742,"byte_end":196745,"line_start":763,"line_end":763,"column_start":5,"column_end":8}},{"value":"/ This function, like `Iterator::take_while`, will take elements from the","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":196750,"byte_end":196825,"line_start":764,"line_end":764,"column_start":5,"column_end":80}},{"value":"/ stream until the predicate `f` resolves to `false`. Once one element","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":196830,"byte_end":196902,"line_start":765,"line_end":765,"column_start":5,"column_end":77}},{"value":"/ returns `false`, it will always return that the stream is done.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":196907,"byte_end":196974,"line_start":766,"line_end":766,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":196979,"byte_end":196982,"line_start":767,"line_end":767,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":196987,"byte_end":197001,"line_start":768,"line_end":768,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":197006,"byte_end":197009,"line_start":769,"line_end":769,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":197014,"byte_end":197021,"line_start":770,"line_end":770,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":197026,"byte_end":197067,"line_start":771,"line_end":771,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":197072,"byte_end":197096,"line_start":772,"line_end":772,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":197101,"byte_end":197144,"line_start":773,"line_end":773,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":197149,"byte_end":197152,"line_start":774,"line_end":774,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=10);","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":197157,"byte_end":197195,"line_start":775,"line_end":775,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":197200,"byte_end":197203,"line_start":776,"line_end":776,"column_start":5,"column_end":8}},{"value":"/ let stream = stream.take_while(|x| future::ready(*x <= 5));","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":197208,"byte_end":197271,"line_start":777,"line_end":777,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":197276,"byte_end":197279,"line_start":778,"line_end":778,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![1, 2, 3, 4, 5], stream.collect::<Vec<_>>().await);","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":197284,"byte_end":197354,"line_start":779,"line_end":779,"column_start":5,"column_end":75}},{"value":"/ # });","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":197359,"byte_end":197368,"line_start":780,"line_end":780,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":197373,"byte_end":197380,"line_start":781,"line_end":781,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3789},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":198914,"byte_end":198924,"line_start":827,"line_end":827,"column_start":8,"column_end":18},"name":"take_until","qualname":"::stream::stream::StreamExt::take_until","value":"pub fn take_until<Fut>(Self, Fut) -> TakeUntil<Self, Fut> where Fut: Future,\nSelf: Sized","parent":{"krate":0,"index":3744},"children":[],"decl_id":null,"docs":" Take elements from this stream until the provided future resolves.","sig":null,"attributes":[{"value":"/ Take elements from this stream until the provided future resolves.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":197632,"byte_end":197702,"line_start":791,"line_end":791,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":197707,"byte_end":197710,"line_start":792,"line_end":792,"column_start":5,"column_end":8}},{"value":"/ This function will take elements from the stream until the provided","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":197715,"byte_end":197786,"line_start":793,"line_end":793,"column_start":5,"column_end":76}},{"value":"/ stopping future `fut` resolves. Once the `fut` future becomes ready,","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":197791,"byte_end":197863,"line_start":794,"line_end":794,"column_start":5,"column_end":77}},{"value":"/ this stream combinator will always return that the stream is done.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":197868,"byte_end":197938,"line_start":795,"line_end":795,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":197943,"byte_end":197946,"line_start":796,"line_end":796,"column_start":5,"column_end":8}},{"value":"/ The stopping future may return any type. Once the stream is stopped","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":197951,"byte_end":198022,"line_start":797,"line_end":797,"column_start":5,"column_end":76}},{"value":"/ the result of the stopping future may be accessed with `TakeUntil::take_result()`.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":198027,"byte_end":198113,"line_start":798,"line_end":798,"column_start":5,"column_end":91}},{"value":"/ The stream may also be resumed with `TakeUntil::take_future()`.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":198118,"byte_end":198185,"line_start":799,"line_end":799,"column_start":5,"column_end":72}},{"value":"/ See the documentation of [`TakeUntil`] for more information.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":198190,"byte_end":198254,"line_start":800,"line_end":800,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":198259,"byte_end":198262,"line_start":801,"line_end":801,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":198267,"byte_end":198281,"line_start":802,"line_end":802,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":198286,"byte_end":198289,"line_start":803,"line_end":803,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":198294,"byte_end":198301,"line_start":804,"line_end":804,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":198306,"byte_end":198347,"line_start":805,"line_end":805,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":198352,"byte_end":198376,"line_start":806,"line_end":806,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":198381,"byte_end":198424,"line_start":807,"line_end":807,"column_start":5,"column_end":48}},{"value":"/ use futures::task::Poll;","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":198429,"byte_end":198457,"line_start":808,"line_end":808,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":198462,"byte_end":198465,"line_start":809,"line_end":809,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=10);","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":198470,"byte_end":198508,"line_start":810,"line_end":810,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":198513,"byte_end":198516,"line_start":811,"line_end":811,"column_start":5,"column_end":8}},{"value":"/ let mut i = 0;","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":198521,"byte_end":198539,"line_start":812,"line_end":812,"column_start":5,"column_end":23}},{"value":"/ let stop_fut = future::poll_fn(|_cx| {","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":198544,"byte_end":198586,"line_start":813,"line_end":813,"column_start":5,"column_end":47}},{"value":"/     i += 1;","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":198591,"byte_end":198606,"line_start":814,"line_end":814,"column_start":5,"column_end":20}},{"value":"/     if i <= 5 {","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":198611,"byte_end":198630,"line_start":815,"line_end":815,"column_start":5,"column_end":24}},{"value":"/         Poll::Pending","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":198635,"byte_end":198660,"line_start":816,"line_end":816,"column_start":5,"column_end":30}},{"value":"/     } else {","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":198665,"byte_end":198681,"line_start":817,"line_end":817,"column_start":5,"column_end":21}},{"value":"/         Poll::Ready(())","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":198686,"byte_end":198713,"line_start":818,"line_end":818,"column_start":5,"column_end":32}},{"value":"/     }","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":198718,"byte_end":198727,"line_start":819,"line_end":819,"column_start":5,"column_end":14}},{"value":"/ });","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":198732,"byte_end":198739,"line_start":820,"line_end":820,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":198744,"byte_end":198747,"line_start":821,"line_end":821,"column_start":5,"column_end":8}},{"value":"/ let stream = stream.take_until(stop_fut);","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":198752,"byte_end":198797,"line_start":822,"line_end":822,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":198802,"byte_end":198805,"line_start":823,"line_end":823,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![1, 2, 3, 4, 5], stream.collect::<Vec<_>>().await);","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":198810,"byte_end":198880,"line_start":824,"line_end":824,"column_start":5,"column_end":75}},{"value":"/ # });","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":198885,"byte_end":198894,"line_start":825,"line_end":825,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":198899,"byte_end":198906,"line_start":826,"line_end":826,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3791},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":200163,"byte_end":200171,"line_start":868,"line_end":868,"column_start":8,"column_end":16},"name":"for_each","qualname":"::stream::stream::StreamExt::for_each","value":"pub fn for_each<Fut, F>(Self, F) -> ForEach<Self, Fut, F> where\nF: FnMut(Self::Item) -> Fut, Fut: Future<Output = ()>, Self: Sized","parent":{"krate":0,"index":3744},"children":[],"decl_id":null,"docs":" Runs this stream to completion, executing the provided asynchronous\n closure for each element on the stream.","sig":null,"attributes":[{"value":"/ Runs this stream to completion, executing the provided asynchronous","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":199105,"byte_end":199176,"line_start":835,"line_end":835,"column_start":5,"column_end":76}},{"value":"/ closure for each element on the stream.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":199181,"byte_end":199224,"line_start":836,"line_end":836,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":199229,"byte_end":199232,"line_start":837,"line_end":837,"column_start":5,"column_end":8}},{"value":"/ The closure provided will be called for each item this stream produces,","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":199237,"byte_end":199312,"line_start":838,"line_end":838,"column_start":5,"column_end":80}},{"value":"/ yielding a future. That future will then be executed to completion","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":199317,"byte_end":199387,"line_start":839,"line_end":839,"column_start":5,"column_end":75}},{"value":"/ before moving on to the next item.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":199392,"byte_end":199430,"line_start":840,"line_end":840,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":199435,"byte_end":199438,"line_start":841,"line_end":841,"column_start":5,"column_end":8}},{"value":"/ The returned value is a `Future` where the `Output` type is `()`; it is","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":199443,"byte_end":199518,"line_start":842,"line_end":842,"column_start":5,"column_end":80}},{"value":"/ executed entirely for its side effects.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":199523,"byte_end":199566,"line_start":843,"line_end":843,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":199571,"byte_end":199574,"line_start":844,"line_end":844,"column_start":5,"column_end":8}},{"value":"/ To process each item in the stream and produce another stream instead","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":199579,"byte_end":199652,"line_start":845,"line_end":845,"column_start":5,"column_end":78}},{"value":"/ of a single future, use `then` instead.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":199657,"byte_end":199700,"line_start":846,"line_end":846,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":199705,"byte_end":199708,"line_start":847,"line_end":847,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":199713,"byte_end":199727,"line_start":848,"line_end":848,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":199732,"byte_end":199735,"line_start":849,"line_end":849,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":199740,"byte_end":199747,"line_start":850,"line_end":850,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":199752,"byte_end":199793,"line_start":851,"line_end":851,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":199798,"byte_end":199822,"line_start":852,"line_end":852,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":199827,"byte_end":199870,"line_start":853,"line_end":853,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":199875,"byte_end":199878,"line_start":854,"line_end":854,"column_start":5,"column_end":8}},{"value":"/ let mut x = 0;","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":199883,"byte_end":199901,"line_start":855,"line_end":855,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":199906,"byte_end":199909,"line_start":856,"line_end":856,"column_start":5,"column_end":8}},{"value":"/ {","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":199914,"byte_end":199919,"line_start":857,"line_end":857,"column_start":5,"column_end":10}},{"value":"/     let fut = stream::repeat(1).take(3).for_each(|item| {","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":199924,"byte_end":199985,"line_start":858,"line_end":858,"column_start":5,"column_end":66}},{"value":"/         x += item;","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":199990,"byte_end":200012,"line_start":859,"line_end":859,"column_start":5,"column_end":27}},{"value":"/         future::ready(())","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":200017,"byte_end":200046,"line_start":860,"line_end":860,"column_start":5,"column_end":34}},{"value":"/     });","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":200051,"byte_end":200062,"line_start":861,"line_end":861,"column_start":5,"column_end":16}},{"value":"/     fut.await;","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":200067,"byte_end":200085,"line_start":862,"line_end":862,"column_start":5,"column_end":23}},{"value":"/ }","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":200090,"byte_end":200095,"line_start":863,"line_end":863,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":200100,"byte_end":200103,"line_start":864,"line_end":864,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(x, 3);","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":200108,"byte_end":200129,"line_start":865,"line_end":865,"column_start":5,"column_end":26}},{"value":"/ # });","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":200134,"byte_end":200143,"line_start":866,"line_end":866,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":200148,"byte_end":200155,"line_start":867,"line_end":867,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3794},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":202333,"byte_end":202352,"line_start":924,"line_end":924,"column_start":8,"column_end":27},"name":"for_each_concurrent","qualname":"::stream::stream::StreamExt::for_each_concurrent","value":"pub fn for_each_concurrent<Fut, F,\n                           impl Into<Option<usize>>: Into<Option<usize>>>(Self,\n                                                                          impl Into<Option<usize>>,\n                                                                          F)\n-> ForEachConcurrent<Self, Fut, F> where F: FnMut(Self::Item) -> Fut,\nFut: Future<Output = ()>, Self: Sized","parent":{"krate":0,"index":3744},"children":[],"decl_id":null,"docs":" Runs this stream to completion, executing the provided asynchronous\n closure for each element on the stream concurrently as elements become\n available.","sig":null,"attributes":[{"value":"/ Runs this stream to completion, executing the provided asynchronous","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":200390,"byte_end":200461,"line_start":877,"line_end":877,"column_start":5,"column_end":76}},{"value":"/ closure for each element on the stream concurrently as elements become","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":200466,"byte_end":200540,"line_start":878,"line_end":878,"column_start":5,"column_end":79}},{"value":"/ available.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":200545,"byte_end":200559,"line_start":879,"line_end":879,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":200564,"byte_end":200567,"line_start":880,"line_end":880,"column_start":5,"column_end":8}},{"value":"/ This is similar to [`StreamExt::for_each`], but the futures","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":200572,"byte_end":200635,"line_start":881,"line_end":881,"column_start":5,"column_end":68}},{"value":"/ produced by the closure are run concurrently (but not in parallel--","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":200640,"byte_end":200711,"line_start":882,"line_end":882,"column_start":5,"column_end":76}},{"value":"/ this combinator does not introduce any threads).","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":200716,"byte_end":200768,"line_start":883,"line_end":883,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":200773,"byte_end":200776,"line_start":884,"line_end":884,"column_start":5,"column_end":8}},{"value":"/ The closure provided will be called for each item this stream produces,","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":200781,"byte_end":200856,"line_start":885,"line_end":885,"column_start":5,"column_end":80}},{"value":"/ yielding a future. That future will then be executed to completion","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":200861,"byte_end":200931,"line_start":886,"line_end":886,"column_start":5,"column_end":75}},{"value":"/ concurrently with the other futures produced by the closure.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":200936,"byte_end":201000,"line_start":887,"line_end":887,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":201005,"byte_end":201008,"line_start":888,"line_end":888,"column_start":5,"column_end":8}},{"value":"/ The first argument is an optional limit on the number of concurrent","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":201013,"byte_end":201084,"line_start":889,"line_end":889,"column_start":5,"column_end":76}},{"value":"/ futures. If this limit is not `None`, no more than `limit` futures","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":201089,"byte_end":201159,"line_start":890,"line_end":890,"column_start":5,"column_end":75}},{"value":"/ will be run concurrently. The `limit` argument is of type","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":201164,"byte_end":201225,"line_start":891,"line_end":891,"column_start":5,"column_end":66}},{"value":"/ `Into<Option<usize>>`, and so can be provided as either `None`,","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":201230,"byte_end":201297,"line_start":892,"line_end":892,"column_start":5,"column_end":72}},{"value":"/ `Some(10)`, or just `10`. Note: a limit of zero is interpreted as","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":201302,"byte_end":201371,"line_start":893,"line_end":893,"column_start":5,"column_end":74}},{"value":"/ no limit at all, and will have the same result as passing in `None`.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":201376,"byte_end":201448,"line_start":894,"line_end":894,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":201453,"byte_end":201456,"line_start":895,"line_end":895,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":201461,"byte_end":201536,"line_start":896,"line_end":896,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":201541,"byte_end":201598,"line_start":897,"line_end":897,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":201603,"byte_end":201606,"line_start":898,"line_end":898,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":201611,"byte_end":201625,"line_start":899,"line_end":899,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":201630,"byte_end":201633,"line_start":900,"line_end":900,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":201638,"byte_end":201645,"line_start":901,"line_end":901,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":201650,"byte_end":201691,"line_start":902,"line_end":902,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::oneshot;","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":201696,"byte_end":201730,"line_start":903,"line_end":903,"column_start":5,"column_end":39}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":201735,"byte_end":201778,"line_start":904,"line_end":904,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":201783,"byte_end":201786,"line_start":905,"line_end":905,"column_start":5,"column_end":8}},{"value":"/ let (tx1, rx1) = oneshot::channel();","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":201791,"byte_end":201831,"line_start":906,"line_end":906,"column_start":5,"column_end":45}},{"value":"/ let (tx2, rx2) = oneshot::channel();","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":201836,"byte_end":201876,"line_start":907,"line_end":907,"column_start":5,"column_end":45}},{"value":"/ let (tx3, rx3) = oneshot::channel();","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":201881,"byte_end":201921,"line_start":908,"line_end":908,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":201926,"byte_end":201929,"line_start":909,"line_end":909,"column_start":5,"column_end":8}},{"value":"/ let fut = stream::iter(vec![rx1, rx2, rx3]).for_each_concurrent(","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":201934,"byte_end":202002,"line_start":910,"line_end":910,"column_start":5,"column_end":73}},{"value":"/     /* limit */ 2,","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":202007,"byte_end":202029,"line_start":911,"line_end":911,"column_start":5,"column_end":27}},{"value":"/     |rx| async move {","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":202034,"byte_end":202059,"line_start":912,"line_end":912,"column_start":5,"column_end":30}},{"value":"/         rx.await.unwrap();","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":202064,"byte_end":202094,"line_start":913,"line_end":913,"column_start":5,"column_end":35}},{"value":"/     }","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":202099,"byte_end":202108,"line_start":914,"line_end":914,"column_start":5,"column_end":14}},{"value":"/ );","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":202113,"byte_end":202119,"line_start":915,"line_end":915,"column_start":5,"column_end":11}},{"value":"/ tx1.send(()).unwrap();","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":202124,"byte_end":202150,"line_start":916,"line_end":916,"column_start":5,"column_end":31}},{"value":"/ tx2.send(()).unwrap();","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":202155,"byte_end":202181,"line_start":917,"line_end":917,"column_start":5,"column_end":31}},{"value":"/ tx3.send(()).unwrap();","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":202186,"byte_end":202212,"line_start":918,"line_end":918,"column_start":5,"column_end":31}},{"value":"/ fut.await;","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":202217,"byte_end":202231,"line_start":919,"line_end":919,"column_start":5,"column_end":19}},{"value":"/ # })","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":202236,"byte_end":202244,"line_start":920,"line_end":920,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":202249,"byte_end":202256,"line_start":921,"line_end":921,"column_start":5,"column_end":12}},{"value":"cfg(not(futures_no_atomic_cas))","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":202261,"byte_end":202295,"line_start":922,"line_end":922,"column_start":5,"column_end":39}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":202300,"byte_end":202325,"line_start":923,"line_end":923,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":3798},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":203177,"byte_end":203181,"line_start":953,"line_end":953,"column_start":8,"column_end":12},"name":"take","qualname":"::stream::stream::StreamExt::take","value":"pub fn take(Self, usize) -> Take<Self> where Self: Sized","parent":{"krate":0,"index":3744},"children":[],"decl_id":null,"docs":" Creates a new stream of at most `n` items of the underlying stream.","sig":null,"attributes":[{"value":"/ Creates a new stream of at most `n` items of the underlying stream.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":202669,"byte_end":202740,"line_start":937,"line_end":937,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":202745,"byte_end":202748,"line_start":938,"line_end":938,"column_start":5,"column_end":8}},{"value":"/ Once `n` items have been yielded from this stream then it will always","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":202753,"byte_end":202826,"line_start":939,"line_end":939,"column_start":5,"column_end":78}},{"value":"/ return that the stream is done.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":202831,"byte_end":202866,"line_start":940,"line_end":940,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":202871,"byte_end":202874,"line_start":941,"line_end":941,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":202879,"byte_end":202893,"line_start":942,"line_end":942,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":202898,"byte_end":202901,"line_start":943,"line_end":943,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":202906,"byte_end":202913,"line_start":944,"line_end":944,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":202918,"byte_end":202959,"line_start":945,"line_end":945,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":202964,"byte_end":203007,"line_start":946,"line_end":946,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":203012,"byte_end":203015,"line_start":947,"line_end":947,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=10).take(3);","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":203020,"byte_end":203066,"line_start":948,"line_end":948,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":203071,"byte_end":203074,"line_start":949,"line_end":949,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![1, 2, 3], stream.collect::<Vec<_>>().await);","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":203079,"byte_end":203143,"line_start":950,"line_end":950,"column_start":5,"column_end":69}},{"value":"/ # });","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":203148,"byte_end":203157,"line_start":951,"line_end":951,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":203162,"byte_end":203169,"line_start":952,"line_end":952,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3799},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":203846,"byte_end":203850,"line_start":976,"line_end":976,"column_start":8,"column_end":12},"name":"skip","qualname":"::stream::stream::StreamExt::skip","value":"pub fn skip(Self, usize) -> Skip<Self> where Self: Sized","parent":{"krate":0,"index":3744},"children":[],"decl_id":null,"docs":" Creates a new stream which skips `n` items of the underlying stream.","sig":null,"attributes":[{"value":"/ Creates a new stream which skips `n` items of the underlying stream.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":203319,"byte_end":203391,"line_start":960,"line_end":960,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":203396,"byte_end":203399,"line_start":961,"line_end":961,"column_start":5,"column_end":8}},{"value":"/ Once `n` items have been skipped from this stream then it will always","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":203404,"byte_end":203477,"line_start":962,"line_end":962,"column_start":5,"column_end":78}},{"value":"/ return the remaining items on this stream.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":203482,"byte_end":203528,"line_start":963,"line_end":963,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":203533,"byte_end":203536,"line_start":964,"line_end":964,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":203541,"byte_end":203555,"line_start":965,"line_end":965,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":203560,"byte_end":203563,"line_start":966,"line_end":966,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":203568,"byte_end":203575,"line_start":967,"line_end":967,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":203580,"byte_end":203621,"line_start":968,"line_end":968,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":203626,"byte_end":203669,"line_start":969,"line_end":969,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":203674,"byte_end":203677,"line_start":970,"line_end":970,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=10).skip(5);","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":203682,"byte_end":203728,"line_start":971,"line_end":971,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":203733,"byte_end":203736,"line_start":972,"line_end":972,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![6, 7, 8, 9, 10], stream.collect::<Vec<_>>().await);","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":203741,"byte_end":203812,"line_start":973,"line_end":973,"column_start":5,"column_end":76}},{"value":"/ # });","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":203817,"byte_end":203826,"line_start":974,"line_end":974,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":203831,"byte_end":203838,"line_start":975,"line_end":975,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3800},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":205471,"byte_end":205475,"line_start":1022,"line_end":1022,"column_start":8,"column_end":12},"name":"fuse","qualname":"::stream::stream::StreamExt::fuse","value":"pub fn fuse(Self) -> Fuse<Self> where Self: Sized","parent":{"krate":0,"index":3744},"children":[],"decl_id":null,"docs":" Fuse a stream such that [`poll_next`](Stream::poll_next) will never\n again be called once it has finished. This method can be used to turn\n any `Stream` into a `FusedStream`.","sig":null,"attributes":[{"value":"/ Fuse a stream such that [`poll_next`](Stream::poll_next) will never","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":203988,"byte_end":204059,"line_start":983,"line_end":983,"column_start":5,"column_end":76}},{"value":"/ again be called once it has finished. This method can be used to turn","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":204064,"byte_end":204137,"line_start":984,"line_end":984,"column_start":5,"column_end":78}},{"value":"/ any `Stream` into a `FusedStream`.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":204142,"byte_end":204180,"line_start":985,"line_end":985,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":204185,"byte_end":204188,"line_start":986,"line_end":986,"column_start":5,"column_end":8}},{"value":"/ Normally, once a stream has returned [`None`] from","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":204193,"byte_end":204247,"line_start":987,"line_end":987,"column_start":5,"column_end":59}},{"value":"/ [`poll_next`](Stream::poll_next) any further calls could exhibit bad","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":204252,"byte_end":204324,"line_start":988,"line_end":988,"column_start":5,"column_end":77}},{"value":"/ behavior such as block forever, panic, never return, etc. If it is known","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":204329,"byte_end":204405,"line_start":989,"line_end":989,"column_start":5,"column_end":81}},{"value":"/ that [`poll_next`](Stream::poll_next) may be called after stream","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":204410,"byte_end":204478,"line_start":990,"line_end":990,"column_start":5,"column_end":73}},{"value":"/ has already finished, then this method can be used to ensure that it has","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":204483,"byte_end":204559,"line_start":991,"line_end":991,"column_start":5,"column_end":81}},{"value":"/ defined semantics.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":204564,"byte_end":204586,"line_start":992,"line_end":992,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":204591,"byte_end":204594,"line_start":993,"line_end":993,"column_start":5,"column_end":8}},{"value":"/ The [`poll_next`](Stream::poll_next) method of a `fuse`d stream","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":204599,"byte_end":204666,"line_start":994,"line_end":994,"column_start":5,"column_end":72}},{"value":"/ is guaranteed to return [`None`] after the underlying stream has","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":204671,"byte_end":204739,"line_start":995,"line_end":995,"column_start":5,"column_end":73}},{"value":"/ finished.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":204744,"byte_end":204757,"line_start":996,"line_end":996,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":204762,"byte_end":204765,"line_start":997,"line_end":997,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":204770,"byte_end":204784,"line_start":998,"line_end":998,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":204789,"byte_end":204792,"line_start":999,"line_end":999,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":204797,"byte_end":204804,"line_start":1000,"line_end":1000,"column_start":5,"column_end":12}},{"value":"/ use futures::executor::block_on_stream;","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":204809,"byte_end":204852,"line_start":1001,"line_end":1001,"column_start":5,"column_end":48}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":204857,"byte_end":204900,"line_start":1002,"line_end":1002,"column_start":5,"column_end":48}},{"value":"/ use futures::task::Poll;","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":204905,"byte_end":204933,"line_start":1003,"line_end":1003,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":204938,"byte_end":204941,"line_start":1004,"line_end":1004,"column_start":5,"column_end":8}},{"value":"/ let mut x = 0;","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":204946,"byte_end":204964,"line_start":1005,"line_end":1005,"column_start":5,"column_end":23}},{"value":"/ let stream = stream::poll_fn(|_| {","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":204969,"byte_end":205007,"line_start":1006,"line_end":1006,"column_start":5,"column_end":43}},{"value":"/     x += 1;","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":205012,"byte_end":205027,"line_start":1007,"line_end":1007,"column_start":5,"column_end":20}},{"value":"/     match x {","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":205032,"byte_end":205049,"line_start":1008,"line_end":1008,"column_start":5,"column_end":22}},{"value":"/         0..=2 => Poll::Ready(Some(x)),","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":205054,"byte_end":205096,"line_start":1009,"line_end":1009,"column_start":5,"column_end":47}},{"value":"/         3 => Poll::Ready(None),","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":205101,"byte_end":205136,"line_start":1010,"line_end":1010,"column_start":5,"column_end":40}},{"value":"/         _ => panic!(\"should not happen\")","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":205141,"byte_end":205185,"line_start":1011,"line_end":1011,"column_start":5,"column_end":49}},{"value":"/     }","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":205190,"byte_end":205199,"line_start":1012,"line_end":1012,"column_start":5,"column_end":14}},{"value":"/ }).fuse();","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":205204,"byte_end":205218,"line_start":1013,"line_end":1013,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":205223,"byte_end":205226,"line_start":1014,"line_end":1014,"column_start":5,"column_end":8}},{"value":"/ let mut iter = block_on_stream(stream);","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":205231,"byte_end":205274,"line_start":1015,"line_end":1015,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(Some(1), iter.next());","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":205279,"byte_end":205316,"line_start":1016,"line_end":1016,"column_start":5,"column_end":42}},{"value":"/ assert_eq!(Some(2), iter.next());","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":205321,"byte_end":205358,"line_start":1017,"line_end":1017,"column_start":5,"column_end":42}},{"value":"/ assert_eq!(None, iter.next());","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":205363,"byte_end":205397,"line_start":1018,"line_end":1018,"column_start":5,"column_end":39}},{"value":"/ assert_eq!(None, iter.next());","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":205402,"byte_end":205436,"line_start":1019,"line_end":1019,"column_start":5,"column_end":39}},{"value":"/ // ...","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":205441,"byte_end":205451,"line_start":1020,"line_end":1020,"column_start":5,"column_end":15}},{"value":"/ ```","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":205456,"byte_end":205463,"line_start":1021,"line_end":1021,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3801},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":206404,"byte_end":206410,"line_start":1055,"line_end":1055,"column_start":8,"column_end":14},"name":"by_ref","qualname":"::stream::stream::StreamExt::by_ref","value":"pub fn by_ref(&mut Self) -> &mut Self","parent":{"krate":0,"index":3744},"children":[],"decl_id":null,"docs":" Borrows a stream, rather than consuming it.","sig":null,"attributes":[{"value":"/ Borrows a stream, rather than consuming it.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":205600,"byte_end":205647,"line_start":1029,"line_end":1029,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":205652,"byte_end":205655,"line_start":1030,"line_end":1030,"column_start":5,"column_end":8}},{"value":"/ This is useful to allow applying stream adaptors while still retaining","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":205660,"byte_end":205734,"line_start":1031,"line_end":1031,"column_start":5,"column_end":79}},{"value":"/ ownership of the original stream.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":205739,"byte_end":205776,"line_start":1032,"line_end":1032,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":205781,"byte_end":205784,"line_start":1033,"line_end":1033,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":205789,"byte_end":205803,"line_start":1034,"line_end":1034,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":205808,"byte_end":205811,"line_start":1035,"line_end":1035,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":205816,"byte_end":205823,"line_start":1036,"line_end":1036,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":205828,"byte_end":205869,"line_start":1037,"line_end":1037,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":205874,"byte_end":205917,"line_start":1038,"line_end":1038,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":205922,"byte_end":205925,"line_start":1039,"line_end":1039,"column_start":5,"column_end":8}},{"value":"/ let mut stream = stream::iter(1..5);","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":205930,"byte_end":205970,"line_start":1040,"line_end":1040,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":205975,"byte_end":205978,"line_start":1041,"line_end":1041,"column_start":5,"column_end":8}},{"value":"/ let sum = stream.by_ref()","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":205983,"byte_end":206012,"line_start":1042,"line_end":1042,"column_start":5,"column_end":34}},{"value":"/                 .take(2)","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":206017,"byte_end":206045,"line_start":1043,"line_end":1043,"column_start":5,"column_end":33}},{"value":"/                 .fold(0, |a, b| async move { a + b })","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":206050,"byte_end":206107,"line_start":1044,"line_end":1044,"column_start":5,"column_end":62}},{"value":"/                 .await;","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":206112,"byte_end":206139,"line_start":1045,"line_end":1045,"column_start":5,"column_end":32}},{"value":"/ assert_eq!(sum, 3);","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":206144,"byte_end":206167,"line_start":1046,"line_end":1046,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":206172,"byte_end":206175,"line_start":1047,"line_end":1047,"column_start":5,"column_end":8}},{"value":"/ // You can use the stream again","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":206180,"byte_end":206215,"line_start":1048,"line_end":1048,"column_start":5,"column_end":40}},{"value":"/ let sum = stream.take(2)","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":206220,"byte_end":206248,"line_start":1049,"line_end":1049,"column_start":5,"column_end":33}},{"value":"/                 .fold(0, |a, b| async move { a + b })","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":206253,"byte_end":206310,"line_start":1050,"line_end":1050,"column_start":5,"column_end":62}},{"value":"/                 .await;","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":206315,"byte_end":206342,"line_start":1051,"line_end":1051,"column_start":5,"column_end":32}},{"value":"/ assert_eq!(sum, 7);","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":206347,"byte_end":206370,"line_start":1052,"line_end":1052,"column_start":5,"column_end":28}},{"value":"/ # });","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":206375,"byte_end":206384,"line_start":1053,"line_end":1053,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":206389,"byte_end":206396,"line_start":1054,"line_end":1054,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3802},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":208169,"byte_end":208181,"line_start":1100,"line_end":1100,"column_start":8,"column_end":20},"name":"catch_unwind","qualname":"::stream::stream::StreamExt::catch_unwind","value":"pub fn catch_unwind(Self) -> CatchUnwind<Self> where Self: Sized +\nstd::panic::UnwindSafe","parent":{"krate":0,"index":3744},"children":[],"decl_id":null,"docs":" Catches unwinding panics while polling the stream.","sig":null,"attributes":[{"value":"/ Catches unwinding panics while polling the stream.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":206461,"byte_end":206515,"line_start":1059,"line_end":1059,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":206520,"byte_end":206523,"line_start":1060,"line_end":1060,"column_start":5,"column_end":8}},{"value":"/ Caught panic (if any) will be the last element of the resulting stream.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":206528,"byte_end":206603,"line_start":1061,"line_end":1061,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":206608,"byte_end":206611,"line_start":1062,"line_end":1062,"column_start":5,"column_end":8}},{"value":"/ In general, panics within a stream can propagate all the way out to the","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":206616,"byte_end":206691,"line_start":1063,"line_end":1063,"column_start":5,"column_end":80}},{"value":"/ task level. This combinator makes it possible to halt unwinding within","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":206696,"byte_end":206770,"line_start":1064,"line_end":1064,"column_start":5,"column_end":79}},{"value":"/ the stream itself. It's most commonly used within task executors. This","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":206775,"byte_end":206849,"line_start":1065,"line_end":1065,"column_start":5,"column_end":79}},{"value":"/ method should not be used for error handling.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":206854,"byte_end":206903,"line_start":1066,"line_end":1066,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":206908,"byte_end":206911,"line_start":1067,"line_end":1067,"column_start":5,"column_end":8}},{"value":"/ Note that this method requires the `UnwindSafe` bound from the standard","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":206916,"byte_end":206991,"line_start":1068,"line_end":1068,"column_start":5,"column_end":80}},{"value":"/ library. This isn't always applied automatically, and the standard","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":206996,"byte_end":207066,"line_start":1069,"line_end":1069,"column_start":5,"column_end":75}},{"value":"/ library provides an `AssertUnwindSafe` wrapper type to apply it","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":207071,"byte_end":207138,"line_start":1070,"line_end":1070,"column_start":5,"column_end":72}},{"value":"/ after-the fact. To assist using this method, the [`Stream`] trait is","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":207143,"byte_end":207215,"line_start":1071,"line_end":1071,"column_start":5,"column_end":77}},{"value":"/ also implemented for `AssertUnwindSafe<St>` where `St` implements","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":207220,"byte_end":207289,"line_start":1072,"line_end":1072,"column_start":5,"column_end":74}},{"value":"/ [`Stream`].","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":207294,"byte_end":207309,"line_start":1073,"line_end":1073,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":207314,"byte_end":207317,"line_start":1074,"line_end":1074,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` feature of this","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":207322,"byte_end":207386,"line_start":1075,"line_end":1075,"column_start":5,"column_end":69}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":207391,"byte_end":207448,"line_start":1076,"line_end":1076,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":207453,"byte_end":207456,"line_start":1077,"line_end":1077,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":207461,"byte_end":207475,"line_start":1078,"line_end":1078,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":207480,"byte_end":207483,"line_start":1079,"line_end":1079,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":207488,"byte_end":207495,"line_start":1080,"line_end":1080,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":207500,"byte_end":207541,"line_start":1081,"line_end":1081,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":207546,"byte_end":207589,"line_start":1082,"line_end":1082,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":207594,"byte_end":207597,"line_start":1083,"line_end":1083,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(vec![Some(10), None, Some(11)]);","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":207602,"byte_end":207664,"line_start":1084,"line_end":1084,"column_start":5,"column_end":67}},{"value":"/ // Panic on second element","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":207669,"byte_end":207699,"line_start":1085,"line_end":1085,"column_start":5,"column_end":35}},{"value":"/ let stream_panicking = stream.map(|o| o.unwrap());","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":207704,"byte_end":207758,"line_start":1086,"line_end":1086,"column_start":5,"column_end":59}},{"value":"/ // Collect all the results","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":207763,"byte_end":207793,"line_start":1087,"line_end":1087,"column_start":5,"column_end":35}},{"value":"/ let stream = stream_panicking.catch_unwind();","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":207798,"byte_end":207847,"line_start":1088,"line_end":1088,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":207852,"byte_end":207855,"line_start":1089,"line_end":1089,"column_start":5,"column_end":8}},{"value":"/ let results: Vec<Result<i32, _>> = stream.collect().await;","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":207860,"byte_end":207922,"line_start":1090,"line_end":1090,"column_start":5,"column_end":67}},{"value":"/ match results[0] {","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":207927,"byte_end":207949,"line_start":1091,"line_end":1091,"column_start":5,"column_end":27}},{"value":"/     Ok(10) => {}","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":207954,"byte_end":207974,"line_start":1092,"line_end":1092,"column_start":5,"column_end":25}},{"value":"/     _ => panic!(\"unexpected result!\"),","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":207979,"byte_end":208021,"line_start":1093,"line_end":1093,"column_start":5,"column_end":47}},{"value":"/ }","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":208026,"byte_end":208031,"line_start":1094,"line_end":1094,"column_start":5,"column_end":10}},{"value":"/ assert!(results[1].is_err());","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":208036,"byte_end":208069,"line_start":1095,"line_end":1095,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(results.len(), 2);","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":208074,"byte_end":208107,"line_start":1096,"line_end":1096,"column_start":5,"column_end":38}},{"value":"/ # });","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":208112,"byte_end":208121,"line_start":1097,"line_end":1097,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":208126,"byte_end":208133,"line_start":1098,"line_end":1098,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":208138,"byte_end":208161,"line_start":1099,"line_end":1099,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":3803},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":208557,"byte_end":208562,"line_start":1112,"line_end":1112,"column_start":8,"column_end":13},"name":"boxed","qualname":"::stream::stream::StreamExt::boxed","value":"pub fn boxed<'a>(Self) -> BoxStream where Self: Sized + Send + 'a","parent":{"krate":0,"index":3744},"children":[],"decl_id":null,"docs":" Wrap the stream in a Box, pinning it.","sig":null,"attributes":[{"value":"/ Wrap the stream in a Box, pinning it.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":208328,"byte_end":208369,"line_start":1107,"line_end":1107,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":208374,"byte_end":208377,"line_start":1108,"line_end":1108,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":208382,"byte_end":208457,"line_start":1109,"line_end":1109,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":208462,"byte_end":208519,"line_start":1110,"line_end":1110,"column_start":5,"column_end":62}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":208524,"byte_end":208549,"line_start":1111,"line_end":1111,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":3805},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":209018,"byte_end":209029,"line_start":1126,"line_end":1126,"column_start":8,"column_end":19},"name":"boxed_local","qualname":"::stream::stream::StreamExt::boxed_local","value":"pub fn boxed_local<'a>(Self) -> LocalBoxStream where Self: Sized + 'a","parent":{"krate":0,"index":3744},"children":[],"decl_id":null,"docs":" Wrap the stream in a Box, pinning it.","sig":null,"attributes":[{"value":"/ Wrap the stream in a Box, pinning it.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":208717,"byte_end":208758,"line_start":1119,"line_end":1119,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":208763,"byte_end":208766,"line_start":1120,"line_end":1120,"column_start":5,"column_end":8}},{"value":"/ Similar to `boxed`, but without the `Send` requirement.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":208771,"byte_end":208830,"line_start":1121,"line_end":1121,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":208835,"byte_end":208838,"line_start":1122,"line_end":1122,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":208843,"byte_end":208918,"line_start":1123,"line_end":1123,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":208923,"byte_end":208980,"line_start":1124,"line_end":1124,"column_start":5,"column_end":62}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":208985,"byte_end":209010,"line_start":1125,"line_end":1125,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":3807},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":209922,"byte_end":209930,"line_start":1147,"line_end":1147,"column_start":8,"column_end":16},"name":"buffered","qualname":"::stream::stream::StreamExt::buffered","value":"pub fn buffered(Self, usize) -> Buffered<Self> where Self::Item: Future,\nSelf: Sized","parent":{"krate":0,"index":3744},"children":[],"decl_id":null,"docs":" An adaptor for creating a buffered list of pending futures.","sig":null,"attributes":[{"value":"/ An adaptor for creating a buffered list of pending futures.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":209182,"byte_end":209245,"line_start":1133,"line_end":1133,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":209250,"byte_end":209253,"line_start":1134,"line_end":1134,"column_start":5,"column_end":8}},{"value":"/ If this stream's item can be converted into a future, then this adaptor","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":209258,"byte_end":209333,"line_start":1135,"line_end":1135,"column_start":5,"column_end":80}},{"value":"/ will buffer up to at most `n` futures and then return the outputs in the","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":209338,"byte_end":209414,"line_start":1136,"line_end":1136,"column_start":5,"column_end":81}},{"value":"/ same order as the underlying stream. No more than `n` futures will be","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":209419,"byte_end":209492,"line_start":1137,"line_end":1137,"column_start":5,"column_end":78}},{"value":"/ buffered at any point in time, and less than `n` may also be buffered","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":209497,"byte_end":209570,"line_start":1138,"line_end":1138,"column_start":5,"column_end":78}},{"value":"/ depending on the state of each future.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":209575,"byte_end":209617,"line_start":1139,"line_end":1139,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":209622,"byte_end":209625,"line_start":1140,"line_end":1140,"column_start":5,"column_end":8}},{"value":"/ The returned stream will be a stream of each future's output.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":209630,"byte_end":209695,"line_start":1141,"line_end":1141,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":209700,"byte_end":209703,"line_start":1142,"line_end":1142,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":209708,"byte_end":209783,"line_start":1143,"line_end":1143,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":209788,"byte_end":209845,"line_start":1144,"line_end":1144,"column_start":5,"column_end":62}},{"value":"cfg(not(futures_no_atomic_cas))","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":209850,"byte_end":209884,"line_start":1145,"line_end":1145,"column_start":5,"column_end":39}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":209889,"byte_end":209914,"line_start":1146,"line_end":1146,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":3808},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":211610,"byte_end":211626,"line_start":1192,"line_end":1192,"column_start":8,"column_end":24},"name":"buffer_unordered","qualname":"::stream::stream::StreamExt::buffer_unordered","value":"pub fn buffer_unordered(Self, usize) -> BufferUnordered<Self> where\nSelf::Item: Future, Self: Sized","parent":{"krate":0,"index":3744},"children":[],"decl_id":null,"docs":" An adaptor for creating a buffered list of pending futures (unordered).","sig":null,"attributes":[{"value":"/ An adaptor for creating a buffered list of pending futures (unordered).","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":210124,"byte_end":210199,"line_start":1155,"line_end":1155,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":210204,"byte_end":210207,"line_start":1156,"line_end":1156,"column_start":5,"column_end":8}},{"value":"/ If this stream's item can be converted into a future, then this adaptor","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":210212,"byte_end":210287,"line_start":1157,"line_end":1157,"column_start":5,"column_end":80}},{"value":"/ will buffer up to `n` futures and then return the outputs in the order","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":210292,"byte_end":210366,"line_start":1158,"line_end":1158,"column_start":5,"column_end":79}},{"value":"/ in which they complete. No more than `n` futures will be buffered at","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":210371,"byte_end":210443,"line_start":1159,"line_end":1159,"column_start":5,"column_end":77}},{"value":"/ any point in time, and less than `n` may also be buffered depending on","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":210448,"byte_end":210522,"line_start":1160,"line_end":1160,"column_start":5,"column_end":79}},{"value":"/ the state of each future.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":210527,"byte_end":210556,"line_start":1161,"line_end":1161,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":210561,"byte_end":210564,"line_start":1162,"line_end":1162,"column_start":5,"column_end":8}},{"value":"/ The returned stream will be a stream of each future's output.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":210569,"byte_end":210634,"line_start":1163,"line_end":1163,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":210639,"byte_end":210642,"line_start":1164,"line_end":1164,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":210647,"byte_end":210722,"line_start":1165,"line_end":1165,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":210727,"byte_end":210784,"line_start":1166,"line_end":1166,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":210789,"byte_end":210792,"line_start":1167,"line_end":1167,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":210797,"byte_end":210811,"line_start":1168,"line_end":1168,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":210816,"byte_end":210819,"line_start":1169,"line_end":1169,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":210824,"byte_end":210831,"line_start":1170,"line_end":1170,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":210836,"byte_end":210877,"line_start":1171,"line_end":1171,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::oneshot;","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":210882,"byte_end":210916,"line_start":1172,"line_end":1172,"column_start":5,"column_end":39}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":210921,"byte_end":210964,"line_start":1173,"line_end":1173,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":210969,"byte_end":210972,"line_start":1174,"line_end":1174,"column_start":5,"column_end":8}},{"value":"/ let (send_one, recv_one) = oneshot::channel();","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":210977,"byte_end":211027,"line_start":1175,"line_end":1175,"column_start":5,"column_end":55}},{"value":"/ let (send_two, recv_two) = oneshot::channel();","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":211032,"byte_end":211082,"line_start":1176,"line_end":1176,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":211087,"byte_end":211090,"line_start":1177,"line_end":1177,"column_start":5,"column_end":8}},{"value":"/ let stream_of_futures = stream::iter(vec![recv_one, recv_two]);","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":211095,"byte_end":211162,"line_start":1178,"line_end":1178,"column_start":5,"column_end":72}},{"value":"/ let mut buffered = stream_of_futures.buffer_unordered(10);","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":211167,"byte_end":211229,"line_start":1179,"line_end":1179,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":211234,"byte_end":211237,"line_start":1180,"line_end":1180,"column_start":5,"column_end":8}},{"value":"/ send_two.send(2i32)?;","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":211242,"byte_end":211267,"line_start":1181,"line_end":1181,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(buffered.next().await, Some(Ok(2i32)));","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":211272,"byte_end":211326,"line_start":1182,"line_end":1182,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":211331,"byte_end":211334,"line_start":1183,"line_end":1183,"column_start":5,"column_end":8}},{"value":"/ send_one.send(1i32)?;","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":211339,"byte_end":211364,"line_start":1184,"line_end":1184,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(buffered.next().await, Some(Ok(1i32)));","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":211369,"byte_end":211423,"line_start":1185,"line_end":1185,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":211428,"byte_end":211431,"line_start":1186,"line_end":1186,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(buffered.next().await, None);","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":211436,"byte_end":211480,"line_start":1187,"line_end":1187,"column_start":5,"column_end":49}},{"value":"/ # Ok::<(), i32>(()) }).unwrap();","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":211485,"byte_end":211521,"line_start":1188,"line_end":1188,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":211526,"byte_end":211533,"line_start":1189,"line_end":1189,"column_start":5,"column_end":12}},{"value":"cfg(not(futures_no_atomic_cas))","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":211538,"byte_end":211572,"line_start":1190,"line_end":1190,"column_start":5,"column_end":39}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":211577,"byte_end":211602,"line_start":1191,"line_end":1191,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":3809},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":212522,"byte_end":212525,"line_start":1222,"line_end":1222,"column_start":8,"column_end":11},"name":"zip","qualname":"::stream::stream::StreamExt::zip","value":"pub fn zip<St>(Self, St) -> Zip<Self, St> where St: Stream, Self: Sized","parent":{"krate":0,"index":3744},"children":[],"decl_id":null,"docs":" An adapter for zipping two streams together.","sig":null,"attributes":[{"value":"/ An adapter for zipping two streams together.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":211834,"byte_end":211882,"line_start":1200,"line_end":1200,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":211887,"byte_end":211890,"line_start":1201,"line_end":1201,"column_start":5,"column_end":8}},{"value":"/ The zipped stream waits for both streams to produce an item, and then","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":211895,"byte_end":211968,"line_start":1202,"line_end":1202,"column_start":5,"column_end":78}},{"value":"/ returns that pair. If either stream ends then the zipped stream will","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":211973,"byte_end":212045,"line_start":1203,"line_end":1203,"column_start":5,"column_end":77}},{"value":"/ also end.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":212050,"byte_end":212063,"line_start":1204,"line_end":1204,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":212068,"byte_end":212071,"line_start":1205,"line_end":1205,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":212076,"byte_end":212090,"line_start":1206,"line_end":1206,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":212095,"byte_end":212098,"line_start":1207,"line_end":1207,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":212103,"byte_end":212110,"line_start":1208,"line_end":1208,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":212115,"byte_end":212156,"line_start":1209,"line_end":1209,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":212161,"byte_end":212204,"line_start":1210,"line_end":1210,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":212209,"byte_end":212212,"line_start":1211,"line_end":1211,"column_start":5,"column_end":8}},{"value":"/ let stream1 = stream::iter(1..=3);","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":212217,"byte_end":212255,"line_start":1212,"line_end":1212,"column_start":5,"column_end":43}},{"value":"/ let stream2 = stream::iter(5..=10);","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":212260,"byte_end":212299,"line_start":1213,"line_end":1213,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":212304,"byte_end":212307,"line_start":1214,"line_end":1214,"column_start":5,"column_end":8}},{"value":"/ let vec = stream1.zip(stream2)","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":212312,"byte_end":212346,"line_start":1215,"line_end":1215,"column_start":5,"column_end":39}},{"value":"/                  .collect::<Vec<_>>()","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":212351,"byte_end":212392,"line_start":1216,"line_end":1216,"column_start":5,"column_end":46}},{"value":"/                  .await;","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":212397,"byte_end":212425,"line_start":1217,"line_end":1217,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(vec![(1, 5), (2, 6), (3, 7)], vec);","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":212430,"byte_end":212480,"line_start":1218,"line_end":1218,"column_start":5,"column_end":55}},{"value":"/ # });","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":212485,"byte_end":212494,"line_start":1219,"line_end":1219,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":212499,"byte_end":212506,"line_start":1220,"line_end":1220,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":212511,"byte_end":212514,"line_start":1221,"line_end":1221,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":3811},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":213433,"byte_end":213438,"line_start":1253,"line_end":1253,"column_start":8,"column_end":13},"name":"chain","qualname":"::stream::stream::StreamExt::chain","value":"pub fn chain<St>(Self, St) -> Chain<Self, St> where St: Stream<Item =\nSelf::Item>, Self: Sized","parent":{"krate":0,"index":3744},"children":[],"decl_id":null,"docs":" Adapter for chaining two streams.","sig":null,"attributes":[{"value":"/ Adapter for chaining two streams.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":212706,"byte_end":212743,"line_start":1230,"line_end":1230,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":212748,"byte_end":212751,"line_start":1231,"line_end":1231,"column_start":5,"column_end":8}},{"value":"/ The resulting stream emits elements from the first stream, and when","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":212756,"byte_end":212827,"line_start":1232,"line_end":1232,"column_start":5,"column_end":76}},{"value":"/ first stream reaches the end, emits the elements from the second stream.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":212832,"byte_end":212908,"line_start":1233,"line_end":1233,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":212913,"byte_end":212916,"line_start":1234,"line_end":1234,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":212921,"byte_end":212928,"line_start":1235,"line_end":1235,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":212933,"byte_end":212974,"line_start":1236,"line_end":1236,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":212979,"byte_end":213022,"line_start":1237,"line_end":1237,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":213027,"byte_end":213030,"line_start":1238,"line_end":1238,"column_start":5,"column_end":8}},{"value":"/ let stream1 = stream::iter(vec![Ok(10), Err(false)]);","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":213035,"byte_end":213092,"line_start":1239,"line_end":1239,"column_start":5,"column_end":62}},{"value":"/ let stream2 = stream::iter(vec![Err(true), Ok(20)]);","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":213097,"byte_end":213153,"line_start":1240,"line_end":1240,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":213158,"byte_end":213161,"line_start":1241,"line_end":1241,"column_start":5,"column_end":8}},{"value":"/ let stream = stream1.chain(stream2);","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":213166,"byte_end":213206,"line_start":1242,"line_end":1242,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":213211,"byte_end":213214,"line_start":1243,"line_end":1243,"column_start":5,"column_end":8}},{"value":"/ let result: Vec<_> = stream.collect().await;","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":213219,"byte_end":213267,"line_start":1244,"line_end":1244,"column_start":5,"column_end":53}},{"value":"/ assert_eq!(result, vec![","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":213272,"byte_end":213300,"line_start":1245,"line_end":1245,"column_start":5,"column_end":33}},{"value":"/     Ok(10),","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":213305,"byte_end":213320,"line_start":1246,"line_end":1246,"column_start":5,"column_end":20}},{"value":"/     Err(false),","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":213325,"byte_end":213344,"line_start":1247,"line_end":1247,"column_start":5,"column_end":24}},{"value":"/     Err(true),","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":213349,"byte_end":213367,"line_start":1248,"line_end":1248,"column_start":5,"column_end":23}},{"value":"/     Ok(20),","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":213372,"byte_end":213387,"line_start":1249,"line_end":1249,"column_start":5,"column_end":20}},{"value":"/ ]);","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":213392,"byte_end":213399,"line_start":1250,"line_end":1250,"column_start":5,"column_end":12}},{"value":"/ # });","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":213404,"byte_end":213413,"line_start":1251,"line_end":1251,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":213418,"byte_end":213425,"line_start":1252,"line_end":1252,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3813},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":213776,"byte_end":213784,"line_start":1264,"line_end":1264,"column_start":8,"column_end":16},"name":"peekable","qualname":"::stream::stream::StreamExt::peekable","value":"pub fn peekable(Self) -> Peekable<Self> where Self: Sized","parent":{"krate":0,"index":3744},"children":[],"decl_id":null,"docs":" Creates a new stream which exposes a `peek` method.","sig":null,"attributes":[{"value":"/ Creates a new stream which exposes a `peek` method.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":213630,"byte_end":213685,"line_start":1261,"line_end":1261,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":213690,"byte_end":213693,"line_start":1262,"line_end":1262,"column_start":5,"column_end":8}},{"value":"/ Calling `peek` returns a reference to the next item in the stream.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":213698,"byte_end":213768,"line_start":1263,"line_end":1263,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":3814},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":214819,"byte_end":214825,"line_start":1290,"line_end":1290,"column_start":8,"column_end":14},"name":"chunks","qualname":"::stream::stream::StreamExt::chunks","value":"pub fn chunks(Self, usize) -> Chunks<Self> where Self: Sized","parent":{"krate":0,"index":3744},"children":[],"decl_id":null,"docs":" An adaptor for chunking up items of the stream inside a vector.","sig":null,"attributes":[{"value":"/ An adaptor for chunking up items of the stream inside a vector.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":213917,"byte_end":213984,"line_start":1271,"line_end":1271,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":213989,"byte_end":213992,"line_start":1272,"line_end":1272,"column_start":5,"column_end":8}},{"value":"/ This combinator will attempt to pull items from this stream and buffer","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":213997,"byte_end":214071,"line_start":1273,"line_end":1273,"column_start":5,"column_end":79}},{"value":"/ them into a local vector. At most `capacity` items will get buffered","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":214076,"byte_end":214148,"line_start":1274,"line_end":1274,"column_start":5,"column_end":77}},{"value":"/ before they're yielded from the returned stream.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":214153,"byte_end":214205,"line_start":1275,"line_end":1275,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":214210,"byte_end":214213,"line_start":1276,"line_end":1276,"column_start":5,"column_end":8}},{"value":"/ Note that the vectors returned from this iterator may not always have","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":214218,"byte_end":214291,"line_start":1277,"line_end":1277,"column_start":5,"column_end":78}},{"value":"/ `capacity` elements. If the underlying stream ended and only a partial","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":214296,"byte_end":214370,"line_start":1278,"line_end":1278,"column_start":5,"column_end":79}},{"value":"/ vector was created, it'll be returned. Additionally if an error happens","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":214375,"byte_end":214450,"line_start":1279,"line_end":1279,"column_start":5,"column_end":80}},{"value":"/ from the underlying stream then the currently buffered items will be","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":214455,"byte_end":214527,"line_start":1280,"line_end":1280,"column_start":5,"column_end":77}},{"value":"/ yielded.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":214532,"byte_end":214544,"line_start":1281,"line_end":1281,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":214549,"byte_end":214552,"line_start":1282,"line_end":1282,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":214557,"byte_end":214632,"line_start":1283,"line_end":1283,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":214637,"byte_end":214694,"line_start":1284,"line_end":1284,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":214699,"byte_end":214702,"line_start":1285,"line_end":1285,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":214707,"byte_end":214719,"line_start":1286,"line_end":1286,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":214724,"byte_end":214727,"line_start":1287,"line_end":1287,"column_start":5,"column_end":8}},{"value":"/ This method will panic if `capacity` is zero.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":214732,"byte_end":214781,"line_start":1288,"line_end":1288,"column_start":5,"column_end":54}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":214786,"byte_end":214811,"line_start":1289,"line_end":1289,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":3815},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":215922,"byte_end":215934,"line_start":1316,"line_end":1316,"column_start":8,"column_end":20},"name":"ready_chunks","qualname":"::stream::stream::StreamExt::ready_chunks","value":"pub fn ready_chunks(Self, usize) -> ReadyChunks<Self> where Self: Sized","parent":{"krate":0,"index":3744},"children":[],"decl_id":null,"docs":" An adaptor for chunking up ready items of the stream inside a vector.","sig":null,"attributes":[{"value":"/ An adaptor for chunking up ready items of the stream inside a vector.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":214986,"byte_end":215059,"line_start":1297,"line_end":1297,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":215064,"byte_end":215067,"line_start":1298,"line_end":1298,"column_start":5,"column_end":8}},{"value":"/ This combinator will attempt to pull ready items from this stream and","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":215072,"byte_end":215145,"line_start":1299,"line_end":1299,"column_start":5,"column_end":78}},{"value":"/ buffer them into a local vector. At most `capacity` items will get","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":215150,"byte_end":215220,"line_start":1300,"line_end":1300,"column_start":5,"column_end":75}},{"value":"/ buffered before they're yielded from the returned stream. If underlying","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":215225,"byte_end":215300,"line_start":1301,"line_end":1301,"column_start":5,"column_end":80}},{"value":"/ stream returns `Poll::Pending`, and collected chunk is not empty, it will","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":215305,"byte_end":215382,"line_start":1302,"line_end":1302,"column_start":5,"column_end":82}},{"value":"/ be immediately returned.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":215387,"byte_end":215415,"line_start":1303,"line_end":1303,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":215420,"byte_end":215423,"line_start":1304,"line_end":1304,"column_start":5,"column_end":8}},{"value":"/ If the underlying stream ended and only a partial vector was created,","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":215428,"byte_end":215501,"line_start":1305,"line_end":1305,"column_start":5,"column_end":78}},{"value":"/ it'll be returned. Additionally if an error happens from the underlying","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":215506,"byte_end":215581,"line_start":1306,"line_end":1306,"column_start":5,"column_end":80}},{"value":"/ stream then the currently buffered items will be yielded.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":215586,"byte_end":215647,"line_start":1307,"line_end":1307,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":215652,"byte_end":215655,"line_start":1308,"line_end":1308,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":215660,"byte_end":215735,"line_start":1309,"line_end":1309,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":215740,"byte_end":215797,"line_start":1310,"line_end":1310,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":215802,"byte_end":215805,"line_start":1311,"line_end":1311,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":215810,"byte_end":215822,"line_start":1312,"line_end":1312,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":215827,"byte_end":215830,"line_start":1313,"line_end":1313,"column_start":5,"column_end":8}},{"value":"/ This method will panic if `capacity` is zero.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":215835,"byte_end":215884,"line_start":1314,"line_end":1314,"column_start":5,"column_end":54}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":215889,"byte_end":215914,"line_start":1315,"line_end":1315,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":3816},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":216972,"byte_end":216979,"line_start":1336,"line_end":1336,"column_start":8,"column_end":15},"name":"forward","qualname":"::stream::stream::StreamExt::forward","value":"pub fn forward<S>(Self, S) -> Forward<Self, S> where S: Sink<Self::Ok, Error =\nSelf::Error>, Self: TryStream + Sized","parent":{"krate":0,"index":3744},"children":[],"decl_id":null,"docs":" A future that completes after the given stream has been fully processed\n into the sink and the sink has been flushed and closed.","sig":null,"attributes":[{"value":"/ A future that completes after the given stream has been fully processed","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":216105,"byte_end":216180,"line_start":1323,"line_end":1323,"column_start":5,"column_end":80}},{"value":"/ into the sink and the sink has been flushed and closed.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":216185,"byte_end":216244,"line_start":1324,"line_end":1324,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":216249,"byte_end":216252,"line_start":1325,"line_end":1325,"column_start":5,"column_end":8}},{"value":"/ This future will drive the stream to keep producing items until it is","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":216257,"byte_end":216330,"line_start":1326,"line_end":1326,"column_start":5,"column_end":78}},{"value":"/ exhausted, sending each item to the sink. It will complete once the","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":216335,"byte_end":216406,"line_start":1327,"line_end":1327,"column_start":5,"column_end":76}},{"value":"/ stream is exhausted, the sink has received and flushed all items, and","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":216411,"byte_end":216484,"line_start":1328,"line_end":1328,"column_start":5,"column_end":78}},{"value":"/ the sink is closed. Note that neither the original stream nor provided","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":216489,"byte_end":216563,"line_start":1329,"line_end":1329,"column_start":5,"column_end":79}},{"value":"/ sink will be output by this future. Pass the sink by `Pin<&mut S>`","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":216568,"byte_end":216638,"line_start":1330,"line_end":1330,"column_start":5,"column_end":75}},{"value":"/ (for example, via `forward(&mut sink)` inside an `async` fn/block) in","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":216643,"byte_end":216716,"line_start":1331,"line_end":1331,"column_start":5,"column_end":78}},{"value":"/ order to preserve access to the `Sink`. If the stream produces an error,","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":216721,"byte_end":216797,"line_start":1332,"line_end":1332,"column_start":5,"column_end":81}},{"value":"/ that error will be returned by this future without flushing/closing the sink.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":216802,"byte_end":216883,"line_start":1333,"line_end":1333,"column_start":5,"column_end":86}},{"value":"cfg(feature = \"sink\")","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":216888,"byte_end":216912,"line_start":1334,"line_end":1334,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":3818},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":218114,"byte_end":218119,"line_start":1360,"line_end":1360,"column_start":8,"column_end":13},"name":"split","qualname":"::stream::stream::StreamExt::split","value":"pub fn split<Item>(Self) -> (SplitSink<Self, Item>, SplitStream<Self>) where\nSelf: Sink<Item> + Sized","parent":{"krate":0,"index":3744},"children":[],"decl_id":null,"docs":" Splits this `Stream + Sink` object into separate `Sink` and `Stream`\n objects.","sig":null,"attributes":[{"value":"/ Splits this `Stream + Sink` object into separate `Sink` and `Stream`","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":217537,"byte_end":217609,"line_start":1347,"line_end":1347,"column_start":5,"column_end":77}},{"value":"/ objects.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":217614,"byte_end":217626,"line_start":1348,"line_end":1348,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":217631,"byte_end":217634,"line_start":1349,"line_end":1349,"column_start":5,"column_end":8}},{"value":"/ This can be useful when you want to split ownership between tasks, or","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":217639,"byte_end":217712,"line_start":1350,"line_end":1350,"column_start":5,"column_end":78}},{"value":"/ allow direct interaction between the two objects (e.g. via","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":217717,"byte_end":217779,"line_start":1351,"line_end":1351,"column_start":5,"column_end":67}},{"value":"/ `Sink::send_all`).","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":217784,"byte_end":217806,"line_start":1352,"line_end":1352,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":217811,"byte_end":217814,"line_start":1353,"line_end":1353,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":217819,"byte_end":217894,"line_start":1354,"line_end":1354,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":217899,"byte_end":217956,"line_start":1355,"line_end":1355,"column_start":5,"column_end":62}},{"value":"cfg(feature = \"sink\")","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":217961,"byte_end":217985,"line_start":1356,"line_end":1356,"column_start":5,"column_end":29}},{"value":"cfg(not(futures_no_atomic_cas))","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":218042,"byte_end":218076,"line_start":1358,"line_end":1358,"column_start":5,"column_end":39}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":218081,"byte_end":218106,"line_start":1359,"line_end":1359,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":3820},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":218731,"byte_end":218738,"line_start":1376,"line_end":1376,"column_start":8,"column_end":15},"name":"inspect","qualname":"::stream::stream::StreamExt::inspect","value":"pub fn inspect<F>(Self, F) -> Inspect<Self, F> where F: FnMut(&Self::Item) ->\n(), Self: Sized","parent":{"krate":0,"index":3744},"children":[],"decl_id":null,"docs":" Do something with each item of this stream, afterwards passing it on.","sig":null,"attributes":[{"value":"/ Do something with each item of this stream, afterwards passing it on.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":218428,"byte_end":218501,"line_start":1371,"line_end":1371,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":218506,"byte_end":218509,"line_start":1372,"line_end":1372,"column_start":5,"column_end":8}},{"value":"/ This is similar to the `Iterator::inspect` method in the standard","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":218514,"byte_end":218583,"line_start":1373,"line_end":1373,"column_start":5,"column_end":74}},{"value":"/ library where it allows easily inspecting each value as it passes","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":218588,"byte_end":218657,"line_start":1374,"line_end":1374,"column_start":5,"column_end":74}},{"value":"/ through the stream, for example to debug what's going on.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":218662,"byte_end":218723,"line_start":1375,"line_end":1375,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":3822},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":219194,"byte_end":219205,"line_start":1389,"line_end":1389,"column_start":8,"column_end":19},"name":"left_stream","qualname":"::stream::stream::StreamExt::left_stream","value":"pub fn left_stream<B>(Self) -> Either<Self, B> where B: Stream<Item =\nSelf::Item>, Self: Sized","parent":{"krate":0,"index":3744},"children":[],"decl_id":null,"docs":" Wrap this stream in an `Either` stream, making it the left-hand variant\n of that `Either`.","sig":null,"attributes":[{"value":"/ Wrap this stream in an `Either` stream, making it the left-hand variant","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":218915,"byte_end":218990,"line_start":1384,"line_end":1384,"column_start":5,"column_end":80}},{"value":"/ of that `Either`.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":218995,"byte_end":219016,"line_start":1385,"line_end":1385,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":219021,"byte_end":219024,"line_start":1386,"line_end":1386,"column_start":5,"column_end":8}},{"value":"/ This can be used in combination with the `right_stream` method to write `if`","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":219029,"byte_end":219109,"line_start":1387,"line_end":1387,"column_start":5,"column_end":85}},{"value":"/ statements that evaluate to different streams in different branches.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":219114,"byte_end":219186,"line_start":1388,"line_end":1388,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":3824},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":219658,"byte_end":219670,"line_start":1402,"line_end":1402,"column_start":8,"column_end":20},"name":"right_stream","qualname":"::stream::stream::StreamExt::right_stream","value":"pub fn right_stream<B>(Self) -> Either<B, Self> where B: Stream<Item =\nSelf::Item>, Self: Sized","parent":{"krate":0,"index":3744},"children":[],"decl_id":null,"docs":" Wrap this stream in an `Either` stream, making it the right-hand variant\n of that `Either`.","sig":null,"attributes":[{"value":"/ Wrap this stream in an `Either` stream, making it the right-hand variant","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":219379,"byte_end":219455,"line_start":1397,"line_end":1397,"column_start":5,"column_end":81}},{"value":"/ of that `Either`.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":219460,"byte_end":219481,"line_start":1398,"line_end":1398,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":219486,"byte_end":219489,"line_start":1399,"line_end":1399,"column_start":5,"column_end":8}},{"value":"/ This can be used in combination with the `left_stream` method to write `if`","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":219494,"byte_end":219573,"line_start":1400,"line_end":1400,"column_start":5,"column_end":84}},{"value":"/ statements that evaluate to different streams in different branches.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":219578,"byte_end":219650,"line_start":1401,"line_end":1401,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":3826},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":219946,"byte_end":219961,"line_start":1412,"line_end":1412,"column_start":8,"column_end":23},"name":"poll_next_unpin","qualname":"::stream::stream::StreamExt::poll_next_unpin","value":"pub fn poll_next_unpin(&mut Self, &mut Context) -> Poll<Option<Self::Item>>\nwhere Self: Unpin","parent":{"krate":0,"index":3744},"children":[],"decl_id":null,"docs":" A convenience method for calling [`Stream::poll_next`] on [`Unpin`]\n stream types.\n","sig":null,"attributes":[{"value":"/ A convenience method for calling [`Stream::poll_next`] on [`Unpin`]","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":219845,"byte_end":219916,"line_start":1410,"line_end":1410,"column_start":5,"column_end":76}},{"value":"/ stream types.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":219921,"byte_end":219938,"line_start":1411,"line_end":1411,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":3827},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":222062,"byte_end":222078,"line_start":1467,"line_end":1467,"column_start":8,"column_end":24},"name":"select_next_some","qualname":"::stream::stream::StreamExt::select_next_some","value":"pub fn select_next_some(&mut Self) -> SelectNextSome<, Self> where\nSelf: Unpin + FusedStream","parent":{"krate":0,"index":3744},"children":[],"decl_id":null,"docs":" Returns a [`Future`] that resolves when the next item in this stream is\n ready.","sig":null,"attributes":[{"value":"/ Returns a [`Future`] that resolves when the next item in this stream is","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":220108,"byte_end":220183,"line_start":1419,"line_end":1419,"column_start":5,"column_end":80}},{"value":"/ ready.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":220188,"byte_end":220198,"line_start":1420,"line_end":1420,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":220203,"byte_end":220206,"line_start":1421,"line_end":1421,"column_start":5,"column_end":8}},{"value":"/ This is similar to the [`next`][StreamExt::next] method, but it won't","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":220211,"byte_end":220284,"line_start":1422,"line_end":1422,"column_start":5,"column_end":78}},{"value":"/ resolve to [`None`] if used on an empty [`Stream`]. Instead, the","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":220289,"byte_end":220357,"line_start":1423,"line_end":1423,"column_start":5,"column_end":73}},{"value":"/ returned future type will return `true` from","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":220362,"byte_end":220410,"line_start":1424,"line_end":1424,"column_start":5,"column_end":53}},{"value":"/ [`FusedFuture::is_terminated`][] when the [`Stream`] is empty, allowing","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":220415,"byte_end":220490,"line_start":1425,"line_end":1425,"column_start":5,"column_end":80}},{"value":"/ [`select_next_some`][StreamExt::select_next_some] to be easily used with","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":220495,"byte_end":220571,"line_start":1426,"line_end":1426,"column_start":5,"column_end":81}},{"value":"/ the [`select!`] macro.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":220576,"byte_end":220602,"line_start":1427,"line_end":1427,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":220607,"byte_end":220610,"line_start":1428,"line_end":1428,"column_start":5,"column_end":8}},{"value":"/ If the future is polled after this [`Stream`] is empty it will panic.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":220615,"byte_end":220688,"line_start":1429,"line_end":1429,"column_start":5,"column_end":78}},{"value":"/ Using the future with a [`FusedFuture`][]-aware primitive like the","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":220693,"byte_end":220763,"line_start":1430,"line_end":1430,"column_start":5,"column_end":75}},{"value":"/ [`select!`] macro will prevent this.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":220768,"byte_end":220808,"line_start":1431,"line_end":1431,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":220813,"byte_end":220816,"line_start":1432,"line_end":1432,"column_start":5,"column_end":8}},{"value":"/ [`FusedFuture`]: futures_core::future::FusedFuture","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":220821,"byte_end":220875,"line_start":1433,"line_end":1433,"column_start":5,"column_end":59}},{"value":"/ [`FusedFuture::is_terminated`]: futures_core::future::FusedFuture::is_terminated","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":220880,"byte_end":220964,"line_start":1434,"line_end":1434,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":220969,"byte_end":220972,"line_start":1435,"line_end":1435,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":220977,"byte_end":220991,"line_start":1436,"line_end":1436,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":220996,"byte_end":220999,"line_start":1437,"line_end":1437,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":221004,"byte_end":221011,"line_start":1438,"line_end":1438,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":221016,"byte_end":221057,"line_start":1439,"line_end":1439,"column_start":5,"column_end":46}},{"value":"/ use futures::{future, select};","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":221062,"byte_end":221096,"line_start":1440,"line_end":1440,"column_start":5,"column_end":39}},{"value":"/ use futures::stream::{StreamExt, FuturesUnordered};","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":221101,"byte_end":221156,"line_start":1441,"line_end":1441,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":221161,"byte_end":221164,"line_start":1442,"line_end":1442,"column_start":5,"column_end":8}},{"value":"/ let mut fut = future::ready(1);","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":221169,"byte_end":221204,"line_start":1443,"line_end":1443,"column_start":5,"column_end":40}},{"value":"/ let mut async_tasks = FuturesUnordered::new();","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":221209,"byte_end":221259,"line_start":1444,"line_end":1444,"column_start":5,"column_end":55}},{"value":"/ let mut total = 0;","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":221264,"byte_end":221286,"line_start":1445,"line_end":1445,"column_start":5,"column_end":27}},{"value":"/ loop {","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":221291,"byte_end":221301,"line_start":1446,"line_end":1446,"column_start":5,"column_end":15}},{"value":"/     select! {","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":221306,"byte_end":221323,"line_start":1447,"line_end":1447,"column_start":5,"column_end":22}},{"value":"/         num = fut => {","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":221328,"byte_end":221354,"line_start":1448,"line_end":1448,"column_start":5,"column_end":31}},{"value":"/             // First, the `ready` future completes.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":221359,"byte_end":221414,"line_start":1449,"line_end":1449,"column_start":5,"column_end":60}},{"value":"/             total += num;","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":221419,"byte_end":221448,"line_start":1450,"line_end":1450,"column_start":5,"column_end":34}},{"value":"/             // Then we spawn a new task onto `async_tasks`,","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":221453,"byte_end":221516,"line_start":1451,"line_end":1451,"column_start":5,"column_end":68}},{"value":"/             async_tasks.push(async { 5 });","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":221521,"byte_end":221567,"line_start":1452,"line_end":1452,"column_start":5,"column_end":51}},{"value":"/         },","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":221572,"byte_end":221586,"line_start":1453,"line_end":1453,"column_start":5,"column_end":19}},{"value":"/         // On the next iteration of the loop, the task we spawned","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":221591,"byte_end":221660,"line_start":1454,"line_end":1454,"column_start":5,"column_end":74}},{"value":"/         // completes.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":221665,"byte_end":221690,"line_start":1455,"line_end":1455,"column_start":5,"column_end":30}},{"value":"/         num = async_tasks.select_next_some() => {","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":221695,"byte_end":221748,"line_start":1456,"line_end":1456,"column_start":5,"column_end":58}},{"value":"/             total += num;","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":221753,"byte_end":221782,"line_start":1457,"line_end":1457,"column_start":5,"column_end":34}},{"value":"/         }","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":221787,"byte_end":221800,"line_start":1458,"line_end":1458,"column_start":5,"column_end":18}},{"value":"/         // Finally, both the `ready` future and `async_tasks` have","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":221805,"byte_end":221875,"line_start":1459,"line_end":1459,"column_start":5,"column_end":75}},{"value":"/         // finished, so we enter the `complete` branch.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":221880,"byte_end":221939,"line_start":1460,"line_end":1460,"column_start":5,"column_end":64}},{"value":"/         complete => break,","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":221944,"byte_end":221974,"line_start":1461,"line_end":1461,"column_start":5,"column_end":35}},{"value":"/     }","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":221979,"byte_end":221988,"line_start":1462,"line_end":1462,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":221993,"byte_end":221998,"line_start":1463,"line_end":1463,"column_start":5,"column_end":10}},{"value":"/ assert_eq!(total, 6);","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":222003,"byte_end":222028,"line_start":1464,"line_end":1464,"column_start":5,"column_end":30}},{"value":"/ # });","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":222033,"byte_end":222042,"line_start":1465,"line_end":1465,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":222047,"byte_end":222054,"line_start":1466,"line_end":1466,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":12848},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/and_then.rs","byte_start":337912,"byte_end":337919,"line_start":14,"line_end":14,"column_start":16,"column_end":23},"name":"AndThen","qualname":"::stream::try_stream::and_then::AndThen","value":"AndThen {  }","parent":null,"children":[{"krate":0,"index":12852},{"krate":0,"index":12853},{"krate":0,"index":12854}],"decl_id":null,"docs":" Stream for the [`and_then`](super::TryStreamExt::and_then) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":12561792,"byte_end":12561801,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":12916},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":302121,"byte_end":302128,"line_start":28,"line_end":28,"column_start":5,"column_end":12},"name":"ErrInto","qualname":"::stream::try_stream::ErrInto","value":"ErrInto {  }","parent":null,"children":[{"krate":0,"index":12919}],"decl_id":null,"docs":" Stream for the [`err_into`](super::TryStreamExt::err_into) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":12561792,"byte_end":12561801,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":12994},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":302376,"byte_end":302385,"line_start":35,"line_end":35,"column_start":5,"column_end":14},"name":"InspectOk","qualname":"::stream::try_stream::InspectOk","value":"InspectOk {  }","parent":null,"children":[{"krate":0,"index":12997}],"decl_id":null,"docs":" Stream for the [`inspect_ok`](super::TryStreamExt::inspect_ok) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":12561792,"byte_end":12561801,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":13072},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":302686,"byte_end":302696,"line_start":42,"line_end":42,"column_start":5,"column_end":15},"name":"InspectErr","qualname":"::stream::try_stream::InspectErr","value":"InspectErr {  }","parent":null,"children":[{"krate":0,"index":13075}],"decl_id":null,"docs":" Stream for the [`inspect_err`](super::TryStreamExt::inspect_err) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":12561792,"byte_end":12561801,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":13152},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/into_stream.rs","byte_start":340661,"byte_end":340671,"line_start":12,"line_end":12,"column_start":16,"column_end":26},"name":"IntoStream","qualname":"::stream::try_stream::into_stream::IntoStream","value":"IntoStream {  }","parent":null,"children":[{"krate":0,"index":13154}],"decl_id":null,"docs":" Stream for the [`into_stream`](super::TryStreamExt::into_stream) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":12561792,"byte_end":12561801,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":13194},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":303122,"byte_end":303127,"line_start":53,"line_end":53,"column_start":5,"column_end":10},"name":"MapOk","qualname":"::stream::try_stream::MapOk","value":"MapOk {  }","parent":null,"children":[{"krate":0,"index":13197}],"decl_id":null,"docs":" Stream for the [`map_ok`](super::TryStreamExt::map_ok) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":12561792,"byte_end":12561801,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":13272},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":303404,"byte_end":303410,"line_start":60,"line_end":60,"column_start":5,"column_end":11},"name":"MapErr","qualname":"::stream::try_stream::MapErr","value":"MapErr {  }","parent":null,"children":[{"krate":0,"index":13275}],"decl_id":null,"docs":" Stream for the [`map_err`](super::TryStreamExt::map_err) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":12561792,"byte_end":12561801,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":13347},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/or_else.rs","byte_start":342019,"byte_end":342025,"line_start":14,"line_end":14,"column_start":16,"column_end":22},"name":"OrElse","qualname":"::stream::try_stream::or_else::OrElse","value":"OrElse {  }","parent":null,"children":[{"krate":0,"index":13351},{"krate":0,"index":13352},{"krate":0,"index":13353}],"decl_id":null,"docs":" Stream for the [`or_else`](super::TryStreamExt::or_else) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":12561792,"byte_end":12561801,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":13412},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_next.rs","byte_start":344861,"byte_end":344868,"line_start":10,"line_end":10,"column_start":12,"column_end":19},"name":"TryNext","qualname":"::stream::try_stream::try_next::TryNext","value":"TryNext {  }","parent":null,"children":[{"krate":0,"index":13415}],"decl_id":null,"docs":" Future for the [`try_next`](super::TryStreamExt::try_next) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`try_next`](super::TryStreamExt::try_next) method.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_next.rs","byte_start":344694,"byte_end":344764,"line_start":7,"line_end":7,"column_start":1,"column_end":71}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_next.rs","byte_start":344782,"byte_end":344849,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":13420},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_for_each.rs","byte_start":345953,"byte_end":345963,"line_start":12,"line_end":12,"column_start":16,"column_end":26},"name":"TryForEach","qualname":"::stream::try_stream::try_for_each::TryForEach","value":"TryForEach {  }","parent":null,"children":[{"krate":0,"index":13424},{"krate":0,"index":13425},{"krate":0,"index":13426}],"decl_id":null,"docs":" Future for the [`try_for_each`](super::TryStreamExt::try_for_each) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":12561792,"byte_end":12561801,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":13477},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_filter.rs","byte_start":347849,"byte_end":347858,"line_start":15,"line_end":15,"column_start":16,"column_end":25},"name":"TryFilter","qualname":"::stream::try_stream::try_filter::TryFilter","value":"TryFilter {  }","parent":null,"children":[{"krate":0,"index":13481},{"krate":0,"index":13482},{"krate":0,"index":13483},{"krate":0,"index":13484}],"decl_id":null,"docs":" Stream for the [`try_filter`](super::TryStreamExt::try_filter)\n method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":12561792,"byte_end":12561801,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":13546},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_filter_map.rs","byte_start":350993,"byte_end":351005,"line_start":15,"line_end":15,"column_start":16,"column_end":28},"name":"TryFilterMap","qualname":"::stream::try_stream::try_filter_map::TryFilterMap","value":"TryFilterMap {  }","parent":null,"children":[{"krate":0,"index":13550},{"krate":0,"index":13551},{"krate":0,"index":13552}],"decl_id":null,"docs":" Stream for the [`try_filter_map`](super::TryStreamExt::try_filter_map)\n method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":12561792,"byte_end":12561801,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":13616},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_flatten.rs","byte_start":354010,"byte_end":354020,"line_start":13,"line_end":13,"column_start":16,"column_end":26},"name":"TryFlatten","qualname":"::stream::try_stream::try_flatten::TryFlatten","value":"TryFlatten {  }","parent":null,"children":[{"krate":0,"index":13618},{"krate":0,"index":13619}],"decl_id":null,"docs":" Stream for the [`try_flatten`](super::TryStreamExt::try_flatten) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":12561792,"byte_end":12561801,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":13666},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_collect.rs","byte_start":356198,"byte_end":356208,"line_start":13,"line_end":13,"column_start":16,"column_end":26},"name":"TryCollect","qualname":"::stream::try_stream::try_collect::TryCollect","value":"TryCollect {  }","parent":null,"children":[{"krate":0,"index":13669},{"krate":0,"index":13670}],"decl_id":null,"docs":" Future for the [`try_collect`](super::TryStreamExt::try_collect) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":12561792,"byte_end":12561801,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":13713},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_concat.rs","byte_start":357557,"byte_end":357566,"line_start":12,"line_end":12,"column_start":16,"column_end":25},"name":"TryConcat","qualname":"::stream::try_stream::try_concat::TryConcat","value":"TryConcat {  }","parent":null,"children":[{"krate":0,"index":13715},{"krate":0,"index":13716}],"decl_id":null,"docs":" Future for the [`try_concat`](super::TryStreamExt::try_concat) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":12561792,"byte_end":12561801,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":13748},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_fold.rs","byte_start":358980,"byte_end":358987,"line_start":12,"line_end":12,"column_start":16,"column_end":23},"name":"TryFold","qualname":"::stream::try_stream::try_fold::TryFold","value":"TryFold {  }","parent":null,"children":[{"krate":0,"index":13753},{"krate":0,"index":13754},{"krate":0,"index":13755},{"krate":0,"index":13756}],"decl_id":null,"docs":" Future for the [`try_fold`](super::TryStreamExt::try_fold) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":12561792,"byte_end":12561801,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":4649},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_unfold.rs","byte_start":363435,"byte_end":363445,"line_start":59,"line_end":59,"column_start":8,"column_end":18},"name":"try_unfold","qualname":"::stream::try_stream::try_unfold::try_unfold","value":"pub fn try_unfold<T, F, Fut, Item>(T, F) -> TryUnfold<T, F, Fut> where\nF: FnMut(T) -> Fut, Fut: TryFuture<Ok = Option<(Item, T)>>","parent":null,"children":[],"decl_id":null,"docs":" Creates a `TryStream` from a seed and a closure returning a `TryFuture`.","sig":null,"attributes":[{"value":"/ Creates a `TryStream` from a seed and a closure returning a `TryFuture`.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_unfold.rs","byte_start":361578,"byte_end":361654,"line_start":10,"line_end":10,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_unfold.rs","byte_start":361655,"byte_end":361658,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ This function is the dual for the `TryStream::try_fold()` adapter: while","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_unfold.rs","byte_start":361659,"byte_end":361735,"line_start":12,"line_end":12,"column_start":1,"column_end":77}},{"value":"/ `TryStream::try_fold()` reduces a `TryStream` to one single value,","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_unfold.rs","byte_start":361736,"byte_end":361806,"line_start":13,"line_end":13,"column_start":1,"column_end":71}},{"value":"/ `try_unfold()` creates a `TryStream` from a seed value.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_unfold.rs","byte_start":361807,"byte_end":361866,"line_start":14,"line_end":14,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_unfold.rs","byte_start":361867,"byte_end":361870,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ `try_unfold()` will call the provided closure with the provided seed, then","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_unfold.rs","byte_start":361871,"byte_end":361949,"line_start":16,"line_end":16,"column_start":1,"column_end":79}},{"value":"/ wait for the returned `TryFuture` to complete with `(a, b)`. It will then","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_unfold.rs","byte_start":361950,"byte_end":362027,"line_start":17,"line_end":17,"column_start":1,"column_end":78}},{"value":"/ yield the value `a`, and use `b` as the next internal state.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_unfold.rs","byte_start":362028,"byte_end":362092,"line_start":18,"line_end":18,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_unfold.rs","byte_start":362093,"byte_end":362096,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ If the closure returns `None` instead of `Some(TryFuture)`, then the","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_unfold.rs","byte_start":362097,"byte_end":362169,"line_start":20,"line_end":20,"column_start":1,"column_end":73}},{"value":"/ `try_unfold()` will stop producing items and return `Poll::Ready(None)` in","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_unfold.rs","byte_start":362170,"byte_end":362248,"line_start":21,"line_end":21,"column_start":1,"column_end":79}},{"value":"/ future calls to `poll()`.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_unfold.rs","byte_start":362249,"byte_end":362278,"line_start":22,"line_end":22,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_unfold.rs","byte_start":362279,"byte_end":362282,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ In case of error generated by the returned `TryFuture`, the error will be","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_unfold.rs","byte_start":362283,"byte_end":362360,"line_start":24,"line_end":24,"column_start":1,"column_end":78}},{"value":"/ returned by the `TryStream`. The `TryStream` will then yield","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_unfold.rs","byte_start":362361,"byte_end":362425,"line_start":25,"line_end":25,"column_start":1,"column_end":65}},{"value":"/ `Poll::Ready(None)` in future calls to `poll()`.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_unfold.rs","byte_start":362426,"byte_end":362478,"line_start":26,"line_end":26,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_unfold.rs","byte_start":362479,"byte_end":362482,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ This function can typically be used when wanting to go from the \"world of","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_unfold.rs","byte_start":362483,"byte_end":362560,"line_start":28,"line_end":28,"column_start":1,"column_end":78}},{"value":"/ futures\" to the \"world of streams\": the provided closure can build a","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_unfold.rs","byte_start":362561,"byte_end":362633,"line_start":29,"line_end":29,"column_start":1,"column_end":73}},{"value":"/ `TryFuture` using other library functions working on futures, and","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_unfold.rs","byte_start":362634,"byte_end":362703,"line_start":30,"line_end":30,"column_start":1,"column_end":70}},{"value":"/ `try_unfold()` will turn it into a `TryStream` by repeating the operation.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_unfold.rs","byte_start":362704,"byte_end":362782,"line_start":31,"line_end":31,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_unfold.rs","byte_start":362783,"byte_end":362786,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_unfold.rs","byte_start":362787,"byte_end":362800,"line_start":33,"line_end":33,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_unfold.rs","byte_start":362801,"byte_end":362804,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_unfold.rs","byte_start":362805,"byte_end":362812,"line_start":35,"line_end":35,"column_start":1,"column_end":8}},{"value":"/ # #[derive(Debug, PartialEq)]","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_unfold.rs","byte_start":362813,"byte_end":362846,"line_start":36,"line_end":36,"column_start":1,"column_end":34}},{"value":"/ # struct SomeError;","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_unfold.rs","byte_start":362847,"byte_end":362870,"line_start":37,"line_end":37,"column_start":1,"column_end":24}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_unfold.rs","byte_start":362871,"byte_end":362912,"line_start":38,"line_end":38,"column_start":1,"column_end":42}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_unfold.rs","byte_start":362913,"byte_end":362959,"line_start":39,"line_end":39,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_unfold.rs","byte_start":362960,"byte_end":362963,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ let stream = stream::try_unfold(0, |state| async move {","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_unfold.rs","byte_start":362964,"byte_end":363023,"line_start":41,"line_end":41,"column_start":1,"column_end":60}},{"value":"/     if state < 0 {","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_unfold.rs","byte_start":363024,"byte_end":363046,"line_start":42,"line_end":42,"column_start":1,"column_end":23}},{"value":"/         return Err(SomeError);","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_unfold.rs","byte_start":363047,"byte_end":363081,"line_start":43,"line_end":43,"column_start":1,"column_end":35}},{"value":"/     }","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_unfold.rs","byte_start":363082,"byte_end":363091,"line_start":44,"line_end":44,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_unfold.rs","byte_start":363092,"byte_end":363095,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/     if state <= 2 {","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_unfold.rs","byte_start":363096,"byte_end":363119,"line_start":46,"line_end":46,"column_start":1,"column_end":24}},{"value":"/         let next_state = state + 1;","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_unfold.rs","byte_start":363120,"byte_end":363159,"line_start":47,"line_end":47,"column_start":1,"column_end":40}},{"value":"/         let yielded = state * 2;","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_unfold.rs","byte_start":363160,"byte_end":363196,"line_start":48,"line_end":48,"column_start":1,"column_end":37}},{"value":"/         Ok(Some((yielded, next_state)))","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_unfold.rs","byte_start":363197,"byte_end":363240,"line_start":49,"line_end":49,"column_start":1,"column_end":44}},{"value":"/     } else {","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_unfold.rs","byte_start":363241,"byte_end":363257,"line_start":50,"line_end":50,"column_start":1,"column_end":17}},{"value":"/         Ok(None)","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_unfold.rs","byte_start":363258,"byte_end":363278,"line_start":51,"line_end":51,"column_start":1,"column_end":21}},{"value":"/     }","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_unfold.rs","byte_start":363279,"byte_end":363288,"line_start":52,"line_end":52,"column_start":1,"column_end":10}},{"value":"/ });","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_unfold.rs","byte_start":363289,"byte_end":363296,"line_start":53,"line_end":53,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_unfold.rs","byte_start":363297,"byte_end":363300,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ let result: Result<Vec<i32>, _> = stream.try_collect().await;","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_unfold.rs","byte_start":363301,"byte_end":363366,"line_start":55,"line_end":55,"column_start":1,"column_end":66}},{"value":"/ assert_eq!(result, Ok(vec![0, 2, 4]));","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_unfold.rs","byte_start":363367,"byte_end":363409,"line_start":56,"line_end":56,"column_start":1,"column_end":43}},{"value":"/ # });","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_unfold.rs","byte_start":363410,"byte_end":363419,"line_start":57,"line_end":57,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_unfold.rs","byte_start":363420,"byte_end":363427,"line_start":58,"line_end":58,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":13817},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_unfold.rs","byte_start":363808,"byte_end":363817,"line_start":70,"line_end":70,"column_start":16,"column_end":25},"name":"TryUnfold","qualname":"::stream::try_stream::try_unfold::TryUnfold","value":"TryUnfold {  }","parent":null,"children":[{"krate":0,"index":13821},{"krate":0,"index":13822},{"krate":0,"index":13823}],"decl_id":null,"docs":" Stream for the [`try_unfold`] function.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":12561792,"byte_end":12561801,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":13874},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_skip_while.rs","byte_start":365725,"byte_end":365737,"line_start":15,"line_end":15,"column_start":16,"column_end":28},"name":"TrySkipWhile","qualname":"::stream::try_stream::try_skip_while::TrySkipWhile","value":"TrySkipWhile {  }","parent":null,"children":[{"krate":0,"index":13878},{"krate":0,"index":13879},{"krate":0,"index":13880},{"krate":0,"index":13881},{"krate":0,"index":13882}],"decl_id":null,"docs":" Stream for the [`try_skip_while`](super::TryStreamExt::try_skip_while)\n method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":12561792,"byte_end":12561801,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":13947},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_take_while.rs","byte_start":369281,"byte_end":369293,"line_start":15,"line_end":15,"column_start":16,"column_end":28},"name":"TryTakeWhile","qualname":"::stream::try_stream::try_take_while::TryTakeWhile","value":"TryTakeWhile {  }","parent":null,"children":[{"krate":0,"index":13951},{"krate":0,"index":13952},{"krate":0,"index":13953},{"krate":0,"index":13954},{"krate":0,"index":13955}],"decl_id":null,"docs":" Stream for the [`try_take_while`](super::TryStreamExt::try_take_while)\n method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":12561792,"byte_end":12561801,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":17143},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_buffer_unordered.rs","byte_start":12766242,"byte_end":12766260,"line_start":16,"line_end":16,"column_start":16,"column_end":34},"name":"TryBufferUnordered","qualname":"::stream::try_stream::try_buffer_unordered::TryBufferUnordered","value":"TryBufferUnordered {  }","parent":null,"children":[{"krate":0,"index":17145},{"krate":0,"index":17146},{"krate":0,"index":17147}],"decl_id":null,"docs":" Stream for the\n [`try_buffer_unordered`](super::TryStreamExt::try_buffer_unordered) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":12561792,"byte_end":12561801,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":17099},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_buffered.rs","byte_start":12768800,"byte_end":12768811,"line_start":15,"line_end":15,"column_start":16,"column_end":27},"name":"TryBuffered","qualname":"::stream::try_stream::try_buffered::TryBuffered","value":"TryBuffered {  }","parent":null,"children":[{"krate":0,"index":17101},{"krate":0,"index":17102},{"krate":0,"index":17103}],"decl_id":null,"docs":" Stream for the [`try_buffered`](super::TryStreamExt::try_buffered) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":12561792,"byte_end":12561801,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":17033},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_for_each_concurrent.rs","byte_start":12771343,"byte_end":12771363,"line_start":16,"line_end":16,"column_start":16,"column_end":36},"name":"TryForEachConcurrent","qualname":"::stream::try_stream::try_for_each_concurrent::TryForEachConcurrent","value":"TryForEachConcurrent {  }","parent":null,"children":[{"krate":0,"index":17037},{"krate":0,"index":17038},{"krate":0,"index":17039},{"krate":0,"index":17040}],"decl_id":null,"docs":" Future for the\n [`try_for_each_concurrent`](super::TryStreamExt::try_for_each_concurrent)\n method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":12561792,"byte_end":12561801,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":14225},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/into_async_read.rs","byte_start":372977,"byte_end":372990,"line_start":14,"line_end":14,"column_start":12,"column_end":25},"name":"IntoAsyncRead","qualname":"::stream::try_stream::into_async_read::IntoAsyncRead","value":"IntoAsyncRead {  }","parent":null,"children":[{"krate":0,"index":14227},{"krate":0,"index":14228}],"decl_id":null,"docs":" Reader for the [`into_async_read`](super::TryStreamExt::into_async_read) method.\n","sig":null,"attributes":[{"value":"/ Reader for the [`into_async_read`](super::TryStreamExt::into_async_read) method.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/into_async_read.rs","byte_start":372769,"byte_end":372853,"line_start":10,"line_end":10,"column_start":1,"column_end":85}},{"value":"must_use = \"readers do nothing unless polled\"","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/into_async_read.rs","byte_start":372871,"byte_end":372919,"line_start":12,"line_end":12,"column_start":1,"column_end":49}}]},{"kind":"Trait","id":{"krate":0,"index":4871},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":306296,"byte_end":306308,"line_start":145,"line_end":145,"column_start":11,"column_end":23},"name":"TryStreamExt","qualname":"::stream::try_stream::TryStreamExt","value":"TryStreamExt: TryStream","parent":null,"children":[{"krate":0,"index":4872},{"krate":0,"index":4874},{"krate":0,"index":4877},{"krate":0,"index":4880},{"krate":0,"index":4883},{"krate":0,"index":4886},{"krate":0,"index":4888},{"krate":0,"index":4890},{"krate":0,"index":4891},{"krate":0,"index":4892},{"krate":0,"index":4895},{"krate":0,"index":4898},{"krate":0,"index":4901},{"krate":0,"index":4905},{"krate":0,"index":4907},{"krate":0,"index":4910},{"krate":0,"index":4914},{"krate":0,"index":4915},{"krate":0,"index":4919},{"krate":0,"index":4920},{"krate":0,"index":4921},{"krate":0,"index":4922},{"krate":0,"index":4923}],"decl_id":null,"docs":" Adapters specific to `Result`-returning streams\n","sig":null,"attributes":[{"value":"/ Adapters specific to `Result`-returning streams","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":306234,"byte_end":306285,"line_start":144,"line_end":144,"column_start":1,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":4872},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":306850,"byte_end":306858,"line_start":163,"line_end":163,"column_start":8,"column_end":16},"name":"err_into","qualname":"::stream::try_stream::TryStreamExt::err_into","value":"pub fn err_into<E>(Self) -> ErrInto<Self, E> where Self: Sized,\nSelf::Error: Into<E>","parent":{"krate":0,"index":4871},"children":[],"decl_id":null,"docs":" Wraps the current stream in a new stream which converts the error type\n into the one provided.","sig":null,"attributes":[{"value":"/ Wraps the current stream in a new stream which converts the error type","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":306326,"byte_end":306400,"line_start":146,"line_end":146,"column_start":5,"column_end":79}},{"value":"/ into the one provided.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":306405,"byte_end":306431,"line_start":147,"line_end":147,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":306436,"byte_end":306439,"line_start":148,"line_end":148,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":306444,"byte_end":306458,"line_start":149,"line_end":149,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":306463,"byte_end":306466,"line_start":150,"line_end":150,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":306471,"byte_end":306478,"line_start":151,"line_end":151,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":306483,"byte_end":306524,"line_start":152,"line_end":152,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":306529,"byte_end":306575,"line_start":153,"line_end":153,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":306580,"byte_end":306583,"line_start":154,"line_end":154,"column_start":5,"column_end":8}},{"value":"/ let mut stream =","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":306588,"byte_end":306608,"line_start":155,"line_end":155,"column_start":5,"column_end":25}},{"value":"/     stream::iter(vec![Ok(()), Err(5i32)])","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":306613,"byte_end":306658,"line_start":156,"line_end":156,"column_start":5,"column_end":50}},{"value":"/         .err_into::<i64>();","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":306663,"byte_end":306694,"line_start":157,"line_end":157,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":306699,"byte_end":306702,"line_start":158,"line_end":158,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.try_next().await, Ok(Some(())));","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":306707,"byte_end":306761,"line_start":159,"line_end":159,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(stream.try_next().await, Err(5i64));","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":306766,"byte_end":306817,"line_start":160,"line_end":160,"column_start":5,"column_end":56}},{"value":"/ # })","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":306822,"byte_end":306830,"line_start":161,"line_end":161,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":306835,"byte_end":306842,"line_start":162,"line_end":162,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4874},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":307554,"byte_end":307560,"line_start":188,"line_end":188,"column_start":8,"column_end":14},"name":"map_ok","qualname":"::stream::try_stream::TryStreamExt::map_ok","value":"pub fn map_ok<T, F>(Self, F) -> MapOk<Self, F> where Self: Sized,\nF: FnMut(Self::Ok) -> T","parent":{"krate":0,"index":4871},"children":[],"decl_id":null,"docs":" Wraps the current stream in a new stream which maps the success value\n using the provided closure.","sig":null,"attributes":[{"value":"/ Wraps the current stream in a new stream which maps the success value","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":307034,"byte_end":307107,"line_start":171,"line_end":171,"column_start":5,"column_end":78}},{"value":"/ using the provided closure.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":307112,"byte_end":307143,"line_start":172,"line_end":172,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":307148,"byte_end":307151,"line_start":173,"line_end":173,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":307156,"byte_end":307170,"line_start":174,"line_end":174,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":307175,"byte_end":307178,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":307183,"byte_end":307190,"line_start":176,"line_end":176,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":307195,"byte_end":307236,"line_start":177,"line_end":177,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":307241,"byte_end":307287,"line_start":178,"line_end":178,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":307292,"byte_end":307295,"line_start":179,"line_end":179,"column_start":5,"column_end":8}},{"value":"/ let mut stream =","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":307300,"byte_end":307320,"line_start":180,"line_end":180,"column_start":5,"column_end":25}},{"value":"/     stream::iter(vec![Ok(5), Err(0)])","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":307325,"byte_end":307366,"line_start":181,"line_end":181,"column_start":5,"column_end":46}},{"value":"/         .map_ok(|x| x + 2);","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":307371,"byte_end":307402,"line_start":182,"line_end":182,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":307407,"byte_end":307410,"line_start":183,"line_end":183,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.try_next().await, Ok(Some(7)));","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":307415,"byte_end":307468,"line_start":184,"line_end":184,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(stream.try_next().await, Err(0));","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":307473,"byte_end":307521,"line_start":185,"line_end":185,"column_start":5,"column_end":53}},{"value":"/ # })","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":307526,"byte_end":307534,"line_start":186,"line_end":186,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":307539,"byte_end":307546,"line_start":187,"line_end":187,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4877},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":308269,"byte_end":308276,"line_start":213,"line_end":213,"column_start":8,"column_end":15},"name":"map_err","qualname":"::stream::try_stream::TryStreamExt::map_err","value":"pub fn map_err<E, F>(Self, F) -> MapErr<Self, F> where Self: Sized,\nF: FnMut(Self::Error) -> E","parent":{"krate":0,"index":4871},"children":[],"decl_id":null,"docs":" Wraps the current stream in a new stream which maps the error value\n using the provided closure.","sig":null,"attributes":[{"value":"/ Wraps the current stream in a new stream which maps the error value","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":307750,"byte_end":307821,"line_start":196,"line_end":196,"column_start":5,"column_end":76}},{"value":"/ using the provided closure.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":307826,"byte_end":307857,"line_start":197,"line_end":197,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":307862,"byte_end":307865,"line_start":198,"line_end":198,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":307870,"byte_end":307884,"line_start":199,"line_end":199,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":307889,"byte_end":307892,"line_start":200,"line_end":200,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":307897,"byte_end":307904,"line_start":201,"line_end":201,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":307909,"byte_end":307950,"line_start":202,"line_end":202,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":307955,"byte_end":308001,"line_start":203,"line_end":203,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":308006,"byte_end":308009,"line_start":204,"line_end":204,"column_start":5,"column_end":8}},{"value":"/ let mut stream =","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":308014,"byte_end":308034,"line_start":205,"line_end":205,"column_start":5,"column_end":25}},{"value":"/     stream::iter(vec![Ok(5), Err(0)])","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":308039,"byte_end":308080,"line_start":206,"line_end":206,"column_start":5,"column_end":46}},{"value":"/         .map_err(|x| x + 2);","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":308085,"byte_end":308117,"line_start":207,"line_end":207,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":308122,"byte_end":308125,"line_start":208,"line_end":208,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.try_next().await, Ok(Some(5)));","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":308130,"byte_end":308183,"line_start":209,"line_end":209,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(stream.try_next().await, Err(2));","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":308188,"byte_end":308236,"line_start":210,"line_end":210,"column_start":5,"column_end":53}},{"value":"/ # })","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":308241,"byte_end":308249,"line_start":211,"line_end":211,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":308254,"byte_end":308261,"line_start":212,"line_end":212,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4880},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":309881,"byte_end":309889,"line_start":259,"line_end":259,"column_start":8,"column_end":16},"name":"and_then","qualname":"::stream::try_stream::TryStreamExt::and_then","value":"pub fn and_then<Fut, F>(Self, F) -> AndThen<Self, Fut, F> where\nF: FnMut(Self::Ok) -> Fut, Fut: TryFuture<Error = Self::Error>, Self: Sized","parent":{"krate":0,"index":4871},"children":[],"decl_id":null,"docs":" Chain on a computation for when a value is ready, passing the successful\n results to the provided closure `f`.","sig":null,"attributes":[{"value":"/ Chain on a computation for when a value is ready, passing the successful","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":308468,"byte_end":308544,"line_start":221,"line_end":221,"column_start":5,"column_end":81}},{"value":"/ results to the provided closure `f`.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":308549,"byte_end":308589,"line_start":222,"line_end":222,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":308594,"byte_end":308597,"line_start":223,"line_end":223,"column_start":5,"column_end":8}},{"value":"/ This function can be used to run a unit of work when the next successful","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":308602,"byte_end":308678,"line_start":224,"line_end":224,"column_start":5,"column_end":81}},{"value":"/ value on a stream is ready. The closure provided will be yielded a value","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":308683,"byte_end":308759,"line_start":225,"line_end":225,"column_start":5,"column_end":81}},{"value":"/ when ready, and the returned future will then be run to completion to","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":308764,"byte_end":308837,"line_start":226,"line_end":226,"column_start":5,"column_end":78}},{"value":"/ produce the next value on this stream.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":308842,"byte_end":308884,"line_start":227,"line_end":227,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":308889,"byte_end":308892,"line_start":228,"line_end":228,"column_start":5,"column_end":8}},{"value":"/ Any errors produced by this stream will not be passed to the closure,","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":308897,"byte_end":308970,"line_start":229,"line_end":229,"column_start":5,"column_end":78}},{"value":"/ and will be passed through.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":308975,"byte_end":309006,"line_start":230,"line_end":230,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":309011,"byte_end":309014,"line_start":231,"line_end":231,"column_start":5,"column_end":8}},{"value":"/ The returned value of the closure must implement the `TryFuture` trait","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":309019,"byte_end":309093,"line_start":232,"line_end":232,"column_start":5,"column_end":79}},{"value":"/ and can represent some more work to be done before the composed stream","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":309098,"byte_end":309172,"line_start":233,"line_end":233,"column_start":5,"column_end":79}},{"value":"/ is finished.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":309177,"byte_end":309193,"line_start":234,"line_end":234,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":309198,"byte_end":309201,"line_start":235,"line_end":235,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the receiving stream and returns a","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":309206,"byte_end":309277,"line_start":236,"line_end":236,"column_start":5,"column_end":76}},{"value":"/ wrapped version of it.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":309282,"byte_end":309308,"line_start":237,"line_end":237,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":309313,"byte_end":309316,"line_start":238,"line_end":238,"column_start":5,"column_end":8}},{"value":"/ To process the entire stream and return a single future representing","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":309321,"byte_end":309393,"line_start":239,"line_end":239,"column_start":5,"column_end":77}},{"value":"/ success or error, use `try_for_each` instead.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":309398,"byte_end":309447,"line_start":240,"line_end":240,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":309452,"byte_end":309455,"line_start":241,"line_end":241,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":309460,"byte_end":309474,"line_start":242,"line_end":242,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":309479,"byte_end":309482,"line_start":243,"line_end":243,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":309487,"byte_end":309494,"line_start":244,"line_end":244,"column_start":5,"column_end":12}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":309499,"byte_end":309530,"line_start":245,"line_end":245,"column_start":5,"column_end":36}},{"value":"/ use futures::future;","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":309535,"byte_end":309559,"line_start":246,"line_end":246,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::TryStreamExt;","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":309564,"byte_end":309602,"line_start":247,"line_end":247,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":309607,"byte_end":309610,"line_start":248,"line_end":248,"column_start":5,"column_end":8}},{"value":"/ let (_tx, rx) = mpsc::channel::<Result<i32, ()>>(1);","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":309615,"byte_end":309671,"line_start":249,"line_end":249,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":309676,"byte_end":309679,"line_start":250,"line_end":250,"column_start":5,"column_end":8}},{"value":"/ let rx = rx.and_then(|result| {","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":309684,"byte_end":309719,"line_start":251,"line_end":251,"column_start":5,"column_end":40}},{"value":"/     future::ok(if result % 2 == 0 {","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":309724,"byte_end":309763,"line_start":252,"line_end":252,"column_start":5,"column_end":44}},{"value":"/         Some(result)","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":309768,"byte_end":309792,"line_start":253,"line_end":253,"column_start":5,"column_end":29}},{"value":"/     } else {","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":309797,"byte_end":309813,"line_start":254,"line_end":254,"column_start":5,"column_end":21}},{"value":"/         None","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":309818,"byte_end":309834,"line_start":255,"line_end":255,"column_start":5,"column_end":21}},{"value":"/     })","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":309839,"byte_end":309849,"line_start":256,"line_end":256,"column_start":5,"column_end":15}},{"value":"/ });","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":309854,"byte_end":309861,"line_start":257,"line_end":257,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":309866,"byte_end":309873,"line_start":258,"line_end":258,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4883},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":311041,"byte_end":311048,"line_start":285,"line_end":285,"column_start":8,"column_end":15},"name":"or_else","qualname":"::stream::try_stream::TryStreamExt::or_else","value":"pub fn or_else<Fut, F>(Self, F) -> OrElse<Self, Fut, F> where\nF: FnMut(Self::Error) -> Fut, Fut: TryFuture<Ok = Self::Ok>, Self: Sized","parent":{"krate":0,"index":4871},"children":[],"decl_id":null,"docs":" Chain on a computation for when an error happens, passing the\n erroneous result to the provided closure `f`.","sig":null,"attributes":[{"value":"/ Chain on a computation for when an error happens, passing the","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":310142,"byte_end":310207,"line_start":268,"line_end":268,"column_start":5,"column_end":70}},{"value":"/ erroneous result to the provided closure `f`.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":310212,"byte_end":310261,"line_start":269,"line_end":269,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":310266,"byte_end":310269,"line_start":270,"line_end":270,"column_start":5,"column_end":8}},{"value":"/ This function can be used to run a unit of work and attempt to recover from","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":310274,"byte_end":310353,"line_start":271,"line_end":271,"column_start":5,"column_end":84}},{"value":"/ an error if one happens. The closure provided will be yielded an error","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":310358,"byte_end":310432,"line_start":272,"line_end":272,"column_start":5,"column_end":79}},{"value":"/ when one appears, and the returned future will then be run to completion","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":310437,"byte_end":310513,"line_start":273,"line_end":273,"column_start":5,"column_end":81}},{"value":"/ to produce the next value on this stream.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":310518,"byte_end":310563,"line_start":274,"line_end":274,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":310568,"byte_end":310571,"line_start":275,"line_end":275,"column_start":5,"column_end":8}},{"value":"/ Any successful values produced by this stream will not be passed to the","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":310576,"byte_end":310651,"line_start":276,"line_end":276,"column_start":5,"column_end":80}},{"value":"/ closure, and will be passed through.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":310656,"byte_end":310696,"line_start":277,"line_end":277,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":310701,"byte_end":310704,"line_start":278,"line_end":278,"column_start":5,"column_end":8}},{"value":"/ The returned value of the closure must implement the [`TryFuture`](futures_core::future::TryFuture) trait","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":310709,"byte_end":310818,"line_start":279,"line_end":279,"column_start":5,"column_end":114}},{"value":"/ and can represent some more work to be done before the composed stream","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":310823,"byte_end":310897,"line_start":280,"line_end":280,"column_start":5,"column_end":79}},{"value":"/ is finished.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":310902,"byte_end":310918,"line_start":281,"line_end":281,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":310923,"byte_end":310926,"line_start":282,"line_end":282,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the receiving stream and returns a","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":310931,"byte_end":311002,"line_start":283,"line_end":283,"column_start":5,"column_end":76}},{"value":"/ wrapped version of it.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":311007,"byte_end":311033,"line_start":284,"line_end":284,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":4886},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":311600,"byte_end":311610,"line_start":300,"line_end":300,"column_start":8,"column_end":18},"name":"inspect_ok","qualname":"::stream::try_stream::TryStreamExt::inspect_ok","value":"pub fn inspect_ok<F>(Self, F) -> InspectOk<Self, F> where F: FnMut(&Self::Ok)\n-> (), Self: Sized","parent":{"krate":0,"index":4871},"children":[],"decl_id":null,"docs":" Do something with the success value of this stream, afterwards passing\n it on.","sig":null,"attributes":[{"value":"/ Do something with the success value of this stream, afterwards passing","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":311297,"byte_end":311371,"line_start":294,"line_end":294,"column_start":5,"column_end":79}},{"value":"/ it on.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":311376,"byte_end":311386,"line_start":295,"line_end":295,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":311391,"byte_end":311394,"line_start":296,"line_end":296,"column_start":5,"column_end":8}},{"value":"/ This is similar to the `StreamExt::inspect` method where it allows","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":311399,"byte_end":311469,"line_start":297,"line_end":297,"column_start":5,"column_end":75}},{"value":"/ easily inspecting the success value as it passes through the stream, for","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":311474,"byte_end":311550,"line_start":298,"line_end":298,"column_start":5,"column_end":81}},{"value":"/ example to debug what's going on.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":311555,"byte_end":311592,"line_start":299,"line_end":299,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":4888},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":312099,"byte_end":312110,"line_start":313,"line_end":313,"column_start":8,"column_end":19},"name":"inspect_err","qualname":"::stream::try_stream::TryStreamExt::inspect_err","value":"pub fn inspect_err<F>(Self, F) -> InspectErr<Self, F> where\nF: FnMut(&Self::Error) -> (), Self: Sized","parent":{"krate":0,"index":4871},"children":[],"decl_id":null,"docs":" Do something with the error value of this stream, afterwards passing it on.","sig":null,"attributes":[{"value":"/ Do something with the error value of this stream, afterwards passing it on.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":311808,"byte_end":311887,"line_start":308,"line_end":308,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":311892,"byte_end":311895,"line_start":309,"line_end":309,"column_start":5,"column_end":8}},{"value":"/ This is similar to the `StreamExt::inspect` method where it allows","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":311900,"byte_end":311970,"line_start":310,"line_end":310,"column_start":5,"column_end":75}},{"value":"/ easily inspecting the error value as it passes through the stream, for","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":311975,"byte_end":312049,"line_start":311,"line_end":311,"column_start":5,"column_end":79}},{"value":"/ example to debug what's going on.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":312054,"byte_end":312091,"line_start":312,"line_end":312,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":4890},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":313031,"byte_end":313042,"line_start":342,"line_end":342,"column_start":8,"column_end":19},"name":"into_stream","qualname":"::stream::try_stream::TryStreamExt::into_stream","value":"pub fn into_stream(Self) -> IntoStream<Self> where Self: Sized","parent":{"krate":0,"index":4871},"children":[],"decl_id":null,"docs":" Wraps a [`TryStream`] into a type that implements\n [`Stream`](futures_core::stream::Stream)","sig":null,"attributes":[{"value":"/ Wraps a [`TryStream`] into a type that implements","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":312313,"byte_end":312366,"line_start":321,"line_end":321,"column_start":5,"column_end":58}},{"value":"/ [`Stream`](futures_core::stream::Stream)","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":312371,"byte_end":312415,"line_start":322,"line_end":322,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":312420,"byte_end":312423,"line_start":323,"line_end":323,"column_start":5,"column_end":8}},{"value":"/ [`TryStream`]s currently do not implement the","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":312428,"byte_end":312477,"line_start":324,"line_end":324,"column_start":5,"column_end":54}},{"value":"/ [`Stream`](futures_core::stream::Stream) trait because of limitations","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":312482,"byte_end":312555,"line_start":325,"line_end":325,"column_start":5,"column_end":78}},{"value":"/ of the compiler.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":312560,"byte_end":312580,"line_start":326,"line_end":326,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":312585,"byte_end":312588,"line_start":327,"line_end":327,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":312593,"byte_end":312607,"line_start":328,"line_end":328,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":312612,"byte_end":312615,"line_start":329,"line_end":329,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":312620,"byte_end":312627,"line_start":330,"line_end":330,"column_start":5,"column_end":12}},{"value":"/ use futures::stream::{Stream, TryStream, TryStreamExt};","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":312632,"byte_end":312691,"line_start":331,"line_end":331,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":312696,"byte_end":312699,"line_start":332,"line_end":332,"column_start":5,"column_end":8}},{"value":"/ # type T = i32;","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":312704,"byte_end":312723,"line_start":333,"line_end":333,"column_start":5,"column_end":24}},{"value":"/ # type E = ();","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":312728,"byte_end":312746,"line_start":334,"line_end":334,"column_start":5,"column_end":23}},{"value":"/ fn make_try_stream() -> impl TryStream<Ok = T, Error = E> { // ... }","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":312751,"byte_end":312823,"line_start":335,"line_end":335,"column_start":5,"column_end":77}},{"value":"/ # futures::stream::empty()","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":312828,"byte_end":312858,"line_start":336,"line_end":336,"column_start":5,"column_end":35}},{"value":"/ # }","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":312863,"byte_end":312870,"line_start":337,"line_end":337,"column_start":5,"column_end":12}},{"value":"/ fn take_stream(stream: impl Stream<Item = Result<T, E>>) { /* ... */ }","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":312875,"byte_end":312949,"line_start":338,"line_end":338,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":312954,"byte_end":312957,"line_start":339,"line_end":339,"column_start":5,"column_end":8}},{"value":"/ take_stream(make_try_stream().into_stream());","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":312962,"byte_end":313011,"line_start":340,"line_end":340,"column_start":5,"column_end":54}},{"value":"/ ```","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":313016,"byte_end":313023,"line_start":341,"line_end":341,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4891},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":313937,"byte_end":313945,"line_start":369,"line_end":369,"column_start":8,"column_end":16},"name":"try_next","qualname":"::stream::try_stream::TryStreamExt::try_next","value":"pub fn try_next(&mut Self) -> TryNext<, Self> where Self: Unpin","parent":{"krate":0,"index":4871},"children":[],"decl_id":null,"docs":" Creates a future that attempts to resolve the next item in the stream.\n If an error is encountered before the next item, the error is returned\n instead.","sig":null,"attributes":[{"value":"/ Creates a future that attempts to resolve the next item in the stream.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":313198,"byte_end":313272,"line_start":349,"line_end":349,"column_start":5,"column_end":79}},{"value":"/ If an error is encountered before the next item, the error is returned","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":313277,"byte_end":313351,"line_start":350,"line_end":350,"column_start":5,"column_end":79}},{"value":"/ instead.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":313356,"byte_end":313368,"line_start":351,"line_end":351,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":313373,"byte_end":313376,"line_start":352,"line_end":352,"column_start":5,"column_end":8}},{"value":"/ This is similar to the `Stream::next` combinator, but returns a","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":313381,"byte_end":313448,"line_start":353,"line_end":353,"column_start":5,"column_end":72}},{"value":"/ `Result<Option<T>, E>` rather than an `Option<Result<T, E>>`, making","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":313453,"byte_end":313525,"line_start":354,"line_end":354,"column_start":5,"column_end":77}},{"value":"/ for easy use with the `?` operator.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":313530,"byte_end":313569,"line_start":355,"line_end":355,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":313574,"byte_end":313577,"line_start":356,"line_end":356,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":313582,"byte_end":313596,"line_start":357,"line_end":357,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":313601,"byte_end":313604,"line_start":358,"line_end":358,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":313609,"byte_end":313616,"line_start":359,"line_end":359,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":313621,"byte_end":313662,"line_start":360,"line_end":360,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":313667,"byte_end":313713,"line_start":361,"line_end":361,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":313718,"byte_end":313721,"line_start":362,"line_end":362,"column_start":5,"column_end":8}},{"value":"/ let mut stream = stream::iter(vec![Ok(()), Err(())]);","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":313726,"byte_end":313783,"line_start":363,"line_end":363,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":313788,"byte_end":313791,"line_start":364,"line_end":364,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.try_next().await, Ok(Some(())));","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":313796,"byte_end":313850,"line_start":365,"line_end":365,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(stream.try_next().await, Err(()));","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":313855,"byte_end":313904,"line_start":366,"line_end":366,"column_start":5,"column_end":54}},{"value":"/ # })","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":313909,"byte_end":313917,"line_start":367,"line_end":367,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":313922,"byte_end":313929,"line_start":368,"line_end":368,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4892},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":315297,"byte_end":315309,"line_start":409,"line_end":409,"column_start":8,"column_end":20},"name":"try_for_each","qualname":"::stream::try_stream::TryStreamExt::try_for_each","value":"pub fn try_for_each<Fut, F>(Self, F) -> TryForEach<Self, Fut, F> where\nF: FnMut(Self::Ok) -> Fut, Fut: TryFuture<Ok = (), Error = ()>, Self: Sized","parent":{"krate":0,"index":4871},"children":[],"decl_id":null,"docs":" Attempts to run this stream to completion, executing the provided\n asynchronous closure for each element on the stream.","sig":null,"attributes":[{"value":"/ Attempts to run this stream to completion, executing the provided","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":314112,"byte_end":314181,"line_start":376,"line_end":376,"column_start":5,"column_end":74}},{"value":"/ asynchronous closure for each element on the stream.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":314186,"byte_end":314242,"line_start":377,"line_end":377,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":314247,"byte_end":314250,"line_start":378,"line_end":378,"column_start":5,"column_end":8}},{"value":"/ The provided closure will be called for each item this stream produces,","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":314255,"byte_end":314330,"line_start":379,"line_end":379,"column_start":5,"column_end":80}},{"value":"/ yielding a future. That future will then be executed to completion","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":314335,"byte_end":314405,"line_start":380,"line_end":380,"column_start":5,"column_end":75}},{"value":"/ before moving on to the next item.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":314410,"byte_end":314448,"line_start":381,"line_end":381,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":314453,"byte_end":314456,"line_start":382,"line_end":382,"column_start":5,"column_end":8}},{"value":"/ The returned value is a [`Future`](futures_core::future::Future) where the","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":314461,"byte_end":314539,"line_start":383,"line_end":383,"column_start":5,"column_end":83}},{"value":"/ [`Output`](futures_core::future::Future::Output) type is","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":314544,"byte_end":314604,"line_start":384,"line_end":384,"column_start":5,"column_end":65}},{"value":"/ `Result<(), Self::Error>`. If any of the intermediate","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":314609,"byte_end":314666,"line_start":385,"line_end":385,"column_start":5,"column_end":62}},{"value":"/ futures or the stream returns an error, this future will return","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":314671,"byte_end":314738,"line_start":386,"line_end":386,"column_start":5,"column_end":72}},{"value":"/ immediately with an error.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":314743,"byte_end":314773,"line_start":387,"line_end":387,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":314778,"byte_end":314781,"line_start":388,"line_end":388,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":314786,"byte_end":314800,"line_start":389,"line_end":389,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":314805,"byte_end":314808,"line_start":390,"line_end":390,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":314813,"byte_end":314820,"line_start":391,"line_end":391,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":314825,"byte_end":314866,"line_start":392,"line_end":392,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":314871,"byte_end":314895,"line_start":393,"line_end":393,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":314900,"byte_end":314946,"line_start":394,"line_end":394,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":314951,"byte_end":314954,"line_start":395,"line_end":395,"column_start":5,"column_end":8}},{"value":"/ let mut x = 0i32;","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":314959,"byte_end":314980,"line_start":396,"line_end":396,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":314985,"byte_end":314988,"line_start":397,"line_end":397,"column_start":5,"column_end":8}},{"value":"/ {","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":314993,"byte_end":314998,"line_start":398,"line_end":398,"column_start":5,"column_end":10}},{"value":"/     let fut = stream::repeat(Ok(1)).try_for_each(|item| {","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":315003,"byte_end":315064,"line_start":399,"line_end":399,"column_start":5,"column_end":66}},{"value":"/         x += item;","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":315069,"byte_end":315091,"line_start":400,"line_end":400,"column_start":5,"column_end":27}},{"value":"/         future::ready(if x == 3 { Err(()) } else { Ok(()) })","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":315096,"byte_end":315160,"line_start":401,"line_end":401,"column_start":5,"column_end":69}},{"value":"/     });","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":315165,"byte_end":315176,"line_start":402,"line_end":402,"column_start":5,"column_end":16}},{"value":"/     assert_eq!(fut.await, Err(()));","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":315181,"byte_end":315220,"line_start":403,"line_end":403,"column_start":5,"column_end":44}},{"value":"/ }","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":315225,"byte_end":315230,"line_start":404,"line_end":404,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":315235,"byte_end":315238,"line_start":405,"line_end":405,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(x, 3);","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":315243,"byte_end":315264,"line_start":406,"line_end":406,"column_start":5,"column_end":26}},{"value":"/ # })","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":315269,"byte_end":315277,"line_start":407,"line_end":407,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":315282,"byte_end":315289,"line_start":408,"line_end":408,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4895},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":316322,"byte_end":316336,"line_start":439,"line_end":439,"column_start":8,"column_end":22},"name":"try_skip_while","qualname":"::stream::try_stream::TryStreamExt::try_skip_while","value":"pub fn try_skip_while<Fut, F>(Self, F) -> TrySkipWhile<Self, Fut, F> where\nF: FnMut(&Self::Ok) -> Fut, Fut: TryFuture<Ok = bool, Error = bool>,\nSelf: Sized","parent":{"krate":0,"index":4871},"children":[],"decl_id":null,"docs":" Skip elements on this stream while the provided asynchronous predicate\n resolves to `true`.","sig":null,"attributes":[{"value":"/ Skip elements on this stream while the provided asynchronous predicate","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":315573,"byte_end":315647,"line_start":418,"line_end":418,"column_start":5,"column_end":79}},{"value":"/ resolves to `true`.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":315652,"byte_end":315675,"line_start":419,"line_end":419,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":315680,"byte_end":315683,"line_start":420,"line_end":420,"column_start":5,"column_end":8}},{"value":"/ This function is similar to","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":315688,"byte_end":315719,"line_start":421,"line_end":421,"column_start":5,"column_end":36}},{"value":"/ [`StreamExt::skip_while`](crate::stream::StreamExt::skip_while) but exits","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":315724,"byte_end":315801,"line_start":422,"line_end":422,"column_start":5,"column_end":82}},{"value":"/ early if an error occurs.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":315806,"byte_end":315835,"line_start":423,"line_end":423,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":315840,"byte_end":315843,"line_start":424,"line_end":424,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":315848,"byte_end":315862,"line_start":425,"line_end":425,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":315867,"byte_end":315870,"line_start":426,"line_end":426,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":315875,"byte_end":315882,"line_start":427,"line_end":427,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":315887,"byte_end":315928,"line_start":428,"line_end":428,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":315933,"byte_end":315957,"line_start":429,"line_end":429,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":315962,"byte_end":316008,"line_start":430,"line_end":430,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":316013,"byte_end":316016,"line_start":431,"line_end":431,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(vec![Ok::<i32, i32>(1), Ok(3), Ok(2)]);","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":316021,"byte_end":316090,"line_start":432,"line_end":432,"column_start":5,"column_end":74}},{"value":"/ let stream = stream.try_skip_while(|x| future::ready(Ok(*x < 3)));","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":316095,"byte_end":316165,"line_start":433,"line_end":433,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":316170,"byte_end":316173,"line_start":434,"line_end":434,"column_start":5,"column_end":8}},{"value":"/ let output: Result<Vec<i32>, i32> = stream.try_collect().await;","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":316178,"byte_end":316245,"line_start":435,"line_end":435,"column_start":5,"column_end":72}},{"value":"/ assert_eq!(output, Ok(vec![3, 2]));","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":316250,"byte_end":316289,"line_start":436,"line_end":436,"column_start":5,"column_end":44}},{"value":"/ # })","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":316294,"byte_end":316302,"line_start":437,"line_end":437,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":316307,"byte_end":316314,"line_start":438,"line_end":438,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4898},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":317369,"byte_end":317383,"line_start":469,"line_end":469,"column_start":8,"column_end":22},"name":"try_take_while","qualname":"::stream::try_stream::TryStreamExt::try_take_while","value":"pub fn try_take_while<Fut, F>(Self, F) -> TryTakeWhile<Self, Fut, F> where\nF: FnMut(&Self::Ok) -> Fut, Fut: TryFuture<Ok = bool, Error = bool>,\nSelf: Sized","parent":{"krate":0,"index":4871},"children":[],"decl_id":null,"docs":" Take elements on this stream while the provided asynchronous predicate\n resolves to `true`.","sig":null,"attributes":[{"value":"/ Take elements on this stream while the provided asynchronous predicate","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":316613,"byte_end":316687,"line_start":448,"line_end":448,"column_start":5,"column_end":79}},{"value":"/ resolves to `true`.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":316692,"byte_end":316715,"line_start":449,"line_end":449,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":316720,"byte_end":316723,"line_start":450,"line_end":450,"column_start":5,"column_end":8}},{"value":"/ This function is similar to","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":316728,"byte_end":316759,"line_start":451,"line_end":451,"column_start":5,"column_end":36}},{"value":"/ [`StreamExt::take_while`](crate::stream::StreamExt::take_while) but exits","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":316764,"byte_end":316841,"line_start":452,"line_end":452,"column_start":5,"column_end":82}},{"value":"/ early if an error occurs.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":316846,"byte_end":316875,"line_start":453,"line_end":453,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":316880,"byte_end":316883,"line_start":454,"line_end":454,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":316888,"byte_end":316902,"line_start":455,"line_end":455,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":316907,"byte_end":316910,"line_start":456,"line_end":456,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":316915,"byte_end":316922,"line_start":457,"line_end":457,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":316927,"byte_end":316968,"line_start":458,"line_end":458,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":316973,"byte_end":316997,"line_start":459,"line_end":459,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":317002,"byte_end":317048,"line_start":460,"line_end":460,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":317053,"byte_end":317056,"line_start":461,"line_end":461,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(vec![Ok::<i32, i32>(1), Ok(2), Ok(3), Ok(2)]);","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":317061,"byte_end":317137,"line_start":462,"line_end":462,"column_start":5,"column_end":81}},{"value":"/ let stream = stream.try_take_while(|x| future::ready(Ok(*x < 3)));","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":317142,"byte_end":317212,"line_start":463,"line_end":463,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":317217,"byte_end":317220,"line_start":464,"line_end":464,"column_start":5,"column_end":8}},{"value":"/ let output: Result<Vec<i32>, i32> = stream.try_collect().await;","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":317225,"byte_end":317292,"line_start":465,"line_end":465,"column_start":5,"column_end":72}},{"value":"/ assert_eq!(output, Ok(vec![1, 2]));","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":317297,"byte_end":317336,"line_start":466,"line_end":466,"column_start":5,"column_end":44}},{"value":"/ # })","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":317341,"byte_end":317349,"line_start":467,"line_end":467,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":317354,"byte_end":317361,"line_start":468,"line_end":468,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4901},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":319298,"byte_end":319321,"line_start":521,"line_end":521,"column_start":8,"column_end":31},"name":"try_for_each_concurrent","qualname":"::stream::try_stream::TryStreamExt::try_for_each_concurrent","value":"pub fn try_for_each_concurrent<Fut, F,\n                               impl Into<Option<usize>>: Into<Option<usize>>>(Self,\n                                                                              impl Into<Option<usize>>,\n                                                                              F)\n-> TryForEachConcurrent<Self, Fut, F> where F: FnMut(Self::Ok) -> Fut,\nFut: Future<Output = Result<(), Self::Error>>, Self: Sized","parent":{"krate":0,"index":4871},"children":[],"decl_id":null,"docs":" Attempts to run this stream to completion, executing the provided asynchronous\n closure for each element on the stream concurrently as elements become\n available, exiting as soon as an error occurs.","sig":null,"attributes":[{"value":"/ Attempts to run this stream to completion, executing the provided asynchronous","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":317660,"byte_end":317742,"line_start":478,"line_end":478,"column_start":5,"column_end":87}},{"value":"/ closure for each element on the stream concurrently as elements become","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":317747,"byte_end":317821,"line_start":479,"line_end":479,"column_start":5,"column_end":79}},{"value":"/ available, exiting as soon as an error occurs.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":317826,"byte_end":317876,"line_start":480,"line_end":480,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":317881,"byte_end":317884,"line_start":481,"line_end":481,"column_start":5,"column_end":8}},{"value":"/ This is similar to","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":317889,"byte_end":317911,"line_start":482,"line_end":482,"column_start":5,"column_end":27}},{"value":"/ [`StreamExt::for_each_concurrent`](crate::stream::StreamExt::for_each_concurrent),","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":317916,"byte_end":318002,"line_start":483,"line_end":483,"column_start":5,"column_end":91}},{"value":"/ but will resolve to an error immediately if the underlying stream or the provided","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":318007,"byte_end":318092,"line_start":484,"line_end":484,"column_start":5,"column_end":90}},{"value":"/ closure return an error.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":318097,"byte_end":318125,"line_start":485,"line_end":485,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":318130,"byte_end":318133,"line_start":486,"line_end":486,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":318138,"byte_end":318213,"line_start":487,"line_end":487,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":318218,"byte_end":318275,"line_start":488,"line_end":488,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":318280,"byte_end":318283,"line_start":489,"line_end":489,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":318288,"byte_end":318302,"line_start":490,"line_end":490,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":318307,"byte_end":318310,"line_start":491,"line_end":491,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":318315,"byte_end":318322,"line_start":492,"line_end":492,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":318327,"byte_end":318368,"line_start":493,"line_end":493,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::oneshot;","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":318373,"byte_end":318407,"line_start":494,"line_end":494,"column_start":5,"column_end":39}},{"value":"/ use futures::stream::{self, StreamExt, TryStreamExt};","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":318412,"byte_end":318469,"line_start":495,"line_end":495,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":318474,"byte_end":318477,"line_start":496,"line_end":496,"column_start":5,"column_end":8}},{"value":"/ let (tx1, rx1) = oneshot::channel();","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":318482,"byte_end":318522,"line_start":497,"line_end":497,"column_start":5,"column_end":45}},{"value":"/ let (tx2, rx2) = oneshot::channel();","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":318527,"byte_end":318567,"line_start":498,"line_end":498,"column_start":5,"column_end":45}},{"value":"/ let (_tx3, rx3) = oneshot::channel();","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":318572,"byte_end":318613,"line_start":499,"line_end":499,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":318618,"byte_end":318621,"line_start":500,"line_end":500,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(vec![rx1, rx2, rx3]);","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":318626,"byte_end":318677,"line_start":501,"line_end":501,"column_start":5,"column_end":56}},{"value":"/ let fut = stream.map(Ok).try_for_each_concurrent(","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":318682,"byte_end":318735,"line_start":502,"line_end":502,"column_start":5,"column_end":58}},{"value":"/     /* limit */ 2,","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":318740,"byte_end":318762,"line_start":503,"line_end":503,"column_start":5,"column_end":27}},{"value":"/     |rx| async move {","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":318767,"byte_end":318792,"line_start":504,"line_end":504,"column_start":5,"column_end":30}},{"value":"/         let res: Result<(), oneshot::Canceled> = rx.await;","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":318797,"byte_end":318859,"line_start":505,"line_end":505,"column_start":5,"column_end":67}},{"value":"/         res","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":318864,"byte_end":318879,"line_start":506,"line_end":506,"column_start":5,"column_end":20}},{"value":"/     }","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":318884,"byte_end":318893,"line_start":507,"line_end":507,"column_start":5,"column_end":14}},{"value":"/ );","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":318898,"byte_end":318904,"line_start":508,"line_end":508,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":318909,"byte_end":318912,"line_start":509,"line_end":509,"column_start":5,"column_end":8}},{"value":"/ tx1.send(()).unwrap();","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":318917,"byte_end":318943,"line_start":510,"line_end":510,"column_start":5,"column_end":31}},{"value":"/ // Drop the second sender so that `rx2` resolves to `Canceled`.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":318948,"byte_end":319015,"line_start":511,"line_end":511,"column_start":5,"column_end":72}},{"value":"/ drop(tx2);","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":319020,"byte_end":319034,"line_start":512,"line_end":512,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":319039,"byte_end":319042,"line_start":513,"line_end":513,"column_start":5,"column_end":8}},{"value":"/ // The final result is an error because the second future","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":319047,"byte_end":319108,"line_start":514,"line_end":514,"column_start":5,"column_end":66}},{"value":"/ // resulted in an error.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":319113,"byte_end":319141,"line_start":515,"line_end":515,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(Err(oneshot::Canceled), fut.await);","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":319146,"byte_end":319196,"line_start":516,"line_end":516,"column_start":5,"column_end":55}},{"value":"/ # })","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":319201,"byte_end":319209,"line_start":517,"line_end":517,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":319214,"byte_end":319221,"line_start":518,"line_end":518,"column_start":5,"column_end":12}},{"value":"cfg(not(futures_no_atomic_cas))","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":319226,"byte_end":319260,"line_start":519,"line_end":519,"column_start":5,"column_end":39}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":319265,"byte_end":319290,"line_start":520,"line_end":520,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":4905},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":320770,"byte_end":320781,"line_start":568,"line_end":568,"column_start":8,"column_end":19},"name":"try_collect","qualname":"::stream::try_stream::TryStreamExt::try_collect","value":"pub fn try_collect<C: Default + Extend<Self::Ok>>(Self) -> TryCollect<Self, C>\nwhere Self: Sized","parent":{"krate":0,"index":4871},"children":[],"decl_id":null,"docs":" Attempt to transform a stream into a collection,\n returning a future representing the result of that computation.","sig":null,"attributes":[{"value":"/ Attempt to transform a stream into a collection,","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":319731,"byte_end":319783,"line_start":538,"line_end":538,"column_start":5,"column_end":57}},{"value":"/ returning a future representing the result of that computation.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":319788,"byte_end":319855,"line_start":539,"line_end":539,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":319860,"byte_end":319863,"line_start":540,"line_end":540,"column_start":5,"column_end":8}},{"value":"/ This combinator will collect all successful results of this stream and","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":319868,"byte_end":319942,"line_start":541,"line_end":541,"column_start":5,"column_end":79}},{"value":"/ collect them into the specified collection type. If an error happens then all","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":319947,"byte_end":320028,"line_start":542,"line_end":542,"column_start":5,"column_end":86}},{"value":"/ collected elements will be dropped and the error will be returned.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":320033,"byte_end":320103,"line_start":543,"line_end":543,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":320108,"byte_end":320111,"line_start":544,"line_end":544,"column_start":5,"column_end":8}},{"value":"/ The returned future will be resolved when the stream terminates.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":320116,"byte_end":320184,"line_start":545,"line_end":545,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":320189,"byte_end":320192,"line_start":546,"line_end":546,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":320197,"byte_end":320211,"line_start":547,"line_end":547,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":320216,"byte_end":320219,"line_start":548,"line_end":548,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":320224,"byte_end":320231,"line_start":549,"line_end":549,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":320236,"byte_end":320277,"line_start":550,"line_end":550,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":320282,"byte_end":320313,"line_start":551,"line_end":551,"column_start":5,"column_end":36}},{"value":"/ use futures::stream::TryStreamExt;","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":320318,"byte_end":320356,"line_start":552,"line_end":552,"column_start":5,"column_end":43}},{"value":"/ use std::thread;","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":320361,"byte_end":320381,"line_start":553,"line_end":553,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":320386,"byte_end":320389,"line_start":554,"line_end":554,"column_start":5,"column_end":8}},{"value":"/ let (tx, rx) = mpsc::unbounded();","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":320394,"byte_end":320431,"line_start":555,"line_end":555,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":320436,"byte_end":320439,"line_start":556,"line_end":556,"column_start":5,"column_end":8}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":320444,"byte_end":320471,"line_start":557,"line_end":557,"column_start":5,"column_end":32}},{"value":"/     for i in 1..=5 {","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":320476,"byte_end":320500,"line_start":558,"line_end":558,"column_start":5,"column_end":29}},{"value":"/         tx.unbounded_send(Ok(i)).unwrap();","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":320505,"byte_end":320551,"line_start":559,"line_end":559,"column_start":5,"column_end":51}},{"value":"/     }","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":320556,"byte_end":320565,"line_start":560,"line_end":560,"column_start":5,"column_end":14}},{"value":"/     tx.unbounded_send(Err(6)).unwrap();","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":320570,"byte_end":320613,"line_start":561,"line_end":561,"column_start":5,"column_end":48}},{"value":"/ });","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":320618,"byte_end":320625,"line_start":562,"line_end":562,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":320630,"byte_end":320633,"line_start":563,"line_end":563,"column_start":5,"column_end":8}},{"value":"/ let output: Result<Vec<i32>, i32> = rx.try_collect().await;","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":320638,"byte_end":320701,"line_start":564,"line_end":564,"column_start":5,"column_end":68}},{"value":"/ assert_eq!(output, Err(6));","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":320706,"byte_end":320737,"line_start":565,"line_end":565,"column_start":5,"column_end":36}},{"value":"/ # })","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":320742,"byte_end":320750,"line_start":566,"line_end":566,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":320755,"byte_end":320762,"line_start":567,"line_end":567,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4907},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":322252,"byte_end":322262,"line_start":605,"line_end":605,"column_start":8,"column_end":18},"name":"try_filter","qualname":"::stream::try_stream::TryStreamExt::try_filter","value":"pub fn try_filter<Fut, F>(Self, F) -> TryFilter<Self, Fut, F> where\nFut: Future<Output = bool>, F: FnMut(&Self::Ok) -> Fut, Self: Sized","parent":{"krate":0,"index":4871},"children":[],"decl_id":null,"docs":" Attempt to filter the values produced by this stream according to the\n provided asynchronous closure.","sig":null,"attributes":[{"value":"/ Attempt to filter the values produced by this stream according to the","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":320964,"byte_end":321037,"line_start":575,"line_end":575,"column_start":5,"column_end":78}},{"value":"/ provided asynchronous closure.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":321042,"byte_end":321076,"line_start":576,"line_end":576,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":321081,"byte_end":321084,"line_start":577,"line_end":577,"column_start":5,"column_end":8}},{"value":"/ As values of this stream are made available, the provided predicate `f`","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":321089,"byte_end":321164,"line_start":578,"line_end":578,"column_start":5,"column_end":80}},{"value":"/ will be run on them. If the predicate returns a `Future` which resolves","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":321169,"byte_end":321244,"line_start":579,"line_end":579,"column_start":5,"column_end":80}},{"value":"/ to `true`, then the stream will yield the value, but if the predicate","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":321249,"byte_end":321322,"line_start":580,"line_end":580,"column_start":5,"column_end":78}},{"value":"/ return a `Future` which resolves to `false`, then the value will be","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":321327,"byte_end":321398,"line_start":581,"line_end":581,"column_start":5,"column_end":76}},{"value":"/ discarded and the next value will be produced.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":321403,"byte_end":321453,"line_start":582,"line_end":582,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":321458,"byte_end":321461,"line_start":583,"line_end":583,"column_start":5,"column_end":8}},{"value":"/ All errors are passed through without filtering in this combinator.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":321466,"byte_end":321537,"line_start":584,"line_end":584,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":321542,"byte_end":321545,"line_start":585,"line_end":585,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the stream passed into it and returns a","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":321550,"byte_end":321626,"line_start":586,"line_end":586,"column_start":5,"column_end":81}},{"value":"/ wrapped version of it, similar to the existing `filter` methods in","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":321631,"byte_end":321701,"line_start":587,"line_end":587,"column_start":5,"column_end":75}},{"value":"/ the standard library.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":321706,"byte_end":321731,"line_start":588,"line_end":588,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":321736,"byte_end":321739,"line_start":589,"line_end":589,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":321744,"byte_end":321758,"line_start":590,"line_end":590,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":321763,"byte_end":321770,"line_start":591,"line_end":591,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":321775,"byte_end":321816,"line_start":592,"line_end":592,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":321821,"byte_end":321845,"line_start":593,"line_end":593,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, StreamExt, TryStreamExt};","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":321850,"byte_end":321907,"line_start":594,"line_end":594,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":321912,"byte_end":321915,"line_start":595,"line_end":595,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(vec![Ok(1i32), Ok(2i32), Ok(3i32), Err(\"error\")]);","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":321920,"byte_end":322000,"line_start":596,"line_end":596,"column_start":5,"column_end":85}},{"value":"/ let mut evens = stream.try_filter(|x| {","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":322005,"byte_end":322048,"line_start":597,"line_end":597,"column_start":5,"column_end":48}},{"value":"/     future::ready(x % 2 == 0)","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":322053,"byte_end":322086,"line_start":598,"line_end":598,"column_start":5,"column_end":38}},{"value":"/ });","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":322091,"byte_end":322098,"line_start":599,"line_end":599,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":322103,"byte_end":322106,"line_start":600,"line_end":600,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(evens.next().await, Some(Ok(2)));","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":322111,"byte_end":322159,"line_start":601,"line_end":601,"column_start":5,"column_end":53}},{"value":"/ assert_eq!(evens.next().await, Some(Err(\"error\")));","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":322164,"byte_end":322219,"line_start":602,"line_end":602,"column_start":5,"column_end":60}},{"value":"/ # })","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":322224,"byte_end":322232,"line_start":603,"line_end":603,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":322237,"byte_end":322244,"line_start":604,"line_end":604,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4910},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":323889,"byte_end":323903,"line_start":646,"line_end":646,"column_start":8,"column_end":22},"name":"try_filter_map","qualname":"::stream::try_stream::TryStreamExt::try_filter_map","value":"pub fn try_filter_map<Fut, F, T>(Self, F) -> TryFilterMap<Self, Fut, F> where\nFut: TryFuture<Ok = Option<T>, Error = Option<T>>, F: FnMut(Self::Ok) -> Fut,\nSelf: Sized","parent":{"krate":0,"index":4871},"children":[],"decl_id":null,"docs":" Attempt to filter the values produced by this stream while\n simultaneously mapping them to a different type according to the\n provided asynchronous closure.","sig":null,"attributes":[{"value":"/ Attempt to filter the values produced by this stream while","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":322513,"byte_end":322575,"line_start":614,"line_end":614,"column_start":5,"column_end":67}},{"value":"/ simultaneously mapping them to a different type according to the","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":322580,"byte_end":322648,"line_start":615,"line_end":615,"column_start":5,"column_end":73}},{"value":"/ provided asynchronous closure.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":322653,"byte_end":322687,"line_start":616,"line_end":616,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":322692,"byte_end":322695,"line_start":617,"line_end":617,"column_start":5,"column_end":8}},{"value":"/ As values of this stream are made available, the provided function will","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":322700,"byte_end":322775,"line_start":618,"line_end":618,"column_start":5,"column_end":80}},{"value":"/ be run on them. If the future returned by the predicate `f` resolves to","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":322780,"byte_end":322855,"line_start":619,"line_end":619,"column_start":5,"column_end":80}},{"value":"/ [`Some(item)`](Some) then the stream will yield the value `item`, but if","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":322860,"byte_end":322936,"line_start":620,"line_end":620,"column_start":5,"column_end":81}},{"value":"/ it resolves to [`None`] then the next value will be produced.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":322941,"byte_end":323006,"line_start":621,"line_end":621,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":323011,"byte_end":323014,"line_start":622,"line_end":622,"column_start":5,"column_end":8}},{"value":"/ All errors are passed through without filtering in this combinator.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":323019,"byte_end":323090,"line_start":623,"line_end":623,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":323095,"byte_end":323098,"line_start":624,"line_end":624,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the stream passed into it and returns a","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":323103,"byte_end":323179,"line_start":625,"line_end":625,"column_start":5,"column_end":81}},{"value":"/ wrapped version of it, similar to the existing `filter_map` methods in","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":323184,"byte_end":323258,"line_start":626,"line_end":626,"column_start":5,"column_end":79}},{"value":"/ the standard library.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":323263,"byte_end":323288,"line_start":627,"line_end":627,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":323293,"byte_end":323296,"line_start":628,"line_end":628,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":323301,"byte_end":323315,"line_start":629,"line_end":629,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":323320,"byte_end":323327,"line_start":630,"line_end":630,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":323332,"byte_end":323373,"line_start":631,"line_end":631,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt, TryStreamExt};","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":323378,"byte_end":323435,"line_start":632,"line_end":632,"column_start":5,"column_end":62}},{"value":"/ use futures::pin_mut;","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":323440,"byte_end":323465,"line_start":633,"line_end":633,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":323470,"byte_end":323473,"line_start":634,"line_end":634,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(vec![Ok(1i32), Ok(6i32), Err(\"error\")]);","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":323478,"byte_end":323548,"line_start":635,"line_end":635,"column_start":5,"column_end":75}},{"value":"/ let halves = stream.try_filter_map(|x| async move {","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":323553,"byte_end":323608,"line_start":636,"line_end":636,"column_start":5,"column_end":60}},{"value":"/     let ret = if x % 2 == 0 { Some(x / 2) } else { None };","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":323613,"byte_end":323675,"line_start":637,"line_end":637,"column_start":5,"column_end":67}},{"value":"/     Ok(ret)","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":323680,"byte_end":323695,"line_start":638,"line_end":638,"column_start":5,"column_end":20}},{"value":"/ });","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":323700,"byte_end":323707,"line_start":639,"line_end":639,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":323712,"byte_end":323715,"line_start":640,"line_end":640,"column_start":5,"column_end":8}},{"value":"/ pin_mut!(halves);","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":323720,"byte_end":323741,"line_start":641,"line_end":641,"column_start":5,"column_end":26}},{"value":"/ assert_eq!(halves.next().await, Some(Ok(3)));","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":323746,"byte_end":323795,"line_start":642,"line_end":642,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(halves.next().await, Some(Err(\"error\")));","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":323800,"byte_end":323856,"line_start":643,"line_end":643,"column_start":5,"column_end":61}},{"value":"/ # })","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":323861,"byte_end":323869,"line_start":644,"line_end":644,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":323874,"byte_end":323881,"line_start":645,"line_end":645,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4914},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":325595,"byte_end":325606,"line_start":693,"line_end":693,"column_start":8,"column_end":19},"name":"try_flatten","qualname":"::stream::try_stream::TryStreamExt::try_flatten","value":"pub fn try_flatten(Self) -> TryFlatten<Self> where Self::Ok: TryStream,\n<Self::Ok as TryStream>::Error: From<Self::Error>, Self: Sized","parent":{"krate":0,"index":4871},"children":[],"decl_id":null,"docs":" Flattens a stream of streams into just one continuous stream.","sig":null,"attributes":[{"value":"/ Flattens a stream of streams into just one continuous stream.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":324180,"byte_end":324245,"line_start":655,"line_end":655,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":324250,"byte_end":324253,"line_start":656,"line_end":656,"column_start":5,"column_end":8}},{"value":"/ If this stream's elements are themselves streams then this combinator","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":324258,"byte_end":324331,"line_start":657,"line_end":657,"column_start":5,"column_end":78}},{"value":"/ will flatten out the entire stream to one long chain of elements. Any","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":324336,"byte_end":324409,"line_start":658,"line_end":658,"column_start":5,"column_end":78}},{"value":"/ errors are passed through without looking at them, but otherwise each","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":324414,"byte_end":324487,"line_start":659,"line_end":659,"column_start":5,"column_end":78}},{"value":"/ individual stream will get exhausted before moving on to the next.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":324492,"byte_end":324562,"line_start":660,"line_end":660,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":324567,"byte_end":324570,"line_start":661,"line_end":661,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":324575,"byte_end":324589,"line_start":662,"line_end":662,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":324594,"byte_end":324597,"line_start":663,"line_end":663,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":324602,"byte_end":324609,"line_start":664,"line_end":664,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":324614,"byte_end":324655,"line_start":665,"line_end":665,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":324660,"byte_end":324691,"line_start":666,"line_end":666,"column_start":5,"column_end":36}},{"value":"/ use futures::stream::{StreamExt, TryStreamExt};","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":324696,"byte_end":324747,"line_start":667,"line_end":667,"column_start":5,"column_end":56}},{"value":"/ use std::thread;","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":324752,"byte_end":324772,"line_start":668,"line_end":668,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":324777,"byte_end":324780,"line_start":669,"line_end":669,"column_start":5,"column_end":8}},{"value":"/ let (tx1, rx1) = mpsc::unbounded();","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":324785,"byte_end":324824,"line_start":670,"line_end":670,"column_start":5,"column_end":44}},{"value":"/ let (tx2, rx2) = mpsc::unbounded();","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":324829,"byte_end":324868,"line_start":671,"line_end":671,"column_start":5,"column_end":44}},{"value":"/ let (tx3, rx3) = mpsc::unbounded();","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":324873,"byte_end":324912,"line_start":672,"line_end":672,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":324917,"byte_end":324920,"line_start":673,"line_end":673,"column_start":5,"column_end":8}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":324925,"byte_end":324952,"line_start":674,"line_end":674,"column_start":5,"column_end":32}},{"value":"/     tx1.unbounded_send(Ok(1)).unwrap();","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":324957,"byte_end":325000,"line_start":675,"line_end":675,"column_start":5,"column_end":48}},{"value":"/ });","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":325005,"byte_end":325012,"line_start":676,"line_end":676,"column_start":5,"column_end":12}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":325017,"byte_end":325044,"line_start":677,"line_end":677,"column_start":5,"column_end":32}},{"value":"/     tx2.unbounded_send(Ok(2)).unwrap();","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":325049,"byte_end":325092,"line_start":678,"line_end":678,"column_start":5,"column_end":48}},{"value":"/     tx2.unbounded_send(Err(3)).unwrap();","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":325097,"byte_end":325141,"line_start":679,"line_end":679,"column_start":5,"column_end":49}},{"value":"/ });","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":325146,"byte_end":325153,"line_start":680,"line_end":680,"column_start":5,"column_end":12}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":325158,"byte_end":325185,"line_start":681,"line_end":681,"column_start":5,"column_end":32}},{"value":"/     tx3.unbounded_send(Ok(rx1)).unwrap();","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":325190,"byte_end":325235,"line_start":682,"line_end":682,"column_start":5,"column_end":50}},{"value":"/     tx3.unbounded_send(Ok(rx2)).unwrap();","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":325240,"byte_end":325285,"line_start":683,"line_end":683,"column_start":5,"column_end":50}},{"value":"/     tx3.unbounded_send(Err(4)).unwrap();","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":325290,"byte_end":325334,"line_start":684,"line_end":684,"column_start":5,"column_end":49}},{"value":"/ });","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":325339,"byte_end":325346,"line_start":685,"line_end":685,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":325351,"byte_end":325354,"line_start":686,"line_end":686,"column_start":5,"column_end":8}},{"value":"/ let mut stream = rx3.try_flatten();","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":325359,"byte_end":325398,"line_start":687,"line_end":687,"column_start":5,"column_end":44}},{"value":"/ assert_eq!(stream.next().await, Some(Ok(1)));","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":325403,"byte_end":325452,"line_start":688,"line_end":688,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(stream.next().await, Some(Ok(2)));","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":325457,"byte_end":325506,"line_start":689,"line_end":689,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(stream.next().await, Some(Err(3)));","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":325511,"byte_end":325561,"line_start":690,"line_end":690,"column_start":5,"column_end":55}},{"value":"/ # });","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":325566,"byte_end":325575,"line_start":691,"line_end":691,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":325580,"byte_end":325587,"line_start":692,"line_end":692,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4915},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":327198,"byte_end":327206,"line_start":732,"line_end":732,"column_start":8,"column_end":16},"name":"try_fold","qualname":"::stream::try_stream::TryStreamExt::try_fold","value":"pub fn try_fold<T, Fut, F>(Self, T, F) -> TryFold<Self, Fut, T, F> where\nF: FnMut(T, Self::Ok) -> Fut, Fut: TryFuture<Ok = T, Error = T>, Self: Sized","parent":{"krate":0,"index":4871},"children":[],"decl_id":null,"docs":" Attempt to execute an accumulating asynchronous computation over a\n stream, collecting all the values into one final result.","sig":null,"attributes":[{"value":"/ Attempt to execute an accumulating asynchronous computation over a","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":325911,"byte_end":325981,"line_start":704,"line_end":704,"column_start":5,"column_end":75}},{"value":"/ stream, collecting all the values into one final result.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":325986,"byte_end":326046,"line_start":705,"line_end":705,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":326051,"byte_end":326054,"line_start":706,"line_end":706,"column_start":5,"column_end":8}},{"value":"/ This combinator will accumulate all values returned by this stream","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":326059,"byte_end":326129,"line_start":707,"line_end":707,"column_start":5,"column_end":75}},{"value":"/ according to the closure provided. The initial state is also provided to","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":326134,"byte_end":326210,"line_start":708,"line_end":708,"column_start":5,"column_end":81}},{"value":"/ this method and then is returned again by each execution of the closure.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":326215,"byte_end":326291,"line_start":709,"line_end":709,"column_start":5,"column_end":81}},{"value":"/ Once the entire stream has been exhausted the returned future will","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":326296,"byte_end":326366,"line_start":710,"line_end":710,"column_start":5,"column_end":75}},{"value":"/ resolve to this value.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":326371,"byte_end":326397,"line_start":711,"line_end":711,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":326402,"byte_end":326405,"line_start":712,"line_end":712,"column_start":5,"column_end":8}},{"value":"/ This method is similar to [`fold`](crate::stream::StreamExt::fold), but will","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":326410,"byte_end":326490,"line_start":713,"line_end":713,"column_start":5,"column_end":85}},{"value":"/ exit early if an error is encountered in either the stream or the","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":326495,"byte_end":326564,"line_start":714,"line_end":714,"column_start":5,"column_end":74}},{"value":"/ provided closure.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":326569,"byte_end":326590,"line_start":715,"line_end":715,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":326595,"byte_end":326598,"line_start":716,"line_end":716,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":326603,"byte_end":326617,"line_start":717,"line_end":717,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":326622,"byte_end":326625,"line_start":718,"line_end":718,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":326630,"byte_end":326637,"line_start":719,"line_end":719,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":326642,"byte_end":326683,"line_start":720,"line_end":720,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":326688,"byte_end":326734,"line_start":721,"line_end":721,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":326739,"byte_end":326742,"line_start":722,"line_end":722,"column_start":5,"column_end":8}},{"value":"/ let number_stream = stream::iter(vec![Ok::<i32, i32>(1), Ok(2)]);","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":326747,"byte_end":326816,"line_start":723,"line_end":723,"column_start":5,"column_end":74}},{"value":"/ let sum = number_stream.try_fold(0, |acc, x| async move { Ok(acc + x) });","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":326821,"byte_end":326898,"line_start":724,"line_end":724,"column_start":5,"column_end":82}},{"value":"/ assert_eq!(sum.await, Ok(3));","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":326903,"byte_end":326936,"line_start":725,"line_end":725,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":326941,"byte_end":326944,"line_start":726,"line_end":726,"column_start":5,"column_end":8}},{"value":"/ let number_stream_with_err = stream::iter(vec![Ok::<i32, i32>(1), Err(2), Ok(1)]);","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":326949,"byte_end":327035,"line_start":727,"line_end":727,"column_start":5,"column_end":91}},{"value":"/ let sum = number_stream_with_err.try_fold(0, |acc, x| async move { Ok(acc + x) });","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":327040,"byte_end":327126,"line_start":728,"line_end":728,"column_start":5,"column_end":91}},{"value":"/ assert_eq!(sum.await, Err(2));","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":327131,"byte_end":327165,"line_start":729,"line_end":729,"column_start":5,"column_end":39}},{"value":"/ # })","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":327170,"byte_end":327178,"line_start":730,"line_end":730,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":327183,"byte_end":327190,"line_start":731,"line_end":731,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4919},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":328732,"byte_end":328742,"line_start":775,"line_end":775,"column_start":8,"column_end":18},"name":"try_concat","qualname":"::stream::try_stream::TryStreamExt::try_concat","value":"pub fn try_concat(Self) -> TryConcat<Self> where Self: Sized,\nSelf::Ok: Extend<<<Self as TryStream>::Ok as IntoIterator>::Item> +\nIntoIterator + Default","parent":{"krate":0,"index":4871},"children":[],"decl_id":null,"docs":" Attempt to concatenate all items of a stream into a single\n extendable destination, returning a future representing the end result.","sig":null,"attributes":[{"value":"/ Attempt to concatenate all items of a stream into a single","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":327486,"byte_end":327548,"line_start":741,"line_end":741,"column_start":5,"column_end":67}},{"value":"/ extendable destination, returning a future representing the end result.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":327553,"byte_end":327628,"line_start":742,"line_end":742,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":327633,"byte_end":327636,"line_start":743,"line_end":743,"column_start":5,"column_end":8}},{"value":"/ This combinator will extend the first item with the contents of all","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":327641,"byte_end":327712,"line_start":744,"line_end":744,"column_start":5,"column_end":76}},{"value":"/ the subsequent successful results of the stream. If the stream is empty,","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":327717,"byte_end":327793,"line_start":745,"line_end":745,"column_start":5,"column_end":81}},{"value":"/ the default value will be returned.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":327798,"byte_end":327837,"line_start":746,"line_end":746,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":327842,"byte_end":327845,"line_start":747,"line_end":747,"column_start":5,"column_end":8}},{"value":"/ Works with all collections that implement the [`Extend`](std::iter::Extend) trait.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":327850,"byte_end":327936,"line_start":748,"line_end":748,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":327941,"byte_end":327944,"line_start":749,"line_end":749,"column_start":5,"column_end":8}},{"value":"/ This method is similar to [`concat`](crate::stream::StreamExt::concat), but will","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":327949,"byte_end":328033,"line_start":750,"line_end":750,"column_start":5,"column_end":89}},{"value":"/ exit early if an error is encountered in the stream.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":328038,"byte_end":328094,"line_start":751,"line_end":751,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":328099,"byte_end":328102,"line_start":752,"line_end":752,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":328107,"byte_end":328121,"line_start":753,"line_end":753,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":328126,"byte_end":328129,"line_start":754,"line_end":754,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":328134,"byte_end":328141,"line_start":755,"line_end":755,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":328146,"byte_end":328187,"line_start":756,"line_end":756,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":328192,"byte_end":328223,"line_start":757,"line_end":757,"column_start":5,"column_end":36}},{"value":"/ use futures::stream::TryStreamExt;","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":328228,"byte_end":328266,"line_start":758,"line_end":758,"column_start":5,"column_end":43}},{"value":"/ use std::thread;","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":328271,"byte_end":328291,"line_start":759,"line_end":759,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":328296,"byte_end":328299,"line_start":760,"line_end":760,"column_start":5,"column_end":8}},{"value":"/ let (tx, rx) = mpsc::unbounded::<Result<Vec<i32>, ()>>();","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":328304,"byte_end":328365,"line_start":761,"line_end":761,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":328370,"byte_end":328373,"line_start":762,"line_end":762,"column_start":5,"column_end":8}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":328378,"byte_end":328405,"line_start":763,"line_end":763,"column_start":5,"column_end":32}},{"value":"/     for i in (0..3).rev() {","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":328410,"byte_end":328441,"line_start":764,"line_end":764,"column_start":5,"column_end":36}},{"value":"/         let n = i * 3;","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":328446,"byte_end":328472,"line_start":765,"line_end":765,"column_start":5,"column_end":31}},{"value":"/         tx.unbounded_send(Ok(vec![n + 1, n + 2, n + 3])).unwrap();","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":328477,"byte_end":328547,"line_start":766,"line_end":766,"column_start":5,"column_end":75}},{"value":"/     }","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":328552,"byte_end":328561,"line_start":767,"line_end":767,"column_start":5,"column_end":14}},{"value":"/ });","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":328566,"byte_end":328573,"line_start":768,"line_end":768,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":328578,"byte_end":328581,"line_start":769,"line_end":769,"column_start":5,"column_end":8}},{"value":"/ let result = rx.try_concat().await;","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":328586,"byte_end":328625,"line_start":770,"line_end":770,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":328630,"byte_end":328633,"line_start":771,"line_end":771,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(result, Ok(vec![7, 8, 9, 4, 5, 6, 1, 2, 3]));","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":328638,"byte_end":328698,"line_start":772,"line_end":772,"column_start":5,"column_end":65}},{"value":"/ # });","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":328703,"byte_end":328712,"line_start":773,"line_end":773,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":328717,"byte_end":328724,"line_start":774,"line_end":774,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4920},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":331464,"byte_end":331484,"line_start":842,"line_end":842,"column_start":8,"column_end":28},"name":"try_buffer_unordered","qualname":"::stream::try_stream::TryStreamExt::try_buffer_unordered","value":"pub fn try_buffer_unordered(Self, usize) -> TryBufferUnordered<Self> where\nSelf::Ok: TryFuture<Error = Self::Error>, Self: Sized","parent":{"krate":0,"index":4871},"children":[],"decl_id":null,"docs":" Attempt to execute several futures from a stream concurrently (unordered).","sig":null,"attributes":[{"value":"/ Attempt to execute several futures from a stream concurrently (unordered).","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":328996,"byte_end":329074,"line_start":783,"line_end":783,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":329079,"byte_end":329082,"line_start":784,"line_end":784,"column_start":5,"column_end":8}},{"value":"/ This stream's `Ok` type must be a [`TryFuture`](futures_core::future::TryFuture) with an `Error` type","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":329087,"byte_end":329192,"line_start":785,"line_end":785,"column_start":5,"column_end":110}},{"value":"/ that matches the stream's `Error` type.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":329197,"byte_end":329240,"line_start":786,"line_end":786,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":329245,"byte_end":329248,"line_start":787,"line_end":787,"column_start":5,"column_end":8}},{"value":"/ This adaptor will buffer up to `n` futures and then return their","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":329253,"byte_end":329321,"line_start":788,"line_end":788,"column_start":5,"column_end":73}},{"value":"/ outputs in the order in which they complete. If the underlying stream","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":329326,"byte_end":329399,"line_start":789,"line_end":789,"column_start":5,"column_end":78}},{"value":"/ returns an error, it will be immediately propagated.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":329404,"byte_end":329460,"line_start":790,"line_end":790,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":329465,"byte_end":329468,"line_start":791,"line_end":791,"column_start":5,"column_end":8}},{"value":"/ The returned stream will be a stream of results, each containing either","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":329473,"byte_end":329548,"line_start":792,"line_end":792,"column_start":5,"column_end":80}},{"value":"/ an error or a future's output. An error can be produced either by the","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":329553,"byte_end":329626,"line_start":793,"line_end":793,"column_start":5,"column_end":78}},{"value":"/ underlying stream itself or by one of the futures it yielded.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":329631,"byte_end":329696,"line_start":794,"line_end":794,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":329701,"byte_end":329704,"line_start":795,"line_end":795,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":329709,"byte_end":329784,"line_start":796,"line_end":796,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":329789,"byte_end":329846,"line_start":797,"line_end":797,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":329851,"byte_end":329854,"line_start":798,"line_end":798,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":329859,"byte_end":329873,"line_start":799,"line_end":799,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":329878,"byte_end":329881,"line_start":800,"line_end":800,"column_start":5,"column_end":8}},{"value":"/ Results are returned in the order of completion:","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":329886,"byte_end":329938,"line_start":801,"line_end":801,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":329943,"byte_end":329950,"line_start":802,"line_end":802,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":329955,"byte_end":329996,"line_start":803,"line_end":803,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::oneshot;","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":330001,"byte_end":330035,"line_start":804,"line_end":804,"column_start":5,"column_end":39}},{"value":"/ use futures::stream::{self, StreamExt, TryStreamExt};","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":330040,"byte_end":330097,"line_start":805,"line_end":805,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":330102,"byte_end":330105,"line_start":806,"line_end":806,"column_start":5,"column_end":8}},{"value":"/ let (send_one, recv_one) = oneshot::channel();","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":330110,"byte_end":330160,"line_start":807,"line_end":807,"column_start":5,"column_end":55}},{"value":"/ let (send_two, recv_two) = oneshot::channel();","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":330165,"byte_end":330215,"line_start":808,"line_end":808,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":330220,"byte_end":330223,"line_start":809,"line_end":809,"column_start":5,"column_end":8}},{"value":"/ let stream_of_futures = stream::iter(vec![Ok(recv_one), Ok(recv_two)]);","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":330228,"byte_end":330303,"line_start":810,"line_end":810,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":330308,"byte_end":330311,"line_start":811,"line_end":811,"column_start":5,"column_end":8}},{"value":"/ let mut buffered = stream_of_futures.try_buffer_unordered(10);","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":330316,"byte_end":330382,"line_start":812,"line_end":812,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":330387,"byte_end":330390,"line_start":813,"line_end":813,"column_start":5,"column_end":8}},{"value":"/ send_two.send(2i32)?;","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":330395,"byte_end":330420,"line_start":814,"line_end":814,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(buffered.next().await, Some(Ok(2i32)));","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":330425,"byte_end":330479,"line_start":815,"line_end":815,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":330484,"byte_end":330487,"line_start":816,"line_end":816,"column_start":5,"column_end":8}},{"value":"/ send_one.send(1i32)?;","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":330492,"byte_end":330517,"line_start":817,"line_end":817,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(buffered.next().await, Some(Ok(1i32)));","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":330522,"byte_end":330576,"line_start":818,"line_end":818,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":330581,"byte_end":330584,"line_start":819,"line_end":819,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(buffered.next().await, None);","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":330589,"byte_end":330633,"line_start":820,"line_end":820,"column_start":5,"column_end":49}},{"value":"/ # Ok::<(), i32>(()) }).unwrap();","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":330638,"byte_end":330674,"line_start":821,"line_end":821,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":330679,"byte_end":330686,"line_start":822,"line_end":822,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":330691,"byte_end":330694,"line_start":823,"line_end":823,"column_start":5,"column_end":8}},{"value":"/ Errors from the underlying stream itself are propagated:","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":330699,"byte_end":330759,"line_start":824,"line_end":824,"column_start":5,"column_end":65}},{"value":"/ ```","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":330764,"byte_end":330771,"line_start":825,"line_end":825,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":330776,"byte_end":330817,"line_start":826,"line_end":826,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":330822,"byte_end":330853,"line_start":827,"line_end":827,"column_start":5,"column_end":36}},{"value":"/ use futures::stream::{StreamExt, TryStreamExt};","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":330858,"byte_end":330909,"line_start":828,"line_end":828,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":330914,"byte_end":330917,"line_start":829,"line_end":829,"column_start":5,"column_end":8}},{"value":"/ let (sink, stream_of_futures) = mpsc::unbounded();","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":330922,"byte_end":330976,"line_start":830,"line_end":830,"column_start":5,"column_end":59}},{"value":"/ let mut buffered = stream_of_futures.try_buffer_unordered(10);","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":330981,"byte_end":331047,"line_start":831,"line_end":831,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":331052,"byte_end":331055,"line_start":832,"line_end":832,"column_start":5,"column_end":8}},{"value":"/ sink.unbounded_send(Ok(async { Ok(7i32) }))?;","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":331060,"byte_end":331109,"line_start":833,"line_end":833,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(buffered.next().await, Some(Ok(7i32)));","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":331114,"byte_end":331168,"line_start":834,"line_end":834,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":331173,"byte_end":331176,"line_start":835,"line_end":835,"column_start":5,"column_end":8}},{"value":"/ sink.unbounded_send(Err(\"error in the stream\"))?;","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":331181,"byte_end":331234,"line_start":836,"line_end":836,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(buffered.next().await, Some(Err(\"error in the stream\")));","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":331239,"byte_end":331311,"line_start":837,"line_end":837,"column_start":5,"column_end":77}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":331316,"byte_end":331375,"line_start":838,"line_end":838,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":331380,"byte_end":331387,"line_start":839,"line_end":839,"column_start":5,"column_end":12}},{"value":"cfg(not(futures_no_atomic_cas))","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":331392,"byte_end":331426,"line_start":840,"line_end":840,"column_start":5,"column_end":39}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":331431,"byte_end":331456,"line_start":841,"line_end":841,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":4921},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":334465,"byte_end":334477,"line_start":918,"line_end":918,"column_start":8,"column_end":20},"name":"try_buffered","qualname":"::stream::try_stream::TryStreamExt::try_buffered","value":"pub fn try_buffered(Self, usize) -> TryBuffered<Self> where\nSelf::Ok: TryFuture<Error = Self::Error>, Self: Sized","parent":{"krate":0,"index":4871},"children":[],"decl_id":null,"docs":" Attempt to execute several futures from a stream concurrently.","sig":null,"attributes":[{"value":"/ Attempt to execute several futures from a stream concurrently.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":331761,"byte_end":331827,"line_start":852,"line_end":852,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":331832,"byte_end":331835,"line_start":853,"line_end":853,"column_start":5,"column_end":8}},{"value":"/ This stream's `Ok` type must be a [`TryFuture`](futures_core::future::TryFuture) with an `Error` type","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":331840,"byte_end":331945,"line_start":854,"line_end":854,"column_start":5,"column_end":110}},{"value":"/ that matches the stream's `Error` type.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":331950,"byte_end":331993,"line_start":855,"line_end":855,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":331998,"byte_end":332001,"line_start":856,"line_end":856,"column_start":5,"column_end":8}},{"value":"/ This adaptor will buffer up to `n` futures and then return their","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":332006,"byte_end":332074,"line_start":857,"line_end":857,"column_start":5,"column_end":73}},{"value":"/ outputs in the order. If the underlying stream returns an error, it will","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":332079,"byte_end":332155,"line_start":858,"line_end":858,"column_start":5,"column_end":81}},{"value":"/ be immediately propagated.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":332160,"byte_end":332190,"line_start":859,"line_end":859,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":332195,"byte_end":332198,"line_start":860,"line_end":860,"column_start":5,"column_end":8}},{"value":"/ The returned stream will be a stream of results, each containing either","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":332203,"byte_end":332278,"line_start":861,"line_end":861,"column_start":5,"column_end":80}},{"value":"/ an error or a future's output. An error can be produced either by the","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":332283,"byte_end":332356,"line_start":862,"line_end":862,"column_start":5,"column_end":78}},{"value":"/ underlying stream itself or by one of the futures it yielded.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":332361,"byte_end":332426,"line_start":863,"line_end":863,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":332431,"byte_end":332434,"line_start":864,"line_end":864,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":332439,"byte_end":332514,"line_start":865,"line_end":865,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":332519,"byte_end":332576,"line_start":866,"line_end":866,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":332581,"byte_end":332584,"line_start":867,"line_end":867,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":332589,"byte_end":332603,"line_start":868,"line_end":868,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":332608,"byte_end":332611,"line_start":869,"line_end":869,"column_start":5,"column_end":8}},{"value":"/ Results are returned in the order of addition:","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":332616,"byte_end":332666,"line_start":870,"line_end":870,"column_start":5,"column_end":55}},{"value":"/ ```","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":332671,"byte_end":332678,"line_start":871,"line_end":871,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":332683,"byte_end":332724,"line_start":872,"line_end":872,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::oneshot;","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":332729,"byte_end":332763,"line_start":873,"line_end":873,"column_start":5,"column_end":39}},{"value":"/ use futures::future::lazy;","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":332768,"byte_end":332798,"line_start":874,"line_end":874,"column_start":5,"column_end":35}},{"value":"/ use futures::stream::{self, StreamExt, TryStreamExt};","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":332803,"byte_end":332860,"line_start":875,"line_end":875,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":332865,"byte_end":332868,"line_start":876,"line_end":876,"column_start":5,"column_end":8}},{"value":"/ let (send_one, recv_one) = oneshot::channel();","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":332873,"byte_end":332923,"line_start":877,"line_end":877,"column_start":5,"column_end":55}},{"value":"/ let (send_two, recv_two) = oneshot::channel();","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":332928,"byte_end":332978,"line_start":878,"line_end":878,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":332983,"byte_end":332986,"line_start":879,"line_end":879,"column_start":5,"column_end":8}},{"value":"/ let mut buffered = lazy(move |cx| {","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":332991,"byte_end":333030,"line_start":880,"line_end":880,"column_start":5,"column_end":44}},{"value":"/     let stream_of_futures = stream::iter(vec![Ok(recv_one), Ok(recv_two)]);","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":333035,"byte_end":333114,"line_start":881,"line_end":881,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":333119,"byte_end":333122,"line_start":882,"line_end":882,"column_start":5,"column_end":8}},{"value":"/     let mut buffered = stream_of_futures.try_buffered(10);","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":333127,"byte_end":333189,"line_start":883,"line_end":883,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":333194,"byte_end":333197,"line_start":884,"line_end":884,"column_start":5,"column_end":8}},{"value":"/     assert!(buffered.try_poll_next_unpin(cx).is_pending());","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":333202,"byte_end":333265,"line_start":885,"line_end":885,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":333270,"byte_end":333273,"line_start":886,"line_end":886,"column_start":5,"column_end":8}},{"value":"/     send_two.send(2i32)?;","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":333278,"byte_end":333307,"line_start":887,"line_end":887,"column_start":5,"column_end":34}},{"value":"/     assert!(buffered.try_poll_next_unpin(cx).is_pending());","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":333312,"byte_end":333375,"line_start":888,"line_end":888,"column_start":5,"column_end":68}},{"value":"/     Ok::<_, i32>(buffered)","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":333380,"byte_end":333410,"line_start":889,"line_end":889,"column_start":5,"column_end":35}},{"value":"/ }).await?;","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":333415,"byte_end":333429,"line_start":890,"line_end":890,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":333434,"byte_end":333437,"line_start":891,"line_end":891,"column_start":5,"column_end":8}},{"value":"/ send_one.send(1i32)?;","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":333442,"byte_end":333467,"line_start":892,"line_end":892,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(buffered.next().await, Some(Ok(1i32)));","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":333472,"byte_end":333526,"line_start":893,"line_end":893,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(buffered.next().await, Some(Ok(2i32)));","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":333531,"byte_end":333585,"line_start":894,"line_end":894,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":333590,"byte_end":333593,"line_start":895,"line_end":895,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(buffered.next().await, None);","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":333598,"byte_end":333642,"line_start":896,"line_end":896,"column_start":5,"column_end":49}},{"value":"/ # Ok::<(), i32>(()) }).unwrap();","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":333647,"byte_end":333683,"line_start":897,"line_end":897,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":333688,"byte_end":333695,"line_start":898,"line_end":898,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":333700,"byte_end":333703,"line_start":899,"line_end":899,"column_start":5,"column_end":8}},{"value":"/ Errors from the underlying stream itself are propagated:","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":333708,"byte_end":333768,"line_start":900,"line_end":900,"column_start":5,"column_end":65}},{"value":"/ ```","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":333773,"byte_end":333780,"line_start":901,"line_end":901,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":333785,"byte_end":333826,"line_start":902,"line_end":902,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":333831,"byte_end":333862,"line_start":903,"line_end":903,"column_start":5,"column_end":36}},{"value":"/ use futures::stream::{StreamExt, TryStreamExt};","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":333867,"byte_end":333918,"line_start":904,"line_end":904,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":333923,"byte_end":333926,"line_start":905,"line_end":905,"column_start":5,"column_end":8}},{"value":"/ let (sink, stream_of_futures) = mpsc::unbounded();","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":333931,"byte_end":333985,"line_start":906,"line_end":906,"column_start":5,"column_end":59}},{"value":"/ let mut buffered = stream_of_futures.try_buffered(10);","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":333990,"byte_end":334048,"line_start":907,"line_end":907,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":334053,"byte_end":334056,"line_start":908,"line_end":908,"column_start":5,"column_end":8}},{"value":"/ sink.unbounded_send(Ok(async { Ok(7i32) }))?;","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":334061,"byte_end":334110,"line_start":909,"line_end":909,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(buffered.next().await, Some(Ok(7i32)));","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":334115,"byte_end":334169,"line_start":910,"line_end":910,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":334174,"byte_end":334177,"line_start":911,"line_end":911,"column_start":5,"column_end":8}},{"value":"/ sink.unbounded_send(Err(\"error in the stream\"))?;","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":334182,"byte_end":334235,"line_start":912,"line_end":912,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(buffered.next().await, Some(Err(\"error in the stream\")));","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":334240,"byte_end":334312,"line_start":913,"line_end":913,"column_start":5,"column_end":77}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":334317,"byte_end":334376,"line_start":914,"line_end":914,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":334381,"byte_end":334388,"line_start":915,"line_end":915,"column_start":5,"column_end":12}},{"value":"cfg(not(futures_no_atomic_cas))","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":334393,"byte_end":334427,"line_start":916,"line_end":916,"column_start":5,"column_end":39}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":334432,"byte_end":334457,"line_start":917,"line_end":917,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":4922},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":334932,"byte_end":334951,"line_start":932,"line_end":932,"column_start":8,"column_end":27},"name":"try_poll_next_unpin","qualname":"::stream::try_stream::TryStreamExt::try_poll_next_unpin","value":"pub fn try_poll_next_unpin(&mut Self, &mut Context)\n-> Poll<Option<Result<Self::Ok, Self::Error>>> where Self: Unpin","parent":{"krate":0,"index":4871},"children":[],"decl_id":null,"docs":" A convenience method for calling [`TryStream::try_poll_next`] on [`Unpin`]\n stream types.\n","sig":null,"attributes":[{"value":"/ A convenience method for calling [`TryStream::try_poll_next`] on [`Unpin`]","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":334824,"byte_end":334902,"line_start":930,"line_end":930,"column_start":5,"column_end":83}},{"value":"/ stream types.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":334907,"byte_end":334924,"line_start":931,"line_end":931,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":4923},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":337245,"byte_end":337260,"line_start":998,"line_end":998,"column_start":8,"column_end":23},"name":"into_async_read","qualname":"::stream::try_stream::TryStreamExt::into_async_read","value":"pub fn into_async_read(Self) -> IntoAsyncRead<Self> where Self: Sized +\nTryStreamExt<Error = std::io::Error> + Unpin, Self::Ok: AsRef<[u8]>","parent":{"krate":0,"index":4871},"children":[],"decl_id":null,"docs":" Adapter that converts this stream into an [`AsyncRead`](crate::io::AsyncRead).","sig":null,"attributes":[{"value":"/ Adapter that converts this stream into an [`AsyncRead`](crate::io::AsyncRead).","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":336023,"byte_end":336105,"line_start":970,"line_end":970,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":336110,"byte_end":336113,"line_start":971,"line_end":971,"column_start":5,"column_end":8}},{"value":"/ Note that because `into_async_read` moves the stream, the [`Stream`](futures_core::stream::Stream) type must be","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":336118,"byte_end":336233,"line_start":972,"line_end":972,"column_start":5,"column_end":120}},{"value":"/ [`Unpin`]. If you want to use `into_async_read` with a [`!Unpin`](Unpin) stream, you'll","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":336238,"byte_end":336329,"line_start":973,"line_end":973,"column_start":5,"column_end":96}},{"value":"/ first have to pin the stream. This can be done by boxing the stream using [`Box::pin`]","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":336334,"byte_end":336424,"line_start":974,"line_end":974,"column_start":5,"column_end":95}},{"value":"/ or pinning it to the stack using the `pin_mut!` macro from the `pin_utils` crate.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":336429,"byte_end":336514,"line_start":975,"line_end":975,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":336519,"byte_end":336522,"line_start":976,"line_end":976,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` feature of this","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":336527,"byte_end":336591,"line_start":977,"line_end":977,"column_start":5,"column_end":69}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":336596,"byte_end":336653,"line_start":978,"line_end":978,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":336658,"byte_end":336661,"line_start":979,"line_end":979,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":336666,"byte_end":336680,"line_start":980,"line_end":980,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":336685,"byte_end":336688,"line_start":981,"line_end":981,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":336693,"byte_end":336700,"line_start":982,"line_end":982,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":336705,"byte_end":336746,"line_start":983,"line_end":983,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":336751,"byte_end":336797,"line_start":984,"line_end":984,"column_start":5,"column_end":51}},{"value":"/ use futures::io::AsyncReadExt;","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":336802,"byte_end":336836,"line_start":985,"line_end":985,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":336841,"byte_end":336844,"line_start":986,"line_end":986,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(vec![Ok(vec![1, 2, 3, 4, 5])]);","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":336849,"byte_end":336910,"line_start":987,"line_end":987,"column_start":5,"column_end":66}},{"value":"/ let mut reader = stream.into_async_read();","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":336915,"byte_end":336961,"line_start":988,"line_end":988,"column_start":5,"column_end":51}},{"value":"/ let mut buf = Vec::new();","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":336966,"byte_end":336995,"line_start":989,"line_end":989,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":337000,"byte_end":337003,"line_start":990,"line_end":990,"column_start":5,"column_end":8}},{"value":"/ assert!(reader.read_to_end(&mut buf).await.is_ok());","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":337008,"byte_end":337064,"line_start":991,"line_end":991,"column_start":5,"column_end":61}},{"value":"/ assert_eq!(buf, &[1, 2, 3, 4, 5]);","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":337069,"byte_end":337107,"line_start":992,"line_end":992,"column_start":5,"column_end":43}},{"value":"/ # })","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":337112,"byte_end":337120,"line_start":993,"line_end":993,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":337125,"byte_end":337132,"line_start":994,"line_end":994,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"io\")","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":337137,"byte_end":337159,"line_start":995,"line_end":995,"column_start":5,"column_end":27}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":337214,"byte_end":337237,"line_start":997,"line_end":997,"column_start":5,"column_end":28}}]},{"kind":"Struct","id":{"krate":0,"index":14244},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/iter.rs","byte_start":377851,"byte_end":377855,"line_start":9,"line_end":9,"column_start":12,"column_end":16},"name":"Iter","qualname":"::stream::iter::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":14246}],"decl_id":null,"docs":" Stream for the [`iter`] function.\n","sig":null,"attributes":[{"value":"/ Stream for the [`iter`] function.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/iter.rs","byte_start":377729,"byte_end":377766,"line_start":6,"line_end":6,"column_start":1,"column_end":38}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/iter.rs","byte_start":377791,"byte_end":377839,"line_start":8,"line_end":8,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":5020},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/iter.rs","byte_start":378373,"byte_end":378377,"line_start":29,"line_end":29,"column_start":8,"column_end":12},"name":"iter","qualname":"::stream::iter::iter","value":"pub fn iter<I>(I) -> Iter<I::IntoIter> where I: IntoIterator","parent":null,"children":[],"decl_id":null,"docs":" Converts an `Iterator` into a `Stream` which is always ready\n to yield the next value.","sig":null,"attributes":[{"value":"/ Converts an `Iterator` into a `Stream` which is always ready","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/iter.rs","byte_start":377907,"byte_end":377971,"line_start":15,"line_end":15,"column_start":1,"column_end":65}},{"value":"/ to yield the next value.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/iter.rs","byte_start":377972,"byte_end":378000,"line_start":16,"line_end":16,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/iter.rs","byte_start":378001,"byte_end":378004,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ Iterators in Rust don't express the ability to block, so this adapter","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/iter.rs","byte_start":378005,"byte_end":378078,"line_start":18,"line_end":18,"column_start":1,"column_end":74}},{"value":"/ simply always calls `iter.next()` and returns that.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/iter.rs","byte_start":378079,"byte_end":378134,"line_start":19,"line_end":19,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/iter.rs","byte_start":378135,"byte_end":378138,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/iter.rs","byte_start":378139,"byte_end":378146,"line_start":21,"line_end":21,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/iter.rs","byte_start":378147,"byte_end":378188,"line_start":22,"line_end":22,"column_start":1,"column_end":42}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/iter.rs","byte_start":378189,"byte_end":378232,"line_start":23,"line_end":23,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/iter.rs","byte_start":378233,"byte_end":378236,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ let stream = stream::iter(vec![17, 19]);","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/iter.rs","byte_start":378237,"byte_end":378281,"line_start":25,"line_end":25,"column_start":1,"column_end":45}},{"value":"/ assert_eq!(vec![17, 19], stream.collect::<Vec<i32>>().await);","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/iter.rs","byte_start":378282,"byte_end":378347,"line_start":26,"line_end":26,"column_start":1,"column_end":66}},{"value":"/ # });","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/iter.rs","byte_start":378348,"byte_end":378357,"line_start":27,"line_end":27,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/iter.rs","byte_start":378358,"byte_end":378365,"line_start":28,"line_end":28,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":14253},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat.rs","byte_start":379068,"byte_end":379074,"line_start":9,"line_end":9,"column_start":12,"column_end":18},"name":"Repeat","qualname":"::stream::repeat::Repeat","value":"Repeat {  }","parent":null,"children":[{"krate":0,"index":14255}],"decl_id":null,"docs":" Stream for the [`repeat`] function.\n","sig":null,"attributes":[{"value":"/ Stream for the [`repeat`] function.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat.rs","byte_start":378944,"byte_end":378983,"line_start":6,"line_end":6,"column_start":1,"column_end":40}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat.rs","byte_start":379008,"byte_end":379056,"line_start":8,"line_end":8,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":5055},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat.rs","byte_start":379598,"byte_end":379604,"line_start":27,"line_end":27,"column_start":8,"column_end":14},"name":"repeat","qualname":"::stream::repeat::repeat","value":"pub fn repeat<T>(T) -> Repeat<T> where T: Clone","parent":null,"children":[],"decl_id":null,"docs":" Create a stream which produces the same item repeatedly.","sig":null,"attributes":[{"value":"/ Create a stream which produces the same item repeatedly.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat.rs","byte_start":379096,"byte_end":379156,"line_start":13,"line_end":13,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat.rs","byte_start":379157,"byte_end":379160,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ The stream never terminates. Note that you likely want to avoid","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat.rs","byte_start":379161,"byte_end":379228,"line_start":15,"line_end":15,"column_start":1,"column_end":68}},{"value":"/ usage of `collect` or such on the returned stream as it will exhaust","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat.rs","byte_start":379229,"byte_end":379301,"line_start":16,"line_end":16,"column_start":1,"column_end":73}},{"value":"/ available memory as it tries to just fill up all RAM.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat.rs","byte_start":379302,"byte_end":379359,"line_start":17,"line_end":17,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat.rs","byte_start":379360,"byte_end":379363,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat.rs","byte_start":379364,"byte_end":379371,"line_start":19,"line_end":19,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat.rs","byte_start":379372,"byte_end":379413,"line_start":20,"line_end":20,"column_start":1,"column_end":42}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat.rs","byte_start":379414,"byte_end":379457,"line_start":21,"line_end":21,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat.rs","byte_start":379458,"byte_end":379461,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ let stream = stream::repeat(9);","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat.rs","byte_start":379462,"byte_end":379497,"line_start":23,"line_end":23,"column_start":1,"column_end":36}},{"value":"/ assert_eq!(vec![9, 9, 9], stream.take(3).collect::<Vec<i32>>().await);","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat.rs","byte_start":379498,"byte_end":379572,"line_start":24,"line_end":24,"column_start":1,"column_end":75}},{"value":"/ # });","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat.rs","byte_start":379573,"byte_end":379582,"line_start":25,"line_end":25,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat.rs","byte_start":379583,"byte_end":379590,"line_start":26,"line_end":26,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":14262},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat_with.rs","byte_start":380595,"byte_end":380605,"line_start":13,"line_end":13,"column_start":12,"column_end":22},"name":"RepeatWith","qualname":"::stream::repeat_with::RepeatWith","value":"RepeatWith {  }","parent":null,"children":[{"krate":0,"index":14264}],"decl_id":null,"docs":" An stream that repeats elements of type `A` endlessly by\n applying the provided closure `F: FnMut() -> A`.","sig":null,"attributes":[{"value":"/ An stream that repeats elements of type `A` endlessly by","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat_with.rs","byte_start":380293,"byte_end":380353,"line_start":6,"line_end":6,"column_start":1,"column_end":61}},{"value":"/ applying the provided closure `F: FnMut() -> A`.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat_with.rs","byte_start":380354,"byte_end":380406,"line_start":7,"line_end":7,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat_with.rs","byte_start":380407,"byte_end":380410,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`repeat_with()`] function.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat_with.rs","byte_start":380411,"byte_end":380474,"line_start":9,"line_end":9,"column_start":1,"column_end":64}},{"value":"/ See its documentation for more.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat_with.rs","byte_start":380475,"byte_end":380510,"line_start":10,"line_end":10,"column_start":1,"column_end":36}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat_with.rs","byte_start":380535,"byte_end":380583,"line_start":12,"line_end":12,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":5108},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat_with.rs","byte_start":382893,"byte_end":382904,"line_start":91,"line_end":91,"column_start":8,"column_end":19},"name":"repeat_with","qualname":"::stream::repeat_with::repeat_with","value":"pub fn repeat_with<A, F: FnMut() -> A>(F) -> RepeatWith<F>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new stream that repeats elements of type `A` endlessly by\n applying the provided closure, the repeater, `F: FnMut() -> A`.","sig":null,"attributes":[{"value":"/ Creates a new stream that repeats elements of type `A` endlessly by","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat_with.rs","byte_start":381121,"byte_end":381192,"line_start":37,"line_end":37,"column_start":1,"column_end":72}},{"value":"/ applying the provided closure, the repeater, `F: FnMut() -> A`.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat_with.rs","byte_start":381193,"byte_end":381260,"line_start":38,"line_end":38,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat_with.rs","byte_start":381261,"byte_end":381264,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ The `repeat_with()` function calls the repeater over and over again.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat_with.rs","byte_start":381265,"byte_end":381337,"line_start":40,"line_end":40,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat_with.rs","byte_start":381338,"byte_end":381341,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ Infinite stream like `repeat_with()` are often used with adapters like","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat_with.rs","byte_start":381342,"byte_end":381416,"line_start":42,"line_end":42,"column_start":1,"column_end":75}},{"value":"/ [`stream.take()`], in order to make them finite.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat_with.rs","byte_start":381417,"byte_end":381469,"line_start":43,"line_end":43,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat_with.rs","byte_start":381470,"byte_end":381473,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ If the element type of the stream you need implements [`Clone`], and","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat_with.rs","byte_start":381474,"byte_end":381546,"line_start":45,"line_end":45,"column_start":1,"column_end":73}},{"value":"/ it is OK to keep the source element in memory, you should instead use","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat_with.rs","byte_start":381547,"byte_end":381620,"line_start":46,"line_end":46,"column_start":1,"column_end":74}},{"value":"/ the [`stream.repeat()`] function.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat_with.rs","byte_start":381621,"byte_end":381658,"line_start":47,"line_end":47,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat_with.rs","byte_start":381659,"byte_end":381662,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat_with.rs","byte_start":381663,"byte_end":381677,"line_start":49,"line_end":49,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat_with.rs","byte_start":381678,"byte_end":381681,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ Basic usage:","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat_with.rs","byte_start":381682,"byte_end":381698,"line_start":51,"line_end":51,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat_with.rs","byte_start":381699,"byte_end":381702,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat_with.rs","byte_start":381703,"byte_end":381710,"line_start":53,"line_end":53,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat_with.rs","byte_start":381711,"byte_end":381752,"line_start":54,"line_end":54,"column_start":1,"column_end":42}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat_with.rs","byte_start":381753,"byte_end":381796,"line_start":55,"line_end":55,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat_with.rs","byte_start":381797,"byte_end":381800,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ // let's assume we have some value of a type that is not `Clone`","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat_with.rs","byte_start":381801,"byte_end":381869,"line_start":57,"line_end":57,"column_start":1,"column_end":69}},{"value":"/ // or which don't want to have in memory just yet because it is expensive:","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat_with.rs","byte_start":381870,"byte_end":381948,"line_start":58,"line_end":58,"column_start":1,"column_end":79}},{"value":"/ #[derive(PartialEq, Debug)]","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat_with.rs","byte_start":381949,"byte_end":381980,"line_start":59,"line_end":59,"column_start":1,"column_end":32}},{"value":"/ struct Expensive;","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat_with.rs","byte_start":381981,"byte_end":382002,"line_start":60,"line_end":60,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat_with.rs","byte_start":382003,"byte_end":382006,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ // a particular value forever:","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat_with.rs","byte_start":382007,"byte_end":382041,"line_start":62,"line_end":62,"column_start":1,"column_end":35}},{"value":"/ let mut things = stream::repeat_with(|| Expensive);","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat_with.rs","byte_start":382042,"byte_end":382097,"line_start":63,"line_end":63,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat_with.rs","byte_start":382098,"byte_end":382101,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(Some(Expensive), things.next().await);","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat_with.rs","byte_start":382102,"byte_end":382155,"line_start":65,"line_end":65,"column_start":1,"column_end":54}},{"value":"/ assert_eq!(Some(Expensive), things.next().await);","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat_with.rs","byte_start":382156,"byte_end":382209,"line_start":66,"line_end":66,"column_start":1,"column_end":54}},{"value":"/ assert_eq!(Some(Expensive), things.next().await);","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat_with.rs","byte_start":382210,"byte_end":382263,"line_start":67,"line_end":67,"column_start":1,"column_end":54}},{"value":"/ # });","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat_with.rs","byte_start":382264,"byte_end":382273,"line_start":68,"line_end":68,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat_with.rs","byte_start":382274,"byte_end":382281,"line_start":69,"line_end":69,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat_with.rs","byte_start":382282,"byte_end":382285,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/ Using mutation and going finite:","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat_with.rs","byte_start":382286,"byte_end":382322,"line_start":71,"line_end":71,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat_with.rs","byte_start":382323,"byte_end":382326,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat_with.rs","byte_start":382327,"byte_end":382338,"line_start":73,"line_end":73,"column_start":1,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat_with.rs","byte_start":382339,"byte_end":382380,"line_start":74,"line_end":74,"column_start":1,"column_end":42}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat_with.rs","byte_start":382381,"byte_end":382424,"line_start":75,"line_end":75,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat_with.rs","byte_start":382425,"byte_end":382428,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ // From the zeroth to the third power of two:","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat_with.rs","byte_start":382429,"byte_end":382478,"line_start":77,"line_end":77,"column_start":1,"column_end":50}},{"value":"/ let mut curr = 1;","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat_with.rs","byte_start":382479,"byte_end":382500,"line_start":78,"line_end":78,"column_start":1,"column_end":22}},{"value":"/ let mut pow2 = stream::repeat_with(|| { let tmp = curr; curr *= 2; tmp })","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat_with.rs","byte_start":382501,"byte_end":382578,"line_start":79,"line_end":79,"column_start":1,"column_end":78}},{"value":"/                     .take(4);","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat_with.rs","byte_start":382579,"byte_end":382612,"line_start":80,"line_end":80,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat_with.rs","byte_start":382613,"byte_end":382616,"line_start":81,"line_end":81,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(Some(1), pow2.next().await);","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat_with.rs","byte_start":382617,"byte_end":382660,"line_start":82,"line_end":82,"column_start":1,"column_end":44}},{"value":"/ assert_eq!(Some(2), pow2.next().await);","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat_with.rs","byte_start":382661,"byte_end":382704,"line_start":83,"line_end":83,"column_start":1,"column_end":44}},{"value":"/ assert_eq!(Some(4), pow2.next().await);","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat_with.rs","byte_start":382705,"byte_end":382748,"line_start":84,"line_end":84,"column_start":1,"column_end":44}},{"value":"/ assert_eq!(Some(8), pow2.next().await);","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat_with.rs","byte_start":382749,"byte_end":382792,"line_start":85,"line_end":85,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat_with.rs","byte_start":382793,"byte_end":382796,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"/ // ... and now we're done","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat_with.rs","byte_start":382797,"byte_end":382826,"line_start":87,"line_end":87,"column_start":1,"column_end":30}},{"value":"/ assert_eq!(None, pow2.next().await);","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat_with.rs","byte_start":382827,"byte_end":382867,"line_start":88,"line_end":88,"column_start":1,"column_end":41}},{"value":"/ # });","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat_with.rs","byte_start":382868,"byte_end":382877,"line_start":89,"line_end":89,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat_with.rs","byte_start":382878,"byte_end":382885,"line_start":90,"line_end":90,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":14271},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/empty.rs","byte_start":383295,"byte_end":383300,"line_start":10,"line_end":10,"column_start":12,"column_end":17},"name":"Empty","qualname":"::stream::empty::Empty","value":"Empty {  }","parent":null,"children":[{"krate":0,"index":14273}],"decl_id":null,"docs":" Stream for the [`empty`] function.\n","sig":null,"attributes":[{"value":"/ Stream for the [`empty`] function.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/empty.rs","byte_start":383179,"byte_end":383217,"line_start":7,"line_end":7,"column_start":1,"column_end":39}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/empty.rs","byte_start":383235,"byte_end":383283,"line_start":9,"line_end":9,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":5142},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/empty.rs","byte_start":383469,"byte_end":383474,"line_start":17,"line_end":17,"column_start":8,"column_end":13},"name":"empty","qualname":"::stream::empty::empty","value":"pub fn empty<T>() -> Empty<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a stream which contains no elements.","sig":null,"attributes":[{"value":"/ Creates a stream which contains no elements.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/empty.rs","byte_start":383339,"byte_end":383387,"line_start":14,"line_end":14,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/empty.rs","byte_start":383388,"byte_end":383391,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ The returned stream will always return `Ready(None)` when polled.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/empty.rs","byte_start":383392,"byte_end":383461,"line_start":16,"line_end":16,"column_start":1,"column_end":70}}]},{"kind":"Function","id":{"krate":0,"index":5194},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/once.rs","byte_start":384559,"byte_end":384563,"line_start":20,"line_end":20,"column_start":8,"column_end":12},"name":"once","qualname":"::stream::once::once","value":"pub fn once<Fut: Future>(Fut) -> Once<Fut>","parent":null,"children":[],"decl_id":null,"docs":" Creates a stream of a single element.","sig":null,"attributes":[{"value":"/ Creates a stream of a single element.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/once.rs","byte_start":384252,"byte_end":384293,"line_start":9,"line_end":9,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/once.rs","byte_start":384294,"byte_end":384297,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/once.rs","byte_start":384298,"byte_end":384305,"line_start":11,"line_end":11,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/once.rs","byte_start":384306,"byte_end":384347,"line_start":12,"line_end":12,"column_start":1,"column_end":42}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/once.rs","byte_start":384348,"byte_end":384391,"line_start":13,"line_end":13,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/once.rs","byte_start":384392,"byte_end":384395,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ let stream = stream::once(async { 17 });","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/once.rs","byte_start":384396,"byte_end":384440,"line_start":15,"line_end":15,"column_start":1,"column_end":45}},{"value":"/ let collected = stream.collect::<Vec<i32>>().await;","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/once.rs","byte_start":384441,"byte_end":384496,"line_start":16,"line_end":16,"column_start":1,"column_end":56}},{"value":"/ assert_eq!(collected, vec![17]);","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/once.rs","byte_start":384497,"byte_end":384533,"line_start":17,"line_end":17,"column_start":1,"column_end":37}},{"value":"/ # });","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/once.rs","byte_start":384534,"byte_end":384543,"line_start":18,"line_end":18,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/once.rs","byte_start":384544,"byte_end":384551,"line_start":19,"line_end":19,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":14282},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/once.rs","byte_start":384825,"byte_end":384829,"line_start":28,"line_end":28,"column_start":16,"column_end":20},"name":"Once","qualname":"::stream::once::Once","value":"Once {  }","parent":null,"children":[{"krate":0,"index":14284}],"decl_id":null,"docs":" A stream which emits single element and then EOF.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":12561792,"byte_end":12561801,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":14313},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/pending.rs","byte_start":386005,"byte_end":386012,"line_start":10,"line_end":10,"column_start":12,"column_end":19},"name":"Pending","qualname":"::stream::pending::Pending","value":"Pending {  }","parent":null,"children":[{"krate":0,"index":14315}],"decl_id":null,"docs":" Stream for the [`pending()`] function.\n","sig":null,"attributes":[{"value":"/ Stream for the [`pending()`] function.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/pending.rs","byte_start":385885,"byte_end":385927,"line_start":7,"line_end":7,"column_start":1,"column_end":43}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/pending.rs","byte_start":385945,"byte_end":385993,"line_start":9,"line_end":9,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":5238},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/pending.rs","byte_start":386188,"byte_end":386195,"line_start":17,"line_end":17,"column_start":8,"column_end":15},"name":"pending","qualname":"::stream::pending::pending","value":"pub fn pending<T>() -> Pending<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a stream which never returns any elements.","sig":null,"attributes":[{"value":"/ Creates a stream which never returns any elements.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/pending.rs","byte_start":386056,"byte_end":386110,"line_start":14,"line_end":14,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/pending.rs","byte_start":386111,"byte_end":386114,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ The returned stream will always return `Pending` when polled.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/pending.rs","byte_start":386115,"byte_end":386180,"line_start":16,"line_end":16,"column_start":1,"column_end":66}}]},{"kind":"Struct","id":{"krate":0,"index":5280},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/poll_fn.rs","byte_start":387038,"byte_end":387044,"line_start":11,"line_end":11,"column_start":12,"column_end":18},"name":"PollFn","qualname":"::stream::poll_fn::PollFn","value":"PollFn {  }","parent":null,"children":[{"krate":0,"index":5282}],"decl_id":null,"docs":" Stream for the [`poll_fn`] function.\n","sig":null,"attributes":[{"value":"/ Stream for the [`poll_fn`] function.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/poll_fn.rs","byte_start":386937,"byte_end":386977,"line_start":9,"line_end":9,"column_start":1,"column_end":41}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/poll_fn.rs","byte_start":386978,"byte_end":387026,"line_start":10,"line_end":10,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":5288},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/poll_fn.rs","byte_start":387732,"byte_end":387739,"line_start":41,"line_end":41,"column_start":8,"column_end":15},"name":"poll_fn","qualname":"::stream::poll_fn::poll_fn","value":"pub fn poll_fn<T, F>(F) -> PollFn<F> where F: FnMut(&mut Context) ->\nPoll<Option<T>>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new stream wrapping a function returning `Poll<Option<T>>`.","sig":null,"attributes":[{"value":"/ Creates a new stream wrapping a function returning `Poll<Option<T>>`.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/poll_fn.rs","byte_start":387244,"byte_end":387317,"line_start":23,"line_end":23,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/poll_fn.rs","byte_start":387318,"byte_end":387321,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ Polling the returned stream calls the wrapped function.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/poll_fn.rs","byte_start":387322,"byte_end":387381,"line_start":25,"line_end":25,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/poll_fn.rs","byte_start":387382,"byte_end":387385,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/poll_fn.rs","byte_start":387386,"byte_end":387400,"line_start":27,"line_end":27,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/poll_fn.rs","byte_start":387401,"byte_end":387404,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/poll_fn.rs","byte_start":387405,"byte_end":387412,"line_start":29,"line_end":29,"column_start":1,"column_end":8}},{"value":"/ use futures::stream::poll_fn;","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/poll_fn.rs","byte_start":387413,"byte_end":387446,"line_start":30,"line_end":30,"column_start":1,"column_end":34}},{"value":"/ use futures::task::Poll;","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/poll_fn.rs","byte_start":387447,"byte_end":387475,"line_start":31,"line_end":31,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/poll_fn.rs","byte_start":387476,"byte_end":387479,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ let mut counter = 1usize;","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/poll_fn.rs","byte_start":387480,"byte_end":387509,"line_start":33,"line_end":33,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/poll_fn.rs","byte_start":387510,"byte_end":387513,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ let read_stream = poll_fn(move |_| -> Poll<Option<String>> {","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/poll_fn.rs","byte_start":387514,"byte_end":387578,"line_start":35,"line_end":35,"column_start":1,"column_end":65}},{"value":"/     if counter == 0 { return Poll::Ready(None); }","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/poll_fn.rs","byte_start":387579,"byte_end":387632,"line_start":36,"line_end":36,"column_start":1,"column_end":54}},{"value":"/     counter -= 1;","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/poll_fn.rs","byte_start":387633,"byte_end":387654,"line_start":37,"line_end":37,"column_start":1,"column_end":22}},{"value":"/     Poll::Ready(Some(\"Hello, World!\".to_owned()))","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/poll_fn.rs","byte_start":387655,"byte_end":387708,"line_start":38,"line_end":38,"column_start":1,"column_end":54}},{"value":"/ });","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/poll_fn.rs","byte_start":387709,"byte_end":387716,"line_start":39,"line_end":39,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/poll_fn.rs","byte_start":387717,"byte_end":387724,"line_start":40,"line_end":40,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":14326},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select.rs","byte_start":388459,"byte_end":388465,"line_start":12,"line_end":12,"column_start":16,"column_end":22},"name":"Select","qualname":"::stream::select::Select","value":"Select {  }","parent":null,"children":[{"krate":0,"index":14329},{"krate":0,"index":14330},{"krate":0,"index":14331}],"decl_id":null,"docs":" Stream for the [`select()`] function.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":12561792,"byte_end":12561801,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":5334},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select.rs","byte_start":389069,"byte_end":389075,"line_start":31,"line_end":31,"column_start":8,"column_end":14},"name":"select","qualname":"::stream::select::select","value":"pub fn select<St1, St2>(St1, St2) -> Select<St1, St2> where St1: Stream,\nSt2: Stream<Item = St1::Item>","parent":null,"children":[],"decl_id":null,"docs":" This function will attempt to pull items from both streams. Each\n stream will be polled in a round-robin fashion, and whenever a stream is\n ready to yield an item that item is yielded.","sig":null,"attributes":[{"value":"/ This function will attempt to pull items from both streams. Each","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select.rs","byte_start":388593,"byte_end":388661,"line_start":21,"line_end":21,"column_start":1,"column_end":69}},{"value":"/ stream will be polled in a round-robin fashion, and whenever a stream is","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select.rs","byte_start":388662,"byte_end":388738,"line_start":22,"line_end":22,"column_start":1,"column_end":77}},{"value":"/ ready to yield an item that item is yielded.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select.rs","byte_start":388739,"byte_end":388787,"line_start":23,"line_end":23,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select.rs","byte_start":388788,"byte_end":388791,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ After one of the two input stream completes, the remaining one will be","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select.rs","byte_start":388792,"byte_end":388866,"line_start":25,"line_end":25,"column_start":1,"column_end":75}},{"value":"/ polled exclusively. The returned stream completes when both input","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select.rs","byte_start":388867,"byte_end":388936,"line_start":26,"line_end":26,"column_start":1,"column_end":70}},{"value":"/ streams have completed.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select.rs","byte_start":388937,"byte_end":388964,"line_start":27,"line_end":27,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select.rs","byte_start":388965,"byte_end":388968,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ Note that this function consumes both streams and returns a wrapped","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select.rs","byte_start":388969,"byte_end":389040,"line_start":29,"line_end":29,"column_start":1,"column_end":72}},{"value":"/ version of them.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select.rs","byte_start":389041,"byte_end":389061,"line_start":30,"line_end":30,"column_start":1,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":5340},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select.rs","byte_start":389480,"byte_end":389487,"line_start":46,"line_end":46,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Select<St1, St2>>::get_ref","value":"pub fn get_ref(&Self) -> (&St1, &St2)","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying streams that this combinator is\n pulling from.\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying streams that this combinator is","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select.rs","byte_start":389372,"byte_end":389446,"line_start":44,"line_end":44,"column_start":5,"column_end":79}},{"value":"/ pulling from.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select.rs","byte_start":389451,"byte_end":389468,"line_start":45,"line_end":45,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":5341},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select.rs","byte_start":389843,"byte_end":389850,"line_start":55,"line_end":55,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Select<St1, St2>>::get_mut","value":"pub fn get_mut(&mut Self) -> (&mut St1, &mut St2)","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying streams that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying streams that this","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select.rs","byte_start":389581,"byte_end":389649,"line_start":50,"line_end":50,"column_start":5,"column_end":73}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select.rs","byte_start":389654,"byte_end":389685,"line_start":51,"line_end":51,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select.rs","byte_start":389690,"byte_end":389693,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select.rs","byte_start":389698,"byte_end":389771,"line_start":53,"line_end":53,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select.rs","byte_start":389776,"byte_end":389831,"line_start":54,"line_end":54,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":5342},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select.rs","byte_start":390225,"byte_end":390236,"line_start":64,"line_end":64,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<Select<St1, St2>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> (Pin<&mut St1>, Pin<&mut St2>)","parent":null,"children":[],"decl_id":null,"docs":" Acquires a pinned mutable reference to the underlying streams that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a pinned mutable reference to the underlying streams that this","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select.rs","byte_start":389956,"byte_end":390031,"line_start":59,"line_end":59,"column_start":5,"column_end":80}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select.rs","byte_start":390036,"byte_end":390067,"line_start":60,"line_end":60,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select.rs","byte_start":390072,"byte_end":390075,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select.rs","byte_start":390080,"byte_end":390153,"line_start":62,"line_end":62,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select.rs","byte_start":390158,"byte_end":390213,"line_start":63,"line_end":63,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":5343},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select.rs","byte_start":390642,"byte_end":390652,"line_start":73,"line_end":73,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Select<St1, St2>>::into_inner","value":"pub fn into_inner(Self) -> (St1, St2)","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying streams.","sig":null,"attributes":[{"value":"/ Consumes this combinator, returning the underlying streams.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select.rs","byte_start":390406,"byte_end":390469,"line_start":69,"line_end":69,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select.rs","byte_start":390474,"byte_end":390477,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ Note that this may discard intermediate state of this combinator, so","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select.rs","byte_start":390482,"byte_end":390554,"line_start":71,"line_end":71,"column_start":5,"column_end":77}},{"value":"/ care should be taken to avoid losing resources when this is called.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select.rs","byte_start":390559,"byte_end":390630,"line_start":72,"line_end":72,"column_start":5,"column_end":76}}]},{"kind":"Function","id":{"krate":0,"index":5399},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/unfold.rs","byte_start":393869,"byte_end":393875,"line_start":50,"line_end":50,"column_start":8,"column_end":14},"name":"unfold","qualname":"::stream::unfold::unfold","value":"pub fn unfold<T, F, Fut, Item>(T, F) -> Unfold<T, F, Fut> where F: FnMut(T) ->\nFut, Fut: Future<Output = Option<(Item, T)>>","parent":null,"children":[],"decl_id":null,"docs":" Creates a `Stream` from a seed and a closure returning a `Future`.","sig":null,"attributes":[{"value":"/ Creates a `Stream` from a seed and a closure returning a `Future`.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/unfold.rs","byte_start":392427,"byte_end":392497,"line_start":11,"line_end":11,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/unfold.rs","byte_start":392498,"byte_end":392501,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ This function is the dual for the `Stream::fold()` adapter: while","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/unfold.rs","byte_start":392502,"byte_end":392571,"line_start":13,"line_end":13,"column_start":1,"column_end":70}},{"value":"/ `Stream::fold()` reduces a `Stream` to one single value, `unfold()` creates a","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/unfold.rs","byte_start":392572,"byte_end":392653,"line_start":14,"line_end":14,"column_start":1,"column_end":82}},{"value":"/ `Stream` from a seed value.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/unfold.rs","byte_start":392654,"byte_end":392685,"line_start":15,"line_end":15,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/unfold.rs","byte_start":392686,"byte_end":392689,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ `unfold()` will call the provided closure with the provided seed, then wait","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/unfold.rs","byte_start":392690,"byte_end":392769,"line_start":17,"line_end":17,"column_start":1,"column_end":80}},{"value":"/ for the returned `Future` to complete with `(a, b)`. It will then yield the","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/unfold.rs","byte_start":392770,"byte_end":392849,"line_start":18,"line_end":18,"column_start":1,"column_end":80}},{"value":"/ value `a`, and use `b` as the next internal state.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/unfold.rs","byte_start":392850,"byte_end":392904,"line_start":19,"line_end":19,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/unfold.rs","byte_start":392905,"byte_end":392908,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ If the closure returns `None` instead of `Some(Future)`, then the `unfold()`","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/unfold.rs","byte_start":392909,"byte_end":392989,"line_start":21,"line_end":21,"column_start":1,"column_end":81}},{"value":"/ will stop producing items and return `Poll::Ready(None)` in future","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/unfold.rs","byte_start":392990,"byte_end":393060,"line_start":22,"line_end":22,"column_start":1,"column_end":71}},{"value":"/ calls to `poll()`.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/unfold.rs","byte_start":393061,"byte_end":393083,"line_start":23,"line_end":23,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/unfold.rs","byte_start":393084,"byte_end":393087,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ This function can typically be used when wanting to go from the \"world of","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/unfold.rs","byte_start":393088,"byte_end":393165,"line_start":25,"line_end":25,"column_start":1,"column_end":78}},{"value":"/ futures\" to the \"world of streams\": the provided closure can build a","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/unfold.rs","byte_start":393166,"byte_end":393238,"line_start":26,"line_end":26,"column_start":1,"column_end":73}},{"value":"/ `Future` using other library functions working on futures, and `unfold()`","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/unfold.rs","byte_start":393239,"byte_end":393316,"line_start":27,"line_end":27,"column_start":1,"column_end":78}},{"value":"/ will turn it into a `Stream` by repeating the operation.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/unfold.rs","byte_start":393317,"byte_end":393377,"line_start":28,"line_end":28,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/unfold.rs","byte_start":393378,"byte_end":393381,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/unfold.rs","byte_start":393382,"byte_end":393395,"line_start":30,"line_end":30,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/unfold.rs","byte_start":393396,"byte_end":393399,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/unfold.rs","byte_start":393400,"byte_end":393407,"line_start":32,"line_end":32,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/unfold.rs","byte_start":393408,"byte_end":393449,"line_start":33,"line_end":33,"column_start":1,"column_end":42}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/unfold.rs","byte_start":393450,"byte_end":393493,"line_start":34,"line_end":34,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/unfold.rs","byte_start":393494,"byte_end":393497,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ let stream = stream::unfold(0, |state| async move {","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/unfold.rs","byte_start":393498,"byte_end":393553,"line_start":36,"line_end":36,"column_start":1,"column_end":56}},{"value":"/     if state <= 2 {","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/unfold.rs","byte_start":393554,"byte_end":393577,"line_start":37,"line_end":37,"column_start":1,"column_end":24}},{"value":"/         let next_state = state + 1;","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/unfold.rs","byte_start":393578,"byte_end":393617,"line_start":38,"line_end":38,"column_start":1,"column_end":40}},{"value":"/         let yielded = state  * 2;","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/unfold.rs","byte_start":393618,"byte_end":393655,"line_start":39,"line_end":39,"column_start":1,"column_end":38}},{"value":"/         Some((yielded, next_state))","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/unfold.rs","byte_start":393656,"byte_end":393695,"line_start":40,"line_end":40,"column_start":1,"column_end":40}},{"value":"/     } else {","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/unfold.rs","byte_start":393696,"byte_end":393712,"line_start":41,"line_end":41,"column_start":1,"column_end":17}},{"value":"/         None","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/unfold.rs","byte_start":393713,"byte_end":393729,"line_start":42,"line_end":42,"column_start":1,"column_end":17}},{"value":"/     }","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/unfold.rs","byte_start":393730,"byte_end":393739,"line_start":43,"line_end":43,"column_start":1,"column_end":10}},{"value":"/ });","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/unfold.rs","byte_start":393740,"byte_end":393747,"line_start":44,"line_end":44,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/unfold.rs","byte_start":393748,"byte_end":393751,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ let result = stream.collect::<Vec<i32>>().await;","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/unfold.rs","byte_start":393752,"byte_end":393804,"line_start":46,"line_end":46,"column_start":1,"column_end":53}},{"value":"/ assert_eq!(result, vec![0, 2, 4]);","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/unfold.rs","byte_start":393805,"byte_end":393843,"line_start":47,"line_end":47,"column_start":1,"column_end":39}},{"value":"/ # });","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/unfold.rs","byte_start":393844,"byte_end":393853,"line_start":48,"line_end":48,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/unfold.rs","byte_start":393854,"byte_end":393861,"line_start":49,"line_end":49,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":14372},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/unfold.rs","byte_start":394222,"byte_end":394228,"line_start":61,"line_end":61,"column_start":16,"column_end":22},"name":"Unfold","qualname":"::stream::unfold::Unfold","value":"Unfold {  }","parent":null,"children":[{"krate":0,"index":14376},{"krate":0,"index":14377}],"decl_id":null,"docs":" Stream for the [`unfold`] function.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":12561792,"byte_end":12561801,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":14495},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_ordered.rs","byte_start":12778673,"byte_end":12778687,"line_start":95,"line_end":95,"column_start":12,"column_end":26},"name":"FuturesOrdered","qualname":"::stream::futures_ordered::FuturesOrdered","value":"FuturesOrdered {  }","parent":null,"children":[{"krate":0,"index":14497},{"krate":0,"index":14498},{"krate":0,"index":14499},{"krate":0,"index":14500}],"decl_id":null,"docs":" An unbounded queue of futures.","sig":null,"attributes":[{"value":"/ An unbounded queue of futures.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_ordered.rs","byte_start":12776607,"byte_end":12776641,"line_start":59,"line_end":59,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_ordered.rs","byte_start":12776642,"byte_end":12776645,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/ This \"combinator\" is similar to `FuturesUnordered`, but it imposes an order","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_ordered.rs","byte_start":12776646,"byte_end":12776725,"line_start":61,"line_end":61,"column_start":1,"column_end":80}},{"value":"/ on top of the set of futures. While futures in the set will race to","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_ordered.rs","byte_start":12776726,"byte_end":12776797,"line_start":62,"line_end":62,"column_start":1,"column_end":72}},{"value":"/ completion in parallel, results will only be returned in the order their","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_ordered.rs","byte_start":12776798,"byte_end":12776874,"line_start":63,"line_end":63,"column_start":1,"column_end":77}},{"value":"/ originating futures were added to the queue.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_ordered.rs","byte_start":12776875,"byte_end":12776923,"line_start":64,"line_end":64,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_ordered.rs","byte_start":12776924,"byte_end":12776927,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ Futures are pushed into this queue and their realized values are yielded in","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_ordered.rs","byte_start":12776928,"byte_end":12777007,"line_start":66,"line_end":66,"column_start":1,"column_end":80}},{"value":"/ order. This structure is optimized to manage a large number of futures.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_ordered.rs","byte_start":12777008,"byte_end":12777083,"line_start":67,"line_end":67,"column_start":1,"column_end":76}},{"value":"/ Futures managed by `FuturesOrdered` will only be polled when they generate","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_ordered.rs","byte_start":12777084,"byte_end":12777162,"line_start":68,"line_end":68,"column_start":1,"column_end":79}},{"value":"/ notifications. This reduces the required amount of work needed to coordinate","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_ordered.rs","byte_start":12777163,"byte_end":12777243,"line_start":69,"line_end":69,"column_start":1,"column_end":81}},{"value":"/ large numbers of futures.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_ordered.rs","byte_start":12777244,"byte_end":12777273,"line_start":70,"line_end":70,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_ordered.rs","byte_start":12777274,"byte_end":12777277,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ When a `FuturesOrdered` is first created, it does not contain any futures.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_ordered.rs","byte_start":12777278,"byte_end":12777356,"line_start":72,"line_end":72,"column_start":1,"column_end":79}},{"value":"/ Calling `poll` in this state will result in `Poll::Ready(None))` to be","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_ordered.rs","byte_start":12777357,"byte_end":12777431,"line_start":73,"line_end":73,"column_start":1,"column_end":75}},{"value":"/ returned. Futures are submitted to the queue using `push`; however, the","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_ordered.rs","byte_start":12777432,"byte_end":12777507,"line_start":74,"line_end":74,"column_start":1,"column_end":76}},{"value":"/ future will **not** be polled at this point. `FuturesOrdered` will only","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_ordered.rs","byte_start":12777508,"byte_end":12777583,"line_start":75,"line_end":75,"column_start":1,"column_end":76}},{"value":"/ poll managed futures when `FuturesOrdered::poll` is called. As such, it","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_ordered.rs","byte_start":12777584,"byte_end":12777659,"line_start":76,"line_end":76,"column_start":1,"column_end":76}},{"value":"/ is important to call `poll` after pushing new futures.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_ordered.rs","byte_start":12777660,"byte_end":12777718,"line_start":77,"line_end":77,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_ordered.rs","byte_start":12777719,"byte_end":12777722,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ If `FuturesOrdered::poll` returns `Poll::Ready(None)` this means that","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_ordered.rs","byte_start":12777723,"byte_end":12777796,"line_start":79,"line_end":79,"column_start":1,"column_end":74}},{"value":"/ the queue is currently not managing any futures. A future may be submitted","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_ordered.rs","byte_start":12777797,"byte_end":12777875,"line_start":80,"line_end":80,"column_start":1,"column_end":79}},{"value":"/ to the queue at a later time. At that point, a call to","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_ordered.rs","byte_start":12777876,"byte_end":12777934,"line_start":81,"line_end":81,"column_start":1,"column_end":59}},{"value":"/ `FuturesOrdered::poll` will either return the future's resolved value","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_ordered.rs","byte_start":12777935,"byte_end":12778008,"line_start":82,"line_end":82,"column_start":1,"column_end":74}},{"value":"/ **or** `Poll::Pending` if the future has not yet completed. When","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_ordered.rs","byte_start":12778009,"byte_end":12778077,"line_start":83,"line_end":83,"column_start":1,"column_end":69}},{"value":"/ multiple futures are submitted to the queue, `FuturesOrdered::poll` will","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_ordered.rs","byte_start":12778078,"byte_end":12778154,"line_start":84,"line_end":84,"column_start":1,"column_end":77}},{"value":"/ return `Poll::Pending` until the first future completes, even if","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_ordered.rs","byte_start":12778155,"byte_end":12778223,"line_start":85,"line_end":85,"column_start":1,"column_end":69}},{"value":"/ some of the later futures have already completed.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_ordered.rs","byte_start":12778224,"byte_end":12778277,"line_start":86,"line_end":86,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_ordered.rs","byte_start":12778278,"byte_end":12778281,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"/ Note that you can create a ready-made `FuturesOrdered` via the","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_ordered.rs","byte_start":12778282,"byte_end":12778348,"line_start":88,"line_end":88,"column_start":1,"column_end":67}},{"value":"/ [`collect`](Iterator::collect) method, or you can start with an empty queue","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_ordered.rs","byte_start":12778349,"byte_end":12778428,"line_start":89,"line_end":89,"column_start":1,"column_end":80}},{"value":"/ with the `FuturesOrdered::new` constructor.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_ordered.rs","byte_start":12778429,"byte_end":12778476,"line_start":90,"line_end":90,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_ordered.rs","byte_start":12778477,"byte_end":12778480,"line_start":91,"line_end":91,"column_start":1,"column_end":4}},{"value":"/ This type is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_ordered.rs","byte_start":12778481,"byte_end":12778554,"line_start":92,"line_end":92,"column_start":1,"column_end":74}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_ordered.rs","byte_start":12778555,"byte_end":12778612,"line_start":93,"line_end":93,"column_start":1,"column_end":58}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_ordered.rs","byte_start":12778613,"byte_end":12778661,"line_start":94,"line_end":94,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":14505},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_ordered.rs","byte_start":12779195,"byte_end":12779198,"line_start":109,"line_end":109,"column_start":12,"column_end":15},"name":"new","qualname":"<FuturesOrdered<Fut>>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new, empty `FuturesOrdered`","sig":null,"attributes":[{"value":"/ Constructs a new, empty `FuturesOrdered`","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_ordered.rs","byte_start":12778975,"byte_end":12779019,"line_start":105,"line_end":105,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_ordered.rs","byte_start":12779024,"byte_end":12779027,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ The returned `FuturesOrdered` does not contain any futures and, in this","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_ordered.rs","byte_start":12779032,"byte_end":12779107,"line_start":107,"line_end":107,"column_start":5,"column_end":80}},{"value":"/ state, `FuturesOrdered::poll_next` will return `Poll::Ready(None)`.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_ordered.rs","byte_start":12779112,"byte_end":12779183,"line_start":108,"line_end":108,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":14506},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_ordered.rs","byte_start":12779695,"byte_end":12779698,"line_start":123,"line_end":123,"column_start":12,"column_end":15},"name":"len","qualname":"<FuturesOrdered<Fut>>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of futures contained in the queue.","sig":null,"attributes":[{"value":"/ Returns the number of futures contained in the queue.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_ordered.rs","byte_start":12779422,"byte_end":12779479,"line_start":118,"line_end":118,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_ordered.rs","byte_start":12779484,"byte_end":12779487,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ This represents the total number of in-flight futures, both","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_ordered.rs","byte_start":12779492,"byte_end":12779555,"line_start":120,"line_end":120,"column_start":5,"column_end":68}},{"value":"/ those currently processing and those that have completed but","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_ordered.rs","byte_start":12779560,"byte_end":12779624,"line_start":121,"line_end":121,"column_start":5,"column_end":69}},{"value":"/ which are waiting for earlier futures to complete.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_ordered.rs","byte_start":12779629,"byte_end":12779683,"line_start":122,"line_end":122,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":14507},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_ordered.rs","byte_start":12779856,"byte_end":12779864,"line_start":128,"line_end":128,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<FuturesOrdered<Fut>>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the queue contains no futures\n","sig":null,"attributes":[{"value":"/ Returns `true` if the queue contains no futures","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_ordered.rs","byte_start":12779793,"byte_end":12779844,"line_start":127,"line_end":127,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":14508},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_ordered.rs","byte_start":12780288,"byte_end":12780292,"line_start":138,"line_end":138,"column_start":12,"column_end":16},"name":"push","qualname":"<FuturesOrdered<Fut>>::push","value":"pub fn push(&mut Self, Fut)","parent":null,"children":[],"decl_id":null,"docs":" Push a future into the queue.","sig":null,"attributes":[{"value":"/ Push a future into the queue.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_ordered.rs","byte_start":12779969,"byte_end":12780002,"line_start":132,"line_end":132,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_ordered.rs","byte_start":12780007,"byte_end":12780010,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ This function submits the given future to the internal set for managing.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_ordered.rs","byte_start":12780015,"byte_end":12780091,"line_start":134,"line_end":134,"column_start":5,"column_end":81}},{"value":"/ This function will not call `poll` on the submitted future. The caller","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_ordered.rs","byte_start":12780096,"byte_end":12780170,"line_start":135,"line_end":135,"column_start":5,"column_end":79}},{"value":"/ must ensure that `FuturesOrdered::poll` is called in order to receive","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_ordered.rs","byte_start":12780175,"byte_end":12780248,"line_start":136,"line_end":136,"column_start":5,"column_end":78}},{"value":"/ task notifications.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_ordered.rs","byte_start":12780253,"byte_end":12780276,"line_start":137,"line_end":137,"column_start":5,"column_end":28}}]},{"kind":"Mod","id":{"krate":0,"index":14535},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"futures_unordered","qualname":"::stream::futures_unordered","value":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/mod.rs","parent":null,"children":[{"krate":0,"index":14536},{"krate":0,"index":14539},{"krate":0,"index":14540},{"krate":0,"index":14543},{"krate":0,"index":14546},{"krate":0,"index":14549},{"krate":0,"index":14550},{"krate":0,"index":14553},{"krate":0,"index":14554},{"krate":0,"index":14556},{"krate":0,"index":14559},{"krate":0,"index":14560},{"krate":0,"index":14562},{"krate":0,"index":14565},{"krate":0,"index":14568},{"krate":0,"index":14571},{"krate":0,"index":14572},{"krate":0,"index":14573},{"krate":0,"index":14575},{"krate":0,"index":14576},{"krate":0,"index":14578},{"krate":0,"index":14579},{"krate":0,"index":14581},{"krate":0,"index":14582},{"krate":0,"index":14584},{"krate":0,"index":14585},{"krate":0,"index":14587},{"krate":0,"index":14588},{"krate":0,"index":14591},{"krate":0,"index":14594},{"krate":0,"index":14597},{"krate":0,"index":14598},{"krate":0,"index":14601},{"krate":0,"index":14604},{"krate":0,"index":14605},{"krate":0,"index":14608},{"krate":0,"index":14611},{"krate":0,"index":14612},{"krate":0,"index":14615},{"krate":0,"index":14618},{"krate":0,"index":14621},{"krate":0,"index":14624},{"krate":0,"index":14627},{"krate":0,"index":14633},{"krate":0,"index":14700},{"krate":0,"index":14701},{"krate":0,"index":14704},{"krate":0,"index":14705},{"krate":0,"index":14707},{"krate":0,"index":14708},{"krate":0,"index":14710},{"krate":0,"index":14713},{"krate":0,"index":14716},{"krate":0,"index":14780},{"krate":0,"index":14783},{"krate":0,"index":14842},{"krate":0,"index":14843},{"krate":0,"index":14846},{"krate":0,"index":14849},{"krate":0,"index":14854},{"krate":0,"index":14856},{"krate":0,"index":14858},{"krate":0,"index":14860},{"krate":0,"index":14862},{"krate":0,"index":14864},{"krate":0,"index":14867},{"krate":0,"index":14882},{"krate":0,"index":14895},{"krate":0,"index":14898},{"krate":0,"index":14902},{"krate":0,"index":14905},{"krate":0,"index":14911},{"krate":0,"index":14917},{"krate":0,"index":14922},{"krate":0,"index":14927},{"krate":0,"index":14930}],"decl_id":null,"docs":" An unbounded set of futures.","sig":null,"attributes":[{"value":"cfg(not(futures_no_atomic_cas))","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lib.rs","byte_start":1738,"byte_end":1772,"line_start":52,"line_end":52,"column_start":9,"column_end":43}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":170821,"byte_end":170846,"line_start":100,"line_end":100,"column_start":5,"column_end":30}},{"value":"/ An unbounded set of futures.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/mod.rs","byte_start":12782657,"byte_end":12782689,"line_start":1,"line_end":1,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/mod.rs","byte_start":12782690,"byte_end":12782693,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/mod.rs","byte_start":12782694,"byte_end":12782769,"line_start":3,"line_end":3,"column_start":1,"column_end":76}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/mod.rs","byte_start":12782770,"byte_end":12782827,"line_start":4,"line_end":4,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":15098},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/iter.rs","byte_start":12810033,"byte_end":12810043,"line_start":9,"line_end":9,"column_start":12,"column_end":22},"name":"IterPinMut","qualname":"::stream::futures_unordered::iter::IterPinMut","value":"IterPinMut {  }","parent":null,"children":[{"krate":0,"index":15101},{"krate":0,"index":15102},{"krate":0,"index":15103}],"decl_id":null,"docs":" Mutable iterator over all futures in the unordered set.\n","sig":null,"attributes":[{"value":"/ Mutable iterator over all futures in the unordered set.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/iter.rs","byte_start":12809945,"byte_end":12810004,"line_start":7,"line_end":7,"column_start":1,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":15108},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/iter.rs","byte_start":12810280,"byte_end":12810287,"line_start":17,"line_end":17,"column_start":12,"column_end":19},"name":"IterMut","qualname":"::stream::futures_unordered::iter::IterMut","value":"","parent":null,"children":[],"decl_id":null,"docs":" Mutable iterator over all futures in the unordered set.\n","sig":null,"attributes":[{"value":"/ Mutable iterator over all futures in the unordered set.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/iter.rs","byte_start":12810192,"byte_end":12810251,"line_start":15,"line_end":15,"column_start":1,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":15117},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/iter.rs","byte_start":12810428,"byte_end":12810438,"line_start":21,"line_end":21,"column_start":12,"column_end":22},"name":"IterPinRef","qualname":"::stream::futures_unordered::iter::IterPinRef","value":"IterPinRef {  }","parent":null,"children":[{"krate":0,"index":15120},{"krate":0,"index":15121},{"krate":0,"index":15122},{"krate":0,"index":15123}],"decl_id":null,"docs":" Immutable iterator over all futures in the unordered set.\n","sig":null,"attributes":[{"value":"/ Immutable iterator over all futures in the unordered set.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/iter.rs","byte_start":12810338,"byte_end":12810399,"line_start":19,"line_end":19,"column_start":1,"column_end":62}}]},{"kind":"Struct","id":{"krate":0,"index":15128},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/iter.rs","byte_start":12810726,"byte_end":12810730,"line_start":30,"line_end":30,"column_start":12,"column_end":16},"name":"Iter","qualname":"::stream::futures_unordered::iter::Iter","value":"","parent":null,"children":[],"decl_id":null,"docs":" Immutable iterator over all the futures in the unordered set.\n","sig":null,"attributes":[{"value":"/ Immutable iterator over all the futures in the unordered set.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/iter.rs","byte_start":12810632,"byte_end":12810697,"line_start":28,"line_end":28,"column_start":1,"column_end":66}}]},{"kind":"Struct","id":{"krate":0,"index":15137},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/iter.rs","byte_start":12810867,"byte_end":12810875,"line_start":34,"line_end":34,"column_start":12,"column_end":20},"name":"IntoIter","qualname":"::stream::futures_unordered::iter::IntoIter","value":"IntoIter {  }","parent":null,"children":[{"krate":0,"index":15139},{"krate":0,"index":15140}],"decl_id":null,"docs":" Owned iterator over all futures in the unordered set.\n","sig":null,"attributes":[{"value":"/ Owned iterator over all futures in the unordered set.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/iter.rs","byte_start":12810781,"byte_end":12810838,"line_start":32,"line_end":32,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":14849},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/mod.rs","byte_start":12784694,"byte_end":12784710,"line_start":54,"line_end":54,"column_start":12,"column_end":28},"name":"FuturesUnordered","qualname":"::stream::futures_unordered::FuturesUnordered","value":"FuturesUnordered {  }","parent":null,"children":[{"krate":0,"index":14851},{"krate":0,"index":14852},{"krate":0,"index":14853}],"decl_id":null,"docs":" A set of futures which may complete in any order.","sig":null,"attributes":[{"value":"/ A set of futures which may complete in any order.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/mod.rs","byte_start":12783599,"byte_end":12783652,"line_start":33,"line_end":33,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/mod.rs","byte_start":12783653,"byte_end":12783656,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ This structure is optimized to manage a large number of futures.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/mod.rs","byte_start":12783657,"byte_end":12783725,"line_start":35,"line_end":35,"column_start":1,"column_end":69}},{"value":"/ Futures managed by [`FuturesUnordered`] will only be polled when they","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/mod.rs","byte_start":12783726,"byte_end":12783799,"line_start":36,"line_end":36,"column_start":1,"column_end":74}},{"value":"/ generate wake-up notifications. This reduces the required amount of work","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/mod.rs","byte_start":12783800,"byte_end":12783876,"line_start":37,"line_end":37,"column_start":1,"column_end":77}},{"value":"/ needed to poll large numbers of futures.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/mod.rs","byte_start":12783877,"byte_end":12783921,"line_start":38,"line_end":38,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/mod.rs","byte_start":12783922,"byte_end":12783925,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ [`FuturesUnordered`] can be filled by [`collect`](Iterator::collect)ing an","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/mod.rs","byte_start":12783926,"byte_end":12784004,"line_start":40,"line_end":40,"column_start":1,"column_end":79}},{"value":"/ iterator of futures into a [`FuturesUnordered`], or by","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/mod.rs","byte_start":12784005,"byte_end":12784063,"line_start":41,"line_end":41,"column_start":1,"column_end":59}},{"value":"/ [`push`](FuturesUnordered::push)ing futures onto an existing","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/mod.rs","byte_start":12784064,"byte_end":12784128,"line_start":42,"line_end":42,"column_start":1,"column_end":65}},{"value":"/ [`FuturesUnordered`]. When new futures are added,","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/mod.rs","byte_start":12784129,"byte_end":12784182,"line_start":43,"line_end":43,"column_start":1,"column_end":54}},{"value":"/ [`poll_next`](Stream::poll_next) must be called in order to begin receiving","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/mod.rs","byte_start":12784183,"byte_end":12784262,"line_start":44,"line_end":44,"column_start":1,"column_end":80}},{"value":"/ wake-ups for new futures.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/mod.rs","byte_start":12784263,"byte_end":12784292,"line_start":45,"line_end":45,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/mod.rs","byte_start":12784293,"byte_end":12784296,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ Note that you can create a ready-made [`FuturesUnordered`] via the","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/mod.rs","byte_start":12784297,"byte_end":12784367,"line_start":47,"line_end":47,"column_start":1,"column_end":71}},{"value":"/ [`collect`](Iterator::collect) method, or you can start with an empty set","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/mod.rs","byte_start":12784368,"byte_end":12784445,"line_start":48,"line_end":48,"column_start":1,"column_end":78}},{"value":"/ with the [`FuturesUnordered::new`] constructor.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/mod.rs","byte_start":12784446,"byte_end":12784497,"line_start":49,"line_end":49,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/mod.rs","byte_start":12784498,"byte_end":12784501,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ This type is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/mod.rs","byte_start":12784502,"byte_end":12784575,"line_start":51,"line_end":51,"column_start":1,"column_end":74}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/mod.rs","byte_start":12784576,"byte_end":12784633,"line_start":52,"line_end":52,"column_start":1,"column_end":58}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/mod.rs","byte_start":12784634,"byte_end":12784682,"line_start":53,"line_end":53,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":14869},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/mod.rs","byte_start":12787327,"byte_end":12787330,"line_start":115,"line_end":115,"column_start":12,"column_end":15},"name":"new","qualname":"<FuturesUnordered<Fut>>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new, empty [`FuturesUnordered`].","sig":null,"attributes":[{"value":"/ Constructs a new, empty [`FuturesUnordered`].","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/mod.rs","byte_start":12787056,"byte_end":12787105,"line_start":110,"line_end":110,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/mod.rs","byte_start":12787110,"byte_end":12787113,"line_start":111,"line_end":111,"column_start":5,"column_end":8}},{"value":"/ The returned [`FuturesUnordered`] does not contain any futures.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/mod.rs","byte_start":12787118,"byte_end":12787185,"line_start":112,"line_end":112,"column_start":5,"column_end":72}},{"value":"/ In this state, [`FuturesUnordered::poll_next`](Stream::poll_next) will","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/mod.rs","byte_start":12787190,"byte_end":12787264,"line_start":113,"line_end":113,"column_start":5,"column_end":79}},{"value":"/ return [`Poll::Ready(None)`](Poll::Ready).","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/mod.rs","byte_start":12787269,"byte_end":12787315,"line_start":114,"line_end":114,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":14870},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/mod.rs","byte_start":12788325,"byte_end":12788328,"line_start":143,"line_end":143,"column_start":12,"column_end":15},"name":"len","qualname":"<FuturesUnordered<Fut>>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of futures contained in the set.","sig":null,"attributes":[{"value":"/ Returns the number of futures contained in the set.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/mod.rs","byte_start":12788187,"byte_end":12788242,"line_start":140,"line_end":140,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/mod.rs","byte_start":12788247,"byte_end":12788250,"line_start":141,"line_end":141,"column_start":5,"column_end":8}},{"value":"/ This represents the total number of in-flight futures.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/mod.rs","byte_start":12788255,"byte_end":12788313,"line_start":142,"line_end":142,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":14871},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/mod.rs","byte_start":12788492,"byte_end":12788500,"line_start":149,"line_end":149,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<FuturesUnordered<Fut>>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the set contains no futures.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the set contains no futures.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/mod.rs","byte_start":12788430,"byte_end":12788480,"line_start":148,"line_end":148,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":14872},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/mod.rs","byte_start":12789083,"byte_end":12789087,"line_start":161,"line_end":161,"column_start":12,"column_end":16},"name":"push","qualname":"<FuturesUnordered<Fut>>::push","value":"pub fn push(&Self, Fut)","parent":null,"children":[],"decl_id":null,"docs":" Push a future into the set.","sig":null,"attributes":[{"value":"/ Push a future into the set.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/mod.rs","byte_start":12788713,"byte_end":12788744,"line_start":155,"line_end":155,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/mod.rs","byte_start":12788749,"byte_end":12788752,"line_start":156,"line_end":156,"column_start":5,"column_end":8}},{"value":"/ This method adds the given future to the set. This method will not","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/mod.rs","byte_start":12788757,"byte_end":12788827,"line_start":157,"line_end":157,"column_start":5,"column_end":75}},{"value":"/ call [`poll`](core::future::Future::poll) on the submitted future. The caller must","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/mod.rs","byte_start":12788832,"byte_end":12788918,"line_start":158,"line_end":158,"column_start":5,"column_end":91}},{"value":"/ ensure that [`FuturesUnordered::poll_next`](Stream::poll_next) is called","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/mod.rs","byte_start":12788923,"byte_end":12788999,"line_start":159,"line_end":159,"column_start":5,"column_end":81}},{"value":"/ in order to receive wake-up notifications for the given future.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/mod.rs","byte_start":12789004,"byte_end":12789071,"line_start":160,"line_end":160,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":14873},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/mod.rs","byte_start":12790362,"byte_end":12790366,"line_start":189,"line_end":189,"column_start":12,"column_end":16},"name":"iter","qualname":"<FuturesUnordered<Fut>>::iter","value":"pub fn iter(&Self) -> Iter<, Fut> where Fut: Unpin","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator that allows inspecting each future in the set.\n","sig":null,"attributes":[{"value":"/ Returns an iterator that allows inspecting each future in the set.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/mod.rs","byte_start":12790280,"byte_end":12790350,"line_start":188,"line_end":188,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":14874},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/mod.rs","byte_start":12790564,"byte_end":12790576,"line_start":197,"line_end":197,"column_start":12,"column_end":24},"name":"iter_pin_ref","qualname":"<FuturesUnordered<Fut>>::iter_pin_ref","value":"pub fn iter_pin_ref(Pin<&Self>) -> IterPinRef<, Fut>","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator that allows inspecting each future in the set.\n","sig":null,"attributes":[{"value":"/ Returns an iterator that allows inspecting each future in the set.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/mod.rs","byte_start":12790482,"byte_end":12790552,"line_start":196,"line_end":196,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":14875},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/mod.rs","byte_start":12790905,"byte_end":12790913,"line_start":205,"line_end":205,"column_start":12,"column_end":20},"name":"iter_mut","qualname":"<FuturesUnordered<Fut>>::iter_mut","value":"pub fn iter_mut(&mut Self) -> IterMut<, Fut> where Fut: Unpin","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator that allows modifying each future in the set.\n","sig":null,"attributes":[{"value":"/ Returns an iterator that allows modifying each future in the set.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/mod.rs","byte_start":12790824,"byte_end":12790893,"line_start":204,"line_end":204,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":14876},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/mod.rs","byte_start":12791120,"byte_end":12791132,"line_start":213,"line_end":213,"column_start":12,"column_end":24},"name":"iter_pin_mut","qualname":"<FuturesUnordered<Fut>>::iter_pin_mut","value":"pub fn iter_pin_mut(Pin<&mut Self>) -> IterPinMut<, Fut>","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator that allows modifying each future in the set.\n","sig":null,"attributes":[{"value":"/ Returns an iterator that allows modifying each future in the set.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/mod.rs","byte_start":12791039,"byte_end":12791108,"line_start":212,"line_end":212,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":14900},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/mod.rs","byte_start":12806269,"byte_end":12806274,"line_start":558,"line_end":558,"column_start":12,"column_end":17},"name":"clear","qualname":"<FuturesUnordered<Fut>>::clear","value":"pub fn clear(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Clears the set, removing all futures.\n","sig":null,"attributes":[{"value":"/ Clears the set, removing all futures.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/mod.rs","byte_start":12806216,"byte_end":12806257,"line_start":557,"line_end":557,"column_start":5,"column_end":46}}]},{"kind":"Mod","id":{"krate":0,"index":14937},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select_all.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"select_all","qualname":"::stream::select_all","value":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select_all.rs","parent":null,"children":[{"krate":0,"index":14938},{"krate":0,"index":14939},{"krate":0,"index":14942},{"krate":0,"index":14943},{"krate":0,"index":14945},{"krate":0,"index":14948},{"krate":0,"index":14951},{"krate":0,"index":14954},{"krate":0,"index":14955},{"krate":0,"index":14958},{"krate":0,"index":14961},{"krate":0,"index":14962},{"krate":0,"index":14965},{"krate":0,"index":14968},{"krate":0,"index":14971},{"krate":0,"index":14974},{"krate":0,"index":14975},{"krate":0,"index":14978},{"krate":0,"index":14981},{"krate":0,"index":14984},{"krate":0,"index":16960},{"krate":0,"index":16963},{"krate":0,"index":14987},{"krate":0,"index":14990},{"krate":0,"index":14999},{"krate":0,"index":15002},{"krate":0,"index":15006},{"krate":0,"index":15009},{"krate":0,"index":15011},{"krate":0,"index":15015},{"krate":0,"index":15019},{"krate":0,"index":15024},{"krate":0,"index":15030},{"krate":0,"index":16951},{"krate":0,"index":16956},{"krate":0,"index":16942},{"krate":0,"index":16947},{"krate":0,"index":16935},{"krate":0,"index":16939},{"krate":0,"index":15036},{"krate":0,"index":15042},{"krate":0,"index":15044},{"krate":0,"index":15050},{"krate":0,"index":15052},{"krate":0,"index":15057}],"decl_id":null,"docs":" An unbounded set of streams\n","sig":null,"attributes":[{"value":"cfg(not(futures_no_atomic_cas))","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lib.rs","byte_start":1738,"byte_end":1772,"line_start":52,"line_end":52,"column_start":9,"column_end":43}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":170987,"byte_end":171012,"line_start":106,"line_end":106,"column_start":5,"column_end":30}},{"value":"/ An unbounded set of streams","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select_all.rs","byte_start":12823220,"byte_end":12823251,"line_start":1,"line_end":1,"column_start":1,"column_end":32}}]},{"kind":"Struct","id":{"krate":0,"index":16960},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select_all.rs","byte_start":12824291,"byte_end":12824300,"line_start":30,"line_end":30,"column_start":16,"column_end":25},"name":"SelectAll","qualname":"::stream::select_all::SelectAll","value":"SelectAll {  }","parent":null,"children":[{"krate":0,"index":16962}],"decl_id":null,"docs":" An unbounded set of streams","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":12561792,"byte_end":12561801,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":14992},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select_all.rs","byte_start":12824782,"byte_end":12824785,"line_start":47,"line_end":47,"column_start":12,"column_end":15},"name":"new","qualname":"<SelectAll<St>>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new, empty `SelectAll`","sig":null,"attributes":[{"value":"/ Constructs a new, empty `SelectAll`","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select_all.rs","byte_start":12824582,"byte_end":12824621,"line_start":43,"line_end":43,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select_all.rs","byte_start":12824626,"byte_end":12824629,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ The returned `SelectAll` does not contain any streams and, in this","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select_all.rs","byte_start":12824634,"byte_end":12824704,"line_start":45,"line_end":45,"column_start":5,"column_end":75}},{"value":"/ state, `SelectAll::poll` will return `Poll::Ready(None)`.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select_all.rs","byte_start":12824709,"byte_end":12824770,"line_start":46,"line_end":46,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":14993},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select_all.rs","byte_start":12824995,"byte_end":12824998,"line_start":54,"line_end":54,"column_start":12,"column_end":15},"name":"len","qualname":"<SelectAll<St>>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of streams contained in the set.","sig":null,"attributes":[{"value":"/ Returns the number of streams contained in the set.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select_all.rs","byte_start":12824857,"byte_end":12824912,"line_start":51,"line_end":51,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select_all.rs","byte_start":12824917,"byte_end":12824920,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ This represents the total number of in-flight streams.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select_all.rs","byte_start":12824925,"byte_end":12824983,"line_start":53,"line_end":53,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":14994},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select_all.rs","byte_start":12825114,"byte_end":12825122,"line_start":59,"line_end":59,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<SelectAll<St>>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the set contains no streams\n","sig":null,"attributes":[{"value":"/ Returns `true` if the set contains no streams","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select_all.rs","byte_start":12825053,"byte_end":12825102,"line_start":58,"line_end":58,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":14995},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select_all.rs","byte_start":12825484,"byte_end":12825488,"line_start":69,"line_end":69,"column_start":12,"column_end":16},"name":"push","qualname":"<SelectAll<St>>::push","value":"pub fn push(&mut Self, St)","parent":null,"children":[],"decl_id":null,"docs":" Push a stream into the set.","sig":null,"attributes":[{"value":"/ Push a stream into the set.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select_all.rs","byte_start":12825181,"byte_end":12825212,"line_start":63,"line_end":63,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select_all.rs","byte_start":12825217,"byte_end":12825220,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ This function submits the given stream to the set for managing. This","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select_all.rs","byte_start":12825225,"byte_end":12825297,"line_start":65,"line_end":65,"column_start":5,"column_end":77}},{"value":"/ function will not call `poll` on the submitted stream. The caller must","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select_all.rs","byte_start":12825302,"byte_end":12825376,"line_start":66,"line_end":66,"column_start":5,"column_end":79}},{"value":"/ ensure that `SelectAll::poll` is called in order to receive task","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select_all.rs","byte_start":12825381,"byte_end":12825449,"line_start":67,"line_end":67,"column_start":5,"column_end":73}},{"value":"/ notifications.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select_all.rs","byte_start":12825454,"byte_end":12825472,"line_start":68,"line_end":68,"column_start":5,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":14996},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select_all.rs","byte_start":12825654,"byte_end":12825658,"line_start":74,"line_end":74,"column_start":12,"column_end":16},"name":"iter","qualname":"<SelectAll<St>>::iter","value":"pub fn iter(&Self) -> Iter<, St>","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator that allows inspecting each stream in the set.\n","sig":null,"attributes":[{"value":"/ Returns an iterator that allows inspecting each stream in the set.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select_all.rs","byte_start":12825572,"byte_end":12825642,"line_start":73,"line_end":73,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":14997},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select_all.rs","byte_start":12825808,"byte_end":12825816,"line_start":79,"line_end":79,"column_start":12,"column_end":20},"name":"iter_mut","qualname":"<SelectAll<St>>::iter_mut","value":"pub fn iter_mut(&mut Self) -> IterMut<, St>","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator that allows modifying each stream in the set.\n","sig":null,"attributes":[{"value":"/ Returns an iterator that allows modifying each stream in the set.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select_all.rs","byte_start":12825727,"byte_end":12825796,"line_start":78,"line_end":78,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":14998},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select_all.rs","byte_start":12825952,"byte_end":12825957,"line_start":84,"line_end":84,"column_start":12,"column_end":17},"name":"clear","qualname":"<SelectAll<St>>::clear","value":"pub fn clear(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Clears the set, removing all streams.\n","sig":null,"attributes":[{"value":"/ Clears the set, removing all streams.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select_all.rs","byte_start":12825899,"byte_end":12825940,"line_start":83,"line_end":83,"column_start":5,"column_end":46}}]},{"kind":"Function","id":{"krate":0,"index":15009},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select_all.rs","byte_start":12827664,"byte_end":12827674,"line_start":135,"line_end":135,"column_start":8,"column_end":18},"name":"select_all","qualname":"::stream::select_all::select_all","value":"pub fn select_all<I>(I) -> SelectAll<I::Item> where I: IntoIterator,\nI::Item: Stream + Unpin","parent":null,"children":[],"decl_id":null,"docs":" Convert a list of streams into a `Stream` of results from the streams.","sig":null,"attributes":[{"value":"/ Convert a list of streams into a `Stream` of results from the streams.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select_all.rs","byte_start":12827043,"byte_end":12827117,"line_start":123,"line_end":123,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select_all.rs","byte_start":12827118,"byte_end":12827121,"line_start":124,"line_end":124,"column_start":1,"column_end":4}},{"value":"/ This essentially takes a list of streams (e.g. a vector, an iterator, etc.)","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select_all.rs","byte_start":12827122,"byte_end":12827201,"line_start":125,"line_end":125,"column_start":1,"column_end":80}},{"value":"/ and bundles them together into a single stream.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select_all.rs","byte_start":12827202,"byte_end":12827253,"line_start":126,"line_end":126,"column_start":1,"column_end":52}},{"value":"/ The stream will yield items as they become available on the underlying","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select_all.rs","byte_start":12827254,"byte_end":12827328,"line_start":127,"line_end":127,"column_start":1,"column_end":75}},{"value":"/ streams internally, in the order they become available.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select_all.rs","byte_start":12827329,"byte_end":12827388,"line_start":128,"line_end":128,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select_all.rs","byte_start":12827389,"byte_end":12827392,"line_start":129,"line_end":129,"column_start":1,"column_end":4}},{"value":"/ Note that the returned set can also be used to dynamically push more","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select_all.rs","byte_start":12827393,"byte_end":12827465,"line_start":130,"line_end":130,"column_start":1,"column_end":73}},{"value":"/ streams into the set as they become available.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select_all.rs","byte_start":12827466,"byte_end":12827516,"line_start":131,"line_end":131,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select_all.rs","byte_start":12827517,"byte_end":12827520,"line_start":132,"line_end":132,"column_start":1,"column_end":4}},{"value":"/ This function is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select_all.rs","byte_start":12827521,"byte_end":12827598,"line_start":133,"line_end":133,"column_start":1,"column_end":78}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select_all.rs","byte_start":12827599,"byte_end":12827656,"line_start":134,"line_end":134,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":16951},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select_all.rs","byte_start":12828981,"byte_end":12828985,"line_start":192,"line_end":192,"column_start":12,"column_end":16},"name":"Iter","qualname":"::stream::select_all::Iter","value":"","parent":null,"children":[],"decl_id":null,"docs":" Immutable iterator over all streams in the unordered set.\n","sig":null,"attributes":[{"value":"/ Immutable iterator over all streams in the unordered set.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select_all.rs","byte_start":12828891,"byte_end":12828952,"line_start":190,"line_end":190,"column_start":1,"column_end":62}}]},{"kind":"Struct","id":{"krate":0,"index":16942},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select_all.rs","byte_start":12829138,"byte_end":12829145,"line_start":196,"line_end":196,"column_start":12,"column_end":19},"name":"IterMut","qualname":"::stream::select_all::IterMut","value":"","parent":null,"children":[],"decl_id":null,"docs":" Mutable iterator over all streams in the unordered set.\n","sig":null,"attributes":[{"value":"/ Mutable iterator over all streams in the unordered set.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select_all.rs","byte_start":12829050,"byte_end":12829109,"line_start":194,"line_end":194,"column_start":1,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":16935},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select_all.rs","byte_start":12829299,"byte_end":12829307,"line_start":200,"line_end":200,"column_start":12,"column_end":20},"name":"IntoIter","qualname":"::stream::select_all::IntoIter","value":"","parent":null,"children":[],"decl_id":null,"docs":" Owned iterator over all streams in the unordered set.\n","sig":null,"attributes":[{"value":"/ Owned iterator over all streams in the unordered set.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select_all.rs","byte_start":12829213,"byte_end":12829270,"line_start":198,"line_end":198,"column_start":1,"column_end":58}}]},{"kind":"Function","id":{"krate":0,"index":15080},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/abortable.rs","byte_start":12831322,"byte_end":12831331,"line_start":12,"line_end":12,"column_start":8,"column_end":17},"name":"abortable","qualname":"::stream::abortable::abortable","value":"pub fn abortable<St>(St) -> (Abortable<St>, AbortHandle) where St: Stream","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Abortable` stream and an `AbortHandle` which can be used to stop it.","sig":null,"attributes":[{"value":"/ Creates a new `Abortable` stream and an `AbortHandle` which can be used to stop it.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/abortable.rs","byte_start":12830952,"byte_end":12831039,"line_start":5,"line_end":5,"column_start":1,"column_end":88}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/abortable.rs","byte_start":12831040,"byte_end":12831043,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ This function is a convenient (but less flexible) alternative to calling","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/abortable.rs","byte_start":12831044,"byte_end":12831120,"line_start":7,"line_end":7,"column_start":1,"column_end":77}},{"value":"/ `AbortHandle::new` and `Abortable::new` manually.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/abortable.rs","byte_start":12831121,"byte_end":12831174,"line_start":8,"line_end":8,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/abortable.rs","byte_start":12831175,"byte_end":12831178,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This function is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/abortable.rs","byte_start":12831179,"byte_end":12831256,"line_start":10,"line_end":10,"column_start":1,"column_end":78}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/abortable.rs","byte_start":12831257,"byte_end":12831314,"line_start":11,"line_end":11,"column_start":1,"column_end":58}}]},{"kind":"Mod","id":{"krate":0,"index":5445},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/sink/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"sink","qualname":"::sink","value":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/sink/mod.rs","parent":null,"children":[{"krate":0,"index":5446},{"krate":0,"index":5447},{"krate":0,"index":5450},{"krate":0,"index":5453},{"krate":0,"index":5456},{"krate":0,"index":5459},{"krate":0,"index":5460},{"krate":0,"index":5463},{"krate":0,"index":5466},{"krate":0,"index":5467},{"krate":0,"index":5470},{"krate":0,"index":5473},{"krate":0,"index":5476},{"krate":0,"index":5509},{"krate":0,"index":5512},{"krate":0,"index":5546},{"krate":0,"index":5547},{"krate":0,"index":5550},{"krate":0,"index":5553},{"krate":0,"index":5601},{"krate":0,"index":5604},{"krate":0,"index":5639},{"krate":0,"index":5642},{"krate":0,"index":5675},{"krate":0,"index":5678},{"krate":0,"index":5719},{"krate":0,"index":5722},{"krate":0,"index":5773},{"krate":0,"index":5776},{"krate":0,"index":5812},{"krate":0,"index":5815},{"krate":0,"index":5884},{"krate":0,"index":5887},{"krate":0,"index":5934},{"krate":0,"index":5935},{"krate":0,"index":5938},{"krate":0,"index":5941},{"krate":0,"index":6022},{"krate":0,"index":6025},{"krate":0,"index":6098},{"krate":0,"index":6101},{"krate":0,"index":6154},{"krate":0,"index":6157},{"krate":0,"index":6160},{"krate":0,"index":6194}],"decl_id":null,"docs":" Asynchronous sinks.","sig":null,"attributes":[{"value":"cfg(feature = \"sink\")","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lib.rs","byte_start":11432,"byte_end":11456,"line_start":309,"line_end":309,"column_start":1,"column_end":25}},{"value":"/ Asynchronous sinks.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/sink/mod.rs","byte_start":395767,"byte_end":395790,"line_start":1,"line_end":1,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/sink/mod.rs","byte_start":395791,"byte_end":395794,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module contains:","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/sink/mod.rs","byte_start":395795,"byte_end":395820,"line_start":3,"line_end":3,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/sink/mod.rs","byte_start":395821,"byte_end":395824,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ - The [`Sink`] trait, which allows you to asynchronously write data.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/sink/mod.rs","byte_start":395825,"byte_end":395897,"line_start":5,"line_end":5,"column_start":1,"column_end":73}},{"value":"/ - The [`SinkExt`] trait, which provides adapters for chaining and composing","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/sink/mod.rs","byte_start":395898,"byte_end":395977,"line_start":6,"line_end":6,"column_start":1,"column_end":80}},{"value":"/   sinks.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/sink/mod.rs","byte_start":395978,"byte_end":395990,"line_start":7,"line_end":7,"column_start":1,"column_end":13}}]},{"kind":"Struct","id":{"krate":0,"index":15144},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/sink/close.rs","byte_start":407271,"byte_end":407276,"line_start":10,"line_end":10,"column_start":12,"column_end":17},"name":"Close","qualname":"::sink::close::Close","value":"Close {  }","parent":null,"children":[{"krate":0,"index":15148},{"krate":0,"index":15149}],"decl_id":null,"docs":" Future for the [`close`](super::SinkExt::close) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`close`](super::SinkExt::close) method.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/sink/close.rs","byte_start":407115,"byte_end":407174,"line_start":7,"line_end":7,"column_start":1,"column_end":60}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/sink/close.rs","byte_start":407192,"byte_end":407259,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":15155},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/sink/drain.rs","byte_start":408267,"byte_end":408272,"line_start":11,"line_end":11,"column_start":12,"column_end":17},"name":"Drain","qualname":"::sink::drain::Drain","value":"Drain {  }","parent":null,"children":[{"krate":0,"index":15157}],"decl_id":null,"docs":" Sink for the [`drain`] function.\n","sig":null,"attributes":[{"value":"/ Sink for the [`drain`] function.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/sink/drain.rs","byte_start":408155,"byte_end":408191,"line_start":8,"line_end":8,"column_start":1,"column_end":37}},{"value":"must_use = \"sinks do nothing unless polled\"","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/sink/drain.rs","byte_start":408209,"byte_end":408255,"line_start":10,"line_end":10,"column_start":1,"column_end":47}}]},{"kind":"Function","id":{"krate":0,"index":5535},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/sink/drain.rs","byte_start":408671,"byte_end":408676,"line_start":29,"line_end":29,"column_start":8,"column_end":13},"name":"drain","qualname":"::sink::drain::drain","value":"pub fn drain<T>() -> Drain<T>","parent":null,"children":[],"decl_id":null,"docs":" Create a sink that will just discard all items given to it.","sig":null,"attributes":[{"value":"/ Create a sink that will just discard all items given to it.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/sink/drain.rs","byte_start":408309,"byte_end":408372,"line_start":15,"line_end":15,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/sink/drain.rs","byte_start":408373,"byte_end":408376,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ Similar to [`io::Sink`](::std::io::Sink).","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/sink/drain.rs","byte_start":408377,"byte_end":408422,"line_start":17,"line_end":17,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/sink/drain.rs","byte_start":408423,"byte_end":408426,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/sink/drain.rs","byte_start":408427,"byte_end":408441,"line_start":19,"line_end":19,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/sink/drain.rs","byte_start":408442,"byte_end":408445,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/sink/drain.rs","byte_start":408446,"byte_end":408453,"line_start":21,"line_end":21,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/sink/drain.rs","byte_start":408454,"byte_end":408495,"line_start":22,"line_end":22,"column_start":1,"column_end":42}},{"value":"/ use futures::sink::{self, SinkExt};","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/sink/drain.rs","byte_start":408496,"byte_end":408535,"line_start":23,"line_end":23,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/sink/drain.rs","byte_start":408536,"byte_end":408539,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ let mut drain = sink::drain();","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/sink/drain.rs","byte_start":408540,"byte_end":408574,"line_start":25,"line_end":25,"column_start":1,"column_end":35}},{"value":"/ drain.send(5).await?;","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/sink/drain.rs","byte_start":408575,"byte_end":408600,"line_start":26,"line_end":26,"column_start":1,"column_end":26}},{"value":"/ # Ok::<(), futures::never::Never>(()) }).unwrap();","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/sink/drain.rs","byte_start":408601,"byte_end":408655,"line_start":27,"line_end":27,"column_start":1,"column_end":55}},{"value":"/ ```","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/sink/drain.rs","byte_start":408656,"byte_end":408663,"line_start":28,"line_end":28,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":15161},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/sink/fanout.rs","byte_start":409866,"byte_end":409872,"line_start":13,"line_end":13,"column_start":16,"column_end":22},"name":"Fanout","qualname":"::sink::fanout::Fanout","value":"Fanout {  }","parent":null,"children":[{"krate":0,"index":15164},{"krate":0,"index":15165}],"decl_id":null,"docs":" Sink that clones incoming items and forwards them to two sinks at the same time.","sig":null,"attributes":[{"value":"must_use = \"sinks do nothing unless polled\"","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":12561792,"byte_end":12561801,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":5584},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/sink/fanout.rs","byte_start":410152,"byte_end":410159,"line_start":27,"line_end":27,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Fanout<Si1, Si2>>::get_ref","value":"pub fn get_ref(&Self) -> (&Si1, &Si2)","parent":null,"children":[],"decl_id":null,"docs":" Get a shared reference to the inner sinks.\n","sig":null,"attributes":[{"value":"/ Get a shared reference to the inner sinks.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/sink/fanout.rs","byte_start":410094,"byte_end":410140,"line_start":26,"line_end":26,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":5585},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/sink/fanout.rs","byte_start":410290,"byte_end":410297,"line_start":32,"line_end":32,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Fanout<Si1, Si2>>::get_mut","value":"pub fn get_mut(&mut Self) -> (&mut Si1, &mut Si2)","parent":null,"children":[],"decl_id":null,"docs":" Get a mutable reference to the inner sinks.\n","sig":null,"attributes":[{"value":"/ Get a mutable reference to the inner sinks.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/sink/fanout.rs","byte_start":410231,"byte_end":410278,"line_start":31,"line_end":31,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":5586},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/sink/fanout.rs","byte_start":410455,"byte_end":410466,"line_start":37,"line_end":37,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<Fanout<Si1, Si2>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> (Pin<&mut Si1>, Pin<&mut Si2>)","parent":null,"children":[],"decl_id":null,"docs":" Get a pinned mutable reference to the inner sinks.\n","sig":null,"attributes":[{"value":"/ Get a pinned mutable reference to the inner sinks.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/sink/fanout.rs","byte_start":410389,"byte_end":410443,"line_start":36,"line_end":36,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":5587},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/sink/fanout.rs","byte_start":410838,"byte_end":410848,"line_start":46,"line_end":46,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Fanout<Si1, Si2>>::into_inner","value":"pub fn into_inner(Self) -> (Si1, Si2)","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying sinks.","sig":null,"attributes":[{"value":"/ Consumes this combinator, returning the underlying sinks.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/sink/fanout.rs","byte_start":410604,"byte_end":410665,"line_start":42,"line_end":42,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/sink/fanout.rs","byte_start":410670,"byte_end":410673,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/ Note that this may discard intermediate state of this combinator,","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/sink/fanout.rs","byte_start":410678,"byte_end":410747,"line_start":44,"line_end":44,"column_start":5,"column_end":74}},{"value":"/ so care should be taken to avoid losing resources when this is called.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/sink/fanout.rs","byte_start":410752,"byte_end":410826,"line_start":45,"line_end":45,"column_start":5,"column_end":79}}]},{"kind":"Struct","id":{"krate":0,"index":15206},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/sink/feed.rs","byte_start":413094,"byte_end":413098,"line_start":10,"line_end":10,"column_start":12,"column_end":16},"name":"Feed","qualname":"::sink::feed::Feed","value":"Feed {  }","parent":null,"children":[{"krate":0,"index":15210},{"krate":0,"index":15211}],"decl_id":null,"docs":" Future for the [`feed`](super::SinkExt::feed) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`feed`](super::SinkExt::feed) method.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/sink/feed.rs","byte_start":412940,"byte_end":412997,"line_start":7,"line_end":7,"column_start":1,"column_end":58}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/sink/feed.rs","byte_start":413015,"byte_end":413082,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":15217},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/sink/flush.rs","byte_start":414429,"byte_end":414434,"line_start":10,"line_end":10,"column_start":12,"column_end":17},"name":"Flush","qualname":"::sink::flush::Flush","value":"Flush {  }","parent":null,"children":[{"krate":0,"index":15221},{"krate":0,"index":15222}],"decl_id":null,"docs":" Future for the [`flush`](super::SinkExt::flush) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`flush`](super::SinkExt::flush) method.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/sink/flush.rs","byte_start":414273,"byte_end":414332,"line_start":7,"line_end":7,"column_start":1,"column_end":60}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/sink/flush.rs","byte_start":414350,"byte_end":414417,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":15237},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/sink/err_into.rs","byte_start":415671,"byte_end":415682,"line_start":10,"line_end":10,"column_start":16,"column_end":27},"name":"SinkErrInto","qualname":"::sink::err_into::SinkErrInto","value":"SinkErrInto {  }","parent":null,"children":[{"krate":0,"index":15241}],"decl_id":null,"docs":" Sink for the [`sink_err_into`](super::SinkExt::sink_err_into) method.\n","sig":null,"attributes":[{"value":"must_use = \"sinks do nothing unless polled\"","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":12561792,"byte_end":12561801,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":15299},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/sink/map_err.rs","byte_start":416982,"byte_end":416992,"line_start":11,"line_end":11,"column_start":16,"column_end":26},"name":"SinkMapErr","qualname":"::sink::map_err::SinkMapErr","value":"SinkMapErr {  }","parent":null,"children":[{"krate":0,"index":15302},{"krate":0,"index":15303}],"decl_id":null,"docs":" Sink for the [`sink_map_err`](super::SinkExt::sink_map_err) method.\n","sig":null,"attributes":[{"value":"must_use = \"sinks do nothing unless polled\"","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":12561792,"byte_end":12561801,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":15351},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/sink/send.rs","byte_start":418889,"byte_end":418893,"line_start":11,"line_end":11,"column_start":12,"column_end":16},"name":"Send","qualname":"::sink::send::Send","value":"Send {  }","parent":null,"children":[{"krate":0,"index":15355}],"decl_id":null,"docs":" Future for the [`send`](super::SinkExt::send) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`send`](super::SinkExt::send) method.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/sink/send.rs","byte_start":418735,"byte_end":418792,"line_start":8,"line_end":8,"column_start":1,"column_end":58}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/sink/send.rs","byte_start":418810,"byte_end":418877,"line_start":10,"line_end":10,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":5855},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/sink/send_all.rs","byte_start":420322,"byte_end":420329,"line_start":13,"line_end":13,"column_start":12,"column_end":19},"name":"SendAll","qualname":"::sink::send_all::SendAll","value":"SendAll {  }","parent":null,"children":[{"krate":0,"index":5859},{"krate":0,"index":5860},{"krate":0,"index":5861}],"decl_id":null,"docs":" Future for the [`send_all`](super::SinkExt::send_all) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`send_all`](super::SinkExt::send_all) method.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/sink/send_all.rs","byte_start":420086,"byte_end":420151,"line_start":10,"line_end":10,"column_start":1,"column_end":66}},{"value":"allow(explicit_outlives_requirements)","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/sink/send_all.rs","byte_start":420152,"byte_end":420192,"line_start":11,"line_end":11,"column_start":1,"column_end":41}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/sink/send_all.rs","byte_start":420243,"byte_end":420310,"line_start":12,"line_end":12,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":15370},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/sink/unfold.rs","byte_start":423280,"byte_end":423286,"line_start":13,"line_end":13,"column_start":16,"column_end":22},"name":"Unfold","qualname":"::sink::unfold::Unfold","value":"Unfold {  }","parent":null,"children":[{"krate":0,"index":15374},{"krate":0,"index":15375}],"decl_id":null,"docs":" Sink for the [`unfold`] function.\n","sig":null,"attributes":[{"value":"must_use = \"sinks do nothing unless polled\"","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":12561792,"byte_end":12561801,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":5917},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/sink/unfold.rs","byte_start":423886,"byte_end":423892,"line_start":39,"line_end":39,"column_start":8,"column_end":14},"name":"unfold","qualname":"::sink::unfold::unfold","value":"pub fn unfold<T, F, R, Item, E>(T, F) -> Unfold<T, F, R> where\nF: FnMut(T, Item) -> R, R: Future<Output = Result<T, E>>","parent":null,"children":[],"decl_id":null,"docs":" Create a sink from a function which processes one item at a time.","sig":null,"attributes":[{"value":"/ Create a sink from a function which processes one item at a time.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/sink/unfold.rs","byte_start":423377,"byte_end":423446,"line_start":20,"line_end":20,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/sink/unfold.rs","byte_start":423447,"byte_end":423450,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/sink/unfold.rs","byte_start":423451,"byte_end":423465,"line_start":22,"line_end":22,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/sink/unfold.rs","byte_start":423466,"byte_end":423469,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/sink/unfold.rs","byte_start":423470,"byte_end":423477,"line_start":24,"line_end":24,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/sink/unfold.rs","byte_start":423478,"byte_end":423519,"line_start":25,"line_end":25,"column_start":1,"column_end":42}},{"value":"/ use futures::sink::{self, SinkExt};","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/sink/unfold.rs","byte_start":423520,"byte_end":423559,"line_start":26,"line_end":26,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/sink/unfold.rs","byte_start":423560,"byte_end":423563,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ let unfold = sink::unfold(0, |mut sum, i: i32| {","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/sink/unfold.rs","byte_start":423564,"byte_end":423616,"line_start":28,"line_end":28,"column_start":1,"column_end":53}},{"value":"/     async move {","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/sink/unfold.rs","byte_start":423617,"byte_end":423637,"line_start":29,"line_end":29,"column_start":1,"column_end":21}},{"value":"/         sum += i;","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/sink/unfold.rs","byte_start":423638,"byte_end":423659,"line_start":30,"line_end":30,"column_start":1,"column_end":22}},{"value":"/         eprintln!(\"{}\", i);","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/sink/unfold.rs","byte_start":423660,"byte_end":423691,"line_start":31,"line_end":31,"column_start":1,"column_end":32}},{"value":"/         Ok::<_, futures::never::Never>(sum)","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/sink/unfold.rs","byte_start":423692,"byte_end":423739,"line_start":32,"line_end":32,"column_start":1,"column_end":48}},{"value":"/     }","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/sink/unfold.rs","byte_start":423740,"byte_end":423749,"line_start":33,"line_end":33,"column_start":1,"column_end":10}},{"value":"/ });","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/sink/unfold.rs","byte_start":423750,"byte_end":423757,"line_start":34,"line_end":34,"column_start":1,"column_end":8}},{"value":"/ futures::pin_mut!(unfold);","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/sink/unfold.rs","byte_start":423758,"byte_end":423788,"line_start":35,"line_end":35,"column_start":1,"column_end":31}},{"value":"/ unfold.send(5).await?;","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/sink/unfold.rs","byte_start":423789,"byte_end":423815,"line_start":36,"line_end":36,"column_start":1,"column_end":27}},{"value":"/ # Ok::<(), futures::never::Never>(()) }).unwrap();","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/sink/unfold.rs","byte_start":423816,"byte_end":423870,"line_start":37,"line_end":37,"column_start":1,"column_end":55}},{"value":"/ ```","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/sink/unfold.rs","byte_start":423871,"byte_end":423878,"line_start":38,"line_end":38,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":15419},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/sink/with.rs","byte_start":425870,"byte_end":425874,"line_start":14,"line_end":14,"column_start":16,"column_end":20},"name":"With","qualname":"::sink::with::With","value":"With {  }","parent":null,"children":[{"krate":0,"index":15425},{"krate":0,"index":15426},{"krate":0,"index":15427},{"krate":0,"index":15428}],"decl_id":null,"docs":" Sink for the [`with`](super::SinkExt::with) method.\n","sig":null,"attributes":[{"value":"must_use = \"sinks do nothing unless polled\"","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":12561792,"byte_end":12561801,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":15502},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/sink/with_flat_map.rs","byte_start":429417,"byte_end":429428,"line_start":13,"line_end":13,"column_start":16,"column_end":27},"name":"WithFlatMap","qualname":"::sink::with_flat_map::WithFlatMap","value":"WithFlatMap {  }","parent":null,"children":[{"krate":0,"index":15508},{"krate":0,"index":15509},{"krate":0,"index":15510},{"krate":0,"index":15511},{"krate":0,"index":15512}],"decl_id":null,"docs":" Sink for the [`with_flat_map`](super::SinkExt::with_flat_map) method.\n","sig":null,"attributes":[{"value":"must_use = \"sinks do nothing unless polled\"","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":12561792,"byte_end":12561801,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":15596},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/sink/buffer.rs","byte_start":433163,"byte_end":433169,"line_start":13,"line_end":13,"column_start":16,"column_end":22},"name":"Buffer","qualname":"::sink::buffer::Buffer","value":"Buffer {  }","parent":null,"children":[{"krate":0,"index":15599},{"krate":0,"index":15600},{"krate":0,"index":15601}],"decl_id":null,"docs":" Sink for the [`buffer`](super::SinkExt::buffer) method.\n","sig":null,"attributes":[{"value":"must_use = \"sinks do nothing unless polled\"","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":12561792,"byte_end":12561801,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Trait","id":{"krate":0,"index":6160},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/sink/mod.rs","byte_start":397084,"byte_end":397091,"line_start":65,"line_end":65,"column_start":11,"column_end":18},"name":"SinkExt","qualname":"::sink::SinkExt","value":"SinkExt<Item>: Sink<Item>","parent":null,"children":[{"krate":0,"index":6162},{"krate":0,"index":6167},{"krate":0,"index":6171},{"krate":0,"index":6174},{"krate":0,"index":6176},{"krate":0,"index":6177},{"krate":0,"index":6178},{"krate":0,"index":6180},{"krate":0,"index":6181},{"krate":0,"index":6182},{"krate":0,"index":6183},{"krate":0,"index":6186},{"krate":0,"index":6188},{"krate":0,"index":6190},{"krate":0,"index":6191},{"krate":0,"index":6192},{"krate":0,"index":6193}],"decl_id":null,"docs":" An extension trait for `Sink`s that provides a variety of convenient\n combinator functions.\n","sig":null,"attributes":[{"value":"/ An extension trait for `Sink`s that provides a variety of convenient","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/sink/mod.rs","byte_start":396975,"byte_end":397047,"line_start":63,"line_end":63,"column_start":1,"column_end":73}},{"value":"/ combinator functions.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/sink/mod.rs","byte_start":397048,"byte_end":397073,"line_start":64,"line_end":64,"column_start":1,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":6162},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/sink/mod.rs","byte_start":397683,"byte_end":397687,"line_start":77,"line_end":77,"column_start":8,"column_end":12},"name":"with","qualname":"::sink::SinkExt::with","value":"pub fn with<U, Fut, F, E>(Self, F) -> With<Self, Item, U, Fut, F> where\nF: FnMut(U) -> Fut, Fut: Future<Output = Result<Item, E>>,\nE: From<Self::Error>, Self: Sized","parent":{"krate":0,"index":6160},"children":[],"decl_id":null,"docs":" Composes a function *in front of* the sink.","sig":null,"attributes":[{"value":"/ Composes a function *in front of* the sink.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/sink/mod.rs","byte_start":397116,"byte_end":397163,"line_start":66,"line_end":66,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/sink/mod.rs","byte_start":397168,"byte_end":397171,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ This adapter produces a new sink that passes each value through the","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/sink/mod.rs","byte_start":397176,"byte_end":397247,"line_start":68,"line_end":68,"column_start":5,"column_end":76}},{"value":"/ given function `f` before sending it to `self`.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/sink/mod.rs","byte_start":397252,"byte_end":397303,"line_start":69,"line_end":69,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/sink/mod.rs","byte_start":397308,"byte_end":397311,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ To process each value, `f` produces a *future*, which is then polled to","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/sink/mod.rs","byte_start":397316,"byte_end":397391,"line_start":71,"line_end":71,"column_start":5,"column_end":80}},{"value":"/ completion before passing its result down to the underlying sink. If the","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/sink/mod.rs","byte_start":397396,"byte_end":397472,"line_start":72,"line_end":72,"column_start":5,"column_end":81}},{"value":"/ future produces an error, that error is returned by the new sink.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/sink/mod.rs","byte_start":397477,"byte_end":397546,"line_start":73,"line_end":73,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/sink/mod.rs","byte_start":397551,"byte_end":397554,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the given sink, returning a wrapped","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/sink/mod.rs","byte_start":397559,"byte_end":397631,"line_start":75,"line_end":75,"column_start":5,"column_end":77}},{"value":"/ version, much like `Iterator::map`.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/sink/mod.rs","byte_start":397636,"byte_end":397675,"line_start":76,"line_end":76,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":6167},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/sink/mod.rs","byte_start":399043,"byte_end":399056,"line_start":119,"line_end":119,"column_start":8,"column_end":21},"name":"with_flat_map","qualname":"::sink::SinkExt::with_flat_map","value":"pub fn with_flat_map<U, St, F>(Self, F) -> WithFlatMap<Self, Item, U, St, F>\nwhere F: FnMut(U) -> St, St: Stream<Item = Result<Item, Self::Error>>,\nSelf: Sized","parent":{"krate":0,"index":6160},"children":[],"decl_id":null,"docs":" Composes a function *in front of* the sink.","sig":null,"attributes":[{"value":"/ Composes a function *in front of* the sink.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/sink/mod.rs","byte_start":397949,"byte_end":397996,"line_start":87,"line_end":87,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/sink/mod.rs","byte_start":398001,"byte_end":398004,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ This adapter produces a new sink that passes each value through the","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/sink/mod.rs","byte_start":398009,"byte_end":398080,"line_start":89,"line_end":89,"column_start":5,"column_end":76}},{"value":"/ given function `f` before sending it to `self`.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/sink/mod.rs","byte_start":398085,"byte_end":398136,"line_start":90,"line_end":90,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/sink/mod.rs","byte_start":398141,"byte_end":398144,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ To process each value, `f` produces a *stream*, of which each value","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/sink/mod.rs","byte_start":398149,"byte_end":398220,"line_start":92,"line_end":92,"column_start":5,"column_end":76}},{"value":"/ is passed to the underlying sink. A new value will not be accepted until","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/sink/mod.rs","byte_start":398225,"byte_end":398301,"line_start":93,"line_end":93,"column_start":5,"column_end":81}},{"value":"/ the stream has been drained","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/sink/mod.rs","byte_start":398306,"byte_end":398337,"line_start":94,"line_end":94,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/sink/mod.rs","byte_start":398342,"byte_end":398345,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the given sink, returning a wrapped","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/sink/mod.rs","byte_start":398350,"byte_end":398422,"line_start":96,"line_end":96,"column_start":5,"column_end":77}},{"value":"/ version, much like `Iterator::flat_map`.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/sink/mod.rs","byte_start":398427,"byte_end":398471,"line_start":97,"line_end":97,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/sink/mod.rs","byte_start":398476,"byte_end":398479,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/sink/mod.rs","byte_start":398484,"byte_end":398498,"line_start":99,"line_end":99,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/sink/mod.rs","byte_start":398503,"byte_end":398506,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/sink/mod.rs","byte_start":398511,"byte_end":398518,"line_start":101,"line_end":101,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/sink/mod.rs","byte_start":398523,"byte_end":398564,"line_start":102,"line_end":102,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/sink/mod.rs","byte_start":398569,"byte_end":398600,"line_start":103,"line_end":103,"column_start":5,"column_end":36}},{"value":"/ use futures::sink::SinkExt;","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/sink/mod.rs","byte_start":398605,"byte_end":398636,"line_start":104,"line_end":104,"column_start":5,"column_end":36}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/sink/mod.rs","byte_start":398641,"byte_end":398684,"line_start":105,"line_end":105,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/sink/mod.rs","byte_start":398689,"byte_end":398692,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ let (tx, rx) = mpsc::channel(5);","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/sink/mod.rs","byte_start":398697,"byte_end":398733,"line_start":107,"line_end":107,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/sink/mod.rs","byte_start":398738,"byte_end":398741,"line_start":108,"line_end":108,"column_start":5,"column_end":8}},{"value":"/ let mut tx = tx.with_flat_map(|x| {","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/sink/mod.rs","byte_start":398746,"byte_end":398785,"line_start":109,"line_end":109,"column_start":5,"column_end":44}},{"value":"/     stream::iter(vec![Ok(42); x])","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/sink/mod.rs","byte_start":398790,"byte_end":398827,"line_start":110,"line_end":110,"column_start":5,"column_end":42}},{"value":"/ });","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/sink/mod.rs","byte_start":398832,"byte_end":398839,"line_start":111,"line_end":111,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/sink/mod.rs","byte_start":398844,"byte_end":398847,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ tx.send(5).await.unwrap();","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/sink/mod.rs","byte_start":398852,"byte_end":398882,"line_start":113,"line_end":113,"column_start":5,"column_end":35}},{"value":"/ drop(tx);","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/sink/mod.rs","byte_start":398887,"byte_end":398900,"line_start":114,"line_end":114,"column_start":5,"column_end":18}},{"value":"/ let received: Vec<i32> = rx.collect().await;","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/sink/mod.rs","byte_start":398905,"byte_end":398953,"line_start":115,"line_end":115,"column_start":5,"column_end":53}},{"value":"/ assert_eq!(received, vec![42, 42, 42, 42, 42]);","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/sink/mod.rs","byte_start":398958,"byte_end":399009,"line_start":116,"line_end":116,"column_start":5,"column_end":56}},{"value":"/ # });","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/sink/mod.rs","byte_start":399014,"byte_end":399023,"line_start":117,"line_end":117,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/sink/mod.rs","byte_start":399028,"byte_end":399035,"line_start":118,"line_end":118,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6171},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/sink/mod.rs","byte_start":399796,"byte_end":399808,"line_start":143,"line_end":143,"column_start":8,"column_end":20},"name":"sink_map_err","qualname":"::sink::SinkExt::sink_map_err","value":"pub fn sink_map_err<E, F>(Self, F) -> SinkMapErr<Self, F> where\nF: FnOnce(Self::Error) -> E, Self: Sized","parent":{"krate":0,"index":6160},"children":[],"decl_id":null,"docs":" Transforms the error returned by the sink.\n","sig":null,"attributes":[{"value":"/ Transforms the error returned by the sink.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/sink/mod.rs","byte_start":399742,"byte_end":399788,"line_start":142,"line_end":142,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":6174},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/sink/mod.rs","byte_start":400176,"byte_end":400189,"line_start":154,"line_end":154,"column_start":8,"column_end":21},"name":"sink_err_into","qualname":"::sink::SinkExt::sink_err_into","value":"pub fn sink_err_into<E>(Self) -> err_into::SinkErrInto<Self, Item, E> where\nSelf: Sized, Self::Error: Into<E>","parent":{"krate":0,"index":6160},"children":[],"decl_id":null,"docs":" Map this sink's error to a different error type using the `Into` trait.","sig":null,"attributes":[{"value":"/ Map this sink's error to a different error type using the `Into` trait.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/sink/mod.rs","byte_start":399995,"byte_end":400070,"line_start":151,"line_end":151,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/sink/mod.rs","byte_start":400075,"byte_end":400078,"line_start":152,"line_end":152,"column_start":5,"column_end":8}},{"value":"/ If wanting to map errors of a `Sink + Stream`, use `.sink_err_into().err_into()`.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/sink/mod.rs","byte_start":400083,"byte_end":400168,"line_start":153,"line_end":153,"column_start":5,"column_end":90}}]},{"kind":"Method","id":{"krate":0,"index":6176},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/sink/mod.rs","byte_start":401024,"byte_end":401030,"line_start":175,"line_end":175,"column_start":8,"column_end":14},"name":"buffer","qualname":"::sink::SinkExt::buffer","value":"pub fn buffer(Self, usize) -> Buffer<Self, Item> where Self: Sized","parent":{"krate":0,"index":6160},"children":[],"decl_id":null,"docs":" Adds a fixed-size buffer to the current sink.","sig":null,"attributes":[{"value":"/ Adds a fixed-size buffer to the current sink.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/sink/mod.rs","byte_start":400375,"byte_end":400424,"line_start":162,"line_end":162,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/sink/mod.rs","byte_start":400429,"byte_end":400432,"line_start":163,"line_end":163,"column_start":5,"column_end":8}},{"value":"/ The resulting sink will buffer up to `capacity` items when the","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/sink/mod.rs","byte_start":400437,"byte_end":400503,"line_start":164,"line_end":164,"column_start":5,"column_end":71}},{"value":"/ underlying sink is unwilling to accept additional items. Calling `flush`","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/sink/mod.rs","byte_start":400508,"byte_end":400584,"line_start":165,"line_end":165,"column_start":5,"column_end":81}},{"value":"/ on the buffered sink will attempt to both empty the buffer and complete","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/sink/mod.rs","byte_start":400589,"byte_end":400664,"line_start":166,"line_end":166,"column_start":5,"column_end":80}},{"value":"/ processing on the underlying sink.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/sink/mod.rs","byte_start":400669,"byte_end":400707,"line_start":167,"line_end":167,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/sink/mod.rs","byte_start":400712,"byte_end":400715,"line_start":168,"line_end":168,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the given sink, returning a wrapped","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/sink/mod.rs","byte_start":400720,"byte_end":400792,"line_start":169,"line_end":169,"column_start":5,"column_end":77}},{"value":"/ version, much like `Iterator::map`.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/sink/mod.rs","byte_start":400797,"byte_end":400836,"line_start":170,"line_end":170,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/sink/mod.rs","byte_start":400841,"byte_end":400844,"line_start":171,"line_end":171,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/sink/mod.rs","byte_start":400849,"byte_end":400924,"line_start":172,"line_end":172,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/sink/mod.rs","byte_start":400929,"byte_end":400986,"line_start":173,"line_end":173,"column_start":5,"column_end":62}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/sink/mod.rs","byte_start":400991,"byte_end":401016,"line_start":174,"line_end":174,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":6177},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/sink/mod.rs","byte_start":401224,"byte_end":401229,"line_start":183,"line_end":183,"column_start":8,"column_end":13},"name":"close","qualname":"::sink::SinkExt::close","value":"pub fn close(&mut Self) -> Close<, Self, Item> where Self: Unpin","parent":{"krate":0,"index":6160},"children":[],"decl_id":null,"docs":" Close the sink.\n","sig":null,"attributes":[{"value":"/ Close the sink.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/sink/mod.rs","byte_start":401197,"byte_end":401216,"line_start":182,"line_end":182,"column_start":5,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":6178},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/sink/mod.rs","byte_start":401563,"byte_end":401569,"line_start":194,"line_end":194,"column_start":8,"column_end":14},"name":"fanout","qualname":"::sink::SinkExt::fanout","value":"pub fn fanout<Si>(Self, Si) -> Fanout<Self, Si> where Self: Sized,\nItem: Clone, Si: Sink<Item, Error = Self::Error>","parent":{"krate":0,"index":6160},"children":[],"decl_id":null,"docs":" Fanout items to multiple sinks.","sig":null,"attributes":[{"value":"/ Fanout items to multiple sinks.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/sink/mod.rs","byte_start":401384,"byte_end":401419,"line_start":190,"line_end":190,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/sink/mod.rs","byte_start":401424,"byte_end":401427,"line_start":191,"line_end":191,"column_start":5,"column_end":8}},{"value":"/ This adapter clones each incoming item and forwards it to both this as well as","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/sink/mod.rs","byte_start":401432,"byte_end":401514,"line_start":192,"line_end":192,"column_start":5,"column_end":87}},{"value":"/ the other sink at the same time.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/sink/mod.rs","byte_start":401519,"byte_end":401555,"line_start":193,"line_end":193,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":6180},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/sink/mod.rs","byte_start":401996,"byte_end":402001,"line_start":207,"line_end":207,"column_start":8,"column_end":13},"name":"flush","qualname":"::sink::SinkExt::flush","value":"pub fn flush(&mut Self) -> Flush<, Self, Item> where Self: Unpin","parent":{"krate":0,"index":6160},"children":[],"decl_id":null,"docs":" Flush the sink, processing all pending items.","sig":null,"attributes":[{"value":"/ Flush the sink, processing all pending items.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/sink/mod.rs","byte_start":401795,"byte_end":401844,"line_start":203,"line_end":203,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/sink/mod.rs","byte_start":401849,"byte_end":401852,"line_start":204,"line_end":204,"column_start":5,"column_end":8}},{"value":"/ This adapter is intended to be used when you want to stop sending to the sink","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/sink/mod.rs","byte_start":401857,"byte_end":401938,"line_start":205,"line_end":205,"column_start":5,"column_end":86}},{"value":"/ until all current requests are processed.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/sink/mod.rs","byte_start":401943,"byte_end":401988,"line_start":206,"line_end":206,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":6181},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/sink/mod.rs","byte_start":402483,"byte_end":402487,"line_start":220,"line_end":220,"column_start":8,"column_end":12},"name":"send","qualname":"::sink::SinkExt::send","value":"pub fn send(&mut Self, Item) -> Send<, Self, Item> where Self: Unpin","parent":{"krate":0,"index":6160},"children":[],"decl_id":null,"docs":" A future that completes after the given item has been fully processed\n into the sink, including flushing.","sig":null,"attributes":[{"value":"/ A future that completes after the given item has been fully processed","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/sink/mod.rs","byte_start":402156,"byte_end":402229,"line_start":214,"line_end":214,"column_start":5,"column_end":78}},{"value":"/ into the sink, including flushing.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/sink/mod.rs","byte_start":402234,"byte_end":402272,"line_start":215,"line_end":215,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/sink/mod.rs","byte_start":402277,"byte_end":402280,"line_start":216,"line_end":216,"column_start":5,"column_end":8}},{"value":"/ Note that, **because of the flushing requirement, it is usually better","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/sink/mod.rs","byte_start":402285,"byte_end":402359,"line_start":217,"line_end":217,"column_start":5,"column_end":79}},{"value":"/ to batch together items to send via `feed` or `send_all`,","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/sink/mod.rs","byte_start":402364,"byte_end":402425,"line_start":218,"line_end":218,"column_start":5,"column_end":66}},{"value":"/ rather than flushing between each item.**","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/sink/mod.rs","byte_start":402430,"byte_end":402475,"line_start":219,"line_end":219,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":6182},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/sink/mod.rs","byte_start":402964,"byte_end":402968,"line_start":233,"line_end":233,"column_start":8,"column_end":12},"name":"feed","qualname":"::sink::SinkExt::feed","value":"pub fn feed(&mut Self, Item) -> Feed<, Self, Item> where Self: Unpin","parent":{"krate":0,"index":6160},"children":[],"decl_id":null,"docs":" A future that completes after the given item has been received\n by the sink.","sig":null,"attributes":[{"value":"/ A future that completes after the given item has been received","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/sink/mod.rs","byte_start":402658,"byte_end":402724,"line_start":227,"line_end":227,"column_start":5,"column_end":71}},{"value":"/ by the sink.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/sink/mod.rs","byte_start":402729,"byte_end":402745,"line_start":228,"line_end":228,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/sink/mod.rs","byte_start":402750,"byte_end":402753,"line_start":229,"line_end":229,"column_start":5,"column_end":8}},{"value":"/ Unlike `send`, the returned future does not flush the sink.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/sink/mod.rs","byte_start":402758,"byte_end":402821,"line_start":230,"line_end":230,"column_start":5,"column_end":68}},{"value":"/ It is the caller's responsibility to ensure all pending items","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/sink/mod.rs","byte_start":402826,"byte_end":402891,"line_start":231,"line_end":231,"column_start":5,"column_end":70}},{"value":"/ are processed, which can be done via `flush` or `close`.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/sink/mod.rs","byte_start":402896,"byte_end":402956,"line_start":232,"line_end":232,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":6183},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/sink/mod.rs","byte_start":403875,"byte_end":403883,"line_start":252,"line_end":252,"column_start":8,"column_end":16},"name":"send_all","qualname":"::sink::SinkExt::send_all","value":"pub fn send_all<'a, St: ?Sized>(&'a mut Self, &'a mut St) -> SendAll where\nSt: TryStream<Ok = Item, Error = Item> + Stream + Unpin, Self: Unpin","parent":{"krate":0,"index":6160},"children":[],"decl_id":null,"docs":" A future that completes after the given stream has been fully processed\n into the sink, including flushing.","sig":null,"attributes":[{"value":"/ A future that completes after the given stream has been fully processed","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/sink/mod.rs","byte_start":403139,"byte_end":403214,"line_start":240,"line_end":240,"column_start":5,"column_end":80}},{"value":"/ into the sink, including flushing.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/sink/mod.rs","byte_start":403219,"byte_end":403257,"line_start":241,"line_end":241,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/sink/mod.rs","byte_start":403262,"byte_end":403265,"line_start":242,"line_end":242,"column_start":5,"column_end":8}},{"value":"/ This future will drive the stream to keep producing items until it is","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/sink/mod.rs","byte_start":403270,"byte_end":403343,"line_start":243,"line_end":243,"column_start":5,"column_end":78}},{"value":"/ exhausted, sending each item to the sink. It will complete once both the","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/sink/mod.rs","byte_start":403348,"byte_end":403424,"line_start":244,"line_end":244,"column_start":5,"column_end":81}},{"value":"/ stream is exhausted, the sink has received all items, and the sink has","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/sink/mod.rs","byte_start":403429,"byte_end":403503,"line_start":245,"line_end":245,"column_start":5,"column_end":79}},{"value":"/ been flushed. Note that the sink is **not** closed. If the stream produces","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/sink/mod.rs","byte_start":403508,"byte_end":403586,"line_start":246,"line_end":246,"column_start":5,"column_end":83}},{"value":"/ an error, that error will be returned by this future without flushing the sink.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/sink/mod.rs","byte_start":403591,"byte_end":403674,"line_start":247,"line_end":247,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/sink/mod.rs","byte_start":403679,"byte_end":403682,"line_start":248,"line_end":248,"column_start":5,"column_end":8}},{"value":"/ Doing `sink.send_all(stream)` is roughly equivalent to","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/sink/mod.rs","byte_start":403687,"byte_end":403745,"line_start":249,"line_end":249,"column_start":5,"column_end":63}},{"value":"/ `stream.forward(sink)`. The returned future will exhaust all items from","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/sink/mod.rs","byte_start":403750,"byte_end":403825,"line_start":250,"line_end":250,"column_start":5,"column_end":80}},{"value":"/ `stream` and send them to `self`.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/sink/mod.rs","byte_start":403830,"byte_end":403867,"line_start":251,"line_end":251,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":6186},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/sink/mod.rs","byte_start":404681,"byte_end":404690,"line_start":268,"line_end":268,"column_start":8,"column_end":17},"name":"left_sink","qualname":"::sink::SinkExt::left_sink","value":"pub fn left_sink<Si2>(Self) -> Either<Self, Si2> where Si2: Sink<Item, Error =\nSelf::Error>, Self: Sized","parent":{"krate":0,"index":6160},"children":[],"decl_id":null,"docs":" Wrap this sink in an `Either` sink, making it the left-hand variant\n of that `Either`.","sig":null,"attributes":[{"value":"/ Wrap this sink in an `Either` sink, making it the left-hand variant","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/sink/mod.rs","byte_start":404408,"byte_end":404479,"line_start":263,"line_end":263,"column_start":5,"column_end":76}},{"value":"/ of that `Either`.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/sink/mod.rs","byte_start":404484,"byte_end":404505,"line_start":264,"line_end":264,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/sink/mod.rs","byte_start":404510,"byte_end":404513,"line_start":265,"line_end":265,"column_start":5,"column_end":8}},{"value":"/ This can be used in combination with the `right_sink` method to write `if`","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/sink/mod.rs","byte_start":404518,"byte_end":404596,"line_start":266,"line_end":266,"column_start":5,"column_end":83}},{"value":"/ statements that evaluate to different streams in different branches.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/sink/mod.rs","byte_start":404601,"byte_end":404673,"line_start":267,"line_end":267,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":6188},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/sink/mod.rs","byte_start":405158,"byte_end":405168,"line_start":281,"line_end":281,"column_start":8,"column_end":18},"name":"right_sink","qualname":"::sink::SinkExt::right_sink","value":"pub fn right_sink<Si1>(Self) -> Either<Si1, Self> where Si1: Sink<Item, Error\n= Self::Error>, Self: Sized","parent":{"krate":0,"index":6160},"children":[],"decl_id":null,"docs":" Wrap this stream in an `Either` stream, making it the right-hand variant\n of that `Either`.","sig":null,"attributes":[{"value":"/ Wrap this stream in an `Either` stream, making it the right-hand variant","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/sink/mod.rs","byte_start":404881,"byte_end":404957,"line_start":276,"line_end":276,"column_start":5,"column_end":81}},{"value":"/ of that `Either`.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/sink/mod.rs","byte_start":404962,"byte_end":404983,"line_start":277,"line_end":277,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/sink/mod.rs","byte_start":404988,"byte_end":404991,"line_start":278,"line_end":278,"column_start":5,"column_end":8}},{"value":"/ This can be used in combination with the `left_sink` method to write `if`","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/sink/mod.rs","byte_start":404996,"byte_end":405073,"line_start":279,"line_end":279,"column_start":5,"column_end":82}},{"value":"/ statements that evaluate to different streams in different branches.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/sink/mod.rs","byte_start":405078,"byte_end":405150,"line_start":280,"line_end":280,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":6190},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/sink/mod.rs","byte_start":405813,"byte_end":405829,"line_start":302,"line_end":302,"column_start":8,"column_end":24},"name":"poll_ready_unpin","qualname":"::sink::SinkExt::poll_ready_unpin","value":"pub fn poll_ready_unpin(&mut Self, &mut Context)\n-> Poll<Result<(), Self::Error>> where Self: Unpin","parent":{"krate":0,"index":6160},"children":[],"decl_id":null,"docs":" A convenience method for calling [`Sink::poll_ready`] on [`Unpin`]\n sink types.\n","sig":null,"attributes":[{"value":"/ A convenience method for calling [`Sink::poll_ready`] on [`Unpin`]","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/sink/mod.rs","byte_start":405715,"byte_end":405785,"line_start":300,"line_end":300,"column_start":5,"column_end":75}},{"value":"/ sink types.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/sink/mod.rs","byte_start":405790,"byte_end":405805,"line_start":301,"line_end":301,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":6191},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/sink/mod.rs","byte_start":406080,"byte_end":406096,"line_start":311,"line_end":311,"column_start":8,"column_end":24},"name":"start_send_unpin","qualname":"::sink::SinkExt::start_send_unpin","value":"pub fn start_send_unpin(&mut Self, Item) -> Result<(), Self::Error> where\nSelf: Unpin","parent":{"krate":0,"index":6160},"children":[],"decl_id":null,"docs":" A convenience method for calling [`Sink::start_send`] on [`Unpin`]\n sink types.\n","sig":null,"attributes":[{"value":"/ A convenience method for calling [`Sink::start_send`] on [`Unpin`]","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/sink/mod.rs","byte_start":405982,"byte_end":406052,"line_start":309,"line_end":309,"column_start":5,"column_end":75}},{"value":"/ sink types.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/sink/mod.rs","byte_start":406057,"byte_end":406072,"line_start":310,"line_end":310,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":6192},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/sink/mod.rs","byte_start":406333,"byte_end":406349,"line_start":320,"line_end":320,"column_start":8,"column_end":24},"name":"poll_flush_unpin","qualname":"::sink::SinkExt::poll_flush_unpin","value":"pub fn poll_flush_unpin(&mut Self, &mut Context)\n-> Poll<Result<(), Self::Error>> where Self: Unpin","parent":{"krate":0,"index":6160},"children":[],"decl_id":null,"docs":" A convenience method for calling [`Sink::poll_flush`] on [`Unpin`]\n sink types.\n","sig":null,"attributes":[{"value":"/ A convenience method for calling [`Sink::poll_flush`] on [`Unpin`]","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/sink/mod.rs","byte_start":406235,"byte_end":406305,"line_start":318,"line_end":318,"column_start":5,"column_end":75}},{"value":"/ sink types.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/sink/mod.rs","byte_start":406310,"byte_end":406325,"line_start":319,"line_end":319,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":6193},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/sink/mod.rs","byte_start":406600,"byte_end":406616,"line_start":329,"line_end":329,"column_start":8,"column_end":24},"name":"poll_close_unpin","qualname":"::sink::SinkExt::poll_close_unpin","value":"pub fn poll_close_unpin(&mut Self, &mut Context)\n-> Poll<Result<(), Self::Error>> where Self: Unpin","parent":{"krate":0,"index":6160},"children":[],"decl_id":null,"docs":" A convenience method for calling [`Sink::poll_close`] on [`Unpin`]\n sink types.\n","sig":null,"attributes":[{"value":"/ A convenience method for calling [`Sink::poll_close`] on [`Unpin`]","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/sink/mod.rs","byte_start":406502,"byte_end":406572,"line_start":327,"line_end":327,"column_start":5,"column_end":75}},{"value":"/ sink types.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/sink/mod.rs","byte_start":406577,"byte_end":406592,"line_start":328,"line_end":328,"column_start":5,"column_end":20}}]},{"kind":"Mod","id":{"krate":0,"index":6205},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"task","qualname":"::task","value":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/mod.rs","parent":null,"children":[{"krate":0,"index":6206},{"krate":0,"index":6207},{"krate":0,"index":6210},{"krate":0,"index":6213},{"krate":0,"index":6216},{"krate":0,"index":6219},{"krate":0,"index":6222},{"krate":0,"index":6223},{"krate":0,"index":6226},{"krate":0,"index":6229},{"krate":0,"index":6232},{"krate":0,"index":6235},{"krate":0,"index":6238},{"krate":0,"index":6241},{"krate":0,"index":6244},{"krate":0,"index":15646},{"krate":0,"index":15649},{"krate":0,"index":15652},{"krate":0,"index":15653},{"krate":0,"index":15656},{"krate":0,"index":15659},{"krate":0,"index":6247},{"krate":0,"index":6292},{"krate":0,"index":6293},{"krate":0,"index":6296}],"decl_id":null,"docs":" Tools for working with tasks.","sig":null,"attributes":[{"value":"/ Tools for working with tasks.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/mod.rs","byte_start":435935,"byte_end":435968,"line_start":1,"line_end":1,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/mod.rs","byte_start":435969,"byte_end":435972,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module contains:","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/mod.rs","byte_start":435973,"byte_end":435998,"line_start":3,"line_end":3,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/mod.rs","byte_start":435999,"byte_end":436002,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ - [`Spawn`], a trait for spawning new tasks.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/mod.rs","byte_start":436003,"byte_end":436051,"line_start":5,"line_end":5,"column_start":1,"column_end":49}},{"value":"/ - [`Context`], a context of an asynchronous task,","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/mod.rs","byte_start":436052,"byte_end":436105,"line_start":6,"line_end":6,"column_start":1,"column_end":54}},{"value":"/   including a handle for waking up the task.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/mod.rs","byte_start":436106,"byte_end":436154,"line_start":7,"line_end":7,"column_start":1,"column_end":49}},{"value":"/ - [`Waker`], a handle for waking up a task.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/mod.rs","byte_start":436155,"byte_end":436202,"line_start":8,"line_end":8,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/mod.rs","byte_start":436203,"byte_end":436206,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ The remaining types and traits in the module are used for implementing","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/mod.rs","byte_start":436207,"byte_end":436281,"line_start":10,"line_end":10,"column_start":1,"column_end":75}},{"value":"/ executors or dealing with synchronization issues around task wakeup.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/mod.rs","byte_start":436282,"byte_end":436354,"line_start":11,"line_end":11,"column_start":1,"column_end":73}}]},{"kind":"Trait","id":{"krate":0,"index":6282},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/spawn.rs","byte_start":437543,"byte_end":437551,"line_start":20,"line_end":20,"column_start":11,"column_end":19},"name":"SpawnExt","qualname":"::task::spawn::SpawnExt","value":"SpawnExt: Spawn","parent":null,"children":[{"krate":0,"index":6283},{"krate":0,"index":6285}],"decl_id":null,"docs":" Extension trait for `Spawn`.\n","sig":null,"attributes":[{"value":"/ Extension trait for `Spawn`.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/spawn.rs","byte_start":437500,"byte_end":437532,"line_start":19,"line_end":19,"column_start":1,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":6283},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/spawn.rs","byte_start":438548,"byte_end":438553,"line_start":46,"line_end":46,"column_start":8,"column_end":13},"name":"spawn","qualname":"::task::spawn::SpawnExt::spawn","value":"pub fn spawn<Fut>(&Self, Fut) -> Result<(), SpawnError> where\nFut: Future<Output = ()> + Send + 'static","parent":{"krate":0,"index":6282},"children":[],"decl_id":null,"docs":" Spawns a task that polls the given future with output `()` to\n completion.","sig":null,"attributes":[{"value":"/ Spawns a task that polls the given future with output `()` to","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/spawn.rs","byte_start":437565,"byte_end":437630,"line_start":21,"line_end":21,"column_start":5,"column_end":70}},{"value":"/ completion.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/spawn.rs","byte_start":437635,"byte_end":437650,"line_start":22,"line_end":22,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/spawn.rs","byte_start":437655,"byte_end":437658,"line_start":23,"line_end":23,"column_start":5,"column_end":8}},{"value":"/ This method returns a [`Result`] that contains a [`SpawnError`] if","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/spawn.rs","byte_start":437663,"byte_end":437733,"line_start":24,"line_end":24,"column_start":5,"column_end":75}},{"value":"/ spawning fails.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/spawn.rs","byte_start":437738,"byte_end":437757,"line_start":25,"line_end":25,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/spawn.rs","byte_start":437762,"byte_end":437765,"line_start":26,"line_end":26,"column_start":5,"column_end":8}},{"value":"/ You can use [`spawn_with_handle`](SpawnExt::spawn_with_handle) if","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/spawn.rs","byte_start":437770,"byte_end":437839,"line_start":27,"line_end":27,"column_start":5,"column_end":74}},{"value":"/ you want to spawn a future with output other than `()` or if you want","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/spawn.rs","byte_start":437844,"byte_end":437917,"line_start":28,"line_end":28,"column_start":5,"column_end":78}},{"value":"/ to be able to await its completion.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/spawn.rs","byte_start":437922,"byte_end":437961,"line_start":29,"line_end":29,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/spawn.rs","byte_start":437966,"byte_end":437969,"line_start":30,"line_end":30,"column_start":5,"column_end":8}},{"value":"/ Note this method will eventually be replaced with the upcoming","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/spawn.rs","byte_start":437974,"byte_end":438040,"line_start":31,"line_end":31,"column_start":5,"column_end":71}},{"value":"/ `Spawn::spawn` method which will take a `dyn Future` as input.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/spawn.rs","byte_start":438045,"byte_end":438111,"line_start":32,"line_end":32,"column_start":5,"column_end":71}},{"value":"/ Technical limitations prevent `Spawn::spawn` from being implemented","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/spawn.rs","byte_start":438116,"byte_end":438187,"line_start":33,"line_end":33,"column_start":5,"column_end":76}},{"value":"/ today. Feel free to use this method in the meantime.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/spawn.rs","byte_start":438192,"byte_end":438248,"line_start":34,"line_end":34,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/spawn.rs","byte_start":438253,"byte_end":438256,"line_start":35,"line_end":35,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/spawn.rs","byte_start":438261,"byte_end":438268,"line_start":36,"line_end":36,"column_start":5,"column_end":12}},{"value":"/ use futures::executor::ThreadPool;","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/spawn.rs","byte_start":438273,"byte_end":438311,"line_start":37,"line_end":37,"column_start":5,"column_end":43}},{"value":"/ use futures::task::SpawnExt;","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/spawn.rs","byte_start":438316,"byte_end":438348,"line_start":38,"line_end":38,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/spawn.rs","byte_start":438353,"byte_end":438356,"line_start":39,"line_end":39,"column_start":5,"column_end":8}},{"value":"/ let executor = ThreadPool::new().unwrap();","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/spawn.rs","byte_start":438361,"byte_end":438407,"line_start":40,"line_end":40,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/spawn.rs","byte_start":438412,"byte_end":438415,"line_start":41,"line_end":41,"column_start":5,"column_end":8}},{"value":"/ let future = async { /* ... */ };","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/spawn.rs","byte_start":438420,"byte_end":438457,"line_start":42,"line_end":42,"column_start":5,"column_end":42}},{"value":"/ executor.spawn(future).unwrap();","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/spawn.rs","byte_start":438462,"byte_end":438498,"line_start":43,"line_end":43,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/spawn.rs","byte_start":438503,"byte_end":438510,"line_start":44,"line_end":44,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/spawn.rs","byte_start":438515,"byte_end":438540,"line_start":45,"line_end":45,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":6285},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/spawn.rs","byte_start":439659,"byte_end":439676,"line_start":74,"line_end":74,"column_start":8,"column_end":25},"name":"spawn_with_handle","qualname":"::task::spawn::SpawnExt::spawn_with_handle","value":"pub fn spawn_with_handle<Fut>(&Self, Fut)\n-> Result<RemoteHandle<Fut::Output>, SpawnError> where Fut: Future + Send +\n'static, Fut::Output: Send","parent":{"krate":0,"index":6282},"children":[],"decl_id":null,"docs":" Spawns a task that polls the given future to completion and returns a\n future that resolves to the spawned future's output.","sig":null,"attributes":[{"value":"/ Spawns a task that polls the given future to completion and returns a","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/spawn.rs","byte_start":438740,"byte_end":438813,"line_start":53,"line_end":53,"column_start":5,"column_end":78}},{"value":"/ future that resolves to the spawned future's output.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/spawn.rs","byte_start":438818,"byte_end":438874,"line_start":54,"line_end":54,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/spawn.rs","byte_start":438879,"byte_end":438882,"line_start":55,"line_end":55,"column_start":5,"column_end":8}},{"value":"/ This method returns a [`Result`] that contains a [`RemoteHandle`](crate::future::RemoteHandle), or, if","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/spawn.rs","byte_start":438887,"byte_end":438993,"line_start":56,"line_end":56,"column_start":5,"column_end":111}},{"value":"/ spawning fails, a [`SpawnError`]. [`RemoteHandle`](crate::future::RemoteHandle) is a future that","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/spawn.rs","byte_start":438998,"byte_end":439098,"line_start":57,"line_end":57,"column_start":5,"column_end":105}},{"value":"/ resolves to the output of the spawned future.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/spawn.rs","byte_start":439103,"byte_end":439152,"line_start":58,"line_end":58,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/spawn.rs","byte_start":439157,"byte_end":439160,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/spawn.rs","byte_start":439165,"byte_end":439172,"line_start":60,"line_end":60,"column_start":5,"column_end":12}},{"value":"/ use futures::executor::{block_on, ThreadPool};","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/spawn.rs","byte_start":439177,"byte_end":439227,"line_start":61,"line_end":61,"column_start":5,"column_end":55}},{"value":"/ use futures::future;","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/spawn.rs","byte_start":439232,"byte_end":439256,"line_start":62,"line_end":62,"column_start":5,"column_end":29}},{"value":"/ use futures::task::SpawnExt;","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/spawn.rs","byte_start":439261,"byte_end":439293,"line_start":63,"line_end":63,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/spawn.rs","byte_start":439298,"byte_end":439301,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ let executor = ThreadPool::new().unwrap();","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/spawn.rs","byte_start":439306,"byte_end":439352,"line_start":65,"line_end":65,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/spawn.rs","byte_start":439357,"byte_end":439360,"line_start":66,"line_end":66,"column_start":5,"column_end":8}},{"value":"/ let future = future::ready(1);","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/spawn.rs","byte_start":439365,"byte_end":439399,"line_start":67,"line_end":67,"column_start":5,"column_end":39}},{"value":"/ let join_handle_fut = executor.spawn_with_handle(future).unwrap();","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/spawn.rs","byte_start":439404,"byte_end":439474,"line_start":68,"line_end":68,"column_start":5,"column_end":75}},{"value":"/ assert_eq!(block_on(join_handle_fut), 1);","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/spawn.rs","byte_start":439479,"byte_end":439524,"line_start":69,"line_end":69,"column_start":5,"column_end":50}},{"value":"/ ```","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/spawn.rs","byte_start":439529,"byte_end":439536,"line_start":70,"line_end":70,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"channel\")","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/spawn.rs","byte_start":439541,"byte_end":439568,"line_start":71,"line_end":71,"column_start":5,"column_end":32}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/spawn.rs","byte_start":439628,"byte_end":439651,"line_start":73,"line_end":73,"column_start":5,"column_end":28}}]},{"kind":"Trait","id":{"krate":0,"index":6287},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/spawn.rs","byte_start":440307,"byte_end":440320,"line_start":97,"line_end":97,"column_start":11,"column_end":24},"name":"LocalSpawnExt","qualname":"::task::spawn::LocalSpawnExt","value":"LocalSpawnExt: LocalSpawn","parent":null,"children":[{"krate":0,"index":6288},{"krate":0,"index":6290}],"decl_id":null,"docs":" Extension trait for `LocalSpawn`.\n","sig":null,"attributes":[{"value":"/ Extension trait for `LocalSpawn`.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/spawn.rs","byte_start":440259,"byte_end":440296,"line_start":96,"line_end":96,"column_start":1,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":6288},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/spawn.rs","byte_start":441363,"byte_end":441374,"line_start":124,"line_end":124,"column_start":8,"column_end":19},"name":"spawn_local","qualname":"::task::spawn::LocalSpawnExt::spawn_local","value":"pub fn spawn_local<Fut>(&Self, Fut) -> Result<(), SpawnError> where\nFut: Future<Output = ()> + 'static","parent":{"krate":0,"index":6287},"children":[],"decl_id":null,"docs":" Spawns a task that polls the given future with output `()` to\n completion.","sig":null,"attributes":[{"value":"/ Spawns a task that polls the given future with output `()` to","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/spawn.rs","byte_start":440339,"byte_end":440404,"line_start":98,"line_end":98,"column_start":5,"column_end":70}},{"value":"/ completion.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/spawn.rs","byte_start":440409,"byte_end":440424,"line_start":99,"line_end":99,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/spawn.rs","byte_start":440429,"byte_end":440432,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ This method returns a [`Result`] that contains a [`SpawnError`] if","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/spawn.rs","byte_start":440437,"byte_end":440507,"line_start":101,"line_end":101,"column_start":5,"column_end":75}},{"value":"/ spawning fails.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/spawn.rs","byte_start":440512,"byte_end":440531,"line_start":102,"line_end":102,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/spawn.rs","byte_start":440536,"byte_end":440539,"line_start":103,"line_end":103,"column_start":5,"column_end":8}},{"value":"/ You can use [`spawn_with_handle`](SpawnExt::spawn_with_handle) if","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/spawn.rs","byte_start":440544,"byte_end":440613,"line_start":104,"line_end":104,"column_start":5,"column_end":74}},{"value":"/ you want to spawn a future with output other than `()` or if you want","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/spawn.rs","byte_start":440618,"byte_end":440691,"line_start":105,"line_end":105,"column_start":5,"column_end":78}},{"value":"/ to be able to await its completion.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/spawn.rs","byte_start":440696,"byte_end":440735,"line_start":106,"line_end":106,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/spawn.rs","byte_start":440740,"byte_end":440743,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ Note this method will eventually be replaced with the upcoming","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/spawn.rs","byte_start":440748,"byte_end":440814,"line_start":108,"line_end":108,"column_start":5,"column_end":71}},{"value":"/ `Spawn::spawn` method which will take a `dyn Future` as input.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/spawn.rs","byte_start":440819,"byte_end":440885,"line_start":109,"line_end":109,"column_start":5,"column_end":71}},{"value":"/ Technical limitations prevent `Spawn::spawn` from being implemented","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/spawn.rs","byte_start":440890,"byte_end":440961,"line_start":110,"line_end":110,"column_start":5,"column_end":76}},{"value":"/ today. Feel free to use this method in the meantime.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/spawn.rs","byte_start":440966,"byte_end":441022,"line_start":111,"line_end":111,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/spawn.rs","byte_start":441027,"byte_end":441030,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/spawn.rs","byte_start":441035,"byte_end":441042,"line_start":113,"line_end":113,"column_start":5,"column_end":12}},{"value":"/ use futures::executor::LocalPool;","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/spawn.rs","byte_start":441047,"byte_end":441084,"line_start":114,"line_end":114,"column_start":5,"column_end":42}},{"value":"/ use futures::task::LocalSpawnExt;","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/spawn.rs","byte_start":441089,"byte_end":441126,"line_start":115,"line_end":115,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/spawn.rs","byte_start":441131,"byte_end":441134,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/ let executor = LocalPool::new();","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/spawn.rs","byte_start":441139,"byte_end":441175,"line_start":117,"line_end":117,"column_start":5,"column_end":41}},{"value":"/ let spawner = executor.spawner();","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/spawn.rs","byte_start":441180,"byte_end":441217,"line_start":118,"line_end":118,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/spawn.rs","byte_start":441222,"byte_end":441225,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ let future = async { /* ... */ };","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/spawn.rs","byte_start":441230,"byte_end":441267,"line_start":120,"line_end":120,"column_start":5,"column_end":42}},{"value":"/ spawner.spawn_local(future).unwrap();","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/spawn.rs","byte_start":441272,"byte_end":441313,"line_start":121,"line_end":121,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/spawn.rs","byte_start":441318,"byte_end":441325,"line_start":122,"line_end":122,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/spawn.rs","byte_start":441330,"byte_end":441355,"line_start":123,"line_end":123,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":6290},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/spawn.rs","byte_start":442493,"byte_end":442516,"line_start":152,"line_end":152,"column_start":8,"column_end":31},"name":"spawn_local_with_handle","qualname":"::task::spawn::LocalSpawnExt::spawn_local_with_handle","value":"pub fn spawn_local_with_handle<Fut>(&Self, Fut)\n-> Result<RemoteHandle<Fut::Output>, SpawnError> where Fut: Future + 'static","parent":{"krate":0,"index":6287},"children":[],"decl_id":null,"docs":" Spawns a task that polls the given future to completion and returns a\n future that resolves to the spawned future's output.","sig":null,"attributes":[{"value":"/ Spawns a task that polls the given future to completion and returns a","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/spawn.rs","byte_start":441565,"byte_end":441638,"line_start":131,"line_end":131,"column_start":5,"column_end":78}},{"value":"/ future that resolves to the spawned future's output.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/spawn.rs","byte_start":441643,"byte_end":441699,"line_start":132,"line_end":132,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/spawn.rs","byte_start":441704,"byte_end":441707,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ This method returns a [`Result`] that contains a [`RemoteHandle`](crate::future::RemoteHandle), or, if","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/spawn.rs","byte_start":441712,"byte_end":441818,"line_start":134,"line_end":134,"column_start":5,"column_end":111}},{"value":"/ spawning fails, a [`SpawnError`]. [`RemoteHandle`](crate::future::RemoteHandle) is a future that","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/spawn.rs","byte_start":441823,"byte_end":441923,"line_start":135,"line_end":135,"column_start":5,"column_end":105}},{"value":"/ resolves to the output of the spawned future.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/spawn.rs","byte_start":441928,"byte_end":441977,"line_start":136,"line_end":136,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/spawn.rs","byte_start":441982,"byte_end":441985,"line_start":137,"line_end":137,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/spawn.rs","byte_start":441990,"byte_end":441997,"line_start":138,"line_end":138,"column_start":5,"column_end":12}},{"value":"/ use futures::executor::LocalPool;","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/spawn.rs","byte_start":442002,"byte_end":442039,"line_start":139,"line_end":139,"column_start":5,"column_end":42}},{"value":"/ use futures::task::LocalSpawnExt;","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/spawn.rs","byte_start":442044,"byte_end":442081,"line_start":140,"line_end":140,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/spawn.rs","byte_start":442086,"byte_end":442089,"line_start":141,"line_end":141,"column_start":5,"column_end":8}},{"value":"/ let mut executor = LocalPool::new();","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/spawn.rs","byte_start":442094,"byte_end":442134,"line_start":142,"line_end":142,"column_start":5,"column_end":45}},{"value":"/ let spawner = executor.spawner();","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/spawn.rs","byte_start":442139,"byte_end":442176,"line_start":143,"line_end":143,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/spawn.rs","byte_start":442181,"byte_end":442184,"line_start":144,"line_end":144,"column_start":5,"column_end":8}},{"value":"/ let future = async { 1 };","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/spawn.rs","byte_start":442189,"byte_end":442218,"line_start":145,"line_end":145,"column_start":5,"column_end":34}},{"value":"/ let join_handle_fut = spawner.spawn_local_with_handle(future).unwrap();","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/spawn.rs","byte_start":442223,"byte_end":442298,"line_start":146,"line_end":146,"column_start":5,"column_end":80}},{"value":"/ assert_eq!(executor.run_until(join_handle_fut), 1);","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/spawn.rs","byte_start":442303,"byte_end":442358,"line_start":147,"line_end":147,"column_start":5,"column_end":60}},{"value":"/ ```","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/spawn.rs","byte_start":442363,"byte_end":442370,"line_start":148,"line_end":148,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"channel\")","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/spawn.rs","byte_start":442375,"byte_end":442402,"line_start":149,"line_end":149,"column_start":5,"column_end":32}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/spawn.rs","byte_start":442462,"byte_end":442485,"line_start":151,"line_end":151,"column_start":5,"column_end":28}}]},{"kind":"Mod","id":{"krate":0,"index":6299},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/never.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"never","qualname":"::never","value":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/never.rs","parent":null,"children":[{"krate":0,"index":6300}],"decl_id":null,"docs":" This module contains the `Never` type.","sig":null,"attributes":[{"value":"/ This module contains the `Never` type.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/never.rs","byte_start":442779,"byte_end":442821,"line_start":1,"line_end":1,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/never.rs","byte_start":442822,"byte_end":442825,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ Values of this type can never be created and will never exist.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/never.rs","byte_start":442826,"byte_end":442892,"line_start":3,"line_end":3,"column_start":1,"column_end":67}}]},{"kind":"Type","id":{"krate":0,"index":6300},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/never.rs","byte_start":443529,"byte_end":443534,"line_start":18,"line_end":18,"column_start":10,"column_end":15},"name":"Never","qualname":"::never::Never","value":"core::convert::Infallible","parent":null,"children":[],"decl_id":null,"docs":" A type with no possible values.","sig":null,"attributes":[{"value":"/ A type with no possible values.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/never.rs","byte_start":442894,"byte_end":442929,"line_start":5,"line_end":5,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/never.rs","byte_start":442930,"byte_end":442933,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ This is used to indicate values which can never be created, such as the","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/never.rs","byte_start":442934,"byte_end":443009,"line_start":7,"line_end":7,"column_start":1,"column_end":76}},{"value":"/ error type of infallible futures.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/never.rs","byte_start":443010,"byte_end":443047,"line_start":8,"line_end":8,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/never.rs","byte_start":443048,"byte_end":443051,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This type is a stable equivalent to the `!` type from `std`.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/never.rs","byte_start":443052,"byte_end":443116,"line_start":10,"line_end":10,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/never.rs","byte_start":443117,"byte_end":443120,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ This is currently an alias for [`std::convert::Infallible`], but in","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/never.rs","byte_start":443121,"byte_end":443192,"line_start":12,"line_end":12,"column_start":1,"column_end":72}},{"value":"/ the future it may be an alias for [`!`][never].","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/never.rs","byte_start":443193,"byte_end":443244,"line_start":13,"line_end":13,"column_start":1,"column_end":52}},{"value":"/ See [\"Future compatibility\" section of `std::convert::Infallible`][infallible] for more.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/never.rs","byte_start":443245,"byte_end":443337,"line_start":14,"line_end":14,"column_start":1,"column_end":93}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/never.rs","byte_start":443338,"byte_end":443341,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ [never]: https://doc.rust-lang.org/nightly/std/primitive.never.html","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/never.rs","byte_start":443342,"byte_end":443413,"line_start":16,"line_end":16,"column_start":1,"column_end":72}},{"value":"/ [infallible]: https://doc.rust-lang.org/nightly/std/convert/enum.Infallible.html#future-compatibility","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/never.rs","byte_start":443414,"byte_end":443519,"line_start":17,"line_end":17,"column_start":1,"column_end":106}}]},{"kind":"Mod","id":{"krate":0,"index":6301},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"io","qualname":"::io","value":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","parent":null,"children":[{"krate":0,"index":6302},{"krate":0,"index":6305},{"krate":0,"index":6308},{"krate":0,"index":6309},{"krate":0,"index":6312},{"krate":0,"index":6315},{"krate":0,"index":6316},{"krate":0,"index":6319},{"krate":0,"index":6322},{"krate":0,"index":6325},{"krate":0,"index":6328},{"krate":0,"index":6331},{"krate":0,"index":6334},{"krate":0,"index":6335},{"krate":0,"index":6338},{"krate":0,"index":6341},{"krate":0,"index":6344},{"krate":0,"index":6347},{"krate":0,"index":6348},{"krate":0,"index":6350},{"krate":0,"index":6437},{"krate":0,"index":6440},{"krate":0,"index":6516},{"krate":0,"index":6519},{"krate":0,"index":6591},{"krate":0,"index":6594},{"krate":0,"index":6650},{"krate":0,"index":6653},{"krate":0,"index":6683},{"krate":0,"index":6686},{"krate":0,"index":6731},{"krate":0,"index":6732},{"krate":0,"index":6735},{"krate":0,"index":6738},{"krate":0,"index":6776},{"krate":0,"index":6777},{"krate":0,"index":6780},{"krate":0,"index":6783},{"krate":0,"index":6843},{"krate":0,"index":6846},{"krate":0,"index":6880},{"krate":0,"index":6881},{"krate":0,"index":6884},{"krate":0,"index":6887},{"krate":0,"index":6918},{"krate":0,"index":6921},{"krate":0,"index":6951},{"krate":0,"index":6954},{"krate":0,"index":6993},{"krate":0,"index":6996},{"krate":0,"index":7035},{"krate":0,"index":7038},{"krate":0,"index":7068},{"krate":0,"index":7071},{"krate":0,"index":7105},{"krate":0,"index":7108},{"krate":0,"index":7144},{"krate":0,"index":7147},{"krate":0,"index":7192},{"krate":0,"index":7195},{"krate":0,"index":7239},{"krate":0,"index":7242},{"krate":0,"index":7291},{"krate":0,"index":7294},{"krate":0,"index":7332},{"krate":0,"index":7335},{"krate":0,"index":7370},{"krate":0,"index":7371},{"krate":0,"index":7374},{"krate":0,"index":7377},{"krate":0,"index":7411},{"krate":0,"index":7414},{"krate":0,"index":7449},{"krate":0,"index":7450},{"krate":0,"index":7453},{"krate":0,"index":7456},{"krate":0,"index":7535},{"krate":0,"index":7536},{"krate":0,"index":7539},{"krate":0,"index":7540},{"krate":0,"index":7542},{"krate":0,"index":7545},{"krate":0,"index":7588},{"krate":0,"index":7591},{"krate":0,"index":7618},{"krate":0,"index":7621},{"krate":0,"index":7651},{"krate":0,"index":7654},{"krate":0,"index":7688},{"krate":0,"index":7691},{"krate":0,"index":7727},{"krate":0,"index":7730},{"krate":0,"index":7745},{"krate":0,"index":7747},{"krate":0,"index":7758},{"krate":0,"index":7760},{"krate":0,"index":7763},{"krate":0,"index":7765},{"krate":0,"index":7773},{"krate":0,"index":7775},{"krate":0,"index":7777}],"decl_id":null,"docs":" Asynchronous I/O.","sig":null,"attributes":[{"value":"cfg(feature = \"io\")","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lib.rs","byte_start":11723,"byte_end":11745,"line_start":324,"line_end":324,"column_start":1,"column_end":23}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lib.rs","byte_start":11792,"byte_end":11815,"line_start":326,"line_end":326,"column_start":1,"column_end":24}},{"value":"/ Asynchronous I/O.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":443565,"byte_end":443586,"line_start":1,"line_end":1,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":443587,"byte_end":443590,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module is the asynchronous version of `std::io`. It defines four","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":443591,"byte_end":443664,"line_start":3,"line_end":3,"column_start":1,"column_end":74}},{"value":"/ traits, [`AsyncRead`], [`AsyncWrite`], [`AsyncSeek`], and [`AsyncBufRead`],","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":443665,"byte_end":443744,"line_start":4,"line_end":4,"column_start":1,"column_end":80}},{"value":"/ which mirror the `Read`, `Write`, `Seek`, and `BufRead` traits of the","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":443745,"byte_end":443818,"line_start":5,"line_end":5,"column_start":1,"column_end":74}},{"value":"/ standard library. However, these traits integrate with the asynchronous","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":443819,"byte_end":443894,"line_start":6,"line_end":6,"column_start":1,"column_end":76}},{"value":"/ task system, so that if an I/O object isn't ready for reading (or writing),","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":443895,"byte_end":443974,"line_start":7,"line_end":7,"column_start":1,"column_end":80}},{"value":"/ the thread is not blocked, and instead the current task is queued to be","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":443975,"byte_end":444050,"line_start":8,"line_end":8,"column_start":1,"column_end":76}},{"value":"/ woken when I/O is ready.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":444051,"byte_end":444079,"line_start":9,"line_end":9,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":444080,"byte_end":444083,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ In addition, the [`AsyncReadExt`], [`AsyncWriteExt`], [`AsyncSeekExt`], and","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":444084,"byte_end":444163,"line_start":11,"line_end":11,"column_start":1,"column_end":80}},{"value":"/ [`AsyncBufReadExt`] extension traits offer a variety of useful combinators","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":444164,"byte_end":444242,"line_start":12,"line_end":12,"column_start":1,"column_end":79}},{"value":"/ for operating with asynchronous I/O objects, including ways to work with","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":444243,"byte_end":444319,"line_start":13,"line_end":13,"column_start":1,"column_end":77}},{"value":"/ them using futures, streams and sinks.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":444320,"byte_end":444362,"line_start":14,"line_end":14,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":444363,"byte_end":444366,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ This module is only available when the `std` feature of this","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":444367,"byte_end":444431,"line_start":16,"line_end":16,"column_start":1,"column_end":65}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":444432,"byte_end":444489,"line_start":17,"line_end":17,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":15662},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/allow_std.rs","byte_start":471885,"byte_end":471895,"line_start":19,"line_end":19,"column_start":12,"column_end":22},"name":"AllowStdIo","qualname":"::io::allow_std::AllowStdIo","value":"","parent":null,"children":[],"decl_id":null,"docs":" A simple wrapper type which allows types which implement only\n implement `std::io::Read` or `std::io::Write`\n to be used in contexts which expect an `AsyncRead` or `AsyncWrite`.","sig":null,"attributes":[{"value":"/ A simple wrapper type which allows types which implement only","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/allow_std.rs","byte_start":471236,"byte_end":471301,"line_start":8,"line_end":8,"column_start":1,"column_end":66}},{"value":"/ implement `std::io::Read` or `std::io::Write`","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/allow_std.rs","byte_start":471302,"byte_end":471351,"line_start":9,"line_end":9,"column_start":1,"column_end":50}},{"value":"/ to be used in contexts which expect an `AsyncRead` or `AsyncWrite`.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/allow_std.rs","byte_start":471352,"byte_end":471423,"line_start":10,"line_end":10,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/allow_std.rs","byte_start":471424,"byte_end":471427,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ If these types issue an error with the kind `io::ErrorKind::WouldBlock`,","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/allow_std.rs","byte_start":471428,"byte_end":471504,"line_start":12,"line_end":12,"column_start":1,"column_end":77}},{"value":"/ it is expected that they will notify the current task on readiness.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/allow_std.rs","byte_start":471505,"byte_end":471576,"line_start":13,"line_end":13,"column_start":1,"column_end":72}},{"value":"/ Synchronous `std` types should not issue errors of this kind and","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/allow_std.rs","byte_start":471577,"byte_end":471645,"line_start":14,"line_end":14,"column_start":1,"column_end":69}},{"value":"/ are safe to use in this context. However, using these types with","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/allow_std.rs","byte_start":471646,"byte_end":471714,"line_start":15,"line_end":15,"column_start":1,"column_end":69}},{"value":"/ `AllowStdIo` will cause the event loop to block, so they should be used","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/allow_std.rs","byte_start":471715,"byte_end":471790,"line_start":16,"line_end":16,"column_start":1,"column_end":76}},{"value":"/ with care.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/allow_std.rs","byte_start":471791,"byte_end":471805,"line_start":17,"line_end":17,"column_start":1,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":6395},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/allow_std.rs","byte_start":472460,"byte_end":472463,"line_start":43,"line_end":43,"column_start":12,"column_end":15},"name":"new","qualname":"<AllowStdIo<T>>::new","value":"pub fn new(T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `AllowStdIo` from an existing IO object.\n","sig":null,"attributes":[{"value":"/ Creates a new `AllowStdIo` from an existing IO object.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/allow_std.rs","byte_start":472390,"byte_end":472448,"line_start":42,"line_end":42,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":6396},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/allow_std.rs","byte_start":472572,"byte_end":472579,"line_start":48,"line_end":48,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<AllowStdIo<T>>::get_ref","value":"pub fn get_ref(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the contained IO object.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the contained IO object.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/allow_std.rs","byte_start":472509,"byte_end":472560,"line_start":47,"line_end":47,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":6397},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/allow_std.rs","byte_start":472693,"byte_end":472700,"line_start":53,"line_end":53,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<AllowStdIo<T>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the contained IO object.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the contained IO object.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/allow_std.rs","byte_start":472622,"byte_end":472681,"line_start":52,"line_end":52,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":6398},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/allow_std.rs","byte_start":472821,"byte_end":472831,"line_start":58,"line_end":58,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<AllowStdIo<T>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes self and returns the contained IO object.\n","sig":null,"attributes":[{"value":"/ Consumes self and returns the contained IO object.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/allow_std.rs","byte_start":472755,"byte_end":472809,"line_start":57,"line_end":57,"column_start":5,"column_end":59}}]},{"kind":"Struct","id":{"krate":0,"index":15695},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/buf_reader.rs","byte_start":477982,"byte_end":477991,"line_start":32,"line_end":32,"column_start":16,"column_end":25},"name":"BufReader","qualname":"::io::buf_reader::BufReader","value":"BufReader {  }","parent":null,"children":[{"krate":0,"index":15697},{"krate":0,"index":15698},{"krate":0,"index":15699},{"krate":0,"index":15700}],"decl_id":null,"docs":" The `BufReader` struct adds buffering to any reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6495},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/buf_reader.rs","byte_start":478286,"byte_end":478289,"line_start":44,"line_end":44,"column_start":12,"column_end":15},"name":"new","qualname":"<BufReader<R>>::new","value":"pub fn new(R) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BufReader` with a default buffer capacity. The default is currently 8 KB,\n but may change in the future.\n","sig":null,"attributes":[{"value":"/ Creates a new `BufReader` with a default buffer capacity. The default is currently 8 KB,","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/buf_reader.rs","byte_start":478144,"byte_end":478236,"line_start":42,"line_end":42,"column_start":5,"column_end":97}},{"value":"/ but may change in the future.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/buf_reader.rs","byte_start":478241,"byte_end":478274,"line_start":43,"line_end":43,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":6496},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/buf_reader.rs","byte_start":478451,"byte_end":478464,"line_start":49,"line_end":49,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<BufReader<R>>::with_capacity","value":"pub fn with_capacity(usize, R) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BufReader` with the specified buffer capacity.\n","sig":null,"attributes":[{"value":"/ Creates a new `BufReader` with the specified buffer capacity.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/buf_reader.rs","byte_start":478374,"byte_end":478439,"line_start":48,"line_end":48,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":6497},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/buf_reader.rs","byte_start":478970,"byte_end":478976,"line_start":63,"line_end":63,"column_start":12,"column_end":18},"name":"buffer","qualname":"<BufReader<R>>::buffer","value":"pub fn buffer(&Self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the internally buffered data.","sig":null,"attributes":[{"value":"/ Returns a reference to the internally buffered data.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/buf_reader.rs","byte_start":478810,"byte_end":478866,"line_start":60,"line_end":60,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/buf_reader.rs","byte_start":478871,"byte_end":478874,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ Unlike `fill_buf`, this will not attempt to fill the buffer if it is empty.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/buf_reader.rs","byte_start":478879,"byte_end":478958,"line_start":62,"line_end":62,"column_start":5,"column_end":84}}]},{"kind":"Struct","id":{"krate":0,"index":15748},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/buf_writer.rs","byte_start":486005,"byte_end":486014,"line_start":32,"line_end":32,"column_start":16,"column_end":25},"name":"BufWriter","qualname":"::io::buf_writer::BufWriter","value":"BufWriter {  }","parent":null,"children":[{"krate":0,"index":15750},{"krate":0,"index":15751},{"krate":0,"index":15752}],"decl_id":null,"docs":" Wraps a writer and buffers its output.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6570},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/buf_writer.rs","byte_start":486289,"byte_end":486292,"line_start":43,"line_end":43,"column_start":12,"column_end":15},"name":"new","qualname":"<BufWriter<W>>::new","value":"pub fn new(W) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BufWriter` with a default buffer capacity. The default is currently 8 KB,\n but may change in the future.\n","sig":null,"attributes":[{"value":"/ Creates a new `BufWriter` with a default buffer capacity. The default is currently 8 KB,","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/buf_writer.rs","byte_start":486147,"byte_end":486239,"line_start":41,"line_end":41,"column_start":5,"column_end":97}},{"value":"/ but may change in the future.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/buf_writer.rs","byte_start":486244,"byte_end":486277,"line_start":42,"line_end":42,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":6571},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/buf_writer.rs","byte_start":486454,"byte_end":486467,"line_start":48,"line_end":48,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<BufWriter<W>>::with_capacity","value":"pub fn with_capacity(usize, W) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BufWriter` with the specified buffer capacity.\n","sig":null,"attributes":[{"value":"/ Creates a new `BufWriter` with the specified buffer capacity.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/buf_writer.rs","byte_start":486377,"byte_end":486442,"line_start":47,"line_end":47,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":6573},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/buf_writer.rs","byte_start":487579,"byte_end":487585,"line_start":83,"line_end":83,"column_start":12,"column_end":18},"name":"buffer","qualname":"<BufWriter<W>>::buffer","value":"pub fn buffer(&Self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the internally buffered data.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the internally buffered data.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/buf_writer.rs","byte_start":487511,"byte_end":487567,"line_start":82,"line_end":82,"column_start":5,"column_end":61}}]},{"kind":"Struct","id":{"krate":0,"index":15797},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/chain.rs","byte_start":490465,"byte_end":490470,"line_start":14,"line_end":14,"column_start":16,"column_end":21},"name":"Chain","qualname":"::io::chain::Chain","value":"Chain {  }","parent":null,"children":[{"krate":0,"index":15800},{"krate":0,"index":15801},{"krate":0,"index":15802}],"decl_id":null,"docs":" Reader for the [`chain`](super::AsyncReadExt::chain) method.\n","sig":null,"attributes":[{"value":"must_use = \"readers do nothing unless polled\"","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":12561792,"byte_end":12561801,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":6631},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/chain.rs","byte_start":490836,"byte_end":490843,"line_start":33,"line_end":33,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Chain<T, U>>::get_ref","value":"pub fn get_ref(&Self) -> (&T, &U)","parent":null,"children":[],"decl_id":null,"docs":" Gets references to the underlying readers in this `Chain`.\n","sig":null,"attributes":[{"value":"/ Gets references to the underlying readers in this `Chain`.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/chain.rs","byte_start":490762,"byte_end":490824,"line_start":32,"line_end":32,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":6632},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/chain.rs","byte_start":491175,"byte_end":491182,"line_start":42,"line_end":42,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Chain<T, U>>::get_mut","value":"pub fn get_mut(&mut Self) -> (&mut T, &mut U)","parent":null,"children":[],"decl_id":null,"docs":" Gets mutable references to the underlying readers in this `Chain`.","sig":null,"attributes":[{"value":"/ Gets mutable references to the underlying readers in this `Chain`.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/chain.rs","byte_start":490912,"byte_end":490982,"line_start":37,"line_end":37,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/chain.rs","byte_start":490987,"byte_end":490990,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ Care should be taken to avoid modifying the internal I/O state of the","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/chain.rs","byte_start":490995,"byte_end":491068,"line_start":39,"line_end":39,"column_start":5,"column_end":78}},{"value":"/ underlying readers as doing so may corrupt the internal state of this","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/chain.rs","byte_start":491073,"byte_end":491146,"line_start":40,"line_end":40,"column_start":5,"column_end":78}},{"value":"/ `Chain`.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/chain.rs","byte_start":491151,"byte_end":491163,"line_start":41,"line_end":41,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":6633},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/chain.rs","byte_start":491541,"byte_end":491552,"line_start":51,"line_end":51,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<Chain<T, U>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> (Pin<&mut T>, Pin<&mut U>)","parent":null,"children":[],"decl_id":null,"docs":" Gets pinned mutable references to the underlying readers in this `Chain`.","sig":null,"attributes":[{"value":"/ Gets pinned mutable references to the underlying readers in this `Chain`.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/chain.rs","byte_start":491271,"byte_end":491348,"line_start":46,"line_end":46,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/chain.rs","byte_start":491353,"byte_end":491356,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ Care should be taken to avoid modifying the internal I/O state of the","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/chain.rs","byte_start":491361,"byte_end":491434,"line_start":48,"line_end":48,"column_start":5,"column_end":78}},{"value":"/ underlying readers as doing so may corrupt the internal state of this","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/chain.rs","byte_start":491439,"byte_end":491512,"line_start":49,"line_end":49,"column_start":5,"column_end":78}},{"value":"/ `Chain`.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/chain.rs","byte_start":491517,"byte_end":491529,"line_start":50,"line_end":50,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":6634},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/chain.rs","byte_start":491755,"byte_end":491765,"line_start":57,"line_end":57,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Chain<T, U>>::into_inner","value":"pub fn into_inner(Self) -> (T, U)","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `Chain`, returning the wrapped readers.\n","sig":null,"attributes":[{"value":"/ Consumes the `Chain`, returning the wrapped readers.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/chain.rs","byte_start":491687,"byte_end":491743,"line_start":56,"line_end":56,"column_start":5,"column_end":61}}]},{"kind":"Struct","id":{"krate":0,"index":15846},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/close.rs","byte_start":494579,"byte_end":494584,"line_start":10,"line_end":10,"column_start":12,"column_end":17},"name":"Close","qualname":"::io::close::Close","value":"Close {  }","parent":null,"children":[{"krate":0,"index":15849}],"decl_id":null,"docs":" Future for the [`close`](super::AsyncWriteExt::close) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`close`](super::AsyncWriteExt::close) method.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/close.rs","byte_start":494417,"byte_end":494482,"line_start":7,"line_end":7,"column_start":1,"column_end":66}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/close.rs","byte_start":494500,"byte_end":494567,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":6723},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/copy.rs","byte_start":496137,"byte_end":496141,"line_start":34,"line_end":34,"column_start":8,"column_end":12},"name":"copy","qualname":"::io::copy::copy","value":"pub fn copy<R, W: ?Sized>(R, &mut W) -> Copy<, R, W> where R: AsyncRead,\nW: AsyncWrite + Unpin","parent":null,"children":[],"decl_id":null,"docs":" Creates a future which copies all the bytes from one object to another.","sig":null,"attributes":[{"value":"/ Creates a future which copies all the bytes from one object to another.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/copy.rs","byte_start":495288,"byte_end":495363,"line_start":9,"line_end":9,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/copy.rs","byte_start":495364,"byte_end":495367,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ The returned future will copy all the bytes read from this `AsyncRead` into the","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/copy.rs","byte_start":495368,"byte_end":495451,"line_start":11,"line_end":11,"column_start":1,"column_end":84}},{"value":"/ `writer` specified. This future will only complete once the `reader` has hit","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/copy.rs","byte_start":495452,"byte_end":495532,"line_start":12,"line_end":12,"column_start":1,"column_end":81}},{"value":"/ EOF and all bytes have been written to and flushed from the `writer`","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/copy.rs","byte_start":495533,"byte_end":495605,"line_start":13,"line_end":13,"column_start":1,"column_end":73}},{"value":"/ provided.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/copy.rs","byte_start":495606,"byte_end":495619,"line_start":14,"line_end":14,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/copy.rs","byte_start":495620,"byte_end":495623,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ On success the number of bytes is returned.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/copy.rs","byte_start":495624,"byte_end":495671,"line_start":16,"line_end":16,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/copy.rs","byte_start":495672,"byte_end":495675,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/copy.rs","byte_start":495676,"byte_end":495690,"line_start":18,"line_end":18,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/copy.rs","byte_start":495691,"byte_end":495694,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/copy.rs","byte_start":495695,"byte_end":495702,"line_start":20,"line_end":20,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/copy.rs","byte_start":495703,"byte_end":495744,"line_start":21,"line_end":21,"column_start":1,"column_end":42}},{"value":"/ use futures::io::{self, AsyncWriteExt, Cursor};","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/copy.rs","byte_start":495745,"byte_end":495796,"line_start":22,"line_end":22,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/copy.rs","byte_start":495797,"byte_end":495800,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ let reader = Cursor::new([1, 2, 3, 4]);","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/copy.rs","byte_start":495801,"byte_end":495844,"line_start":24,"line_end":24,"column_start":1,"column_end":44}},{"value":"/ let mut writer = Cursor::new(vec![0u8; 5]);","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/copy.rs","byte_start":495845,"byte_end":495892,"line_start":25,"line_end":25,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/copy.rs","byte_start":495893,"byte_end":495896,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ let bytes = io::copy(reader, &mut writer).await?;","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/copy.rs","byte_start":495897,"byte_end":495950,"line_start":27,"line_end":27,"column_start":1,"column_end":54}},{"value":"/ writer.close().await?;","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/copy.rs","byte_start":495951,"byte_end":495977,"line_start":28,"line_end":28,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/copy.rs","byte_start":495978,"byte_end":495981,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(bytes, 4);","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/copy.rs","byte_start":495982,"byte_end":496007,"line_start":30,"line_end":30,"column_start":1,"column_end":26}},{"value":"/ assert_eq!(writer.into_inner(), [1, 2, 3, 4, 0]);","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/copy.rs","byte_start":496008,"byte_end":496061,"line_start":31,"line_end":31,"column_start":1,"column_end":54}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/copy.rs","byte_start":496062,"byte_end":496121,"line_start":32,"line_end":32,"column_start":1,"column_end":60}},{"value":"/ ```","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/copy.rs","byte_start":496122,"byte_end":496129,"line_start":33,"line_end":33,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":15863},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/copy.rs","byte_start":496486,"byte_end":496490,"line_start":46,"line_end":46,"column_start":16,"column_end":20},"name":"Copy","qualname":"::io::copy::Copy","value":"Copy {  }","parent":null,"children":[{"krate":0,"index":15867}],"decl_id":null,"docs":" Future for the [`copy()`] function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":12561792,"byte_end":12561801,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":6768},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/copy_buf.rs","byte_start":497890,"byte_end":497898,"line_start":34,"line_end":34,"column_start":8,"column_end":16},"name":"copy_buf","qualname":"::io::copy_buf::copy_buf","value":"pub fn copy_buf<R, W: ?Sized>(R, &mut W) -> CopyBuf<, R, W> where\nR: AsyncBufRead, W: AsyncWrite + Unpin","parent":null,"children":[],"decl_id":null,"docs":" Creates a future which copies all the bytes from one object to another.","sig":null,"attributes":[{"value":"/ Creates a future which copies all the bytes from one object to another.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/copy_buf.rs","byte_start":497034,"byte_end":497109,"line_start":9,"line_end":9,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/copy_buf.rs","byte_start":497110,"byte_end":497113,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ The returned future will copy all the bytes read from this `AsyncBufRead` into the","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/copy_buf.rs","byte_start":497114,"byte_end":497200,"line_start":11,"line_end":11,"column_start":1,"column_end":87}},{"value":"/ `writer` specified. This future will only complete once the `reader` has hit","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/copy_buf.rs","byte_start":497201,"byte_end":497281,"line_start":12,"line_end":12,"column_start":1,"column_end":81}},{"value":"/ EOF and all bytes have been written to and flushed from the `writer`","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/copy_buf.rs","byte_start":497282,"byte_end":497354,"line_start":13,"line_end":13,"column_start":1,"column_end":73}},{"value":"/ provided.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/copy_buf.rs","byte_start":497355,"byte_end":497368,"line_start":14,"line_end":14,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/copy_buf.rs","byte_start":497369,"byte_end":497372,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ On success the number of bytes is returned.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/copy_buf.rs","byte_start":497373,"byte_end":497420,"line_start":16,"line_end":16,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/copy_buf.rs","byte_start":497421,"byte_end":497424,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/copy_buf.rs","byte_start":497425,"byte_end":497439,"line_start":18,"line_end":18,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/copy_buf.rs","byte_start":497440,"byte_end":497443,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/copy_buf.rs","byte_start":497444,"byte_end":497451,"line_start":20,"line_end":20,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/copy_buf.rs","byte_start":497452,"byte_end":497493,"line_start":21,"line_end":21,"column_start":1,"column_end":42}},{"value":"/ use futures::io::{self, AsyncWriteExt, Cursor};","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/copy_buf.rs","byte_start":497494,"byte_end":497545,"line_start":22,"line_end":22,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/copy_buf.rs","byte_start":497546,"byte_end":497549,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ let reader = Cursor::new([1, 2, 3, 4]);","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/copy_buf.rs","byte_start":497550,"byte_end":497593,"line_start":24,"line_end":24,"column_start":1,"column_end":44}},{"value":"/ let mut writer = Cursor::new(vec![0u8; 5]);","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/copy_buf.rs","byte_start":497594,"byte_end":497641,"line_start":25,"line_end":25,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/copy_buf.rs","byte_start":497642,"byte_end":497645,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ let bytes = io::copy_buf(reader, &mut writer).await?;","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/copy_buf.rs","byte_start":497646,"byte_end":497703,"line_start":27,"line_end":27,"column_start":1,"column_end":58}},{"value":"/ writer.close().await?;","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/copy_buf.rs","byte_start":497704,"byte_end":497730,"line_start":28,"line_end":28,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/copy_buf.rs","byte_start":497731,"byte_end":497734,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(bytes, 4);","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/copy_buf.rs","byte_start":497735,"byte_end":497760,"line_start":30,"line_end":30,"column_start":1,"column_end":26}},{"value":"/ assert_eq!(writer.into_inner(), [1, 2, 3, 4, 0]);","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/copy_buf.rs","byte_start":497761,"byte_end":497814,"line_start":31,"line_end":31,"column_start":1,"column_end":54}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/copy_buf.rs","byte_start":497815,"byte_end":497874,"line_start":32,"line_end":32,"column_start":1,"column_end":60}},{"value":"/ ```","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/copy_buf.rs","byte_start":497875,"byte_end":497882,"line_start":33,"line_end":33,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":15917},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/copy_buf.rs","byte_start":498231,"byte_end":498238,"line_start":46,"line_end":46,"column_start":16,"column_end":23},"name":"CopyBuf","qualname":"::io::copy_buf::CopyBuf","value":"CopyBuf {  }","parent":null,"children":[{"krate":0,"index":15921},{"krate":0,"index":15922},{"krate":0,"index":15923}],"decl_id":null,"docs":" Future for the [`copy_buf()`] function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":12561792,"byte_end":12561801,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":15970},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":500160,"byte_end":500166,"line_start":25,"line_end":25,"column_start":12,"column_end":18},"name":"Cursor","qualname":"::io::cursor::Cursor","value":"Cursor {  }","parent":null,"children":[{"krate":0,"index":15972}],"decl_id":null,"docs":" A `Cursor` wraps an in-memory buffer and provides it with a\n [`AsyncSeek`] implementation.","sig":null,"attributes":[{"value":"/ A `Cursor` wraps an in-memory buffer and provides it with a","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":499393,"byte_end":499456,"line_start":8,"line_end":8,"column_start":1,"column_end":64}},{"value":"/ [`AsyncSeek`] implementation.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":499457,"byte_end":499490,"line_start":9,"line_end":9,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":499491,"byte_end":499494,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ `Cursor`s are used with in-memory buffers, anything implementing","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":499495,"byte_end":499563,"line_start":11,"line_end":11,"column_start":1,"column_end":69}},{"value":"/ `AsRef<[u8]>`, to allow them to implement [`AsyncRead`] and/or [`AsyncWrite`],","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":499564,"byte_end":499646,"line_start":12,"line_end":12,"column_start":1,"column_end":83}},{"value":"/ allowing these buffers to be used anywhere you might use a reader or writer","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":499647,"byte_end":499726,"line_start":13,"line_end":13,"column_start":1,"column_end":80}},{"value":"/ that does actual I/O.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":499727,"byte_end":499752,"line_start":14,"line_end":14,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":499753,"byte_end":499756,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ This library implements some I/O traits on various types which","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":499757,"byte_end":499823,"line_start":16,"line_end":16,"column_start":1,"column_end":67}},{"value":"/ are commonly used as a buffer, like `Cursor<`[`Vec`]`<u8>>` and","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":499824,"byte_end":499891,"line_start":17,"line_end":17,"column_start":1,"column_end":68}},{"value":"/ `Cursor<`[`&[u8]`][bytes]`>`.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":499892,"byte_end":499925,"line_start":18,"line_end":18,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":499926,"byte_end":499929,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ [`AsyncSeek`]: trait.AsyncSeek.html","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":499930,"byte_end":499969,"line_start":20,"line_end":20,"column_start":1,"column_end":40}},{"value":"/ [`AsyncRead`]: trait.AsyncRead.html","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":499970,"byte_end":500009,"line_start":21,"line_end":21,"column_start":1,"column_end":40}},{"value":"/ [`AsyncWrite`]: trait.AsyncWrite.html","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":500010,"byte_end":500051,"line_start":22,"line_end":22,"column_start":1,"column_end":42}},{"value":"/ [bytes]: https://doc.rust-lang.org/std/primitive.slice.html","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":500052,"byte_end":500115,"line_start":23,"line_end":23,"column_start":1,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":6821},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":500746,"byte_end":500749,"line_start":45,"line_end":45,"column_start":12,"column_end":15},"name":"new","qualname":"<Cursor<T>>::new","value":"pub fn new(T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new cursor wrapping the provided underlying in-memory buffer.","sig":null,"attributes":[{"value":"/ Creates a new cursor wrapping the provided underlying in-memory buffer.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":500225,"byte_end":500300,"line_start":30,"line_end":30,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":500305,"byte_end":500308,"line_start":31,"line_end":31,"column_start":5,"column_end":8}},{"value":"/ Cursor initial position is `0` even if underlying buffer (e.g., `Vec`)","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":500313,"byte_end":500387,"line_start":32,"line_end":32,"column_start":5,"column_end":79}},{"value":"/ is not empty. So writing to cursor starts with overwriting `Vec`","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":500392,"byte_end":500460,"line_start":33,"line_end":33,"column_start":5,"column_end":73}},{"value":"/ content, not with appending to it.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":500465,"byte_end":500503,"line_start":34,"line_end":34,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":500508,"byte_end":500511,"line_start":35,"line_end":35,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":500516,"byte_end":500530,"line_start":36,"line_end":36,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":500535,"byte_end":500538,"line_start":37,"line_end":37,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":500543,"byte_end":500550,"line_start":38,"line_end":38,"column_start":5,"column_end":12}},{"value":"/ use futures::io::Cursor;","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":500555,"byte_end":500583,"line_start":39,"line_end":39,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":500588,"byte_end":500591,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ let buff = Cursor::new(Vec::new());","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":500596,"byte_end":500635,"line_start":41,"line_end":41,"column_start":5,"column_end":44}},{"value":"/ # fn force_inference(_: &Cursor<Vec<u8>>) {}","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":500640,"byte_end":500688,"line_start":42,"line_end":42,"column_start":5,"column_end":53}},{"value":"/ # force_inference(&buff);","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":500693,"byte_end":500722,"line_start":43,"line_end":43,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":500727,"byte_end":500734,"line_start":44,"line_end":44,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6822},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":501173,"byte_end":501183,"line_start":62,"line_end":62,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Cursor<T>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes this cursor, returning the underlying value.","sig":null,"attributes":[{"value":"/ Consumes this cursor, returning the underlying value.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":500828,"byte_end":500885,"line_start":49,"line_end":49,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":500890,"byte_end":500893,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":500898,"byte_end":500912,"line_start":51,"line_end":51,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":500917,"byte_end":500920,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":500925,"byte_end":500932,"line_start":53,"line_end":53,"column_start":5,"column_end":12}},{"value":"/ use futures::io::Cursor;","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":500937,"byte_end":500965,"line_start":54,"line_end":54,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":500970,"byte_end":500973,"line_start":55,"line_end":55,"column_start":5,"column_end":8}},{"value":"/ let buff = Cursor::new(Vec::new());","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":500978,"byte_end":501017,"line_start":56,"line_end":56,"column_start":5,"column_end":44}},{"value":"/ # fn force_inference(_: &Cursor<Vec<u8>>) {}","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":501022,"byte_end":501070,"line_start":57,"line_end":57,"column_start":5,"column_end":53}},{"value":"/ # force_inference(&buff);","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":501075,"byte_end":501104,"line_start":58,"line_end":58,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":501109,"byte_end":501112,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ let vec = buff.into_inner();","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":501117,"byte_end":501149,"line_start":60,"line_end":60,"column_start":5,"column_end":37}},{"value":"/ ```","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":501154,"byte_end":501161,"line_start":61,"line_end":61,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6823},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":501591,"byte_end":501598,"line_start":79,"line_end":79,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Cursor<T>>::get_ref","value":"pub fn get_ref(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the underlying value in this cursor.","sig":null,"attributes":[{"value":"/ Gets a reference to the underlying value in this cursor.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":501240,"byte_end":501300,"line_start":66,"line_end":66,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":501305,"byte_end":501308,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":501313,"byte_end":501327,"line_start":68,"line_end":68,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":501332,"byte_end":501335,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":501340,"byte_end":501347,"line_start":70,"line_end":70,"column_start":5,"column_end":12}},{"value":"/ use futures::io::Cursor;","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":501352,"byte_end":501380,"line_start":71,"line_end":71,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":501385,"byte_end":501388,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ let buff = Cursor::new(Vec::new());","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":501393,"byte_end":501432,"line_start":73,"line_end":73,"column_start":5,"column_end":44}},{"value":"/ # fn force_inference(_: &Cursor<Vec<u8>>) {}","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":501437,"byte_end":501485,"line_start":74,"line_end":74,"column_start":5,"column_end":53}},{"value":"/ # force_inference(&buff);","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":501490,"byte_end":501519,"line_start":75,"line_end":75,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":501524,"byte_end":501527,"line_start":76,"line_end":76,"column_start":5,"column_end":8}},{"value":"/ let reference = buff.get_ref();","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":501532,"byte_end":501567,"line_start":77,"line_end":77,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":501572,"byte_end":501579,"line_start":78,"line_end":78,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6824},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":502170,"byte_end":502177,"line_start":99,"line_end":99,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Cursor<T>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the underlying value in this cursor.","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the underlying value in this cursor.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":501654,"byte_end":501722,"line_start":83,"line_end":83,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":501727,"byte_end":501730,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ Care should be taken to avoid modifying the internal I/O state of the","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":501735,"byte_end":501808,"line_start":85,"line_end":85,"column_start":5,"column_end":78}},{"value":"/ underlying value as it may corrupt this cursor's position.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":501813,"byte_end":501875,"line_start":86,"line_end":86,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":501880,"byte_end":501883,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":501888,"byte_end":501902,"line_start":88,"line_end":88,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":501907,"byte_end":501910,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":501915,"byte_end":501922,"line_start":90,"line_end":90,"column_start":5,"column_end":12}},{"value":"/ use futures::io::Cursor;","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":501927,"byte_end":501955,"line_start":91,"line_end":91,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":501960,"byte_end":501963,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ let mut buff = Cursor::new(Vec::new());","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":501968,"byte_end":502011,"line_start":93,"line_end":93,"column_start":5,"column_end":48}},{"value":"/ # fn force_inference(_: &Cursor<Vec<u8>>) {}","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":502016,"byte_end":502064,"line_start":94,"line_end":94,"column_start":5,"column_end":53}},{"value":"/ # force_inference(&buff);","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":502069,"byte_end":502098,"line_start":95,"line_end":95,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":502103,"byte_end":502106,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/ let reference = buff.get_mut();","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":502111,"byte_end":502146,"line_start":97,"line_end":97,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":502151,"byte_end":502158,"line_start":98,"line_end":98,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6825},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":502835,"byte_end":502843,"line_start":122,"line_end":122,"column_start":12,"column_end":20},"name":"position","qualname":"<Cursor<T>>::position","value":"pub fn position(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns the current position of this cursor.","sig":null,"attributes":[{"value":"/ Returns the current position of this cursor.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":502241,"byte_end":502289,"line_start":103,"line_end":103,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":502294,"byte_end":502297,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":502302,"byte_end":502316,"line_start":105,"line_end":105,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":502321,"byte_end":502324,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":502329,"byte_end":502336,"line_start":107,"line_end":107,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":502341,"byte_end":502382,"line_start":108,"line_end":108,"column_start":5,"column_end":46}},{"value":"/ use futures::io::{AsyncSeekExt, Cursor, SeekFrom};","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":502387,"byte_end":502441,"line_start":109,"line_end":109,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":502446,"byte_end":502449,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ let mut buff = Cursor::new(vec![1, 2, 3, 4, 5]);","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":502454,"byte_end":502506,"line_start":111,"line_end":111,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":502511,"byte_end":502514,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(buff.position(), 0);","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":502519,"byte_end":502554,"line_start":113,"line_end":113,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":502559,"byte_end":502562,"line_start":114,"line_end":114,"column_start":5,"column_end":8}},{"value":"/ buff.seek(SeekFrom::Current(2)).await?;","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":502567,"byte_end":502610,"line_start":115,"line_end":115,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(buff.position(), 2);","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":502615,"byte_end":502650,"line_start":116,"line_end":116,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":502655,"byte_end":502658,"line_start":117,"line_end":117,"column_start":5,"column_end":8}},{"value":"/ buff.seek(SeekFrom::Current(-1)).await?;","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":502663,"byte_end":502707,"line_start":118,"line_end":118,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(buff.position(), 1);","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":502712,"byte_end":502747,"line_start":119,"line_end":119,"column_start":5,"column_end":40}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":502752,"byte_end":502811,"line_start":120,"line_end":120,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":502816,"byte_end":502823,"line_start":121,"line_end":121,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6826},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":503311,"byte_end":503323,"line_start":143,"line_end":143,"column_start":12,"column_end":24},"name":"set_position","qualname":"<Cursor<T>>::set_position","value":"pub fn set_position(&mut Self, u64)","parent":null,"children":[],"decl_id":null,"docs":" Sets the position of this cursor.","sig":null,"attributes":[{"value":"/ Sets the position of this cursor.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":502901,"byte_end":502938,"line_start":126,"line_end":126,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":502943,"byte_end":502946,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":502951,"byte_end":502965,"line_start":128,"line_end":128,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":502970,"byte_end":502973,"line_start":129,"line_end":129,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":502978,"byte_end":502985,"line_start":130,"line_end":130,"column_start":5,"column_end":12}},{"value":"/ use futures::io::Cursor;","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":502990,"byte_end":503018,"line_start":131,"line_end":131,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":503023,"byte_end":503026,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ let mut buff = Cursor::new(vec![1, 2, 3, 4, 5]);","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":503031,"byte_end":503083,"line_start":133,"line_end":133,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":503088,"byte_end":503091,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(buff.position(), 0);","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":503096,"byte_end":503131,"line_start":135,"line_end":135,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":503136,"byte_end":503139,"line_start":136,"line_end":136,"column_start":5,"column_end":8}},{"value":"/ buff.set_position(2);","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":503144,"byte_end":503169,"line_start":137,"line_end":137,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(buff.position(), 2);","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":503174,"byte_end":503209,"line_start":138,"line_end":138,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":503214,"byte_end":503217,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/ buff.set_position(4);","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":503222,"byte_end":503247,"line_start":140,"line_end":140,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(buff.position(), 4);","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":503252,"byte_end":503287,"line_start":141,"line_end":141,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":503292,"byte_end":503299,"line_start":142,"line_end":142,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":6870},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/empty.rs","byte_start":506159,"byte_end":506164,"line_start":11,"line_end":11,"column_start":12,"column_end":17},"name":"Empty","qualname":"::io::empty::Empty","value":"Empty {  }","parent":null,"children":[{"krate":0,"index":6871}],"decl_id":null,"docs":" Reader for the [`empty()`] function.\n","sig":null,"attributes":[{"value":"/ Reader for the [`empty()`] function.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/empty.rs","byte_start":506058,"byte_end":506098,"line_start":9,"line_end":9,"column_start":1,"column_end":41}},{"value":"must_use = \"readers do nothing unless polled\"","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/empty.rs","byte_start":506099,"byte_end":506147,"line_start":10,"line_end":10,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":6872},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/empty.rs","byte_start":506724,"byte_end":506729,"line_start":33,"line_end":33,"column_start":8,"column_end":13},"name":"empty","qualname":"::io::empty::empty","value":"pub fn empty() -> Empty","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new handle to an empty reader.","sig":null,"attributes":[{"value":"/ Constructs a new handle to an empty reader.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/empty.rs","byte_start":506185,"byte_end":506232,"line_start":15,"line_end":15,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/empty.rs","byte_start":506233,"byte_end":506236,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ All reads from the returned reader will return `Poll::Ready(Ok(0))`.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/empty.rs","byte_start":506237,"byte_end":506309,"line_start":17,"line_end":17,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/empty.rs","byte_start":506310,"byte_end":506313,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/empty.rs","byte_start":506314,"byte_end":506328,"line_start":19,"line_end":19,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/empty.rs","byte_start":506329,"byte_end":506332,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ A slightly sad example of not reading anything into a buffer:","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/empty.rs","byte_start":506333,"byte_end":506398,"line_start":21,"line_end":21,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/empty.rs","byte_start":506399,"byte_end":506402,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/empty.rs","byte_start":506403,"byte_end":506410,"line_start":23,"line_end":23,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/empty.rs","byte_start":506411,"byte_end":506452,"line_start":24,"line_end":24,"column_start":1,"column_end":42}},{"value":"/ use futures::io::{self, AsyncReadExt};","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/empty.rs","byte_start":506453,"byte_end":506495,"line_start":25,"line_end":25,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/empty.rs","byte_start":506496,"byte_end":506499,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ let mut buffer = String::new();","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/empty.rs","byte_start":506500,"byte_end":506535,"line_start":27,"line_end":27,"column_start":1,"column_end":36}},{"value":"/ let mut reader = io::empty();","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/empty.rs","byte_start":506536,"byte_end":506569,"line_start":28,"line_end":28,"column_start":1,"column_end":34}},{"value":"/ reader.read_to_string(&mut buffer).await?;","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/empty.rs","byte_start":506570,"byte_end":506616,"line_start":29,"line_end":29,"column_start":1,"column_end":47}},{"value":"/ assert!(buffer.is_empty());","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/empty.rs","byte_start":506617,"byte_end":506648,"line_start":30,"line_end":30,"column_start":1,"column_end":32}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/empty.rs","byte_start":506649,"byte_end":506708,"line_start":31,"line_end":31,"column_start":1,"column_end":60}},{"value":"/ ```","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/empty.rs","byte_start":506709,"byte_end":506716,"line_start":32,"line_end":32,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":15998},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/fill_buf.rs","byte_start":507797,"byte_end":507804,"line_start":10,"line_end":10,"column_start":12,"column_end":19},"name":"FillBuf","qualname":"::io::fill_buf::FillBuf","value":"FillBuf {  }","parent":null,"children":[{"krate":0,"index":16001}],"decl_id":null,"docs":" Future for the [`fill_buf`](super::AsyncBufReadExt::fill_buf) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`fill_buf`](super::AsyncBufReadExt::fill_buf) method.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/fill_buf.rs","byte_start":507627,"byte_end":507700,"line_start":7,"line_end":7,"column_start":1,"column_end":74}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/fill_buf.rs","byte_start":507718,"byte_end":507785,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":16006},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/flush.rs","byte_start":509576,"byte_end":509581,"line_start":10,"line_end":10,"column_start":12,"column_end":17},"name":"Flush","qualname":"::io::flush::Flush","value":"Flush {  }","parent":null,"children":[{"krate":0,"index":16009}],"decl_id":null,"docs":" Future for the [`flush`](super::AsyncWriteExt::flush) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`flush`](super::AsyncWriteExt::flush) method.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/flush.rs","byte_start":509414,"byte_end":509479,"line_start":7,"line_end":7,"column_start":1,"column_end":66}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/flush.rs","byte_start":509497,"byte_end":509564,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":16028},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/into_sink.rs","byte_start":510564,"byte_end":510572,"line_start":20,"line_end":20,"column_start":16,"column_end":24},"name":"IntoSink","qualname":"::io::into_sink::IntoSink","value":"IntoSink {  }","parent":null,"children":[{"krate":0,"index":16031},{"krate":0,"index":16032}],"decl_id":null,"docs":" Sink for the [`into_sink`](super::AsyncWriteExt::into_sink) method.\n","sig":null,"attributes":[{"value":"must_use = \"sinks do nothing unless polled\"","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":12561792,"byte_end":12561801,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":16075},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/lines.rs","byte_start":513222,"byte_end":513227,"line_start":15,"line_end":15,"column_start":16,"column_end":21},"name":"Lines","qualname":"::io::lines::Lines","value":"Lines {  }","parent":null,"children":[{"krate":0,"index":16077},{"krate":0,"index":16078},{"krate":0,"index":16079},{"krate":0,"index":16080}],"decl_id":null,"docs":" Stream for the [`lines`](super::AsyncBufReadExt::lines) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":12561792,"byte_end":12561801,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":16118},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/read.rs","byte_start":514427,"byte_end":514431,"line_start":10,"line_end":10,"column_start":12,"column_end":16},"name":"Read","qualname":"::io::read::Read","value":"Read {  }","parent":null,"children":[{"krate":0,"index":16121},{"krate":0,"index":16122}],"decl_id":null,"docs":" Future for the [`read`](super::AsyncReadExt::read) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`read`](super::AsyncReadExt::read) method.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/read.rs","byte_start":514268,"byte_end":514330,"line_start":7,"line_end":7,"column_start":1,"column_end":63}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/read.rs","byte_start":514348,"byte_end":514415,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":16127},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/read_vectored.rs","byte_start":515323,"byte_end":515335,"line_start":10,"line_end":10,"column_start":12,"column_end":24},"name":"ReadVectored","qualname":"::io::read_vectored::ReadVectored","value":"ReadVectored {  }","parent":null,"children":[{"krate":0,"index":16130},{"krate":0,"index":16131}],"decl_id":null,"docs":" Future for the [`read_vectored`](super::AsyncReadExt::read_vectored) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`read_vectored`](super::AsyncReadExt::read_vectored) method.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/read_vectored.rs","byte_start":515146,"byte_end":515226,"line_start":7,"line_end":7,"column_start":1,"column_end":81}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/read_vectored.rs","byte_start":515244,"byte_end":515311,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":16136},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/read_exact.rs","byte_start":516301,"byte_end":516310,"line_start":12,"line_end":12,"column_start":12,"column_end":21},"name":"ReadExact","qualname":"::io::read_exact::ReadExact","value":"ReadExact {  }","parent":null,"children":[{"krate":0,"index":16139},{"krate":0,"index":16140}],"decl_id":null,"docs":" Future for the [`read_exact`](super::AsyncReadExt::read_exact) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`read_exact`](super::AsyncReadExt::read_exact) method.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/read_exact.rs","byte_start":516130,"byte_end":516204,"line_start":9,"line_end":9,"column_start":1,"column_end":75}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/read_exact.rs","byte_start":516222,"byte_end":516289,"line_start":11,"line_end":11,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":16145},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/read_line.rs","byte_start":517650,"byte_end":517658,"line_start":14,"line_end":14,"column_start":12,"column_end":20},"name":"ReadLine","qualname":"::io::read_line::ReadLine","value":"ReadLine {  }","parent":null,"children":[{"krate":0,"index":16148},{"krate":0,"index":16149},{"krate":0,"index":16150},{"krate":0,"index":16151}],"decl_id":null,"docs":" Future for the [`read_line`](super::AsyncBufReadExt::read_line) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`read_line`](super::AsyncBufReadExt::read_line) method.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/read_line.rs","byte_start":517478,"byte_end":517553,"line_start":11,"line_end":11,"column_start":1,"column_end":76}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/read_line.rs","byte_start":517571,"byte_end":517638,"line_start":13,"line_end":13,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":16156},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/read_to_end.rs","byte_start":519466,"byte_end":519475,"line_start":12,"line_end":12,"column_start":12,"column_end":21},"name":"ReadToEnd","qualname":"::io::read_to_end::ReadToEnd","value":"ReadToEnd {  }","parent":null,"children":[{"krate":0,"index":16159},{"krate":0,"index":16160},{"krate":0,"index":16161}],"decl_id":null,"docs":" Future for the [`read_to_end`](super::AsyncReadExt::read_to_end) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`read_to_end`](super::AsyncReadExt::read_to_end) method.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/read_to_end.rs","byte_start":519293,"byte_end":519369,"line_start":9,"line_end":9,"column_start":1,"column_end":77}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/read_to_end.rs","byte_start":519387,"byte_end":519454,"line_start":11,"line_end":11,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":16166},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/read_to_string.rs","byte_start":522481,"byte_end":522493,"line_start":13,"line_end":13,"column_start":12,"column_end":24},"name":"ReadToString","qualname":"::io::read_to_string::ReadToString","value":"ReadToString {  }","parent":null,"children":[{"krate":0,"index":16169},{"krate":0,"index":16170},{"krate":0,"index":16171},{"krate":0,"index":16172}],"decl_id":null,"docs":" Future for the [`read_to_string`](super::AsyncReadExt::read_to_string) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`read_to_string`](super::AsyncReadExt::read_to_string) method.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/read_to_string.rs","byte_start":522302,"byte_end":522384,"line_start":10,"line_end":10,"column_start":1,"column_end":83}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/read_to_string.rs","byte_start":522402,"byte_end":522469,"line_start":12,"line_end":12,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":16177},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/read_until.rs","byte_start":524331,"byte_end":524340,"line_start":12,"line_end":12,"column_start":12,"column_end":21},"name":"ReadUntil","qualname":"::io::read_until::ReadUntil","value":"ReadUntil {  }","parent":null,"children":[{"krate":0,"index":16180},{"krate":0,"index":16181},{"krate":0,"index":16182},{"krate":0,"index":16183}],"decl_id":null,"docs":" Future for the [`read_until`](super::AsyncBufReadExt::read_until) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`read_until`](super::AsyncBufReadExt::read_until) method.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/read_until.rs","byte_start":524157,"byte_end":524234,"line_start":9,"line_end":9,"column_start":1,"column_end":78}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/read_until.rs","byte_start":524252,"byte_end":524319,"line_start":11,"line_end":11,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":7362},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/repeat.rs","byte_start":526119,"byte_end":526125,"line_start":12,"line_end":12,"column_start":12,"column_end":18},"name":"Repeat","qualname":"::io::repeat::Repeat","value":"Repeat {  }","parent":null,"children":[{"krate":0,"index":7363}],"decl_id":null,"docs":" Reader for the [`repeat()`] function.\n","sig":null,"attributes":[{"value":"/ Reader for the [`repeat()`] function.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/repeat.rs","byte_start":526017,"byte_end":526058,"line_start":10,"line_end":10,"column_start":1,"column_end":42}},{"value":"must_use = \"readers do nothing unless polled\"","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/repeat.rs","byte_start":526059,"byte_end":526107,"line_start":11,"line_end":11,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":7364},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/repeat.rs","byte_start":526682,"byte_end":526688,"line_start":33,"line_end":33,"column_start":8,"column_end":14},"name":"repeat","qualname":"::io::repeat::repeat","value":"pub fn repeat(u8) -> Repeat","parent":null,"children":[],"decl_id":null,"docs":" Creates an instance of a reader that infinitely repeats one byte.","sig":null,"attributes":[{"value":"/ Creates an instance of a reader that infinitely repeats one byte.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/repeat.rs","byte_start":526145,"byte_end":526214,"line_start":16,"line_end":16,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/repeat.rs","byte_start":526215,"byte_end":526218,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ All reads from this reader will succeed by filling the specified buffer with","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/repeat.rs","byte_start":526219,"byte_end":526299,"line_start":18,"line_end":18,"column_start":1,"column_end":81}},{"value":"/ the given byte.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/repeat.rs","byte_start":526300,"byte_end":526319,"line_start":19,"line_end":19,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/repeat.rs","byte_start":526320,"byte_end":526323,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/repeat.rs","byte_start":526324,"byte_end":526338,"line_start":21,"line_end":21,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/repeat.rs","byte_start":526339,"byte_end":526342,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/repeat.rs","byte_start":526343,"byte_end":526350,"line_start":23,"line_end":23,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/repeat.rs","byte_start":526351,"byte_end":526392,"line_start":24,"line_end":24,"column_start":1,"column_end":42}},{"value":"/ use futures::io::{self, AsyncReadExt};","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/repeat.rs","byte_start":526393,"byte_end":526435,"line_start":25,"line_end":25,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/repeat.rs","byte_start":526436,"byte_end":526439,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ let mut buffer = [0; 3];","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/repeat.rs","byte_start":526440,"byte_end":526468,"line_start":27,"line_end":27,"column_start":1,"column_end":29}},{"value":"/ let mut reader = io::repeat(0b101);","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/repeat.rs","byte_start":526469,"byte_end":526508,"line_start":28,"line_end":28,"column_start":1,"column_end":40}},{"value":"/ reader.read_exact(&mut buffer).await.unwrap();","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/repeat.rs","byte_start":526509,"byte_end":526559,"line_start":29,"line_end":29,"column_start":1,"column_end":51}},{"value":"/ assert_eq!(buffer, [0b101, 0b101, 0b101]);","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/repeat.rs","byte_start":526560,"byte_end":526606,"line_start":30,"line_end":30,"column_start":1,"column_end":47}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/repeat.rs","byte_start":526607,"byte_end":526666,"line_start":31,"line_end":31,"column_start":1,"column_end":60}},{"value":"/ ```","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/repeat.rs","byte_start":526667,"byte_end":526674,"line_start":32,"line_end":32,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":16188},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/seek.rs","byte_start":527960,"byte_end":527964,"line_start":10,"line_end":10,"column_start":12,"column_end":16},"name":"Seek","qualname":"::io::seek::Seek","value":"Seek {  }","parent":null,"children":[{"krate":0,"index":16191},{"krate":0,"index":16192}],"decl_id":null,"docs":" Future for the [`seek`](crate::io::AsyncSeekExt::seek) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`seek`](crate::io::AsyncSeekExt::seek) method.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/seek.rs","byte_start":527797,"byte_end":527863,"line_start":7,"line_end":7,"column_start":1,"column_end":67}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/seek.rs","byte_start":527881,"byte_end":527948,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":7438},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/sink.rs","byte_start":528734,"byte_end":528738,"line_start":9,"line_end":9,"column_start":12,"column_end":16},"name":"Sink","qualname":"::io::sink::Sink","value":"Sink {  }","parent":null,"children":[{"krate":0,"index":7439}],"decl_id":null,"docs":" Writer for the [`sink()`] function.\n","sig":null,"attributes":[{"value":"/ Writer for the [`sink()`] function.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/sink.rs","byte_start":528634,"byte_end":528673,"line_start":7,"line_end":7,"column_start":1,"column_end":40}},{"value":"must_use = \"writers do nothing unless polled\"","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/sink.rs","byte_start":528674,"byte_end":528722,"line_start":8,"line_end":8,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":7440},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/sink.rs","byte_start":529346,"byte_end":529350,"line_start":30,"line_end":30,"column_start":8,"column_end":12},"name":"sink","qualname":"::io::sink::sink","value":"pub fn sink() -> Sink","parent":null,"children":[],"decl_id":null,"docs":" Creates an instance of a writer which will successfully consume all data.","sig":null,"attributes":[{"value":"/ Creates an instance of a writer which will successfully consume all data.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/sink.rs","byte_start":528759,"byte_end":528836,"line_start":13,"line_end":13,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/sink.rs","byte_start":528837,"byte_end":528840,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ All calls to `poll_write` on the returned instance will return `Poll::Ready(Ok(buf.len()))`","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/sink.rs","byte_start":528841,"byte_end":528936,"line_start":15,"line_end":15,"column_start":1,"column_end":96}},{"value":"/ and the contents of the buffer will not be inspected.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/sink.rs","byte_start":528937,"byte_end":528994,"line_start":16,"line_end":16,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/sink.rs","byte_start":528995,"byte_end":528998,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/sink.rs","byte_start":528999,"byte_end":529013,"line_start":18,"line_end":18,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/sink.rs","byte_start":529014,"byte_end":529017,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/sink.rs","byte_start":529018,"byte_end":529029,"line_start":20,"line_end":20,"column_start":1,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/sink.rs","byte_start":529030,"byte_end":529071,"line_start":21,"line_end":21,"column_start":1,"column_end":42}},{"value":"/ use futures::io::{self, AsyncWriteExt};","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/sink.rs","byte_start":529072,"byte_end":529115,"line_start":22,"line_end":22,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/sink.rs","byte_start":529116,"byte_end":529119,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ let buffer = vec![1, 2, 3, 5, 8];","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/sink.rs","byte_start":529120,"byte_end":529157,"line_start":24,"line_end":24,"column_start":1,"column_end":38}},{"value":"/ let mut writer = io::sink();","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/sink.rs","byte_start":529158,"byte_end":529190,"line_start":25,"line_end":25,"column_start":1,"column_end":33}},{"value":"/ let num_bytes = writer.write(&buffer).await?;","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/sink.rs","byte_start":529191,"byte_end":529240,"line_start":26,"line_end":26,"column_start":1,"column_end":50}},{"value":"/ assert_eq!(num_bytes, 5);","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/sink.rs","byte_start":529241,"byte_end":529270,"line_start":27,"line_end":27,"column_start":1,"column_end":30}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/sink.rs","byte_start":529271,"byte_end":529330,"line_start":28,"line_end":28,"column_start":1,"column_end":60}},{"value":"/ ```","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/sink.rs","byte_start":529331,"byte_end":529338,"line_start":29,"line_end":29,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":16197},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/split.rs","byte_start":530537,"byte_end":530545,"line_start":11,"line_end":11,"column_start":12,"column_end":20},"name":"ReadHalf","qualname":"::io::split::ReadHalf","value":"ReadHalf {  }","parent":null,"children":[{"krate":0,"index":16199}],"decl_id":null,"docs":" The readable half of an object returned from `AsyncRead::split`.\n","sig":null,"attributes":[{"value":"/ The readable half of an object returned from `AsyncRead::split`.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/split.rs","byte_start":530440,"byte_end":530508,"line_start":9,"line_end":9,"column_start":1,"column_end":69}}]},{"kind":"Struct","id":{"krate":0,"index":16203},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/split.rs","byte_start":530674,"byte_end":530683,"line_start":17,"line_end":17,"column_start":12,"column_end":21},"name":"WriteHalf","qualname":"::io::split::WriteHalf","value":"WriteHalf {  }","parent":null,"children":[{"krate":0,"index":16205}],"decl_id":null,"docs":" The writable half of an object returned from `AsyncRead::split`.\n","sig":null,"attributes":[{"value":"/ The writable half of an object returned from `AsyncRead::split`.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/split.rs","byte_start":530577,"byte_end":530645,"line_start":15,"line_end":15,"column_start":1,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":7501},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/split.rs","byte_start":531416,"byte_end":531423,"line_start":38,"line_end":38,"column_start":12,"column_end":19},"name":"reunite","qualname":"<ReadHalf<T>>::reunite","value":"pub fn reunite(Self, WriteHalf<T>) -> Result<T, ReuniteError<T>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to put the two \"halves\" of a split `AsyncRead + AsyncWrite` back\n together. Succeeds only if the `ReadHalf<T>` and `WriteHalf<T>` are\n a matching pair originating from the same call to `AsyncReadExt::split`.\n","sig":null,"attributes":[{"value":"/ Attempts to put the two \"halves\" of a split `AsyncRead + AsyncWrite` back","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/split.rs","byte_start":531170,"byte_end":531247,"line_start":35,"line_end":35,"column_start":5,"column_end":82}},{"value":"/ together. Succeeds only if the `ReadHalf<T>` and `WriteHalf<T>` are","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/split.rs","byte_start":531252,"byte_end":531323,"line_start":36,"line_end":36,"column_start":5,"column_end":76}},{"value":"/ a matching pair originating from the same call to `AsyncReadExt::split`.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/split.rs","byte_start":531328,"byte_end":531404,"line_start":37,"line_end":37,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":7505},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/split.rs","byte_start":531925,"byte_end":531932,"line_start":49,"line_end":49,"column_start":12,"column_end":19},"name":"reunite","qualname":"<WriteHalf<T>>::reunite","value":"pub fn reunite(Self, ReadHalf<T>) -> Result<T, ReuniteError<T>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to put the two \"halves\" of a split `AsyncRead + AsyncWrite` back\n together. Succeeds only if the `ReadHalf<T>` and `WriteHalf<T>` are\n a matching pair originating from the same call to `AsyncReadExt::split`.\n","sig":null,"attributes":[{"value":"/ Attempts to put the two \"halves\" of a split `AsyncRead + AsyncWrite` back","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/split.rs","byte_start":531679,"byte_end":531756,"line_start":46,"line_end":46,"column_start":5,"column_end":82}},{"value":"/ together. Succeeds only if the `ReadHalf<T>` and `WriteHalf<T>` are","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/split.rs","byte_start":531761,"byte_end":531832,"line_start":47,"line_end":47,"column_start":5,"column_end":76}},{"value":"/ a matching pair originating from the same call to `AsyncReadExt::split`.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/split.rs","byte_start":531837,"byte_end":531913,"line_start":48,"line_end":48,"column_start":5,"column_end":81}}]},{"kind":"Struct","id":{"krate":0,"index":7522},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/split.rs","byte_start":533520,"byte_end":533532,"line_start":100,"line_end":100,"column_start":12,"column_end":24},"name":"ReuniteError","qualname":"::io::split::ReuniteError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error indicating a `ReadHalf<T>` and `WriteHalf<T>` were not two halves\n of a `AsyncRead + AsyncWrite`, and thus could not be `reunite`d.\n","sig":null,"attributes":[{"value":"/ Error indicating a `ReadHalf<T>` and `WriteHalf<T>` were not two halves","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/split.rs","byte_start":533364,"byte_end":533439,"line_start":98,"line_end":98,"column_start":1,"column_end":76}},{"value":"/ of a `AsyncRead + AsyncWrite`, and thus could not be `reunite`d.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/split.rs","byte_start":533440,"byte_end":533508,"line_start":99,"line_end":99,"column_start":1,"column_end":69}}]},{"kind":"Field","id":{"krate":0,"index":7525},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/split.rs","byte_start":533536,"byte_end":533551,"line_start":100,"line_end":100,"column_start":28,"column_end":43},"name":"0","qualname":"::io::split::ReuniteError::0","value":"io::split::ReadHalf<T>","parent":{"krate":0,"index":7522},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":7526},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/split.rs","byte_start":533553,"byte_end":533569,"line_start":100,"line_end":100,"column_start":45,"column_end":61},"name":"1","qualname":"::io::split::ReuniteError::1","value":"io::split::WriteHalf<T>","parent":{"krate":0,"index":7522},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":16214},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/take.rs","byte_start":534478,"byte_end":534482,"line_start":14,"line_end":14,"column_start":16,"column_end":20},"name":"Take","qualname":"::io::take::Take","value":"Take {  }","parent":null,"children":[{"krate":0,"index":16216},{"krate":0,"index":16217}],"decl_id":null,"docs":" Reader for the [`take`](super::AsyncReadExt::take) method.\n","sig":null,"attributes":[{"value":"must_use = \"readers do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":12561792,"byte_end":12561801,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":7579},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/take.rs","byte_start":535427,"byte_end":535432,"line_start":49,"line_end":49,"column_start":12,"column_end":17},"name":"limit","qualname":"<Take<R>>::limit","value":"pub fn limit(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns the remaining number of bytes that can be\n read before this instance will return EOF.","sig":null,"attributes":[{"value":"/ Returns the remaining number of bytes that can be","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/take.rs","byte_start":534674,"byte_end":534727,"line_start":26,"line_end":26,"column_start":5,"column_end":58}},{"value":"/ read before this instance will return EOF.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/take.rs","byte_start":534732,"byte_end":534778,"line_start":27,"line_end":27,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/take.rs","byte_start":534783,"byte_end":534786,"line_start":28,"line_end":28,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/take.rs","byte_start":534791,"byte_end":534801,"line_start":29,"line_end":29,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/take.rs","byte_start":534806,"byte_end":534809,"line_start":30,"line_end":30,"column_start":5,"column_end":8}},{"value":"/ This instance may reach `EOF` after reading fewer bytes than indicated by","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/take.rs","byte_start":534814,"byte_end":534891,"line_start":31,"line_end":31,"column_start":5,"column_end":82}},{"value":"/ this method if the underlying [`AsyncRead`] instance reaches EOF.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/take.rs","byte_start":534896,"byte_end":534965,"line_start":32,"line_end":32,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/take.rs","byte_start":534970,"byte_end":534973,"line_start":33,"line_end":33,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/take.rs","byte_start":534978,"byte_end":534992,"line_start":34,"line_end":34,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/take.rs","byte_start":534997,"byte_end":535000,"line_start":35,"line_end":35,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/take.rs","byte_start":535005,"byte_end":535012,"line_start":36,"line_end":36,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/take.rs","byte_start":535017,"byte_end":535058,"line_start":37,"line_end":37,"column_start":5,"column_end":46}},{"value":"/ use futures::io::{AsyncReadExt, Cursor};","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/take.rs","byte_start":535063,"byte_end":535107,"line_start":38,"line_end":38,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/take.rs","byte_start":535112,"byte_end":535115,"line_start":39,"line_end":39,"column_start":5,"column_end":8}},{"value":"/ let reader = Cursor::new(&b\"12345678\"[..]);","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/take.rs","byte_start":535120,"byte_end":535167,"line_start":40,"line_end":40,"column_start":5,"column_end":52}},{"value":"/ let mut buffer = [0; 2];","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/take.rs","byte_start":535172,"byte_end":535200,"line_start":41,"line_end":41,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/take.rs","byte_start":535205,"byte_end":535208,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/ let mut take = reader.take(4);","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/take.rs","byte_start":535213,"byte_end":535247,"line_start":43,"line_end":43,"column_start":5,"column_end":39}},{"value":"/ let n = take.read(&mut buffer).await?;","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/take.rs","byte_start":535252,"byte_end":535294,"line_start":44,"line_end":44,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/take.rs","byte_start":535299,"byte_end":535302,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(take.limit(), 2);","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/take.rs","byte_start":535307,"byte_end":535339,"line_start":46,"line_end":46,"column_start":5,"column_end":37}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/take.rs","byte_start":535344,"byte_end":535403,"line_start":47,"line_end":47,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/take.rs","byte_start":535408,"byte_end":535415,"line_start":48,"line_end":48,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7580},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/take.rs","byte_start":536343,"byte_end":536352,"line_start":79,"line_end":79,"column_start":12,"column_end":21},"name":"set_limit","qualname":"<Take<R>>::set_limit","value":"pub fn set_limit(&mut Self, u64)","parent":null,"children":[],"decl_id":null,"docs":" Sets the number of bytes that can be read before this instance will\n return EOF. This is the same as constructing a new `Take` instance, so\n the amount of bytes read and the previous limit value don't matter when\n calling this method.","sig":null,"attributes":[{"value":"/ Sets the number of bytes that can be read before this instance will","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/take.rs","byte_start":535479,"byte_end":535550,"line_start":53,"line_end":53,"column_start":5,"column_end":76}},{"value":"/ return EOF. This is the same as constructing a new `Take` instance, so","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/take.rs","byte_start":535555,"byte_end":535629,"line_start":54,"line_end":54,"column_start":5,"column_end":79}},{"value":"/ the amount of bytes read and the previous limit value don't matter when","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/take.rs","byte_start":535634,"byte_end":535709,"line_start":55,"line_end":55,"column_start":5,"column_end":80}},{"value":"/ calling this method.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/take.rs","byte_start":535714,"byte_end":535738,"line_start":56,"line_end":56,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/take.rs","byte_start":535743,"byte_end":535746,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/take.rs","byte_start":535751,"byte_end":535765,"line_start":58,"line_end":58,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/take.rs","byte_start":535770,"byte_end":535773,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/take.rs","byte_start":535778,"byte_end":535785,"line_start":60,"line_end":60,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/take.rs","byte_start":535790,"byte_end":535831,"line_start":61,"line_end":61,"column_start":5,"column_end":46}},{"value":"/ use futures::io::{AsyncReadExt, Cursor};","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/take.rs","byte_start":535836,"byte_end":535880,"line_start":62,"line_end":62,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/take.rs","byte_start":535885,"byte_end":535888,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ let reader = Cursor::new(&b\"12345678\"[..]);","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/take.rs","byte_start":535893,"byte_end":535940,"line_start":64,"line_end":64,"column_start":5,"column_end":52}},{"value":"/ let mut buffer = [0; 4];","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/take.rs","byte_start":535945,"byte_end":535973,"line_start":65,"line_end":65,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/take.rs","byte_start":535978,"byte_end":535981,"line_start":66,"line_end":66,"column_start":5,"column_end":8}},{"value":"/ let mut take = reader.take(4);","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/take.rs","byte_start":535986,"byte_end":536020,"line_start":67,"line_end":67,"column_start":5,"column_end":39}},{"value":"/ let n = take.read(&mut buffer).await?;","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/take.rs","byte_start":536025,"byte_end":536067,"line_start":68,"line_end":68,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/take.rs","byte_start":536072,"byte_end":536075,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(n, 4);","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/take.rs","byte_start":536080,"byte_end":536101,"line_start":70,"line_end":70,"column_start":5,"column_end":26}},{"value":"/ assert_eq!(take.limit(), 0);","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/take.rs","byte_start":536106,"byte_end":536138,"line_start":71,"line_end":71,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/take.rs","byte_start":536143,"byte_end":536146,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ take.set_limit(10);","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/take.rs","byte_start":536151,"byte_end":536174,"line_start":73,"line_end":73,"column_start":5,"column_end":28}},{"value":"/ let n = take.read(&mut buffer).await?;","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/take.rs","byte_start":536179,"byte_end":536221,"line_start":74,"line_end":74,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(n, 4);","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/take.rs","byte_start":536226,"byte_end":536247,"line_start":75,"line_end":75,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/take.rs","byte_start":536252,"byte_end":536255,"line_start":76,"line_end":76,"column_start":5,"column_end":8}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/take.rs","byte_start":536260,"byte_end":536319,"line_start":77,"line_end":77,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/take.rs","byte_start":536324,"byte_end":536331,"line_start":78,"line_end":78,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":16253},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/window.rs","byte_start":538907,"byte_end":538913,"line_start":21,"line_end":21,"column_start":12,"column_end":18},"name":"Window","qualname":"::io::window::Window","value":"Window {  }","parent":null,"children":[{"krate":0,"index":16255},{"krate":0,"index":16256}],"decl_id":null,"docs":" A owned window around an underlying buffer.","sig":null,"attributes":[{"value":"/ A owned window around an underlying buffer.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/window.rs","byte_start":537952,"byte_end":537999,"line_start":3,"line_end":3,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/window.rs","byte_start":538000,"byte_end":538003,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ Normally slices work great for considering sub-portions of a buffer, but","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/window.rs","byte_start":538004,"byte_end":538080,"line_start":5,"line_end":5,"column_start":1,"column_end":77}},{"value":"/ unfortunately a slice is a *borrowed* type in Rust which has an associated","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/window.rs","byte_start":538081,"byte_end":538159,"line_start":6,"line_end":6,"column_start":1,"column_end":79}},{"value":"/ lifetime. When working with future and async I/O these lifetimes are not","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/window.rs","byte_start":538160,"byte_end":538236,"line_start":7,"line_end":7,"column_start":1,"column_end":77}},{"value":"/ always appropriate, and are sometimes difficult to store in tasks. This","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/window.rs","byte_start":538237,"byte_end":538312,"line_start":8,"line_end":8,"column_start":1,"column_end":76}},{"value":"/ type strives to fill this gap by providing an \"owned slice\" around an","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/window.rs","byte_start":538313,"byte_end":538386,"line_start":9,"line_end":9,"column_start":1,"column_end":74}},{"value":"/ underlying buffer of bytes.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/window.rs","byte_start":538387,"byte_end":538418,"line_start":10,"line_end":10,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/window.rs","byte_start":538419,"byte_end":538422,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ A `Window<T>` wraps an underlying buffer, `T`, and has configurable","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/window.rs","byte_start":538423,"byte_end":538494,"line_start":12,"line_end":12,"column_start":1,"column_end":72}},{"value":"/ start/end indexes to alter the behavior of the `AsRef<[u8]>` implementation","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/window.rs","byte_start":538495,"byte_end":538574,"line_start":13,"line_end":13,"column_start":1,"column_end":80}},{"value":"/ that this type carries.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/window.rs","byte_start":538575,"byte_end":538602,"line_start":14,"line_end":14,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/window.rs","byte_start":538603,"byte_end":538606,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ This type can be particularly useful when working with the `write_all`","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/window.rs","byte_start":538607,"byte_end":538681,"line_start":16,"line_end":16,"column_start":1,"column_end":75}},{"value":"/ combinator in this crate. Data can be sliced via `Window`, consumed by","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/window.rs","byte_start":538682,"byte_end":538756,"line_start":17,"line_end":17,"column_start":1,"column_end":75}},{"value":"/ `write_all`, and then earned back once the write operation finishes through","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/window.rs","byte_start":538757,"byte_end":538836,"line_start":18,"line_end":18,"column_start":1,"column_end":80}},{"value":"/ the `into_inner` method on this type.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/window.rs","byte_start":538837,"byte_end":538878,"line_start":19,"line_end":19,"column_start":1,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":7604},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/window.rs","byte_start":539222,"byte_end":539225,"line_start":32,"line_end":32,"column_start":12,"column_end":15},"name":"new","qualname":"<Window<T>>::new","value":"pub fn new(T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new window around the buffer `t` defaulting to the entire\n slice.","sig":null,"attributes":[{"value":"/ Creates a new window around the buffer `t` defaulting to the entire","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/window.rs","byte_start":538998,"byte_end":539069,"line_start":27,"line_end":27,"column_start":5,"column_end":76}},{"value":"/ slice.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/window.rs","byte_start":539074,"byte_end":539084,"line_start":28,"line_end":28,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/window.rs","byte_start":539089,"byte_end":539092,"line_start":29,"line_end":29,"column_start":5,"column_end":8}},{"value":"/ Further methods can be called on the returned `Window<T>` to alter the","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/window.rs","byte_start":539097,"byte_end":539171,"line_start":30,"line_end":30,"column_start":5,"column_end":79}},{"value":"/ window into the data provided.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/window.rs","byte_start":539176,"byte_end":539210,"line_start":31,"line_end":31,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":7605},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/window.rs","byte_start":539404,"byte_end":539411,"line_start":38,"line_end":38,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Window<T>>::get_ref","value":"pub fn get_ref(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Gets a shared reference to the underlying buffer inside of this\n `Window`.\n","sig":null,"attributes":[{"value":"/ Gets a shared reference to the underlying buffer inside of this","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/window.rs","byte_start":539307,"byte_end":539374,"line_start":36,"line_end":36,"column_start":5,"column_end":72}},{"value":"/ `Window`.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/window.rs","byte_start":539379,"byte_end":539392,"line_start":37,"line_end":37,"column_start":5,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":7606},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/window.rs","byte_start":539556,"byte_end":539563,"line_start":44,"line_end":44,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Window<T>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the underlying buffer inside of this\n `Window`.\n","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the underlying buffer inside of this","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/window.rs","byte_start":539458,"byte_end":539526,"line_start":42,"line_end":42,"column_start":5,"column_end":73}},{"value":"/ `Window`.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/window.rs","byte_start":539531,"byte_end":539544,"line_start":43,"line_end":43,"column_start":5,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":7607},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/window.rs","byte_start":539694,"byte_end":539704,"line_start":49,"line_end":49,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Window<T>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes this `Window`, returning the underlying buffer.\n","sig":null,"attributes":[{"value":"/ Consumes this `Window`, returning the underlying buffer.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/window.rs","byte_start":539622,"byte_end":539682,"line_start":48,"line_end":48,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":7608},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/window.rs","byte_start":539845,"byte_end":539850,"line_start":55,"line_end":55,"column_start":12,"column_end":17},"name":"start","qualname":"<Window<T>>::start","value":"pub fn start(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the starting index of this window into the underlying buffer\n `T`.\n","sig":null,"attributes":[{"value":"/ Returns the starting index of this window into the underlying buffer","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/window.rs","byte_start":539748,"byte_end":539820,"line_start":53,"line_end":53,"column_start":5,"column_end":77}},{"value":"/ `T`.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/window.rs","byte_start":539825,"byte_end":539833,"line_start":54,"line_end":54,"column_start":5,"column_end":13}}]},{"kind":"Method","id":{"krate":0,"index":7609},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/window.rs","byte_start":539997,"byte_end":540000,"line_start":61,"line_end":61,"column_start":12,"column_end":15},"name":"end","qualname":"<Window<T>>::end","value":"pub fn end(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the end index of this window into the underlying buffer\n `T`.\n","sig":null,"attributes":[{"value":"/ Returns the end index of this window into the underlying buffer","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/window.rs","byte_start":539905,"byte_end":539972,"line_start":59,"line_end":59,"column_start":5,"column_end":72}},{"value":"/ `T`.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/window.rs","byte_start":539977,"byte_end":539985,"line_start":60,"line_end":60,"column_start":5,"column_end":13}}]},{"kind":"Method","id":{"krate":0,"index":7610},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/window.rs","byte_start":540446,"byte_end":540449,"line_start":74,"line_end":74,"column_start":12,"column_end":15},"name":"set","qualname":"<Window<T>>::set","value":"pub fn set<R: RangeBounds<usize>>(&mut Self, R)","parent":null,"children":[],"decl_id":null,"docs":" Changes the range of this window to the range specified.","sig":null,"attributes":[{"value":"/ Changes the range of this window to the range specified.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/window.rs","byte_start":540053,"byte_end":540113,"line_start":65,"line_end":65,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/window.rs","byte_start":540118,"byte_end":540121,"line_start":66,"line_end":66,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/window.rs","byte_start":540126,"byte_end":540138,"line_start":67,"line_end":67,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/window.rs","byte_start":540143,"byte_end":540146,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ This method will panic if `range` is out of bounds for the underlying","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/window.rs","byte_start":540151,"byte_end":540224,"line_start":69,"line_end":69,"column_start":5,"column_end":78}},{"value":"/ slice or if [`start_bound()`] of `range` comes after the [`end_bound()`].","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/window.rs","byte_start":540229,"byte_end":540306,"line_start":70,"line_end":70,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/window.rs","byte_start":540311,"byte_end":540314,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ [`start_bound()`]: std::ops::RangeBounds::start_bound","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/window.rs","byte_start":540319,"byte_end":540376,"line_start":72,"line_end":72,"column_start":5,"column_end":62}},{"value":"/ [`end_bound()`]: std::ops::RangeBounds::end_bound","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/window.rs","byte_start":540381,"byte_end":540434,"line_start":73,"line_end":73,"column_start":5,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":16260},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/write.rs","byte_start":541636,"byte_end":541641,"line_start":10,"line_end":10,"column_start":12,"column_end":17},"name":"Write","qualname":"::io::write::Write","value":"Write {  }","parent":null,"children":[{"krate":0,"index":16263},{"krate":0,"index":16264}],"decl_id":null,"docs":" Future for the [`write`](super::AsyncWriteExt::write) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`write`](super::AsyncWriteExt::write) method.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/write.rs","byte_start":541474,"byte_end":541539,"line_start":7,"line_end":7,"column_start":1,"column_end":66}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/write.rs","byte_start":541557,"byte_end":541624,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":16269},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/write_vectored.rs","byte_start":542532,"byte_end":542545,"line_start":10,"line_end":10,"column_start":12,"column_end":25},"name":"WriteVectored","qualname":"::io::write_vectored::WriteVectored","value":"WriteVectored {  }","parent":null,"children":[{"krate":0,"index":16272},{"krate":0,"index":16273}],"decl_id":null,"docs":" Future for the [`write_vectored`](super::AsyncWriteExt::write_vectored) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`write_vectored`](super::AsyncWriteExt::write_vectored) method.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/write_vectored.rs","byte_start":542352,"byte_end":542435,"line_start":7,"line_end":7,"column_start":1,"column_end":84}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/write_vectored.rs","byte_start":542453,"byte_end":542520,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":16278},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/write_all.rs","byte_start":543504,"byte_end":543512,"line_start":12,"line_end":12,"column_start":12,"column_end":20},"name":"WriteAll","qualname":"::io::write_all::WriteAll","value":"WriteAll {  }","parent":null,"children":[{"krate":0,"index":16281},{"krate":0,"index":16282}],"decl_id":null,"docs":" Future for the [`write_all`](super::AsyncWriteExt::write_all) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`write_all`](super::AsyncWriteExt::write_all) method.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/write_all.rs","byte_start":543334,"byte_end":543407,"line_start":9,"line_end":9,"column_start":1,"column_end":74}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/write_all.rs","byte_start":543425,"byte_end":543492,"line_start":11,"line_end":11,"column_start":1,"column_end":68}}]},{"kind":"Trait","id":{"krate":0,"index":7730},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":447516,"byte_end":447528,"line_start":152,"line_end":152,"column_start":11,"column_end":23},"name":"AsyncReadExt","qualname":"::io::AsyncReadExt","value":"AsyncReadExt: AsyncRead","parent":null,"children":[{"krate":0,"index":7731},{"krate":0,"index":7733},{"krate":0,"index":7735},{"krate":0,"index":7737},{"krate":0,"index":7739},{"krate":0,"index":7741},{"krate":0,"index":7743},{"krate":0,"index":7744}],"decl_id":null,"docs":" An extension trait which adds utility methods to `AsyncRead` types.\n","sig":null,"attributes":[{"value":"/ An extension trait which adds utility methods to `AsyncRead` types.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":447434,"byte_end":447505,"line_start":151,"line_end":151,"column_start":1,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":7731},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":448381,"byte_end":448386,"line_start":176,"line_end":176,"column_start":8,"column_end":13},"name":"chain","qualname":"::io::AsyncReadExt::chain","value":"pub fn chain<R>(Self, R) -> Chain<Self, R> where Self: Sized, R: AsyncRead","parent":{"krate":0,"index":7730},"children":[],"decl_id":null,"docs":" Creates an adaptor which will chain this stream with another.","sig":null,"attributes":[{"value":"/ Creates an adaptor which will chain this stream with another.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":447546,"byte_end":447611,"line_start":153,"line_end":153,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":447616,"byte_end":447619,"line_start":154,"line_end":154,"column_start":5,"column_end":8}},{"value":"/ The returned `AsyncRead` instance will first read all bytes from this object","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":447624,"byte_end":447704,"line_start":155,"line_end":155,"column_start":5,"column_end":85}},{"value":"/ until EOF is encountered. Afterwards the output is equivalent to the","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":447709,"byte_end":447781,"line_start":156,"line_end":156,"column_start":5,"column_end":77}},{"value":"/ output of `next`.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":447786,"byte_end":447807,"line_start":157,"line_end":157,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":447812,"byte_end":447815,"line_start":158,"line_end":158,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":447820,"byte_end":447834,"line_start":159,"line_end":159,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":447839,"byte_end":447842,"line_start":160,"line_end":160,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":447847,"byte_end":447854,"line_start":161,"line_end":161,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":447859,"byte_end":447900,"line_start":162,"line_end":162,"column_start":5,"column_end":46}},{"value":"/ use futures::io::{AsyncReadExt, Cursor};","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":447905,"byte_end":447949,"line_start":163,"line_end":163,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":447954,"byte_end":447957,"line_start":164,"line_end":164,"column_start":5,"column_end":8}},{"value":"/ let reader1 = Cursor::new([1, 2, 3, 4]);","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":447962,"byte_end":448006,"line_start":165,"line_end":165,"column_start":5,"column_end":49}},{"value":"/ let reader2 = Cursor::new([5, 6, 7, 8]);","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":448011,"byte_end":448055,"line_start":166,"line_end":166,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":448060,"byte_end":448063,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ let mut reader = reader1.chain(reader2);","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":448068,"byte_end":448112,"line_start":168,"line_end":168,"column_start":5,"column_end":49}},{"value":"/ let mut buffer = Vec::new();","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":448117,"byte_end":448149,"line_start":169,"line_end":169,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":448154,"byte_end":448157,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ // read the value into a Vec.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":448162,"byte_end":448195,"line_start":171,"line_end":171,"column_start":5,"column_end":38}},{"value":"/ reader.read_to_end(&mut buffer).await?;","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":448200,"byte_end":448243,"line_start":172,"line_end":172,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(buffer, [1, 2, 3, 4, 5, 6, 7, 8]);","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":448248,"byte_end":448297,"line_start":173,"line_end":173,"column_start":5,"column_end":54}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":448302,"byte_end":448361,"line_start":174,"line_end":174,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":448366,"byte_end":448373,"line_start":175,"line_end":175,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7733},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":449439,"byte_end":449443,"line_start":208,"line_end":208,"column_start":8,"column_end":12},"name":"read","qualname":"::io::AsyncReadExt::read","value":"pub fn read<'a>(&'a mut Self, &'a mut [u8]) -> Read where Self: Unpin","parent":{"krate":0,"index":7730},"children":[],"decl_id":null,"docs":" Tries to read some bytes directly into the given `buf` in asynchronous\n manner, returning a future type.","sig":null,"attributes":[{"value":"/ Tries to read some bytes directly into the given `buf` in asynchronous","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":448537,"byte_end":448611,"line_start":184,"line_end":184,"column_start":5,"column_end":79}},{"value":"/ manner, returning a future type.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":448616,"byte_end":448652,"line_start":185,"line_end":185,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":448657,"byte_end":448660,"line_start":186,"line_end":186,"column_start":5,"column_end":8}},{"value":"/ The returned future will resolve to the number of bytes read once the read","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":448665,"byte_end":448743,"line_start":187,"line_end":187,"column_start":5,"column_end":83}},{"value":"/ operation is completed.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":448748,"byte_end":448775,"line_start":188,"line_end":188,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":448780,"byte_end":448783,"line_start":189,"line_end":189,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":448788,"byte_end":448802,"line_start":190,"line_end":190,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":448807,"byte_end":448810,"line_start":191,"line_end":191,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":448815,"byte_end":448822,"line_start":192,"line_end":192,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":448827,"byte_end":448868,"line_start":193,"line_end":193,"column_start":5,"column_end":46}},{"value":"/ use futures::io::{AsyncReadExt, Cursor};","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":448873,"byte_end":448917,"line_start":194,"line_end":194,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":448922,"byte_end":448925,"line_start":195,"line_end":195,"column_start":5,"column_end":8}},{"value":"/ let mut reader = Cursor::new([1, 2, 3, 4]);","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":448930,"byte_end":448977,"line_start":196,"line_end":196,"column_start":5,"column_end":52}},{"value":"/ let mut output = [0u8; 5];","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":448982,"byte_end":449012,"line_start":197,"line_end":197,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":449017,"byte_end":449020,"line_start":198,"line_end":198,"column_start":5,"column_end":8}},{"value":"/ let bytes = reader.read(&mut output[..]).await?;","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":449025,"byte_end":449077,"line_start":199,"line_end":199,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":449082,"byte_end":449085,"line_start":200,"line_end":200,"column_start":5,"column_end":8}},{"value":"/ // This is only guaranteed to be 4 because `&[u8]` is a synchronous","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":449090,"byte_end":449161,"line_start":201,"line_end":201,"column_start":5,"column_end":76}},{"value":"/ // reader. In a real system you could get anywhere from 1 to","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":449166,"byte_end":449230,"line_start":202,"line_end":202,"column_start":5,"column_end":69}},{"value":"/ // `output.len()` bytes in a single read.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":449235,"byte_end":449280,"line_start":203,"line_end":203,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(bytes, 4);","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":449285,"byte_end":449310,"line_start":204,"line_end":204,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(output, [1, 2, 3, 4, 0]);","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":449315,"byte_end":449355,"line_start":205,"line_end":205,"column_start":5,"column_end":45}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":449360,"byte_end":449419,"line_start":206,"line_end":206,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":449424,"byte_end":449431,"line_start":207,"line_end":207,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7735},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":449849,"byte_end":449862,"line_start":220,"line_end":220,"column_start":8,"column_end":21},"name":"read_vectored","qualname":"::io::AsyncReadExt::read_vectored","value":"pub fn read_vectored<'a>(&'a mut Self, &'a mut [IoSliceMut]) -> ReadVectored\nwhere Self: Unpin","parent":{"krate":0,"index":7730},"children":[],"decl_id":null,"docs":" Creates a future which will read from the `AsyncRead` into `bufs` using vectored\n IO operations.","sig":null,"attributes":[{"value":"/ Creates a future which will read from the `AsyncRead` into `bufs` using vectored","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":449611,"byte_end":449695,"line_start":215,"line_end":215,"column_start":5,"column_end":89}},{"value":"/ IO operations.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":449700,"byte_end":449718,"line_start":216,"line_end":216,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":449723,"byte_end":449726,"line_start":217,"line_end":217,"column_start":5,"column_end":8}},{"value":"/ The returned future will resolve to the number of bytes read once the read","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":449731,"byte_end":449809,"line_start":218,"line_end":218,"column_start":5,"column_end":83}},{"value":"/ operation is completed.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":449814,"byte_end":449841,"line_start":219,"line_end":219,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":7737},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":451273,"byte_end":451283,"line_start":264,"line_end":264,"column_start":8,"column_end":18},"name":"read_exact","qualname":"::io::AsyncReadExt::read_exact","value":"pub fn read_exact<'a>(&'a mut Self, &'a mut [u8]) -> ReadExact where\nSelf: Unpin","parent":{"krate":0,"index":7730},"children":[],"decl_id":null,"docs":" Creates a future which will read exactly enough bytes to fill `buf`,\n returning an error if end of file (EOF) is hit sooner.","sig":null,"attributes":[{"value":"/ Creates a future which will read exactly enough bytes to fill `buf`,","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":450060,"byte_end":450132,"line_start":227,"line_end":227,"column_start":5,"column_end":77}},{"value":"/ returning an error if end of file (EOF) is hit sooner.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":450137,"byte_end":450195,"line_start":228,"line_end":228,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":450200,"byte_end":450203,"line_start":229,"line_end":229,"column_start":5,"column_end":8}},{"value":"/ The returned future will resolve once the read operation is completed.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":450208,"byte_end":450282,"line_start":230,"line_end":230,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":450287,"byte_end":450290,"line_start":231,"line_end":231,"column_start":5,"column_end":8}},{"value":"/ In the case of an error the buffer and the object will be discarded, with","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":450295,"byte_end":450372,"line_start":232,"line_end":232,"column_start":5,"column_end":82}},{"value":"/ the error yielded.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":450377,"byte_end":450399,"line_start":233,"line_end":233,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":450404,"byte_end":450407,"line_start":234,"line_end":234,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":450412,"byte_end":450426,"line_start":235,"line_end":235,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":450431,"byte_end":450434,"line_start":236,"line_end":236,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":450439,"byte_end":450446,"line_start":237,"line_end":237,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":450451,"byte_end":450492,"line_start":238,"line_end":238,"column_start":5,"column_end":46}},{"value":"/ use futures::io::{AsyncReadExt, Cursor};","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":450497,"byte_end":450541,"line_start":239,"line_end":239,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":450546,"byte_end":450549,"line_start":240,"line_end":240,"column_start":5,"column_end":8}},{"value":"/ let mut reader = Cursor::new([1, 2, 3, 4]);","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":450554,"byte_end":450601,"line_start":241,"line_end":241,"column_start":5,"column_end":52}},{"value":"/ let mut output = [0u8; 4];","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":450606,"byte_end":450636,"line_start":242,"line_end":242,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":450641,"byte_end":450644,"line_start":243,"line_end":243,"column_start":5,"column_end":8}},{"value":"/ reader.read_exact(&mut output).await?;","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":450649,"byte_end":450691,"line_start":244,"line_end":244,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":450696,"byte_end":450699,"line_start":245,"line_end":245,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(output, [1, 2, 3, 4]);","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":450704,"byte_end":450741,"line_start":246,"line_end":246,"column_start":5,"column_end":42}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":450746,"byte_end":450805,"line_start":247,"line_end":247,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":450810,"byte_end":450817,"line_start":248,"line_end":248,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":450822,"byte_end":450825,"line_start":249,"line_end":249,"column_start":5,"column_end":8}},{"value":"/ ## EOF is hit before `buf` is filled","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":450830,"byte_end":450870,"line_start":250,"line_end":250,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":450875,"byte_end":450878,"line_start":251,"line_end":251,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":450883,"byte_end":450890,"line_start":252,"line_end":252,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":450895,"byte_end":450936,"line_start":253,"line_end":253,"column_start":5,"column_end":46}},{"value":"/ use futures::io::{self, AsyncReadExt, Cursor};","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":450941,"byte_end":450991,"line_start":254,"line_end":254,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":450996,"byte_end":450999,"line_start":255,"line_end":255,"column_start":5,"column_end":8}},{"value":"/ let mut reader = Cursor::new([1, 2, 3, 4]);","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":451004,"byte_end":451051,"line_start":256,"line_end":256,"column_start":5,"column_end":52}},{"value":"/ let mut output = [0u8; 5];","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":451056,"byte_end":451086,"line_start":257,"line_end":257,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":451091,"byte_end":451094,"line_start":258,"line_end":258,"column_start":5,"column_end":8}},{"value":"/ let result = reader.read_exact(&mut output).await;","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":451099,"byte_end":451153,"line_start":259,"line_end":259,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":451158,"byte_end":451161,"line_start":260,"line_end":260,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(result.unwrap_err().kind(), io::ErrorKind::UnexpectedEof);","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":451166,"byte_end":451239,"line_start":261,"line_end":261,"column_start":5,"column_end":78}},{"value":"/ # });","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":451244,"byte_end":451253,"line_start":262,"line_end":262,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":451258,"byte_end":451265,"line_start":263,"line_end":263,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7739},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":452088,"byte_end":452099,"line_start":290,"line_end":290,"column_start":8,"column_end":19},"name":"read_to_end","qualname":"::io::AsyncReadExt::read_to_end","value":"pub fn read_to_end<'a>(&'a mut Self, &'a mut Vec<u8>) -> ReadToEnd where\nSelf: Unpin","parent":{"krate":0,"index":7730},"children":[],"decl_id":null,"docs":" Creates a future which will read all the bytes from this `AsyncRead`.","sig":null,"attributes":[{"value":"/ Creates a future which will read all the bytes from this `AsyncRead`.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":451458,"byte_end":451531,"line_start":271,"line_end":271,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":451536,"byte_end":451539,"line_start":272,"line_end":272,"column_start":5,"column_end":8}},{"value":"/ On success the total number of bytes read is returned.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":451544,"byte_end":451602,"line_start":273,"line_end":273,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":451607,"byte_end":451610,"line_start":274,"line_end":274,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":451615,"byte_end":451629,"line_start":275,"line_end":275,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":451634,"byte_end":451637,"line_start":276,"line_end":276,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":451642,"byte_end":451649,"line_start":277,"line_end":277,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":451654,"byte_end":451695,"line_start":278,"line_end":278,"column_start":5,"column_end":46}},{"value":"/ use futures::io::{AsyncReadExt, Cursor};","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":451700,"byte_end":451744,"line_start":279,"line_end":279,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":451749,"byte_end":451752,"line_start":280,"line_end":280,"column_start":5,"column_end":8}},{"value":"/ let mut reader = Cursor::new([1, 2, 3, 4]);","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":451757,"byte_end":451804,"line_start":281,"line_end":281,"column_start":5,"column_end":52}},{"value":"/ let mut output = Vec::with_capacity(4);","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":451809,"byte_end":451852,"line_start":282,"line_end":282,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":451857,"byte_end":451860,"line_start":283,"line_end":283,"column_start":5,"column_end":8}},{"value":"/ let bytes = reader.read_to_end(&mut output).await?;","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":451865,"byte_end":451920,"line_start":284,"line_end":284,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":451925,"byte_end":451928,"line_start":285,"line_end":285,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(bytes, 4);","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":451933,"byte_end":451958,"line_start":286,"line_end":286,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(output, vec![1, 2, 3, 4]);","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":451963,"byte_end":452004,"line_start":287,"line_end":287,"column_start":5,"column_end":46}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":452009,"byte_end":452068,"line_start":288,"line_end":288,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":452073,"byte_end":452080,"line_start":289,"line_end":289,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7741},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":452920,"byte_end":452934,"line_start":316,"line_end":316,"column_start":8,"column_end":22},"name":"read_to_string","qualname":"::io::AsyncReadExt::read_to_string","value":"pub fn read_to_string<'a>(&'a mut Self, &'a mut String) -> ReadToString where\nSelf: Unpin","parent":{"krate":0,"index":7730},"children":[],"decl_id":null,"docs":" Creates a future which will read all the bytes from this `AsyncRead`.","sig":null,"attributes":[{"value":"/ Creates a future which will read all the bytes from this `AsyncRead`.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":452280,"byte_end":452353,"line_start":297,"line_end":297,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":452358,"byte_end":452361,"line_start":298,"line_end":298,"column_start":5,"column_end":8}},{"value":"/ On success the total number of bytes read is returned.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":452366,"byte_end":452424,"line_start":299,"line_end":299,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":452429,"byte_end":452432,"line_start":300,"line_end":300,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":452437,"byte_end":452451,"line_start":301,"line_end":301,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":452456,"byte_end":452459,"line_start":302,"line_end":302,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":452464,"byte_end":452471,"line_start":303,"line_end":303,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":452476,"byte_end":452517,"line_start":304,"line_end":304,"column_start":5,"column_end":46}},{"value":"/ use futures::io::{AsyncReadExt, Cursor};","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":452522,"byte_end":452566,"line_start":305,"line_end":305,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":452571,"byte_end":452574,"line_start":306,"line_end":306,"column_start":5,"column_end":8}},{"value":"/ let mut reader = Cursor::new(&b\"1234\"[..]);","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":452579,"byte_end":452626,"line_start":307,"line_end":307,"column_start":5,"column_end":52}},{"value":"/ let mut buffer = String::with_capacity(4);","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":452631,"byte_end":452677,"line_start":308,"line_end":308,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":452682,"byte_end":452685,"line_start":309,"line_end":309,"column_start":5,"column_end":8}},{"value":"/ let bytes = reader.read_to_string(&mut buffer).await?;","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":452690,"byte_end":452748,"line_start":310,"line_end":310,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":452753,"byte_end":452756,"line_start":311,"line_end":311,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(bytes, 4);","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":452761,"byte_end":452786,"line_start":312,"line_end":312,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(buffer, String::from(\"1234\"));","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":452791,"byte_end":452836,"line_start":313,"line_end":313,"column_start":5,"column_end":50}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":452841,"byte_end":452900,"line_start":314,"line_end":314,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":452905,"byte_end":452912,"line_start":315,"line_end":315,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7743},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":454277,"byte_end":454282,"line_start":352,"line_end":352,"column_start":8,"column_end":13},"name":"split","qualname":"::io::AsyncReadExt::split","value":"pub fn split(Self) -> (ReadHalf<Self>, WriteHalf<Self>) where\nSelf: AsyncWrite + Sized","parent":{"krate":0,"index":7730},"children":[],"decl_id":null,"docs":" Helper method for splitting this read/write object into two halves.","sig":null,"attributes":[{"value":"/ Helper method for splitting this read/write object into two halves.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":453120,"byte_end":453191,"line_start":323,"line_end":323,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":453196,"byte_end":453199,"line_start":324,"line_end":324,"column_start":5,"column_end":8}},{"value":"/ The two halves returned implement the `AsyncRead` and `AsyncWrite`","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":453204,"byte_end":453274,"line_start":325,"line_end":325,"column_start":5,"column_end":75}},{"value":"/ traits, respectively.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":453279,"byte_end":453304,"line_start":326,"line_end":326,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":453309,"byte_end":453312,"line_start":327,"line_end":327,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":453317,"byte_end":453331,"line_start":328,"line_end":328,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":453336,"byte_end":453339,"line_start":329,"line_end":329,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":453344,"byte_end":453351,"line_start":330,"line_end":330,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":453356,"byte_end":453397,"line_start":331,"line_end":331,"column_start":5,"column_end":46}},{"value":"/ use futures::io::{self, AsyncReadExt, Cursor};","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":453402,"byte_end":453452,"line_start":332,"line_end":332,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":453457,"byte_end":453460,"line_start":333,"line_end":333,"column_start":5,"column_end":8}},{"value":"/ // Note that for `Cursor` the read and write halves share a single","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":453465,"byte_end":453535,"line_start":334,"line_end":334,"column_start":5,"column_end":75}},{"value":"/ // seek position. This may or may not be true for other types that","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":453540,"byte_end":453610,"line_start":335,"line_end":335,"column_start":5,"column_end":75}},{"value":"/ // implement both `AsyncRead` and `AsyncWrite`.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":453615,"byte_end":453666,"line_start":336,"line_end":336,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":453671,"byte_end":453674,"line_start":337,"line_end":337,"column_start":5,"column_end":8}},{"value":"/ let reader = Cursor::new([1, 2, 3, 4]);","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":453679,"byte_end":453722,"line_start":338,"line_end":338,"column_start":5,"column_end":48}},{"value":"/ let mut buffer = Cursor::new(vec![0, 0, 0, 0, 5, 6, 7, 8]);","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":453727,"byte_end":453790,"line_start":339,"line_end":339,"column_start":5,"column_end":68}},{"value":"/ let mut writer = Cursor::new(vec![0u8; 5]);","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":453795,"byte_end":453842,"line_start":340,"line_end":340,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":453847,"byte_end":453850,"line_start":341,"line_end":341,"column_start":5,"column_end":8}},{"value":"/ {","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":453855,"byte_end":453860,"line_start":342,"line_end":342,"column_start":5,"column_end":10}},{"value":"/     let (buffer_reader, mut buffer_writer) = (&mut buffer).split();","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":453865,"byte_end":453936,"line_start":343,"line_end":343,"column_start":5,"column_end":76}},{"value":"/     io::copy(reader, &mut buffer_writer).await?;","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":453941,"byte_end":453993,"line_start":344,"line_end":344,"column_start":5,"column_end":57}},{"value":"/     io::copy(buffer_reader, &mut writer).await?;","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":453998,"byte_end":454050,"line_start":345,"line_end":345,"column_start":5,"column_end":57}},{"value":"/ }","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":454055,"byte_end":454060,"line_start":346,"line_end":346,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":454065,"byte_end":454068,"line_start":347,"line_end":347,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(buffer.into_inner(), [1, 2, 3, 4, 5, 6, 7, 8]);","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":454073,"byte_end":454135,"line_start":348,"line_end":348,"column_start":5,"column_end":67}},{"value":"/ assert_eq!(writer.into_inner(), [5, 6, 7, 8, 0]);","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":454140,"byte_end":454193,"line_start":349,"line_end":349,"column_start":5,"column_end":58}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":454198,"byte_end":454257,"line_start":350,"line_end":350,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":454262,"byte_end":454269,"line_start":351,"line_end":351,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7744},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":455063,"byte_end":455067,"line_start":379,"line_end":379,"column_start":8,"column_end":12},"name":"take","qualname":"::io::AsyncReadExt::take","value":"pub fn take(Self, u64) -> Take<Self> where Self: Sized","parent":{"krate":0,"index":7730},"children":[],"decl_id":null,"docs":" Creates an AsyncRead adapter which will read at most `limit` bytes\n from the underlying reader.","sig":null,"attributes":[{"value":"/ Creates an AsyncRead adapter which will read at most `limit` bytes","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":454470,"byte_end":454540,"line_start":360,"line_end":360,"column_start":5,"column_end":75}},{"value":"/ from the underlying reader.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":454545,"byte_end":454576,"line_start":361,"line_end":361,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":454581,"byte_end":454584,"line_start":362,"line_end":362,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":454589,"byte_end":454603,"line_start":363,"line_end":363,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":454608,"byte_end":454611,"line_start":364,"line_end":364,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":454616,"byte_end":454623,"line_start":365,"line_end":365,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":454628,"byte_end":454669,"line_start":366,"line_end":366,"column_start":5,"column_end":46}},{"value":"/ use futures::io::{AsyncReadExt, Cursor};","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":454674,"byte_end":454718,"line_start":367,"line_end":367,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":454723,"byte_end":454726,"line_start":368,"line_end":368,"column_start":5,"column_end":8}},{"value":"/ let reader = Cursor::new(&b\"12345678\"[..]);","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":454731,"byte_end":454778,"line_start":369,"line_end":369,"column_start":5,"column_end":52}},{"value":"/ let mut buffer = [0; 5];","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":454783,"byte_end":454811,"line_start":370,"line_end":370,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":454816,"byte_end":454819,"line_start":371,"line_end":371,"column_start":5,"column_end":8}},{"value":"/ let mut take = reader.take(4);","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":454824,"byte_end":454858,"line_start":372,"line_end":372,"column_start":5,"column_end":39}},{"value":"/ let n = take.read(&mut buffer).await?;","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":454863,"byte_end":454905,"line_start":373,"line_end":373,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":454910,"byte_end":454913,"line_start":374,"line_end":374,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(n, 4);","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":454918,"byte_end":454939,"line_start":375,"line_end":375,"column_start":5,"column_end":26}},{"value":"/ assert_eq!(&buffer, b\"1234\\0\");","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":454944,"byte_end":454979,"line_start":376,"line_end":376,"column_start":5,"column_end":40}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":454984,"byte_end":455043,"line_start":377,"line_end":377,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":455048,"byte_end":455055,"line_start":378,"line_end":378,"column_start":5,"column_end":12}}]},{"kind":"Trait","id":{"krate":0,"index":7747},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":455876,"byte_end":455889,"line_start":405,"line_end":405,"column_start":11,"column_end":24},"name":"AsyncWriteExt","qualname":"::io::AsyncWriteExt","value":"AsyncWriteExt: AsyncWrite","parent":null,"children":[{"krate":0,"index":7748},{"krate":0,"index":7749},{"krate":0,"index":7750},{"krate":0,"index":7752},{"krate":0,"index":7754},{"krate":0,"index":7756}],"decl_id":null,"docs":" An extension trait which adds utility methods to `AsyncWrite` types.\n","sig":null,"attributes":[{"value":"/ An extension trait which adds utility methods to `AsyncWrite` types.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":455793,"byte_end":455865,"line_start":404,"line_end":404,"column_start":1,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":7748},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":456630,"byte_end":456635,"line_start":428,"line_end":428,"column_start":8,"column_end":13},"name":"flush","qualname":"::io::AsyncWriteExt::flush","value":"pub fn flush(&mut Self) -> Flush<, Self> where Self: Unpin","parent":{"krate":0,"index":7747},"children":[],"decl_id":null,"docs":" Creates a future which will entirely flush this `AsyncWrite`.","sig":null,"attributes":[{"value":"/ Creates a future which will entirely flush this `AsyncWrite`.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":455908,"byte_end":455973,"line_start":406,"line_end":406,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":455978,"byte_end":455981,"line_start":407,"line_end":407,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":455986,"byte_end":456000,"line_start":408,"line_end":408,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":456005,"byte_end":456008,"line_start":409,"line_end":409,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":456013,"byte_end":456020,"line_start":410,"line_end":410,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":456025,"byte_end":456066,"line_start":411,"line_end":411,"column_start":5,"column_end":46}},{"value":"/ use futures::io::{AllowStdIo, AsyncWriteExt};","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":456071,"byte_end":456120,"line_start":412,"line_end":412,"column_start":5,"column_end":54}},{"value":"/ use std::io::{BufWriter, Cursor};","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":456125,"byte_end":456162,"line_start":413,"line_end":413,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":456167,"byte_end":456170,"line_start":414,"line_end":414,"column_start":5,"column_end":8}},{"value":"/ let mut output = vec![0u8; 5];","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":456175,"byte_end":456209,"line_start":415,"line_end":415,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":456214,"byte_end":456217,"line_start":416,"line_end":416,"column_start":5,"column_end":8}},{"value":"/ {","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":456222,"byte_end":456227,"line_start":417,"line_end":417,"column_start":5,"column_end":10}},{"value":"/     let writer = Cursor::new(&mut output);","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":456232,"byte_end":456278,"line_start":418,"line_end":418,"column_start":5,"column_end":51}},{"value":"/     let mut buffered = AllowStdIo::new(BufWriter::new(writer));","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":456283,"byte_end":456350,"line_start":419,"line_end":419,"column_start":5,"column_end":72}},{"value":"/     buffered.write_all(&[1, 2]).await?;","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":456355,"byte_end":456398,"line_start":420,"line_end":420,"column_start":5,"column_end":48}},{"value":"/     buffered.write_all(&[3, 4]).await?;","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":456403,"byte_end":456446,"line_start":421,"line_end":421,"column_start":5,"column_end":48}},{"value":"/     buffered.flush().await?;","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":456451,"byte_end":456483,"line_start":422,"line_end":422,"column_start":5,"column_end":37}},{"value":"/ }","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":456488,"byte_end":456493,"line_start":423,"line_end":423,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":456498,"byte_end":456501,"line_start":424,"line_end":424,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(output, [1, 2, 3, 4, 0]);","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":456506,"byte_end":456546,"line_start":425,"line_end":425,"column_start":5,"column_end":45}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":456551,"byte_end":456610,"line_start":426,"line_end":426,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":456615,"byte_end":456622,"line_start":427,"line_end":427,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7749},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":456844,"byte_end":456849,"line_start":436,"line_end":436,"column_start":8,"column_end":13},"name":"close","qualname":"::io::AsyncWriteExt::close","value":"pub fn close(&mut Self) -> Close<, Self> where Self: Unpin","parent":{"krate":0,"index":7747},"children":[],"decl_id":null,"docs":" Creates a future which will entirely close this `AsyncWrite`.\n","sig":null,"attributes":[{"value":"/ Creates a future which will entirely close this `AsyncWrite`.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":456771,"byte_end":456836,"line_start":435,"line_end":435,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":7750},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":457191,"byte_end":457196,"line_start":447,"line_end":447,"column_start":8,"column_end":13},"name":"write","qualname":"::io::AsyncWriteExt::write","value":"pub fn write<'a>(&'a mut Self, &'a [u8]) -> Write where Self: Unpin","parent":{"krate":0,"index":7747},"children":[],"decl_id":null,"docs":" Creates a future which will write bytes from `buf` into the object.","sig":null,"attributes":[{"value":"/ Creates a future which will write bytes from `buf` into the object.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":456985,"byte_end":457056,"line_start":443,"line_end":443,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":457061,"byte_end":457064,"line_start":444,"line_end":444,"column_start":5,"column_end":8}},{"value":"/ The returned future will resolve to the number of bytes written once the write","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":457069,"byte_end":457151,"line_start":445,"line_end":445,"column_start":5,"column_end":87}},{"value":"/ operation is completed.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":457156,"byte_end":457183,"line_start":446,"line_end":446,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":7752},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":457606,"byte_end":457620,"line_start":459,"line_end":459,"column_start":8,"column_end":22},"name":"write_vectored","qualname":"::io::AsyncWriteExt::write_vectored","value":"pub fn write_vectored<'a>(&'a mut Self, &'a [IoSlice]) -> WriteVectored where\nSelf: Unpin","parent":{"krate":0,"index":7747},"children":[],"decl_id":null,"docs":" Creates a future which will write bytes from `bufs` into the object using vectored\n IO operations.","sig":null,"attributes":[{"value":"/ Creates a future which will write bytes from `bufs` into the object using vectored","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":457362,"byte_end":457448,"line_start":454,"line_end":454,"column_start":5,"column_end":91}},{"value":"/ IO operations.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":457453,"byte_end":457471,"line_start":455,"line_end":455,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":457476,"byte_end":457479,"line_start":456,"line_end":456,"column_start":5,"column_end":8}},{"value":"/ The returned future will resolve to the number of bytes written once the write","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":457484,"byte_end":457566,"line_start":457,"line_end":457,"column_start":5,"column_end":87}},{"value":"/ operation is completed.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":457571,"byte_end":457598,"line_start":458,"line_end":458,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":7754},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":458466,"byte_end":458475,"line_start":486,"line_end":486,"column_start":8,"column_end":17},"name":"write_all","qualname":"::io::AsyncWriteExt::write_all","value":"pub fn write_all<'a>(&'a mut Self, &'a [u8]) -> WriteAll where Self: Unpin","parent":{"krate":0,"index":7747},"children":[],"decl_id":null,"docs":" Write data into this object.","sig":null,"attributes":[{"value":"/ Write data into this object.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":457813,"byte_end":457845,"line_start":466,"line_end":466,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":457850,"byte_end":457853,"line_start":467,"line_end":467,"column_start":5,"column_end":8}},{"value":"/ Creates a future that will write the entire contents of the buffer `buf` into","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":457858,"byte_end":457939,"line_start":468,"line_end":468,"column_start":5,"column_end":86}},{"value":"/ this `AsyncWrite`.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":457944,"byte_end":457966,"line_start":469,"line_end":469,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":457971,"byte_end":457974,"line_start":470,"line_end":470,"column_start":5,"column_end":8}},{"value":"/ The returned future will not complete until all the data has been written.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":457979,"byte_end":458057,"line_start":471,"line_end":471,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":458062,"byte_end":458065,"line_start":472,"line_end":472,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":458070,"byte_end":458084,"line_start":473,"line_end":473,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":458089,"byte_end":458092,"line_start":474,"line_end":474,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":458097,"byte_end":458104,"line_start":475,"line_end":475,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":458109,"byte_end":458150,"line_start":476,"line_end":476,"column_start":5,"column_end":46}},{"value":"/ use futures::io::{AsyncWriteExt, Cursor};","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":458155,"byte_end":458200,"line_start":477,"line_end":477,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":458205,"byte_end":458208,"line_start":478,"line_end":478,"column_start":5,"column_end":8}},{"value":"/ let mut writer = Cursor::new(vec![0u8; 5]);","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":458213,"byte_end":458260,"line_start":479,"line_end":479,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":458265,"byte_end":458268,"line_start":480,"line_end":480,"column_start":5,"column_end":8}},{"value":"/ writer.write_all(&[1, 2, 3, 4]).await?;","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":458273,"byte_end":458316,"line_start":481,"line_end":481,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":458321,"byte_end":458324,"line_start":482,"line_end":482,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(writer.into_inner(), [1, 2, 3, 4, 0]);","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":458329,"byte_end":458382,"line_start":483,"line_end":483,"column_start":5,"column_end":58}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":458387,"byte_end":458446,"line_start":484,"line_end":484,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":458451,"byte_end":458458,"line_start":485,"line_end":485,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7756},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":462019,"byte_end":462028,"line_start":588,"line_end":588,"column_start":8,"column_end":17},"name":"into_sink","qualname":"::io::AsyncWriteExt::into_sink","value":"pub fn into_sink<Item: AsRef<[u8]>>(Self) -> IntoSink<Self, Item> where\nSelf: Sized","parent":{"krate":0,"index":7747},"children":[],"decl_id":null,"docs":" Allow using an [`AsyncWrite`] as a [`Sink`](futures_sink::Sink)`<Item: AsRef<[u8]>>`.","sig":null,"attributes":[{"value":"/ Allow using an [`AsyncWrite`] as a [`Sink`](futures_sink::Sink)`<Item: AsRef<[u8]>>`.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":461060,"byte_end":461149,"line_start":560,"line_end":560,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":461154,"byte_end":461157,"line_start":561,"line_end":561,"column_start":5,"column_end":8}},{"value":"/ This adapter produces a sink that will write each value passed to it","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":461162,"byte_end":461234,"line_start":562,"line_end":562,"column_start":5,"column_end":77}},{"value":"/ into the underlying writer.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":461239,"byte_end":461270,"line_start":563,"line_end":563,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":461275,"byte_end":461278,"line_start":564,"line_end":564,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the given writer, returning a wrapped","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":461283,"byte_end":461357,"line_start":565,"line_end":565,"column_start":5,"column_end":79}},{"value":"/ version.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":461362,"byte_end":461374,"line_start":566,"line_end":566,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":461379,"byte_end":461382,"line_start":567,"line_end":567,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":461387,"byte_end":461401,"line_start":568,"line_end":568,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":461406,"byte_end":461409,"line_start":569,"line_end":569,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":461414,"byte_end":461421,"line_start":570,"line_end":570,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":461426,"byte_end":461467,"line_start":571,"line_end":571,"column_start":5,"column_end":46}},{"value":"/ use futures::io::AsyncWriteExt;","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":461472,"byte_end":461507,"line_start":572,"line_end":572,"column_start":5,"column_end":40}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":461512,"byte_end":461555,"line_start":573,"line_end":573,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":461560,"byte_end":461563,"line_start":574,"line_end":574,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(vec![Ok([1, 2, 3]), Ok([4, 5, 6])]);","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":461568,"byte_end":461634,"line_start":575,"line_end":575,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":461639,"byte_end":461642,"line_start":576,"line_end":576,"column_start":5,"column_end":8}},{"value":"/ let mut writer = vec![];","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":461647,"byte_end":461675,"line_start":577,"line_end":577,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":461680,"byte_end":461683,"line_start":578,"line_end":578,"column_start":5,"column_end":8}},{"value":"/ stream.forward((&mut writer).into_sink()).await?;","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":461688,"byte_end":461741,"line_start":579,"line_end":579,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":461746,"byte_end":461749,"line_start":580,"line_end":580,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(writer, vec![1, 2, 3, 4, 5, 6]);","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":461754,"byte_end":461801,"line_start":581,"line_end":581,"column_start":5,"column_end":52}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(())","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":461806,"byte_end":461852,"line_start":582,"line_end":582,"column_start":5,"column_end":51}},{"value":"/ # })?;","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":461857,"byte_end":461867,"line_start":583,"line_end":583,"column_start":5,"column_end":15}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(())","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":461872,"byte_end":461918,"line_start":584,"line_end":584,"column_start":5,"column_end":51}},{"value":"/ ```","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":461923,"byte_end":461930,"line_start":585,"line_end":585,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"sink\")","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":461935,"byte_end":461959,"line_start":586,"line_end":586,"column_start":5,"column_end":29}}]},{"kind":"Trait","id":{"krate":0,"index":7760},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":462331,"byte_end":462343,"line_start":599,"line_end":599,"column_start":11,"column_end":23},"name":"AsyncSeekExt","qualname":"::io::AsyncSeekExt","value":"AsyncSeekExt: AsyncSeek","parent":null,"children":[{"krate":0,"index":7761},{"krate":0,"index":7762}],"decl_id":null,"docs":" An extension trait which adds utility methods to `AsyncSeek` types.\n","sig":null,"attributes":[{"value":"/ An extension trait which adds utility methods to `AsyncSeek` types.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":462249,"byte_end":462320,"line_start":598,"line_end":598,"column_start":1,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":7761},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":462613,"byte_end":462617,"line_start":605,"line_end":605,"column_start":8,"column_end":12},"name":"seek","qualname":"::io::AsyncSeekExt::seek","value":"pub fn seek(&mut Self, SeekFrom) -> Seek<, Self> where Self: Unpin","parent":{"krate":0,"index":7760},"children":[],"decl_id":null,"docs":" Creates a future which will seek an IO object, and then yield the\n new position in the object and the object itself.","sig":null,"attributes":[{"value":"/ Creates a future which will seek an IO object, and then yield the","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":462361,"byte_end":462430,"line_start":600,"line_end":600,"column_start":5,"column_end":74}},{"value":"/ new position in the object and the object itself.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":462435,"byte_end":462488,"line_start":601,"line_end":601,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":462493,"byte_end":462496,"line_start":602,"line_end":602,"column_start":5,"column_end":8}},{"value":"/ In the case of an error the buffer and the object will be discarded, with","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":462501,"byte_end":462578,"line_start":603,"line_end":603,"column_start":5,"column_end":82}},{"value":"/ the error yielded.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":462583,"byte_end":462605,"line_start":604,"line_end":604,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":7762},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":462955,"byte_end":462970,"line_start":616,"line_end":616,"column_start":8,"column_end":23},"name":"stream_position","qualname":"::io::AsyncSeekExt::stream_position","value":"pub fn stream_position(&mut Self) -> Seek<, Self> where Self: Unpin","parent":{"krate":0,"index":7760},"children":[],"decl_id":null,"docs":" Creates a future which will return the current seek position from the\n start of the stream.","sig":null,"attributes":[{"value":"/ Creates a future which will return the current seek position from the","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":462772,"byte_end":462845,"line_start":612,"line_end":612,"column_start":5,"column_end":78}},{"value":"/ start of the stream.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":462850,"byte_end":462874,"line_start":613,"line_end":613,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":462879,"byte_end":462882,"line_start":614,"line_end":614,"column_start":5,"column_end":8}},{"value":"/ This is equivalent to `self.seek(SeekFrom::Current(0))`.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":462887,"byte_end":462947,"line_start":615,"line_end":615,"column_start":5,"column_end":65}}]},{"kind":"Trait","id":{"krate":0,"index":7765},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":463222,"byte_end":463237,"line_start":627,"line_end":627,"column_start":11,"column_end":26},"name":"AsyncBufReadExt","qualname":"::io::AsyncBufReadExt","value":"AsyncBufReadExt: AsyncBufRead","parent":null,"children":[{"krate":0,"index":7766},{"krate":0,"index":7767},{"krate":0,"index":7768},{"krate":0,"index":7770},{"krate":0,"index":7772}],"decl_id":null,"docs":" An extension trait which adds utility methods to `AsyncBufRead` types.\n","sig":null,"attributes":[{"value":"/ An extension trait which adds utility methods to `AsyncBufRead` types.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":463137,"byte_end":463211,"line_start":626,"line_end":626,"column_start":1,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":7766},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":464191,"byte_end":464199,"line_start":651,"line_end":651,"column_start":8,"column_end":16},"name":"fill_buf","qualname":"::io::AsyncBufReadExt::fill_buf","value":"pub fn fill_buf(&mut Self) -> FillBuf<, Self> where Self: Unpin","parent":{"krate":0,"index":7765},"children":[],"decl_id":null,"docs":" Creates a future which will wait for a non-empty buffer to be available from this I/O\n object or EOF to be reached.","sig":null,"attributes":[{"value":"/ Creates a future which will wait for a non-empty buffer to be available from this I/O","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":463258,"byte_end":463347,"line_start":628,"line_end":628,"column_start":5,"column_end":94}},{"value":"/ object or EOF to be reached.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":463352,"byte_end":463384,"line_start":629,"line_end":629,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":463389,"byte_end":463392,"line_start":630,"line_end":630,"column_start":5,"column_end":8}},{"value":"/ This method is the async equivalent to [`BufRead::fill_buf`](std::io::BufRead::fill_buf).","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":463397,"byte_end":463490,"line_start":631,"line_end":631,"column_start":5,"column_end":98}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":463495,"byte_end":463498,"line_start":632,"line_end":632,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":463503,"byte_end":463514,"line_start":633,"line_end":633,"column_start":5,"column_end":16}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":463519,"byte_end":463560,"line_start":634,"line_end":634,"column_start":5,"column_end":46}},{"value":"/ use futures::{io::AsyncBufReadExt as _, stream::{iter, TryStreamExt as _}};","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":463565,"byte_end":463644,"line_start":635,"line_end":635,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":463649,"byte_end":463652,"line_start":636,"line_end":636,"column_start":5,"column_end":8}},{"value":"/ let mut stream = iter(vec![Ok(vec![1, 2, 3]), Ok(vec![4, 5, 6])]).into_async_read();","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":463657,"byte_end":463745,"line_start":637,"line_end":637,"column_start":5,"column_end":93}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":463750,"byte_end":463753,"line_start":638,"line_end":638,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.fill_buf().await?, vec![1, 2, 3]);","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":463758,"byte_end":463814,"line_start":639,"line_end":639,"column_start":5,"column_end":61}},{"value":"/ stream.consume_unpin(2);","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":463819,"byte_end":463847,"line_start":640,"line_end":640,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":463852,"byte_end":463855,"line_start":641,"line_end":641,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.fill_buf().await?, vec![3]);","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":463860,"byte_end":463910,"line_start":642,"line_end":642,"column_start":5,"column_end":55}},{"value":"/ stream.consume_unpin(1);","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":463915,"byte_end":463943,"line_start":643,"line_end":643,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":463948,"byte_end":463951,"line_start":644,"line_end":644,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.fill_buf().await?, vec![4, 5, 6]);","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":463956,"byte_end":464012,"line_start":645,"line_end":645,"column_start":5,"column_end":61}},{"value":"/ stream.consume_unpin(3);","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":464017,"byte_end":464045,"line_start":646,"line_end":646,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":464050,"byte_end":464053,"line_start":647,"line_end":647,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.fill_buf().await?, vec![]);","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":464058,"byte_end":464107,"line_start":648,"line_end":648,"column_start":5,"column_end":54}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":464112,"byte_end":464171,"line_start":649,"line_end":649,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":464176,"byte_end":464183,"line_start":650,"line_end":650,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7767},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":465000,"byte_end":465013,"line_start":675,"line_end":675,"column_start":8,"column_end":21},"name":"consume_unpin","qualname":"::io::AsyncBufReadExt::consume_unpin","value":"pub fn consume_unpin(&mut Self, usize) where Self: Unpin","parent":{"krate":0,"index":7765},"children":[],"decl_id":null,"docs":" A convenience for calling [`AsyncBufRead::consume`] on [`Unpin`] IO types.","sig":null,"attributes":[{"value":"/ A convenience for calling [`AsyncBufRead::consume`] on [`Unpin`] IO types.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":464342,"byte_end":464420,"line_start":658,"line_end":658,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":464425,"byte_end":464428,"line_start":659,"line_end":659,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":464433,"byte_end":464444,"line_start":660,"line_end":660,"column_start":5,"column_end":16}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":464449,"byte_end":464490,"line_start":661,"line_end":661,"column_start":5,"column_end":46}},{"value":"/ use futures::{io::AsyncBufReadExt as _, stream::{iter, TryStreamExt as _}};","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":464495,"byte_end":464574,"line_start":662,"line_end":662,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":464579,"byte_end":464582,"line_start":663,"line_end":663,"column_start":5,"column_end":8}},{"value":"/ let mut stream = iter(vec![Ok(vec![1, 2, 3])]).into_async_read();","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":464587,"byte_end":464656,"line_start":664,"line_end":664,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":464661,"byte_end":464664,"line_start":665,"line_end":665,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.fill_buf().await?, vec![1, 2, 3]);","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":464669,"byte_end":464725,"line_start":666,"line_end":666,"column_start":5,"column_end":61}},{"value":"/ stream.consume_unpin(2);","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":464730,"byte_end":464758,"line_start":667,"line_end":667,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":464763,"byte_end":464766,"line_start":668,"line_end":668,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.fill_buf().await?, vec![3]);","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":464771,"byte_end":464821,"line_start":669,"line_end":669,"column_start":5,"column_end":55}},{"value":"/ stream.consume_unpin(1);","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":464826,"byte_end":464854,"line_start":670,"line_end":670,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":464859,"byte_end":464862,"line_start":671,"line_end":671,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.fill_buf().await?, vec![]);","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":464867,"byte_end":464916,"line_start":672,"line_end":672,"column_start":5,"column_end":54}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":464921,"byte_end":464980,"line_start":673,"line_end":673,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":464985,"byte_end":464992,"line_start":674,"line_end":674,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7768},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":466704,"byte_end":466714,"line_start":723,"line_end":723,"column_start":8,"column_end":18},"name":"read_until","qualname":"::io::AsyncBufReadExt::read_until","value":"pub fn read_until<'a>(&'a mut Self, u8, &'a mut Vec<u8>) -> ReadUntil where\nSelf: Unpin","parent":{"krate":0,"index":7765},"children":[],"decl_id":null,"docs":" Creates a future which will read all the bytes associated with this I/O\n object into `buf` until the delimiter `byte` or EOF is reached.\n This method is the async equivalent to [`BufRead::read_until`](std::io::BufRead::read_until).","sig":null,"attributes":[{"value":"/ Creates a future which will read all the bytes associated with this I/O","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":465121,"byte_end":465196,"line_start":682,"line_end":682,"column_start":5,"column_end":80}},{"value":"/ object into `buf` until the delimiter `byte` or EOF is reached.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":465201,"byte_end":465268,"line_start":683,"line_end":683,"column_start":5,"column_end":72}},{"value":"/ This method is the async equivalent to [`BufRead::read_until`](std::io::BufRead::read_until).","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":465273,"byte_end":465370,"line_start":684,"line_end":684,"column_start":5,"column_end":102}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":465375,"byte_end":465378,"line_start":685,"line_end":685,"column_start":5,"column_end":8}},{"value":"/ This function will read bytes from the underlying stream until the","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":465383,"byte_end":465453,"line_start":686,"line_end":686,"column_start":5,"column_end":75}},{"value":"/ delimiter or EOF is found. Once found, all bytes up to, and including,","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":465458,"byte_end":465532,"line_start":687,"line_end":687,"column_start":5,"column_end":79}},{"value":"/ the delimiter (if found) will be appended to `buf`.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":465537,"byte_end":465592,"line_start":688,"line_end":688,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":465597,"byte_end":465600,"line_start":689,"line_end":689,"column_start":5,"column_end":8}},{"value":"/ The returned future will resolve to the number of bytes read once the read","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":465605,"byte_end":465683,"line_start":690,"line_end":690,"column_start":5,"column_end":83}},{"value":"/ operation is completed.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":465688,"byte_end":465715,"line_start":691,"line_end":691,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":465720,"byte_end":465723,"line_start":692,"line_end":692,"column_start":5,"column_end":8}},{"value":"/ In the case of an error the buffer and the object will be discarded, with","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":465728,"byte_end":465805,"line_start":693,"line_end":693,"column_start":5,"column_end":82}},{"value":"/ the error yielded.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":465810,"byte_end":465832,"line_start":694,"line_end":694,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":465837,"byte_end":465840,"line_start":695,"line_end":695,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":465845,"byte_end":465859,"line_start":696,"line_end":696,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":465864,"byte_end":465867,"line_start":697,"line_end":697,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":465872,"byte_end":465879,"line_start":698,"line_end":698,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":465884,"byte_end":465925,"line_start":699,"line_end":699,"column_start":5,"column_end":46}},{"value":"/ use futures::io::{AsyncBufReadExt, Cursor};","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":465930,"byte_end":465977,"line_start":700,"line_end":700,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":465982,"byte_end":465985,"line_start":701,"line_end":701,"column_start":5,"column_end":8}},{"value":"/ let mut cursor = Cursor::new(b\"lorem-ipsum\");","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":465990,"byte_end":466039,"line_start":702,"line_end":702,"column_start":5,"column_end":54}},{"value":"/ let mut buf = vec![];","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":466044,"byte_end":466069,"line_start":703,"line_end":703,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":466074,"byte_end":466077,"line_start":704,"line_end":704,"column_start":5,"column_end":8}},{"value":"/ // cursor is at 'l'","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":466082,"byte_end":466105,"line_start":705,"line_end":705,"column_start":5,"column_end":28}},{"value":"/ let num_bytes = cursor.read_until(b'-', &mut buf).await?;","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":466110,"byte_end":466171,"line_start":706,"line_end":706,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(num_bytes, 6);","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":466176,"byte_end":466205,"line_start":707,"line_end":707,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(buf, b\"lorem-\");","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":466210,"byte_end":466241,"line_start":708,"line_end":708,"column_start":5,"column_end":36}},{"value":"/ buf.clear();","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":466246,"byte_end":466262,"line_start":709,"line_end":709,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":466267,"byte_end":466270,"line_start":710,"line_end":710,"column_start":5,"column_end":8}},{"value":"/ // cursor is at 'i'","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":466275,"byte_end":466298,"line_start":711,"line_end":711,"column_start":5,"column_end":28}},{"value":"/ let num_bytes = cursor.read_until(b'-', &mut buf).await?;","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":466303,"byte_end":466364,"line_start":712,"line_end":712,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(num_bytes, 5);","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":466369,"byte_end":466398,"line_start":713,"line_end":713,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(buf, b\"ipsum\");","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":466403,"byte_end":466433,"line_start":714,"line_end":714,"column_start":5,"column_end":35}},{"value":"/ buf.clear();","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":466438,"byte_end":466454,"line_start":715,"line_end":715,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":466459,"byte_end":466462,"line_start":716,"line_end":716,"column_start":5,"column_end":8}},{"value":"/ // cursor is at EOF","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":466467,"byte_end":466490,"line_start":717,"line_end":717,"column_start":5,"column_end":28}},{"value":"/ let num_bytes = cursor.read_until(b'-', &mut buf).await?;","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":466495,"byte_end":466556,"line_start":718,"line_end":718,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(num_bytes, 0);","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":466561,"byte_end":466590,"line_start":719,"line_end":719,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(buf, b\"\");","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":466595,"byte_end":466620,"line_start":720,"line_end":720,"column_start":5,"column_end":30}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":466625,"byte_end":466684,"line_start":721,"line_end":721,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":466689,"byte_end":466696,"line_start":722,"line_end":722,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7770},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":468893,"byte_end":468902,"line_start":781,"line_end":781,"column_start":8,"column_end":17},"name":"read_line","qualname":"::io::AsyncBufReadExt::read_line","value":"pub fn read_line<'a>(&'a mut Self, &'a mut String) -> ReadLine where\nSelf: Unpin","parent":{"krate":0,"index":7765},"children":[],"decl_id":null,"docs":" Creates a future which will read all the bytes associated with this I/O\n object into `buf` until a newline (the 0xA byte) or EOF is reached,\n This method is the async equivalent to [`BufRead::read_line`](std::io::BufRead::read_line).","sig":null,"attributes":[{"value":"/ Creates a future which will read all the bytes associated with this I/O","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":466911,"byte_end":466986,"line_start":730,"line_end":730,"column_start":5,"column_end":80}},{"value":"/ object into `buf` until a newline (the 0xA byte) or EOF is reached,","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":466991,"byte_end":467062,"line_start":731,"line_end":731,"column_start":5,"column_end":76}},{"value":"/ This method is the async equivalent to [`BufRead::read_line`](std::io::BufRead::read_line).","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":467067,"byte_end":467162,"line_start":732,"line_end":732,"column_start":5,"column_end":100}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":467167,"byte_end":467170,"line_start":733,"line_end":733,"column_start":5,"column_end":8}},{"value":"/ This function will read bytes from the underlying stream until the","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":467175,"byte_end":467245,"line_start":734,"line_end":734,"column_start":5,"column_end":75}},{"value":"/ newline delimiter (the 0xA byte) or EOF is found. Once found, all bytes","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":467250,"byte_end":467325,"line_start":735,"line_end":735,"column_start":5,"column_end":80}},{"value":"/ up to, and including, the delimiter (if found) will be appended to","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":467330,"byte_end":467400,"line_start":736,"line_end":736,"column_start":5,"column_end":75}},{"value":"/ `buf`.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":467405,"byte_end":467415,"line_start":737,"line_end":737,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":467420,"byte_end":467423,"line_start":738,"line_end":738,"column_start":5,"column_end":8}},{"value":"/ The returned future will resolve to the number of bytes read once the read","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":467428,"byte_end":467506,"line_start":739,"line_end":739,"column_start":5,"column_end":83}},{"value":"/ operation is completed.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":467511,"byte_end":467538,"line_start":740,"line_end":740,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":467543,"byte_end":467546,"line_start":741,"line_end":741,"column_start":5,"column_end":8}},{"value":"/ In the case of an error the buffer and the object will be discarded, with","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":467551,"byte_end":467628,"line_start":742,"line_end":742,"column_start":5,"column_end":82}},{"value":"/ the error yielded.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":467633,"byte_end":467655,"line_start":743,"line_end":743,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":467660,"byte_end":467663,"line_start":744,"line_end":744,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":467668,"byte_end":467680,"line_start":745,"line_end":745,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":467685,"byte_end":467688,"line_start":746,"line_end":746,"column_start":5,"column_end":8}},{"value":"/ This function has the same error semantics as [`read_until`] and will","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":467693,"byte_end":467766,"line_start":747,"line_end":747,"column_start":5,"column_end":78}},{"value":"/ also return an error if the read bytes are not valid UTF-8. If an I/O","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":467771,"byte_end":467844,"line_start":748,"line_end":748,"column_start":5,"column_end":78}},{"value":"/ error is encountered then `buf` may contain some bytes already read in","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":467849,"byte_end":467923,"line_start":749,"line_end":749,"column_start":5,"column_end":79}},{"value":"/ the event that all data read so far was valid UTF-8.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":467928,"byte_end":467984,"line_start":750,"line_end":750,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":467989,"byte_end":467992,"line_start":751,"line_end":751,"column_start":5,"column_end":8}},{"value":"/ [`read_until`]: AsyncBufReadExt::read_until","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":467997,"byte_end":468044,"line_start":752,"line_end":752,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":468049,"byte_end":468052,"line_start":753,"line_end":753,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":468057,"byte_end":468071,"line_start":754,"line_end":754,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":468076,"byte_end":468079,"line_start":755,"line_end":755,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":468084,"byte_end":468091,"line_start":756,"line_end":756,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":468096,"byte_end":468137,"line_start":757,"line_end":757,"column_start":5,"column_end":46}},{"value":"/ use futures::io::{AsyncBufReadExt, Cursor};","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":468142,"byte_end":468189,"line_start":758,"line_end":758,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":468194,"byte_end":468197,"line_start":759,"line_end":759,"column_start":5,"column_end":8}},{"value":"/ let mut cursor = Cursor::new(b\"foo\\nbar\");","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":468202,"byte_end":468248,"line_start":760,"line_end":760,"column_start":5,"column_end":51}},{"value":"/ let mut buf = String::new();","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":468253,"byte_end":468285,"line_start":761,"line_end":761,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":468290,"byte_end":468293,"line_start":762,"line_end":762,"column_start":5,"column_end":8}},{"value":"/ // cursor is at 'f'","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":468298,"byte_end":468321,"line_start":763,"line_end":763,"column_start":5,"column_end":28}},{"value":"/ let num_bytes = cursor.read_line(&mut buf).await?;","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":468326,"byte_end":468380,"line_start":764,"line_end":764,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(num_bytes, 4);","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":468385,"byte_end":468414,"line_start":765,"line_end":765,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(buf, \"foo\\n\");","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":468419,"byte_end":468448,"line_start":766,"line_end":766,"column_start":5,"column_end":34}},{"value":"/ buf.clear();","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":468453,"byte_end":468469,"line_start":767,"line_end":767,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":468474,"byte_end":468477,"line_start":768,"line_end":768,"column_start":5,"column_end":8}},{"value":"/ // cursor is at 'b'","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":468482,"byte_end":468505,"line_start":769,"line_end":769,"column_start":5,"column_end":28}},{"value":"/ let num_bytes = cursor.read_line(&mut buf).await?;","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":468510,"byte_end":468564,"line_start":770,"line_end":770,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(num_bytes, 3);","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":468569,"byte_end":468598,"line_start":771,"line_end":771,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(buf, \"bar\");","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":468603,"byte_end":468630,"line_start":772,"line_end":772,"column_start":5,"column_end":32}},{"value":"/ buf.clear();","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":468635,"byte_end":468651,"line_start":773,"line_end":773,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":468656,"byte_end":468659,"line_start":774,"line_end":774,"column_start":5,"column_end":8}},{"value":"/ // cursor is at EOF","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":468664,"byte_end":468687,"line_start":775,"line_end":775,"column_start":5,"column_end":28}},{"value":"/ let num_bytes = cursor.read_line(&mut buf).await?;","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":468692,"byte_end":468746,"line_start":776,"line_end":776,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(num_bytes, 0);","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":468751,"byte_end":468780,"line_start":777,"line_end":777,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(buf, \"\");","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":468785,"byte_end":468809,"line_start":778,"line_end":778,"column_start":5,"column_end":29}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":468814,"byte_end":468873,"line_start":779,"line_end":779,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":468878,"byte_end":468885,"line_start":780,"line_end":780,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7772},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":470426,"byte_end":470431,"line_start":820,"line_end":820,"column_start":8,"column_end":13},"name":"lines","qualname":"::io::AsyncBufReadExt::lines","value":"pub fn lines(Self) -> Lines<Self> where Self: Sized","parent":{"krate":0,"index":7765},"children":[],"decl_id":null,"docs":" Returns a stream over the lines of this reader.\n This method is the async equivalent to [`BufRead::lines`](std::io::BufRead::lines).","sig":null,"attributes":[{"value":"/ Returns a stream over the lines of this reader.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":469080,"byte_end":469131,"line_start":788,"line_end":788,"column_start":5,"column_end":56}},{"value":"/ This method is the async equivalent to [`BufRead::lines`](std::io::BufRead::lines).","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":469136,"byte_end":469223,"line_start":789,"line_end":789,"column_start":5,"column_end":92}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":469228,"byte_end":469231,"line_start":790,"line_end":790,"column_start":5,"column_end":8}},{"value":"/ The stream returned from this function will yield instances of","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":469236,"byte_end":469302,"line_start":791,"line_end":791,"column_start":5,"column_end":71}},{"value":"/ [`io::Result`]`<`[`String`]`>`. Each string returned will *not* have a newline","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":469307,"byte_end":469389,"line_start":792,"line_end":792,"column_start":5,"column_end":87}},{"value":"/ byte (the 0xA byte) or CRLF (0xD, 0xA bytes) at the end.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":469394,"byte_end":469454,"line_start":793,"line_end":793,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":469459,"byte_end":469462,"line_start":794,"line_end":794,"column_start":5,"column_end":8}},{"value":"/ [`io::Result`]: std::io::Result","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":469467,"byte_end":469502,"line_start":795,"line_end":795,"column_start":5,"column_end":40}},{"value":"/ [`String`]: String","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":469507,"byte_end":469529,"line_start":796,"line_end":796,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":469534,"byte_end":469537,"line_start":797,"line_end":797,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":469542,"byte_end":469554,"line_start":798,"line_end":798,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":469559,"byte_end":469562,"line_start":799,"line_end":799,"column_start":5,"column_end":8}},{"value":"/ Each line of the stream has the same error semantics as [`AsyncBufReadExt::read_line`].","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":469567,"byte_end":469658,"line_start":800,"line_end":800,"column_start":5,"column_end":96}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":469663,"byte_end":469666,"line_start":801,"line_end":801,"column_start":5,"column_end":8}},{"value":"/ [`AsyncBufReadExt::read_line`]: AsyncBufReadExt::read_line","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":469671,"byte_end":469733,"line_start":802,"line_end":802,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":469738,"byte_end":469741,"line_start":803,"line_end":803,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":469746,"byte_end":469760,"line_start":804,"line_end":804,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":469765,"byte_end":469768,"line_start":805,"line_end":805,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":469773,"byte_end":469780,"line_start":806,"line_end":806,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":469785,"byte_end":469826,"line_start":807,"line_end":807,"column_start":5,"column_end":46}},{"value":"/ use futures::io::{AsyncBufReadExt, Cursor};","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":469831,"byte_end":469878,"line_start":808,"line_end":808,"column_start":5,"column_end":52}},{"value":"/ use futures::stream::StreamExt;","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":469883,"byte_end":469918,"line_start":809,"line_end":809,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":469923,"byte_end":469926,"line_start":810,"line_end":810,"column_start":5,"column_end":8}},{"value":"/ let cursor = Cursor::new(b\"lorem\\nipsum\\r\\ndolor\");","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":469931,"byte_end":469986,"line_start":811,"line_end":811,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":469991,"byte_end":469994,"line_start":812,"line_end":812,"column_start":5,"column_end":8}},{"value":"/ let mut lines_stream = cursor.lines().map(|l| l.unwrap());","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":469999,"byte_end":470061,"line_start":813,"line_end":813,"column_start":5,"column_end":67}},{"value":"/ assert_eq!(lines_stream.next().await, Some(String::from(\"lorem\")));","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":470066,"byte_end":470137,"line_start":814,"line_end":814,"column_start":5,"column_end":76}},{"value":"/ assert_eq!(lines_stream.next().await, Some(String::from(\"ipsum\")));","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":470142,"byte_end":470213,"line_start":815,"line_end":815,"column_start":5,"column_end":76}},{"value":"/ assert_eq!(lines_stream.next().await, Some(String::from(\"dolor\")));","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":470218,"byte_end":470289,"line_start":816,"line_end":816,"column_start":5,"column_end":76}},{"value":"/ assert_eq!(lines_stream.next().await, None);","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":470294,"byte_end":470342,"line_start":817,"line_end":817,"column_start":5,"column_end":53}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":470347,"byte_end":470406,"line_start":818,"line_end":818,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":470411,"byte_end":470418,"line_start":819,"line_end":819,"column_start":5,"column_end":12}}]},{"kind":"Mod","id":{"krate":0,"index":7804},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"lock","qualname":"::lock","value":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mod.rs","parent":null,"children":[{"krate":0,"index":16287},{"krate":0,"index":16469},{"krate":0,"index":16470},{"krate":0,"index":16473},{"krate":0,"index":16476},{"krate":0,"index":16479},{"krate":0,"index":16482},{"krate":0,"index":16564}],"decl_id":null,"docs":" Futures-powered synchronization primitives.","sig":null,"attributes":[{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lib.rs","byte_start":12031,"byte_end":12056,"line_start":336,"line_end":336,"column_start":1,"column_end":26}},{"value":"/ Futures-powered synchronization primitives.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mod.rs","byte_start":544428,"byte_end":544475,"line_start":1,"line_end":1,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mod.rs","byte_start":544476,"byte_end":544479,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mod.rs","byte_start":544480,"byte_end":544555,"line_start":3,"line_end":3,"column_start":1,"column_end":76}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mod.rs","byte_start":544556,"byte_end":544613,"line_start":4,"line_end":4,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":16341},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":12832212,"byte_end":12832217,"line_start":20,"line_end":20,"column_start":12,"column_end":17},"name":"Mutex","qualname":"::lock::mutex::Mutex","value":"Mutex {  }","parent":null,"children":[{"krate":0,"index":16343},{"krate":0,"index":16344},{"krate":0,"index":16345}],"decl_id":null,"docs":" A futures-aware mutex.","sig":null,"attributes":[{"value":"/ A futures-aware mutex.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":12831885,"byte_end":12831911,"line_start":12,"line_end":12,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":12831912,"byte_end":12831915,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ # Fairness","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":12831916,"byte_end":12831930,"line_start":14,"line_end":14,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":12831931,"byte_end":12831934,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ This mutex provides no fairness guarantees. Tasks may not acquire the mutex","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":12831935,"byte_end":12832014,"line_start":16,"line_end":16,"column_start":1,"column_end":80}},{"value":"/ in the order that they requested the lock, and it's possible for a single task","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":12832015,"byte_end":12832097,"line_start":17,"line_end":17,"column_start":1,"column_end":83}},{"value":"/ which repeatedly takes the lock to starve other tasks, which may be left waiting","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":12832098,"byte_end":12832182,"line_start":18,"line_end":18,"column_start":1,"column_end":85}},{"value":"/ indefinitely.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":12832183,"byte_end":12832200,"line_start":19,"line_end":19,"column_start":1,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":16368},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":12833529,"byte_end":12833532,"line_start":75,"line_end":75,"column_start":12,"column_end":15},"name":"new","qualname":"<Mutex<T>>::new","value":"pub fn new(T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new futures-aware mutex.\n","sig":null,"attributes":[{"value":"/ Creates a new futures-aware mutex.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":12833479,"byte_end":12833517,"line_start":74,"line_end":74,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":16369},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":12833959,"byte_end":12833969,"line_start":93,"line_end":93,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Mutex<T>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes this mutex, returning the underlying data.","sig":null,"attributes":[{"value":"/ Consumes this mutex, returning the underlying data.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":12833713,"byte_end":12833768,"line_start":83,"line_end":83,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":12833773,"byte_end":12833776,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":12833781,"byte_end":12833795,"line_start":85,"line_end":85,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":12833800,"byte_end":12833803,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":12833808,"byte_end":12833815,"line_start":87,"line_end":87,"column_start":5,"column_end":12}},{"value":"/ use futures::lock::Mutex;","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":12833820,"byte_end":12833849,"line_start":88,"line_end":88,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":12833854,"byte_end":12833857,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ let mutex = Mutex::new(0);","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":12833862,"byte_end":12833892,"line_start":90,"line_end":90,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(mutex.into_inner(), 0);","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":12833897,"byte_end":12833935,"line_start":91,"line_end":91,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":12833940,"byte_end":12833947,"line_start":92,"line_end":92,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":16372},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":12834183,"byte_end":12834191,"line_start":102,"line_end":102,"column_start":12,"column_end":20},"name":"try_lock","qualname":"<Mutex<T>>::try_lock","value":"pub fn try_lock(&Self) -> Option<MutexGuard<, T>>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to acquire the lock immediately.","sig":null,"attributes":[{"value":"/ Attempt to acquire the lock immediately.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":12834055,"byte_end":12834099,"line_start":99,"line_end":99,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":12834104,"byte_end":12834107,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ If the lock is currently held, this will return `None`.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":12834112,"byte_end":12834171,"line_start":101,"line_end":101,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":16373},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":12834612,"byte_end":12834616,"line_start":115,"line_end":115,"column_start":12,"column_end":16},"name":"lock","qualname":"<Mutex<T>>::lock","value":"pub fn lock(&Self) -> MutexLockFuture<, T>","parent":null,"children":[],"decl_id":null,"docs":" Acquire the lock asynchronously.","sig":null,"attributes":[{"value":"/ Acquire the lock asynchronously.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":12834447,"byte_end":12834483,"line_start":111,"line_end":111,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":12834488,"byte_end":12834491,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ This method returns a future that will resolve once the lock has been","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":12834496,"byte_end":12834569,"line_start":113,"line_end":113,"column_start":5,"column_end":78}},{"value":"/ successfully acquired.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":12834574,"byte_end":12834600,"line_start":114,"line_end":114,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":16374},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":12835244,"byte_end":12835251,"line_start":135,"line_end":135,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Mutex<T>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying data.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying data.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":12834734,"byte_end":12834789,"line_start":119,"line_end":119,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":12834794,"byte_end":12834797,"line_start":120,"line_end":120,"column_start":5,"column_end":8}},{"value":"/ Since this call borrows the `Mutex` mutably, no actual locking needs to","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":12834802,"byte_end":12834877,"line_start":121,"line_end":121,"column_start":5,"column_end":80}},{"value":"/ take place -- the mutable borrow statically guarantees no locks exist.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":12834882,"byte_end":12834956,"line_start":122,"line_end":122,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":12834961,"byte_end":12834964,"line_start":123,"line_end":123,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":12834969,"byte_end":12834983,"line_start":124,"line_end":124,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":12834988,"byte_end":12834991,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":12834996,"byte_end":12835003,"line_start":126,"line_end":126,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":12835008,"byte_end":12835049,"line_start":127,"line_end":127,"column_start":5,"column_end":46}},{"value":"/ use futures::lock::Mutex;","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":12835054,"byte_end":12835083,"line_start":128,"line_end":128,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":12835088,"byte_end":12835091,"line_start":129,"line_end":129,"column_start":5,"column_end":8}},{"value":"/ let mut mutex = Mutex::new(0);","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":12835096,"byte_end":12835130,"line_start":130,"line_end":130,"column_start":5,"column_end":39}},{"value":"/ *mutex.get_mut() = 10;","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":12835135,"byte_end":12835161,"line_start":131,"line_end":131,"column_start":5,"column_end":31}},{"value":"/ assert_eq!(*mutex.lock().await, 10);","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":12835166,"byte_end":12835206,"line_start":132,"line_end":132,"column_start":5,"column_end":45}},{"value":"/ # });","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":12835211,"byte_end":12835220,"line_start":133,"line_end":133,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":12835225,"byte_end":12835232,"line_start":134,"line_end":134,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":16378},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":12836973,"byte_end":12836988,"line_start":180,"line_end":180,"column_start":12,"column_end":27},"name":"MutexLockFuture","qualname":"::lock::mutex::MutexLockFuture","value":"MutexLockFuture {  }","parent":null,"children":[{"krate":0,"index":16381},{"krate":0,"index":16382}],"decl_id":null,"docs":" A future which resolves when the target mutex has been successfully acquired.\n","sig":null,"attributes":[{"value":"/ A future which resolves when the target mutex has been successfully acquired.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":12836880,"byte_end":12836961,"line_start":179,"line_end":179,"column_start":1,"column_end":82}}]},{"kind":"Struct","id":{"krate":0,"index":16397},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":12839523,"byte_end":12839533,"line_start":256,"line_end":256,"column_start":12,"column_end":22},"name":"MutexGuard","qualname":"::lock::mutex::MutexGuard","value":"MutexGuard {  }","parent":null,"children":[{"krate":0,"index":16400}],"decl_id":null,"docs":" An RAII guard returned by the `lock` and `try_lock` methods.\n When this structure is dropped (falls out of scope), the lock will be\n unlocked.\n","sig":null,"attributes":[{"value":"/ An RAII guard returned by the `lock` and `try_lock` methods.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":12839359,"byte_end":12839423,"line_start":253,"line_end":253,"column_start":1,"column_end":65}},{"value":"/ When this structure is dropped (falls out of scope), the lock will be","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":12839424,"byte_end":12839497,"line_start":254,"line_end":254,"column_start":1,"column_end":74}},{"value":"/ unlocked.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":12839498,"byte_end":12839511,"line_start":255,"line_end":255,"column_start":1,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":16404},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":12840102,"byte_end":12840105,"line_start":277,"line_end":277,"column_start":12,"column_end":15},"name":"map","qualname":"<MutexGuard>::map","value":"pub fn map<U: ?Sized, F>(Self, F) -> MappedMutexGuard where F: FnOnce(&mut T)\n-> &mut U","parent":null,"children":[],"decl_id":null,"docs":" Returns a locked view over a portion of the locked data.","sig":null,"attributes":[{"value":"/ Returns a locked view over a portion of the locked data.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":12839623,"byte_end":12839683,"line_start":261,"line_end":261,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":12839688,"byte_end":12839691,"line_start":262,"line_end":262,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":12839696,"byte_end":12839709,"line_start":263,"line_end":263,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":12839714,"byte_end":12839717,"line_start":264,"line_end":264,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":12839722,"byte_end":12839729,"line_start":265,"line_end":265,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":12839734,"byte_end":12839775,"line_start":266,"line_end":266,"column_start":5,"column_end":46}},{"value":"/ use futures::lock::{Mutex, MutexGuard};","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":12839780,"byte_end":12839823,"line_start":267,"line_end":267,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":12839828,"byte_end":12839831,"line_start":268,"line_end":268,"column_start":5,"column_end":8}},{"value":"/ let data = Mutex::new(Some(\"value\".to_string()));","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":12839836,"byte_end":12839889,"line_start":269,"line_end":269,"column_start":5,"column_end":58}},{"value":"/ {","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":12839894,"byte_end":12839899,"line_start":270,"line_end":270,"column_start":5,"column_end":10}},{"value":"/     let locked_str = MutexGuard::map(data.lock().await, |opt| opt.as_mut().unwrap());","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":12839904,"byte_end":12839993,"line_start":271,"line_end":271,"column_start":5,"column_end":94}},{"value":"/     assert_eq!(&*locked_str, \"value\");","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":12839998,"byte_end":12840040,"line_start":272,"line_end":272,"column_start":5,"column_end":47}},{"value":"/ }","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":12840045,"byte_end":12840050,"line_start":273,"line_end":273,"column_start":5,"column_end":10}},{"value":"/ # });","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":12840055,"byte_end":12840064,"line_start":274,"line_end":274,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":12840069,"byte_end":12840076,"line_start":275,"line_end":275,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":12840081,"byte_end":12840090,"line_start":276,"line_end":276,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":16420},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":12841397,"byte_end":12841413,"line_start":317,"line_end":317,"column_start":12,"column_end":28},"name":"MappedMutexGuard","qualname":"::lock::mutex::MappedMutexGuard","value":"MappedMutexGuard {  }","parent":null,"children":[{"krate":0,"index":16424},{"krate":0,"index":16425},{"krate":0,"index":16426}],"decl_id":null,"docs":" An RAII guard returned by the `MutexGuard::map` and `MappedMutexGuard::map` methods.\n When this structure is dropped (falls out of scope), the lock will be unlocked.\n","sig":null,"attributes":[{"value":"/ An RAII guard returned by the `MutexGuard::map` and `MappedMutexGuard::map` methods.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":12841213,"byte_end":12841301,"line_start":315,"line_end":315,"column_start":1,"column_end":89}},{"value":"/ When this structure is dropped (falls out of scope), the lock will be unlocked.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":12841302,"byte_end":12841385,"line_start":316,"line_end":316,"column_start":1,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":16431},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":12842179,"byte_end":12842182,"line_start":341,"line_end":341,"column_start":12,"column_end":15},"name":"map","qualname":"<MappedMutexGuard>::map","value":"pub fn map<V: ?Sized, F>(Self, F) -> MappedMutexGuard where F: FnOnce(&mut U)\n-> &mut V","parent":null,"children":[],"decl_id":null,"docs":" Returns a locked view over a portion of the locked data.","sig":null,"attributes":[{"value":"/ Returns a locked view over a portion of the locked data.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":12841590,"byte_end":12841650,"line_start":324,"line_end":324,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":12841655,"byte_end":12841658,"line_start":325,"line_end":325,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":12841663,"byte_end":12841676,"line_start":326,"line_end":326,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":12841681,"byte_end":12841684,"line_start":327,"line_end":327,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":12841689,"byte_end":12841696,"line_start":328,"line_end":328,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":12841701,"byte_end":12841742,"line_start":329,"line_end":329,"column_start":5,"column_end":46}},{"value":"/ use futures::lock::{MappedMutexGuard, Mutex, MutexGuard};","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":12841747,"byte_end":12841808,"line_start":330,"line_end":330,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":12841813,"byte_end":12841816,"line_start":331,"line_end":331,"column_start":5,"column_end":8}},{"value":"/ let data = Mutex::new(Some(\"value\".to_string()));","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":12841821,"byte_end":12841874,"line_start":332,"line_end":332,"column_start":5,"column_end":58}},{"value":"/ {","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":12841879,"byte_end":12841884,"line_start":333,"line_end":333,"column_start":5,"column_end":10}},{"value":"/     let locked_str = MutexGuard::map(data.lock().await, |opt| opt.as_mut().unwrap());","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":12841889,"byte_end":12841978,"line_start":334,"line_end":334,"column_start":5,"column_end":94}},{"value":"/     let locked_char = MappedMutexGuard::map(locked_str, |s| s.get_mut(0..1).unwrap());","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":12841983,"byte_end":12842073,"line_start":335,"line_end":335,"column_start":5,"column_end":95}},{"value":"/     assert_eq!(&*locked_char, \"v\");","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":12842078,"byte_end":12842117,"line_start":336,"line_end":336,"column_start":5,"column_end":44}},{"value":"/ }","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":12842122,"byte_end":12842127,"line_start":337,"line_end":337,"column_start":5,"column_end":10}},{"value":"/ # });","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":12842132,"byte_end":12842141,"line_start":338,"line_end":338,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":12842146,"byte_end":12842153,"line_start":339,"line_end":339,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":12842158,"byte_end":12842167,"line_start":340,"line_end":340,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":16897},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/abortable.rs","byte_start":12855236,"byte_end":12855245,"line_start":15,"line_end":15,"column_start":16,"column_end":25},"name":"Abortable","qualname":"::abortable::Abortable","value":"Abortable {  }","parent":null,"children":[{"krate":0,"index":16899},{"krate":0,"index":16900}],"decl_id":null,"docs":" A future/stream which can be remotely short-circuited using an `AbortHandle`.\n","sig":null,"attributes":[{"value":"must_use = \"futures/streams do nothing unless you poll them\"","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":12561792,"byte_end":12561801,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":16626},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/abortable.rs","byte_start":12856655,"byte_end":12856658,"line_start":58,"line_end":58,"column_start":12,"column_end":15},"name":"new","qualname":"<Abortable<T>>::new","value":"pub fn new(T, AbortRegistration) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Abortable` future/stream using an existing `AbortRegistration`.\n `AbortRegistration`s can be acquired through `AbortHandle::new`.","sig":null,"attributes":[{"value":"/ Creates a new `Abortable` future/stream using an existing `AbortRegistration`.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/abortable.rs","byte_start":12855351,"byte_end":12855433,"line_start":23,"line_end":23,"column_start":5,"column_end":87}},{"value":"/ `AbortRegistration`s can be acquired through `AbortHandle::new`.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/abortable.rs","byte_start":12855438,"byte_end":12855506,"line_start":24,"line_end":24,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/abortable.rs","byte_start":12855511,"byte_end":12855514,"line_start":25,"line_end":25,"column_start":5,"column_end":8}},{"value":"/ When `abort` is called on the handle tied to `reg` or if `abort` has","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/abortable.rs","byte_start":12855519,"byte_end":12855591,"line_start":26,"line_end":26,"column_start":5,"column_end":77}},{"value":"/ already been called, the future/stream will complete immediately without making","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/abortable.rs","byte_start":12855596,"byte_end":12855679,"line_start":27,"line_end":27,"column_start":5,"column_end":88}},{"value":"/ any further progress.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/abortable.rs","byte_start":12855684,"byte_end":12855709,"line_start":28,"line_end":28,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/abortable.rs","byte_start":12855714,"byte_end":12855717,"line_start":29,"line_end":29,"column_start":5,"column_end":8}},{"value":"/ # Examples:","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/abortable.rs","byte_start":12855722,"byte_end":12855737,"line_start":30,"line_end":30,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/abortable.rs","byte_start":12855742,"byte_end":12855745,"line_start":31,"line_end":31,"column_start":5,"column_end":8}},{"value":"/ Usage with futures:","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/abortable.rs","byte_start":12855750,"byte_end":12855773,"line_start":32,"line_end":32,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/abortable.rs","byte_start":12855778,"byte_end":12855781,"line_start":33,"line_end":33,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/abortable.rs","byte_start":12855786,"byte_end":12855793,"line_start":34,"line_end":34,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/abortable.rs","byte_start":12855798,"byte_end":12855839,"line_start":35,"line_end":35,"column_start":5,"column_end":46}},{"value":"/ use futures::future::{Abortable, AbortHandle, Aborted};","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/abortable.rs","byte_start":12855844,"byte_end":12855903,"line_start":36,"line_end":36,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/abortable.rs","byte_start":12855908,"byte_end":12855911,"line_start":37,"line_end":37,"column_start":5,"column_end":8}},{"value":"/ let (abort_handle, abort_registration) = AbortHandle::new_pair();","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/abortable.rs","byte_start":12855916,"byte_end":12855985,"line_start":38,"line_end":38,"column_start":5,"column_end":74}},{"value":"/ let future = Abortable::new(async { 2 }, abort_registration);","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/abortable.rs","byte_start":12855990,"byte_end":12856055,"line_start":39,"line_end":39,"column_start":5,"column_end":70}},{"value":"/ abort_handle.abort();","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/abortable.rs","byte_start":12856060,"byte_end":12856085,"line_start":40,"line_end":40,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(future.await, Err(Aborted));","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/abortable.rs","byte_start":12856090,"byte_end":12856133,"line_start":41,"line_end":41,"column_start":5,"column_end":48}},{"value":"/ # });","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/abortable.rs","byte_start":12856138,"byte_end":12856147,"line_start":42,"line_end":42,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/abortable.rs","byte_start":12856152,"byte_end":12856159,"line_start":43,"line_end":43,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/abortable.rs","byte_start":12856164,"byte_end":12856167,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ Usage with streams:","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/abortable.rs","byte_start":12856172,"byte_end":12856195,"line_start":45,"line_end":45,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/abortable.rs","byte_start":12856200,"byte_end":12856203,"line_start":46,"line_end":46,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/abortable.rs","byte_start":12856208,"byte_end":12856215,"line_start":47,"line_end":47,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/abortable.rs","byte_start":12856220,"byte_end":12856261,"line_start":48,"line_end":48,"column_start":5,"column_end":46}},{"value":"/ # use futures::future::{Abortable, AbortHandle};","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/abortable.rs","byte_start":12856266,"byte_end":12856318,"line_start":49,"line_end":49,"column_start":5,"column_end":57}},{"value":"/ # use futures::stream::{self, StreamExt};","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/abortable.rs","byte_start":12856323,"byte_end":12856368,"line_start":50,"line_end":50,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/abortable.rs","byte_start":12856373,"byte_end":12856376,"line_start":51,"line_end":51,"column_start":5,"column_end":8}},{"value":"/ let (abort_handle, abort_registration) = AbortHandle::new_pair();","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/abortable.rs","byte_start":12856381,"byte_end":12856450,"line_start":52,"line_end":52,"column_start":5,"column_end":74}},{"value":"/ let mut stream = Abortable::new(stream::iter(vec![1, 2, 3]), abort_registration);","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/abortable.rs","byte_start":12856455,"byte_end":12856540,"line_start":53,"line_end":53,"column_start":5,"column_end":90}},{"value":"/ abort_handle.abort();","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/abortable.rs","byte_start":12856545,"byte_end":12856570,"line_start":54,"line_end":54,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(stream.next().await, None);","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/abortable.rs","byte_start":12856575,"byte_end":12856617,"line_start":55,"line_end":55,"column_start":5,"column_end":47}},{"value":"/ # });","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/abortable.rs","byte_start":12856622,"byte_end":12856631,"line_start":56,"line_end":56,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/abortable.rs","byte_start":12856636,"byte_end":12856643,"line_start":57,"line_end":57,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":16627},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/abortable.rs","byte_start":12857163,"byte_end":12857173,"line_start":68,"line_end":68,"column_start":12,"column_end":22},"name":"is_aborted","qualname":"<Abortable<T>>::is_aborted","value":"pub fn is_aborted(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks whether the task has been aborted. Note that all this\n method indicates is whether [`AbortHandle::abort`] was *called*.\n This means that it will return `true` even if:\n * `abort` was called after the task had completed.\n * `abort` was called while the task was being polled - the task may still be running and\n will not be stopped until `poll` returns.\n","sig":null,"attributes":[{"value":"/ Checks whether the task has been aborted. Note that all this","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/abortable.rs","byte_start":12856753,"byte_end":12856817,"line_start":62,"line_end":62,"column_start":5,"column_end":69}},{"value":"/ method indicates is whether [`AbortHandle::abort`] was *called*.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/abortable.rs","byte_start":12856822,"byte_end":12856890,"line_start":63,"line_end":63,"column_start":5,"column_end":73}},{"value":"/ This means that it will return `true` even if:","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/abortable.rs","byte_start":12856895,"byte_end":12856945,"line_start":64,"line_end":64,"column_start":5,"column_end":55}},{"value":"/ * `abort` was called after the task had completed.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/abortable.rs","byte_start":12856950,"byte_end":12857004,"line_start":65,"line_end":65,"column_start":5,"column_end":59}},{"value":"/ * `abort` was called while the task was being polled - the task may still be running and","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/abortable.rs","byte_start":12857009,"byte_end":12857101,"line_start":66,"line_end":66,"column_start":5,"column_end":97}},{"value":"/ will not be stopped until `poll` returns.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/abortable.rs","byte_start":12857106,"byte_end":12857151,"line_start":67,"line_end":67,"column_start":5,"column_end":50}}]},{"kind":"Struct","id":{"krate":0,"index":16650},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/abortable.rs","byte_start":12857441,"byte_end":12857458,"line_start":77,"line_end":77,"column_start":12,"column_end":29},"name":"AbortRegistration","qualname":"::abortable::AbortRegistration","value":"AbortRegistration {  }","parent":null,"children":[{"krate":0,"index":16651}],"decl_id":null,"docs":" A registration handle for an `Abortable` task.\n Values of this type can be acquired from `AbortHandle::new` and are used\n in calls to `Abortable::new`.\n","sig":null,"attributes":[{"value":"/ A registration handle for an `Abortable` task.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/abortable.rs","byte_start":12857251,"byte_end":12857301,"line_start":73,"line_end":73,"column_start":1,"column_end":51}},{"value":"/ Values of this type can be acquired from `AbortHandle::new` and are used","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/abortable.rs","byte_start":12857302,"byte_end":12857378,"line_start":74,"line_end":74,"column_start":1,"column_end":77}},{"value":"/ in calls to `Abortable::new`.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/abortable.rs","byte_start":12857379,"byte_end":12857412,"line_start":75,"line_end":75,"column_start":1,"column_end":34}}]},{"kind":"Struct","id":{"krate":0,"index":16654},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/abortable.rs","byte_start":12857564,"byte_end":12857575,"line_start":83,"line_end":83,"column_start":12,"column_end":23},"name":"AbortHandle","qualname":"::abortable::AbortHandle","value":"AbortHandle {  }","parent":null,"children":[{"krate":0,"index":16655}],"decl_id":null,"docs":" A handle to an `Abortable` task.\n","sig":null,"attributes":[{"value":"/ A handle to an `Abortable` task.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/abortable.rs","byte_start":12857492,"byte_end":12857528,"line_start":81,"line_end":81,"column_start":1,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":16629},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/abortable.rs","byte_start":12857846,"byte_end":12857854,"line_start":92,"line_end":92,"column_start":12,"column_end":20},"name":"new_pair","qualname":"<AbortHandle>::new_pair","value":"pub fn new_pair() -> (Self, AbortRegistration)","parent":null,"children":[],"decl_id":null,"docs":" Creates an (`AbortHandle`, `AbortRegistration`) pair which can be used\n to abort a running future or stream.","sig":null,"attributes":[{"value":"/ Creates an (`AbortHandle`, `AbortRegistration`) pair which can be used","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/abortable.rs","byte_start":12857632,"byte_end":12857706,"line_start":88,"line_end":88,"column_start":5,"column_end":79}},{"value":"/ to abort a running future or stream.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/abortable.rs","byte_start":12857711,"byte_end":12857751,"line_start":89,"line_end":89,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/abortable.rs","byte_start":12857756,"byte_end":12857759,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ This function is usually paired with a call to [`Abortable::new`].","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/abortable.rs","byte_start":12857764,"byte_end":12857834,"line_start":91,"line_end":91,"column_start":5,"column_end":75}}]},{"kind":"Struct","id":{"krate":0,"index":16665},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/abortable.rs","byte_start":12858376,"byte_end":12858383,"line_start":110,"line_end":110,"column_start":12,"column_end":19},"name":"Aborted","qualname":"::abortable::Aborted","value":"","parent":null,"children":[],"decl_id":null,"docs":" Indicator that the `Abortable` task was aborted.\n","sig":null,"attributes":[{"value":"/ Indicator that the `Abortable` task was aborted.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/abortable.rs","byte_start":12858267,"byte_end":12858319,"line_start":108,"line_end":108,"column_start":1,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":16649},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/abortable.rs","byte_start":12860517,"byte_end":12860522,"line_start":181,"line_end":181,"column_start":12,"column_end":17},"name":"abort","qualname":"<AbortHandle>::abort","value":"pub fn abort(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Abort the `Abortable` stream/future associated with this handle.","sig":null,"attributes":[{"value":"/ Abort the `Abortable` stream/future associated with this handle.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/abortable.rs","byte_start":12860150,"byte_end":12860218,"line_start":175,"line_end":175,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/abortable.rs","byte_start":12860223,"byte_end":12860226,"line_start":176,"line_end":176,"column_start":5,"column_end":8}},{"value":"/ Notifies the Abortable task associated with this handle that it","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/abortable.rs","byte_start":12860231,"byte_end":12860298,"line_start":177,"line_end":177,"column_start":5,"column_end":72}},{"value":"/ should abort. Note that if the task is currently being polled on","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/abortable.rs","byte_start":12860303,"byte_end":12860371,"line_start":178,"line_end":178,"column_start":5,"column_end":73}},{"value":"/ another thread, it will not immediately stop running. Instead, it will","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/abortable.rs","byte_start":12860376,"byte_end":12860450,"line_start":179,"line_end":179,"column_start":5,"column_end":79}},{"value":"/ continue to run until its poll method returns.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/abortable.rs","byte_start":12860455,"byte_end":12860505,"line_start":180,"line_end":180,"column_start":5,"column_end":55}}]},{"kind":"Trait","id":{"krate":0,"index":7816},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/fns.rs","byte_start":545363,"byte_end":545370,"line_start":4,"line_end":4,"column_start":11,"column_end":18},"name":"FnOnce1","qualname":"::fns::FnOnce1","value":"FnOnce1<A>","parent":null,"children":[{"krate":0,"index":7818},{"krate":0,"index":7819}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":7818},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/fns.rs","byte_start":545385,"byte_end":545391,"line_start":5,"line_end":5,"column_start":10,"column_end":16},"name":"Output","qualname":"::fns::FnOnce1::Output","value":"type Output;","parent":{"krate":0,"index":7816},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":7819},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/fns.rs","byte_start":545400,"byte_end":545409,"line_start":6,"line_end":6,"column_start":8,"column_end":17},"name":"call_once","qualname":"::fns::FnOnce1::call_once","value":"pub fn call_once(Self, A) -> Self::Output","parent":{"krate":0,"index":7816},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":7826},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/fns.rs","byte_start":545602,"byte_end":545608,"line_start":19,"line_end":19,"column_start":11,"column_end":17},"name":"FnMut1","qualname":"::fns::FnMut1","value":"FnMut1<A>: FnOnce1<A>","parent":null,"children":[{"krate":0,"index":7828}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":7828},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/fns.rs","byte_start":545633,"byte_end":545641,"line_start":20,"line_end":20,"column_start":8,"column_end":16},"name":"call_mut","qualname":"::fns::FnMut1::call_mut","value":"pub fn call_mut(&mut Self, A) -> Self::Output","parent":{"krate":0,"index":7826},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7843},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/fns.rs","byte_start":546947,"byte_end":546951,"line_start":74,"line_end":74,"column_start":12,"column_end":16},"name":"OkFn","qualname":"::fns::OkFn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":16696},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/fns.rs","byte_start":547307,"byte_end":547314,"line_start":92,"line_end":92,"column_start":12,"column_end":19},"name":"ChainFn","qualname":"::fns::ChainFn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":16717},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/fns.rs","byte_start":548048,"byte_end":548061,"line_start":127,"line_end":127,"column_start":12,"column_end":25},"name":"MergeResultFn","qualname":"::fns::MergeResultFn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":16733},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/fns.rs","byte_start":548403,"byte_end":548412,"line_start":141,"line_end":141,"column_start":12,"column_end":21},"name":"InspectFn","qualname":"::fns::InspectFn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":16748},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/fns.rs","byte_start":549367,"byte_end":549374,"line_start":179,"line_end":179,"column_start":12,"column_end":19},"name":"MapOkFn","qualname":"::fns::MapOkFn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":16763},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/fns.rs","byte_start":550085,"byte_end":550093,"line_start":211,"line_end":211,"column_start":12,"column_end":20},"name":"MapErrFn","qualname":"::fns::MapErrFn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":16778},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/fns.rs","byte_start":550813,"byte_end":550824,"line_start":243,"line_end":243,"column_start":12,"column_end":23},"name":"InspectOkFn","qualname":"::fns::InspectOkFn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":16790},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/fns.rs","byte_start":551709,"byte_end":551721,"line_start":281,"line_end":281,"column_start":12,"column_end":24},"name":"InspectErrFn","qualname":"::fns::InspectErrFn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":16802},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/fns.rs","byte_start":552869,"byte_end":552883,"line_start":324,"line_end":324,"column_start":12,"column_end":26},"name":"UnwrapOrElseFn","qualname":"::fns::UnwrapOrElseFn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8007},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/fns.rs","byte_start":553648,"byte_end":553654,"line_start":355,"line_end":355,"column_start":12,"column_end":18},"name":"IntoFn","qualname":"::fns::IntoFn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/async_await/poll.rs","byte_start":14590,"byte_end":14598,"line_start":34,"line_end":34,"column_start":36,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":50},{"krate":0,"index":51}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/async_await/pending.rs","byte_start":15766,"byte_end":15777,"line_start":33,"line_end":33,"column_start":17,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":72},{"krate":0,"index":73}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Inherent","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/flatten.rs","byte_start":58672,"byte_end":58679,"line_start":20,"line_end":20,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":291}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/flatten.rs","byte_start":58809,"byte_end":58816,"line_start":26,"line_end":26,"column_start":27,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":294}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/flatten.rs","byte_start":59041,"byte_end":59048,"line_start":39,"line_end":39,"column_start":22,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":297},{"krate":0,"index":298}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/flatten.rs","byte_start":59822,"byte_end":59829,"line_start":64,"line_end":64,"column_start":27,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":301}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/flatten.rs","byte_start":60054,"byte_end":60061,"line_start":77,"line_end":77,"column_start":22,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":304},{"krate":0,"index":305}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/flatten.rs","byte_start":60914,"byte_end":60921,"line_start":105,"line_end":105,"column_start":32,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":309},{"krate":0,"index":310},{"krate":0,"index":311},{"krate":0,"index":312},{"krate":0,"index":313}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Inherent","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/fuse.rs","byte_start":63075,"byte_end":63079,"line_start":17,"line_end":17,"column_start":11,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":340}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Inherent","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/fuse.rs","byte_start":63186,"byte_end":63190,"line_start":23,"line_end":23,"column_start":19,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":343}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/fuse.rs","byte_start":64919,"byte_end":64923,"line_start":74,"line_end":74,"column_start":35,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":346}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/fuse.rs","byte_start":65036,"byte_end":65040,"line_start":80,"line_end":80,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":349},{"krate":0,"index":350}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Inherent","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/map.rs","byte_start":66018,"byte_end":66021,"line_start":25,"line_end":25,"column_start":14,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":381}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/map.rs","byte_start":66190,"byte_end":66193,"line_start":32,"line_end":32,"column_start":33,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":386}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/map.rs","byte_start":66455,"byte_end":66458,"line_start":45,"line_end":45,"column_start":28,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":391},{"krate":0,"index":392}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Inherent","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/catch_unwind.rs","byte_start":67664,"byte_end":67675,"line_start":19,"line_end":19,"column_start":11,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":428}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/catch_unwind.rs","byte_start":67818,"byte_end":67829,"line_start":28,"line_end":28,"column_start":22,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":431},{"krate":0,"index":432}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Inherent","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/remote_handle.rs","byte_start":69740,"byte_end":69752,"line_start":47,"line_end":47,"column_start":9,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":506}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/remote_handle.rs","byte_start":70059,"byte_end":70071,"line_start":57,"line_end":57,"column_start":29,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":509},{"krate":0,"index":510}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/remote_handle.rs","byte_start":71112,"byte_end":71118,"line_start":86,"line_end":86,"column_start":47,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":515}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/remote_handle.rs","byte_start":71288,"byte_end":71294,"line_start":92,"line_end":92,"column_start":30,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":518},{"krate":0,"index":519}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/shared.rs","byte_start":73283,"byte_end":73293,"line_start":32,"line_end":32,"column_start":29,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":603}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/shared.rs","byte_start":73494,"byte_end":73500,"line_start":40,"line_end":40,"column_start":29,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/shared.rs","byte_start":73543,"byte_end":73549,"line_start":42,"line_end":42,"column_start":34,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":608}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/shared.rs","byte_start":73807,"byte_end":73812,"line_start":51,"line_end":51,"column_start":34,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":611}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/shared.rs","byte_start":73966,"byte_end":73976,"line_start":57,"line_end":57,"column_start":34,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":614}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/shared.rs","byte_start":74208,"byte_end":74213,"line_start":68,"line_end":68,"column_start":27,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/shared.rs","byte_start":74310,"byte_end":74315,"line_start":75,"line_end":75,"column_start":27,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Inherent","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/shared.rs","byte_start":74559,"byte_end":74565,"line_start":89,"line_end":89,"column_start":19,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":634}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Inherent","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/shared.rs","byte_start":74989,"byte_end":74995,"line_start":103,"line_end":103,"column_start":11,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":637},{"krate":0,"index":638},{"krate":0,"index":639},{"krate":0,"index":641}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Inherent","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/shared.rs","byte_start":77061,"byte_end":77066,"line_start":160,"line_end":160,"column_start":11,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":645},{"krate":0,"index":646},{"krate":0,"index":647}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/shared.rs","byte_start":78762,"byte_end":78768,"line_start":209,"line_end":209,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":650}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/shared.rs","byte_start":78920,"byte_end":78926,"line_start":219,"line_end":219,"column_start":22,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":653},{"krate":0,"index":654}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/shared.rs","byte_start":80515,"byte_end":80520,"line_start":267,"line_end":267,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":661}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/shared.rs","byte_start":82227,"byte_end":82233,"line_start":324,"line_end":324,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":667}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/shared.rs","byte_start":82392,"byte_end":82398,"line_start":333,"line_end":333,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":670}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/shared.rs","byte_start":82826,"byte_end":82834,"line_start":350,"line_end":350,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":672}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Inherent","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/shared.rs","byte_start":83193,"byte_end":83203,"line_start":363,"line_end":363,"column_start":19,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":675}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":41823,"byte_end":41824,"line_start":119,"line_end":119,"column_start":31,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Inherent","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/into_future.rs","byte_start":105629,"byte_end":105639,"line_start":16,"line_end":16,"column_start":11,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":869}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/into_future.rs","byte_start":105790,"byte_end":105800,"line_start":23,"line_end":23,"column_start":52,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":872}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/into_future.rs","byte_start":105923,"byte_end":105933,"line_start":29,"line_end":29,"column_start":33,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":875},{"krate":0,"index":876}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Inherent","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/try_flatten.rs","byte_start":106642,"byte_end":106652,"line_start":20,"line_end":20,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":920}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/try_flatten.rs","byte_start":106782,"byte_end":106792,"line_start":26,"line_end":26,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":923}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/try_flatten.rs","byte_start":107035,"byte_end":107045,"line_start":39,"line_end":39,"column_start":22,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":926},{"krate":0,"index":927}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/try_flatten.rs","byte_start":107998,"byte_end":108008,"line_start":67,"line_end":67,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":930}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/try_flatten.rs","byte_start":108251,"byte_end":108261,"line_start":80,"line_end":80,"column_start":22,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":933},{"krate":0,"index":934}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/try_flatten.rs","byte_start":109298,"byte_end":109308,"line_start":111,"line_end":111,"column_start":32,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":938},{"krate":0,"index":939},{"krate":0,"index":940},{"krate":0,"index":941},{"krate":0,"index":942}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Inherent","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/try_flatten_err.rs","byte_start":111585,"byte_end":111598,"line_start":17,"line_end":17,"column_start":18,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":973}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/try_flatten_err.rs","byte_start":111728,"byte_end":111741,"line_start":23,"line_end":23,"column_start":27,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":976}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/try_flatten_err.rs","byte_start":111984,"byte_end":111997,"line_start":36,"line_end":36,"column_start":22,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":979},{"krate":0,"index":980}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":88175,"byte_end":88178,"line_start":134,"line_end":134,"column_start":48,"column_end":51},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/lazy.rs","byte_start":113306,"byte_end":113310,"line_start":14,"line_end":14,"column_start":19,"column_end":23},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/lazy.rs","byte_start":113906,"byte_end":113910,"line_start":42,"line_end":42,"column_start":28,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1094}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/lazy.rs","byte_start":114054,"byte_end":114058,"line_start":51,"line_end":51,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1098},{"krate":0,"index":1099}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/pending.rs","byte_start":114661,"byte_end":114668,"line_start":14,"line_end":14,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1133}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/pending.rs","byte_start":115229,"byte_end":115236,"line_start":40,"line_end":40,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1138},{"krate":0,"index":1139}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/pending.rs","byte_start":115381,"byte_end":115388,"line_start":48,"line_end":48,"column_start":19,"column_end":26},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/pending.rs","byte_start":115414,"byte_end":115421,"line_start":50,"line_end":50,"column_start":19,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1144}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/maybe_done.rs","byte_start":116175,"byte_end":116184,"line_start":24,"line_end":24,"column_start":37,"column_end":46},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Inherent","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/maybe_done.rs","byte_start":116787,"byte_end":116796,"line_start":47,"line_end":47,"column_start":19,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1185},{"krate":0,"index":1186}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/maybe_done.rs","byte_start":117894,"byte_end":117903,"line_start":79,"line_end":79,"column_start":35,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1189}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/maybe_done.rs","byte_start":118104,"byte_end":118113,"line_start":88,"line_end":88,"column_start":30,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1192},{"krate":0,"index":1193}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_maybe_done.rs","byte_start":119433,"byte_end":119445,"line_start":25,"line_end":25,"column_start":40,"column_end":52},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Inherent","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_maybe_done.rs","byte_start":119671,"byte_end":119683,"line_start":32,"line_end":32,"column_start":22,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1237},{"krate":0,"index":1238}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_maybe_done.rs","byte_start":120796,"byte_end":120808,"line_start":64,"line_end":64,"column_start":38,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":1241}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_maybe_done.rs","byte_start":121012,"byte_end":121024,"line_start":73,"line_end":73,"column_start":33,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1244},{"krate":0,"index":1245}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/option.rs","byte_start":122681,"byte_end":122693,"line_start":34,"line_end":34,"column_start":28,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1276},{"krate":0,"index":1277}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/option.rs","byte_start":123007,"byte_end":123019,"line_start":45,"line_end":45,"column_start":38,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":1280}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/option.rs","byte_start":123206,"byte_end":123218,"line_start":54,"line_end":54,"column_start":29,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1283}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/poll_fn.rs","byte_start":123656,"byte_end":123662,"line_start":15,"line_end":15,"column_start":19,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/poll_fn.rs","byte_start":124356,"byte_end":124362,"line_start":43,"line_end":43,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1317}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/poll_fn.rs","byte_start":124504,"byte_end":124510,"line_start":49,"line_end":49,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1321},{"krate":0,"index":1322}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Inherent","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/ready.rs","byte_start":125013,"byte_end":125018,"line_start":11,"line_end":11,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1353}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/ready.rs","byte_start":125197,"byte_end":125202,"line_start":19,"line_end":19,"column_start":19,"column_end":24},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/ready.rs","byte_start":125234,"byte_end":125239,"line_start":21,"line_end":21,"column_start":25,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1358}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/ready.rs","byte_start":125336,"byte_end":125341,"line_start":27,"line_end":27,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1361},{"krate":0,"index":1362}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join_all.rs","byte_start":132955,"byte_end":132962,"line_start":31,"line_end":31,"column_start":24,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1507}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join_all.rs","byte_start":134753,"byte_end":134760,"line_start":87,"line_end":87,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1512},{"krate":0,"index":1513}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join_all.rs","byte_start":135423,"byte_end":135430,"line_start":112,"line_end":112,"column_start":37,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1517}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select.rs","byte_start":135926,"byte_end":135932,"line_start":14,"line_end":14,"column_start":36,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select.rs","byte_start":138368,"byte_end":138374,"line_start":94,"line_end":94,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1563},{"krate":0,"index":1564}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select.rs","byte_start":139078,"byte_end":139084,"line_start":116,"line_end":116,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1568}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select_all.rs","byte_start":139647,"byte_end":139656,"line_start":17,"line_end":17,"column_start":28,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Inherent","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select_all.rs","byte_start":140663,"byte_end":140672,"line_start":44,"line_end":44,"column_start":11,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1611}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select_all.rs","byte_start":140855,"byte_end":140864,"line_start":51,"line_end":51,"column_start":38,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":1614},{"krate":0,"index":1615}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select_all.rs","byte_start":141534,"byte_end":141543,"line_start":70,"line_end":70,"column_start":49,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":1619}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join_all.rs","byte_start":150151,"byte_end":150161,"line_start":37,"line_end":37,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1763}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join_all.rs","byte_start":151991,"byte_end":152001,"line_start":97,"line_end":97,"column_start":20,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1768},{"krate":0,"index":1769}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join_all.rs","byte_start":153149,"byte_end":153159,"line_start":133,"line_end":133,"column_start":40,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":1773}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_select.rs","byte_start":153641,"byte_end":153650,"line_start":13,"line_end":13,"column_start":36,"column_end":45},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_select.rs","byte_start":155489,"byte_end":155498,"line_start":61,"line_end":61,"column_start":37,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1816},{"krate":0,"index":1817}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select_ok.rs","byte_start":156860,"byte_end":156868,"line_start":17,"line_end":17,"column_start":28,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select_ok.rs","byte_start":157946,"byte_end":157954,"line_start":45,"line_end":45,"column_start":41,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":1864},{"krate":0,"index":1865}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select_ok.rs","byte_start":159385,"byte_end":159393,"line_start":81,"line_end":81,"column_start":52,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":1869}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Inherent","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/either.rs","byte_start":160372,"byte_end":160378,"line_start":35,"line_end":35,"column_start":12,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":1909}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Inherent","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/either.rs","byte_start":160717,"byte_end":160723,"line_start":46,"line_end":46,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1914}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Inherent","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/either.rs","byte_start":161108,"byte_end":161114,"line_start":58,"line_end":58,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1919}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Inherent","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/either.rs","byte_start":161495,"byte_end":161501,"line_start":70,"line_end":70,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1922}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/either.rs","byte_start":161742,"byte_end":161748,"line_start":80,"line_end":80,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1926},{"krate":0,"index":1927}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/either.rs","byte_start":162087,"byte_end":162093,"line_start":95,"line_end":95,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1931}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/either.rs","byte_start":162369,"byte_end":162375,"line_start":108,"line_end":108,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1935},{"krate":0,"index":1936},{"krate":0,"index":1937}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/either.rs","byte_start":162910,"byte_end":162916,"line_start":130,"line_end":130,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1941}],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/either.rs","byte_start":163223,"byte_end":163229,"line_start":144,"line_end":144,"column_start":33,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1946},{"krate":0,"index":1947},{"krate":0,"index":1948},{"krate":0,"index":1949},{"krate":0,"index":1950}],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/either.rs","byte_start":164662,"byte_end":164668,"line_start":193,"line_end":193,"column_start":30,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1991},{"krate":0,"index":1992}],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/either.rs","byte_start":165723,"byte_end":165729,"line_start":229,"line_end":229,"column_start":31,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1996},{"krate":0,"index":1997},{"krate":0,"index":1998},{"krate":0,"index":1999}],"docs":"","sig":null,"attributes":[]},{"id":106,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/either.rs","byte_start":167036,"byte_end":167042,"line_start":271,"line_end":271,"column_start":30,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2003}],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/either.rs","byte_start":167472,"byte_end":167478,"line_start":288,"line_end":288,"column_start":33,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":2007},{"krate":0,"index":2008}],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Inherent","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/chain.rs","byte_start":222782,"byte_end":222787,"line_start":20,"line_end":20,"column_start":16,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":2131}],"docs":"","sig":null,"attributes":[]},{"id":109,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/chain.rs","byte_start":223013,"byte_end":223018,"line_start":30,"line_end":30,"column_start":32,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":2135}],"docs":"","sig":null,"attributes":[]},{"id":110,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/chain.rs","byte_start":223227,"byte_end":223232,"line_start":40,"line_end":40,"column_start":27,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2139},{"krate":0,"index":2140},{"krate":0,"index":2141}],"docs":"","sig":null,"attributes":[]},{"id":111,"kind":"Inherent","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/collect.rs","byte_start":224828,"byte_end":224835,"line_start":20,"line_end":20,"column_start":30,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":2182},{"krate":0,"index":2183}],"docs":"","sig":null,"attributes":[]},{"id":112,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/collect.rs","byte_start":225100,"byte_end":225107,"line_start":30,"line_end":30,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2187}],"docs":"","sig":null,"attributes":[]},{"id":113,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/collect.rs","byte_start":225285,"byte_end":225292,"line_start":40,"line_end":40,"column_start":24,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2191},{"krate":0,"index":2192}],"docs":"","sig":null,"attributes":[]},{"id":114,"kind":"Inherent","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/unzip.rs","byte_start":226318,"byte_end":226323,"line_start":21,"line_end":21,"column_start":50,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":2234},{"krate":0,"index":2235}],"docs":"","sig":null,"attributes":[]},{"id":115,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/unzip.rs","byte_start":226717,"byte_end":226722,"line_start":32,"line_end":32,"column_start":46,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":2242}],"docs":"","sig":null,"attributes":[]},{"id":116,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/unzip.rs","byte_start":226972,"byte_end":226977,"line_start":43,"line_end":43,"column_start":41,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":2249},{"krate":0,"index":2250}],"docs":"","sig":null,"attributes":[]},{"id":117,"kind":"Inherent","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/concat.rs","byte_start":228102,"byte_end":228108,"line_start":19,"line_end":19,"column_start":10,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":2287}],"docs":"","sig":null,"attributes":[]},{"id":118,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/concat.rs","byte_start":228328,"byte_end":228334,"line_start":29,"line_end":29,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2290},{"krate":0,"index":2291}],"docs":"","sig":null,"attributes":[]},{"id":119,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/concat.rs","byte_start":229042,"byte_end":229048,"line_start":54,"line_end":54,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2294}],"docs":"","sig":null,"attributes":[]},{"id":120,"kind":"Inherent","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/cycle.rs","byte_start":229711,"byte_end":229716,"line_start":19,"line_end":19,"column_start":10,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":2327}],"docs":"","sig":null,"attributes":[]},{"id":121,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/cycle.rs","byte_start":229872,"byte_end":229877,"line_start":28,"line_end":28,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":2330},{"krate":0,"index":2331},{"krate":0,"index":2332}],"docs":"","sig":null,"attributes":[]},{"id":122,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/cycle.rs","byte_start":230626,"byte_end":230631,"line_start":56,"line_end":56,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2335}],"docs":"","sig":null,"attributes":[]},{"id":123,"kind":"Inherent","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/enumerate.rs","byte_start":231379,"byte_end":231388,"line_start":20,"line_end":20,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2368},{"krate":0,"index":10908},{"krate":0,"index":10909},{"krate":0,"index":10910},{"krate":0,"index":10911}],"docs":"","sig":null,"attributes":[]},{"id":124,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/enumerate.rs","byte_start":231574,"byte_end":231583,"line_start":28,"line_end":28,"column_start":48,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":2371}],"docs":"","sig":null,"attributes":[]},{"id":125,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/enumerate.rs","byte_start":231701,"byte_end":231710,"line_start":34,"line_end":34,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":2374},{"krate":0,"index":2375},{"krate":0,"index":2376}],"docs":"","sig":null,"attributes":[]},{"id":126,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/enumerate.rs","byte_start":232363,"byte_end":232372,"line_start":57,"line_end":57,"column_start":30,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":2380},{"krate":0,"index":10912},{"krate":0,"index":10913},{"krate":0,"index":10914},{"krate":0,"index":10915}],"docs":"","sig":null,"attributes":[]},{"id":127,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/filter.rs","byte_start":233151,"byte_end":233157,"line_start":27,"line_end":27,"column_start":33,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":2424}],"docs":"","sig":null,"attributes":[]},{"id":128,"kind":"Inherent","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/filter.rs","byte_start":233630,"byte_end":233636,"line_start":43,"line_end":43,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":2430},{"krate":0,"index":10977},{"krate":0,"index":10978},{"krate":0,"index":10979},{"krate":0,"index":10980}],"docs":"","sig":null,"attributes":[]},{"id":129,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/filter.rs","byte_start":233959,"byte_end":233965,"line_start":56,"line_end":56,"column_start":34,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":2435}],"docs":"","sig":null,"attributes":[]},{"id":130,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/filter.rs","byte_start":234302,"byte_end":234308,"line_start":68,"line_end":68,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2441},{"krate":0,"index":2442},{"krate":0,"index":2443}],"docs":"","sig":null,"attributes":[]},{"id":131,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/filter.rs","byte_start":235687,"byte_end":235693,"line_start":108,"line_end":108,"column_start":38,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":2449},{"krate":0,"index":10981},{"krate":0,"index":10982},{"krate":0,"index":10983},{"krate":0,"index":10984}],"docs":"","sig":null,"attributes":[]},{"id":132,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/filter_map.rs","byte_start":236480,"byte_end":236489,"line_start":24,"line_end":24,"column_start":33,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":2493}],"docs":"","sig":null,"attributes":[]},{"id":133,"kind":"Inherent","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/filter_map.rs","byte_start":236786,"byte_end":236795,"line_start":37,"line_end":37,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2498},{"krate":0,"index":11042},{"krate":0,"index":11043},{"krate":0,"index":11044},{"krate":0,"index":11045}],"docs":"","sig":null,"attributes":[]},{"id":134,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/filter_map.rs","byte_start":237062,"byte_end":237071,"line_start":50,"line_end":50,"column_start":37,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":2504}],"docs":"","sig":null,"attributes":[]},{"id":135,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/filter_map.rs","byte_start":237338,"byte_end":237347,"line_start":61,"line_end":61,"column_start":32,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":2510},{"krate":0,"index":2511},{"krate":0,"index":2512}],"docs":"","sig":null,"attributes":[]},{"id":136,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/filter_map.rs","byte_start":238765,"byte_end":238774,"line_start":102,"line_end":102,"column_start":38,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":2518},{"krate":0,"index":11046},{"krate":0,"index":11047},{"krate":0,"index":11048},{"krate":0,"index":11049}],"docs":"","sig":null,"attributes":[]},{"id":137,"kind":"Inherent","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/flatten.rs","byte_start":239449,"byte_end":239456,"line_start":21,"line_end":21,"column_start":13,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":2552},{"krate":0,"index":11099},{"krate":0,"index":11100},{"krate":0,"index":11101},{"krate":0,"index":11102}],"docs":"","sig":null,"attributes":[]},{"id":138,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/flatten.rs","byte_start":239625,"byte_end":239632,"line_start":29,"line_end":29,"column_start":26,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2555}],"docs":"","sig":null,"attributes":[]},{"id":139,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/flatten.rs","byte_start":239824,"byte_end":239831,"line_start":39,"line_end":39,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2558},{"krate":0,"index":2559}],"docs":"","sig":null,"attributes":[]},{"id":140,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/flatten.rs","byte_start":240653,"byte_end":240660,"line_start":66,"line_end":66,"column_start":30,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":2563},{"krate":0,"index":11103},{"krate":0,"index":11104},{"krate":0,"index":11105},{"krate":0,"index":11106}],"docs":"","sig":null,"attributes":[]},{"id":141,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/fold.rs","byte_start":241345,"byte_end":241349,"line_start":22,"line_end":22,"column_start":36,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":2599}],"docs":"","sig":null,"attributes":[]},{"id":142,"kind":"Inherent","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/fold.rs","byte_start":241705,"byte_end":241709,"line_start":37,"line_end":37,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":2605}],"docs":"","sig":null,"attributes":[]},{"id":143,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/fold.rs","byte_start":241970,"byte_end":241974,"line_start":48,"line_end":48,"column_start":37,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":2611}],"docs":"","sig":null,"attributes":[]},{"id":144,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/fold.rs","byte_start":242209,"byte_end":242213,"line_start":59,"line_end":59,"column_start":32,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2617},{"krate":0,"index":2618}],"docs":"","sig":null,"attributes":[]},{"id":145,"kind":"Inherent","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/forward.rs","byte_start":243884,"byte_end":243891,"line_start":24,"line_end":24,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2659}],"docs":"","sig":null,"attributes":[]},{"id":146,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/forward.rs","byte_start":244091,"byte_end":244098,"line_start":30,"line_end":30,"column_start":39,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":2665}],"docs":"","sig":null,"attributes":[]},{"id":147,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/forward.rs","byte_start":244300,"byte_end":244307,"line_start":40,"line_end":40,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":2671},{"krate":0,"index":2672}],"docs":"","sig":null,"attributes":[]},{"id":148,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/for_each.rs","byte_start":246112,"byte_end":246119,"line_start":21,"line_end":21,"column_start":33,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":2711}],"docs":"","sig":null,"attributes":[]},{"id":149,"kind":"Inherent","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/for_each.rs","byte_start":246412,"byte_end":246419,"line_start":34,"line_end":34,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":2716}],"docs":"","sig":null,"attributes":[]},{"id":150,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/for_each.rs","byte_start":246650,"byte_end":246657,"line_start":45,"line_end":45,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":2721}],"docs":"","sig":null,"attributes":[]},{"id":151,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/for_each.rs","byte_start":246896,"byte_end":246903,"line_start":56,"line_end":56,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2726},{"krate":0,"index":2727}],"docs":"","sig":null,"attributes":[]},{"id":152,"kind":"Inherent","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/fuse.rs","byte_start":248004,"byte_end":248008,"line_start":20,"line_end":20,"column_start":10,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":2760},{"krate":0,"index":2761},{"krate":0,"index":11459},{"krate":0,"index":11460},{"krate":0,"index":11461},{"krate":0,"index":11462}],"docs":"","sig":null,"attributes":[]},{"id":153,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/fuse.rs","byte_start":248505,"byte_end":248509,"line_start":37,"line_end":37,"column_start":33,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":2764}],"docs":"","sig":null,"attributes":[]},{"id":154,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/fuse.rs","byte_start":248607,"byte_end":248611,"line_start":43,"line_end":43,"column_start":28,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2767},{"krate":0,"index":2768},{"krate":0,"index":2769}],"docs":"","sig":null,"attributes":[]},{"id":155,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/fuse.rs","byte_start":249297,"byte_end":249301,"line_start":71,"line_end":71,"column_start":51,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":2773},{"krate":0,"index":11463},{"krate":0,"index":11464},{"krate":0,"index":11465},{"krate":0,"index":11466}],"docs":"","sig":null,"attributes":[]},{"id":156,"kind":"Inherent","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/into_future.rs","byte_start":249813,"byte_end":249825,"line_start":15,"line_end":15,"column_start":26,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":2806},{"krate":0,"index":2807},{"krate":0,"index":2808},{"krate":0,"index":2809},{"krate":0,"index":2810}],"docs":"","sig":null,"attributes":[]},{"id":157,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/into_future.rs","byte_start":252315,"byte_end":252327,"line_start":73,"line_end":73,"column_start":42,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":2813}],"docs":"","sig":null,"attributes":[]},{"id":158,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/into_future.rs","byte_start":252447,"byte_end":252459,"line_start":79,"line_end":79,"column_start":37,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":2816},{"krate":0,"index":2817}],"docs":"","sig":null,"attributes":[]},{"id":159,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/map.rs","byte_start":253344,"byte_end":253347,"line_start":22,"line_end":22,"column_start":28,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2857}],"docs":"","sig":null,"attributes":[]},{"id":160,"kind":"Inherent","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/map.rs","byte_start":253536,"byte_end":253539,"line_start":31,"line_end":31,"column_start":13,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":2861},{"krate":0,"index":11596},{"krate":0,"index":11597},{"krate":0,"index":11598},{"krate":0,"index":11599}],"docs":"","sig":null,"attributes":[]},{"id":161,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/map.rs","byte_start":253708,"byte_end":253711,"line_start":39,"line_end":39,"column_start":29,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2865}],"docs":"","sig":null,"attributes":[]},{"id":162,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/map.rs","byte_start":253879,"byte_end":253882,"line_start":49,"line_end":49,"column_start":24,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2869},{"krate":0,"index":2870},{"krate":0,"index":2872}],"docs":"","sig":null,"attributes":[]},{"id":163,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/map.rs","byte_start":254424,"byte_end":254427,"line_start":69,"line_end":69,"column_start":34,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":2877},{"krate":0,"index":11600},{"krate":0,"index":11601},{"krate":0,"index":11602},{"krate":0,"index":11603}],"docs":"","sig":null,"attributes":[]},{"id":164,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/next.rs","byte_start":254994,"byte_end":254998,"line_start":14,"line_end":14,"column_start":36,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":165,"kind":"Inherent","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/next.rs","byte_start":255049,"byte_end":255053,"line_start":16,"line_end":16,"column_start":39,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2914}],"docs":"","sig":null,"attributes":[]},{"id":166,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/next.rs","byte_start":255204,"byte_end":255208,"line_start":22,"line_end":22,"column_start":56,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":2917}],"docs":"","sig":null,"attributes":[]},{"id":167,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/next.rs","byte_start":255347,"byte_end":255351,"line_start":28,"line_end":28,"column_start":46,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":2920},{"krate":0,"index":2921}],"docs":"","sig":null,"attributes":[]},{"id":168,"kind":"Inherent","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/select_next_some.rs","byte_start":256002,"byte_end":256016,"line_start":16,"line_end":16,"column_start":22,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2955}],"docs":"","sig":null,"attributes":[]},{"id":169,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/select_next_some.rs","byte_start":256167,"byte_end":256181,"line_start":22,"line_end":22,"column_start":56,"column_end":70},"value":"","parent":null,"children":[{"krate":0,"index":2958}],"docs":"","sig":null,"attributes":[]},{"id":170,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/select_next_some.rs","byte_start":256325,"byte_end":256339,"line_start":28,"line_end":28,"column_start":51,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":2961},{"krate":0,"index":2962}],"docs":"","sig":null,"attributes":[]},{"id":171,"kind":"Inherent","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":257650,"byte_end":257658,"line_start":29,"line_end":29,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":3018},{"krate":0,"index":11753},{"krate":0,"index":11754},{"krate":0,"index":11755},{"krate":0,"index":11756},{"krate":0,"index":3019},{"krate":0,"index":3020},{"krate":0,"index":3021},{"krate":0,"index":3023}],"docs":"","sig":null,"attributes":[]},{"id":172,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":261624,"byte_end":261632,"line_start":141,"line_end":141,"column_start":34,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":3028}],"docs":"","sig":null,"attributes":[]},{"id":173,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":261774,"byte_end":261782,"line_start":147,"line_end":147,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":3031},{"krate":0,"index":3032},{"krate":0,"index":3033}],"docs":"","sig":null,"attributes":[]},{"id":174,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":262567,"byte_end":262575,"line_start":172,"line_end":172,"column_start":30,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":3037},{"krate":0,"index":11757},{"krate":0,"index":11758},{"krate":0,"index":11759},{"krate":0,"index":11760}],"docs":"","sig":null,"attributes":[]},{"id":175,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":262941,"byte_end":262945,"line_start":189,"line_end":189,"column_start":25,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":3040}],"docs":"","sig":null,"attributes":[]},{"id":176,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":263190,"byte_end":263194,"line_start":199,"line_end":199,"column_start":34,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":3043}],"docs":"","sig":null,"attributes":[]},{"id":177,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":263305,"byte_end":263309,"line_start":205,"line_end":205,"column_start":25,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":3047},{"krate":0,"index":3048}],"docs":"","sig":null,"attributes":[]},{"id":178,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":264014,"byte_end":264020,"line_start":231,"line_end":231,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":3052}],"docs":"","sig":null,"attributes":[]},{"id":179,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":264372,"byte_end":264378,"line_start":242,"line_end":242,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3058}],"docs":"","sig":null,"attributes":[]},{"id":180,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":264647,"byte_end":264653,"line_start":253,"line_end":253,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3063},{"krate":0,"index":3064}],"docs":"","sig":null,"attributes":[]},{"id":181,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":265914,"byte_end":265922,"line_start":291,"line_end":291,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":3068}],"docs":"","sig":null,"attributes":[]},{"id":182,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":266242,"byte_end":266250,"line_start":304,"line_end":304,"column_start":29,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":3073}],"docs":"","sig":null,"attributes":[]},{"id":183,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":266434,"byte_end":266442,"line_start":315,"line_end":315,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":3077},{"krate":0,"index":3078}],"docs":"","sig":null,"attributes":[]},{"id":184,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":266813,"byte_end":266823,"line_start":333,"line_end":333,"column_start":34,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":3088},{"krate":0,"index":3089}],"docs":"","sig":null,"attributes":[]},{"id":185,"kind":"Inherent","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/skip.rs","byte_start":267488,"byte_end":267492,"line_start":20,"line_end":20,"column_start":18,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":3132},{"krate":0,"index":11940},{"krate":0,"index":11941},{"krate":0,"index":11942},{"krate":0,"index":11943}],"docs":"","sig":null,"attributes":[]},{"id":186,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/skip.rs","byte_start":267683,"byte_end":267687,"line_start":28,"line_end":28,"column_start":39,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":3135}],"docs":"","sig":null,"attributes":[]},{"id":187,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/skip.rs","byte_start":267805,"byte_end":267809,"line_start":34,"line_end":34,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3138},{"krate":0,"index":3139},{"krate":0,"index":3140}],"docs":"","sig":null,"attributes":[]},{"id":188,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/skip.rs","byte_start":268620,"byte_end":268624,"line_start":63,"line_end":63,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":3145},{"krate":0,"index":11944},{"krate":0,"index":11945},{"krate":0,"index":11946},{"krate":0,"index":11947}],"docs":"","sig":null,"attributes":[]},{"id":189,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/skip_while.rs","byte_start":269406,"byte_end":269415,"line_start":25,"line_end":25,"column_start":33,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":3186}],"docs":"","sig":null,"attributes":[]},{"id":190,"kind":"Inherent","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/skip_while.rs","byte_start":269867,"byte_end":269876,"line_start":41,"line_end":41,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":3191},{"krate":0,"index":12013},{"krate":0,"index":12014},{"krate":0,"index":12015},{"krate":0,"index":12016}],"docs":"","sig":null,"attributes":[]},{"id":191,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/skip_while.rs","byte_start":270202,"byte_end":270211,"line_start":54,"line_end":54,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":3196}],"docs":"","sig":null,"attributes":[]},{"id":192,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/skip_while.rs","byte_start":270459,"byte_end":270468,"line_start":65,"line_end":65,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":3201},{"krate":0,"index":3202},{"krate":0,"index":3203}],"docs":"","sig":null,"attributes":[]},{"id":193,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/skip_while.rs","byte_start":272082,"byte_end":272091,"line_start":115,"line_end":115,"column_start":38,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":3209},{"krate":0,"index":12017},{"krate":0,"index":12018},{"krate":0,"index":12019},{"krate":0,"index":12020}],"docs":"","sig":null,"attributes":[]},{"id":194,"kind":"Inherent","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/take.rs","byte_start":272768,"byte_end":272772,"line_start":21,"line_end":21,"column_start":18,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":3245},{"krate":0,"index":12061},{"krate":0,"index":12062},{"krate":0,"index":12063},{"krate":0,"index":12064}],"docs":"","sig":null,"attributes":[]},{"id":195,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/take.rs","byte_start":272945,"byte_end":272949,"line_start":29,"line_end":29,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":3248},{"krate":0,"index":3249},{"krate":0,"index":3250}],"docs":"","sig":null,"attributes":[]},{"id":196,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/take.rs","byte_start":273921,"byte_end":273925,"line_start":68,"line_end":68,"column_start":26,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3253}],"docs":"","sig":null,"attributes":[]},{"id":197,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/take.rs","byte_start":274173,"byte_end":274177,"line_start":79,"line_end":79,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":3257},{"krate":0,"index":12065},{"krate":0,"index":12066},{"krate":0,"index":12067},{"krate":0,"index":12068}],"docs":"","sig":null,"attributes":[]},{"id":198,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/take_while.rs","byte_start":274948,"byte_end":274957,"line_start":25,"line_end":25,"column_start":33,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":3298}],"docs":"","sig":null,"attributes":[]},{"id":199,"kind":"Inherent","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/take_while.rs","byte_start":275405,"byte_end":275414,"line_start":41,"line_end":41,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":3303},{"krate":0,"index":12134},{"krate":0,"index":12135},{"krate":0,"index":12136},{"krate":0,"index":12137}],"docs":"","sig":null,"attributes":[]},{"id":200,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/take_while.rs","byte_start":275733,"byte_end":275742,"line_start":54,"line_end":54,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":3308},{"krate":0,"index":3309},{"krate":0,"index":3310}],"docs":"","sig":null,"attributes":[]},{"id":201,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/take_while.rs","byte_start":277261,"byte_end":277270,"line_start":104,"line_end":104,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":3315}],"docs":"","sig":null,"attributes":[]},{"id":202,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/take_while.rs","byte_start":277626,"byte_end":277635,"line_start":117,"line_end":117,"column_start":38,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":3321},{"krate":0,"index":12138},{"krate":0,"index":12139},{"krate":0,"index":12140},{"krate":0,"index":12141}],"docs":"","sig":null,"attributes":[]},{"id":203,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/take_until.rs","byte_start":278654,"byte_end":278663,"line_start":30,"line_end":30,"column_start":30,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":3361}],"docs":"","sig":null,"attributes":[]},{"id":204,"kind":"Inherent","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/take_until.rs","byte_start":278951,"byte_end":278960,"line_start":41,"line_end":41,"column_start":15,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":3365},{"krate":0,"index":12195},{"krate":0,"index":12196},{"krate":0,"index":12197},{"krate":0,"index":12198},{"krate":0,"index":3366},{"krate":0,"index":3367},{"krate":0,"index":3368}],"docs":"","sig":null,"attributes":[]},{"id":205,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/take_until.rs","byte_start":281077,"byte_end":281086,"line_start":111,"line_end":111,"column_start":26,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3372},{"krate":0,"index":3373},{"krate":0,"index":3374}],"docs":"","sig":null,"attributes":[]},{"id":206,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/take_until.rs","byte_start":282118,"byte_end":282127,"line_start":150,"line_end":150,"column_start":31,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":3378}],"docs":"","sig":null,"attributes":[]},{"id":207,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/take_until.rs","byte_start":282364,"byte_end":282373,"line_start":162,"line_end":162,"column_start":35,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":3383},{"krate":0,"index":12199},{"krate":0,"index":12200},{"krate":0,"index":12201},{"krate":0,"index":12202}],"docs":"","sig":null,"attributes":[]},{"id":208,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/then.rs","byte_start":283069,"byte_end":283073,"line_start":23,"line_end":23,"column_start":33,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":3424}],"docs":"","sig":null,"attributes":[]},{"id":209,"kind":"Inherent","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/then.rs","byte_start":283324,"byte_end":283328,"line_start":33,"line_end":33,"column_start":18,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":3429},{"krate":0,"index":12260},{"krate":0,"index":12261},{"krate":0,"index":12262},{"krate":0,"index":12263}],"docs":"","sig":null,"attributes":[]},{"id":210,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/then.rs","byte_start":283574,"byte_end":283578,"line_start":45,"line_end":45,"column_start":34,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":3434}],"docs":"","sig":null,"attributes":[]},{"id":211,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/then.rs","byte_start":283804,"byte_end":283808,"line_start":56,"line_end":56,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3439},{"krate":0,"index":3440},{"krate":0,"index":3441}],"docs":"","sig":null,"attributes":[]},{"id":212,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/then.rs","byte_start":284987,"byte_end":284991,"line_start":94,"line_end":94,"column_start":38,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":3447},{"krate":0,"index":12264},{"krate":0,"index":12265},{"krate":0,"index":12266},{"krate":0,"index":12267}],"docs":"","sig":null,"attributes":[]},{"id":213,"kind":"Inherent","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/zip.rs","byte_start":285690,"byte_end":285693,"line_start":22,"line_end":22,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3485},{"krate":0,"index":3486},{"krate":0,"index":3487},{"krate":0,"index":3488},{"krate":0,"index":3489}],"docs":"","sig":null,"attributes":[]},{"id":214,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/zip.rs","byte_start":287279,"byte_end":287282,"line_start":61,"line_end":61,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3493}],"docs":"","sig":null,"attributes":[]},{"id":215,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/zip.rs","byte_start":287477,"byte_end":287480,"line_start":71,"line_end":71,"column_start":27,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3497},{"krate":0,"index":3498},{"krate":0,"index":3499}],"docs":"","sig":null,"attributes":[]},{"id":216,"kind":"Inherent","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/chunks.rs","byte_start":290175,"byte_end":290181,"line_start":24,"line_end":24,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":3541},{"krate":0,"index":3542},{"krate":0,"index":12369},{"krate":0,"index":12370},{"krate":0,"index":12371},{"krate":0,"index":12372}],"docs":"","sig":null,"attributes":[]},{"id":217,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/chunks.rs","byte_start":290689,"byte_end":290695,"line_start":46,"line_end":46,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3545},{"krate":0,"index":3546},{"krate":0,"index":3547}],"docs":"","sig":null,"attributes":[]},{"id":218,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/chunks.rs","byte_start":292311,"byte_end":292317,"line_start":91,"line_end":91,"column_start":39,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":3550}],"docs":"","sig":null,"attributes":[]},{"id":219,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/chunks.rs","byte_start":292540,"byte_end":292546,"line_start":99,"line_end":99,"column_start":30,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":3554},{"krate":0,"index":12373},{"krate":0,"index":12374},{"krate":0,"index":12375},{"krate":0,"index":12376}],"docs":"","sig":null,"attributes":[]},{"id":220,"kind":"Inherent","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/ready_chunks.rs","byte_start":293289,"byte_end":293300,"line_start":23,"line_end":23,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":3593},{"krate":0,"index":12421},{"krate":0,"index":12422},{"krate":0,"index":12423},{"krate":0,"index":12424}],"docs":"","sig":null,"attributes":[]},{"id":221,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/ready_chunks.rs","byte_start":293652,"byte_end":293663,"line_start":40,"line_end":40,"column_start":29,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":3596},{"krate":0,"index":3597},{"krate":0,"index":3598}],"docs":"","sig":null,"attributes":[]},{"id":222,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/ready_chunks.rs","byte_start":295832,"byte_end":295843,"line_start":99,"line_end":99,"column_start":39,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":3601}],"docs":"","sig":null,"attributes":[]},{"id":223,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/ready_chunks.rs","byte_start":296066,"byte_end":296077,"line_start":107,"line_end":107,"column_start":30,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":3605},{"krate":0,"index":12425},{"krate":0,"index":12426},{"krate":0,"index":12427},{"krate":0,"index":12428}],"docs":"","sig":null,"attributes":[]},{"id":224,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/scan.rs","byte_start":296841,"byte_end":296845,"line_start":28,"line_end":28,"column_start":36,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":3652}],"docs":"","sig":null,"attributes":[]},{"id":225,"kind":"Inherent","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/scan.rs","byte_start":297331,"byte_end":297335,"line_start":45,"line_end":45,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3659}],"docs":"","sig":null,"attributes":[]},{"id":226,"kind":"Inherent","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/scan.rs","byte_start":297499,"byte_end":297503,"line_start":52,"line_end":52,"column_start":24,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":3666},{"krate":0,"index":12494},{"krate":0,"index":12495},{"krate":0,"index":12496},{"krate":0,"index":12497}],"docs":"","sig":null,"attributes":[]},{"id":227,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/scan.rs","byte_start":297865,"byte_end":297869,"line_start":65,"line_end":65,"column_start":35,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":3673},{"krate":0,"index":3674},{"krate":0,"index":3675}],"docs":"","sig":null,"attributes":[]},{"id":228,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/scan.rs","byte_start":299096,"byte_end":299100,"line_start":108,"line_end":108,"column_start":40,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":3682}],"docs":"","sig":null,"attributes":[]},{"id":229,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/scan.rs","byte_start":299470,"byte_end":299474,"line_start":121,"line_end":121,"column_start":38,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":3688},{"krate":0,"index":12498},{"krate":0,"index":12499},{"krate":0,"index":12500},{"krate":0,"index":12501}],"docs":"","sig":null,"attributes":[]},{"id":230,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/buffer_unordered.rs","byte_start":12751635,"byte_end":12751650,"line_start":26,"line_end":26,"column_start":25,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":12544}],"docs":"","sig":null,"attributes":[]},{"id":231,"kind":"Inherent","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/buffer_unordered.rs","byte_start":12751982,"byte_end":12751997,"line_start":39,"line_end":39,"column_start":10,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":12547},{"krate":0,"index":12772},{"krate":0,"index":12773},{"krate":0,"index":12774},{"krate":0,"index":12775}],"docs":"","sig":null,"attributes":[]},{"id":232,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/buffer_unordered.rs","byte_start":12752384,"byte_end":12752399,"line_start":59,"line_end":59,"column_start":21,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":12550},{"krate":0,"index":12551},{"krate":0,"index":12552}],"docs":"","sig":null,"attributes":[]},{"id":233,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/buffer_unordered.rs","byte_start":12753853,"byte_end":12753868,"line_start":104,"line_end":104,"column_start":26,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":12555}],"docs":"","sig":null,"attributes":[]},{"id":234,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/buffer_unordered.rs","byte_start":12754152,"byte_end":12754167,"line_start":116,"line_end":116,"column_start":30,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":12559},{"krate":0,"index":12776},{"krate":0,"index":12777},{"krate":0,"index":12778},{"krate":0,"index":12779}],"docs":"","sig":null,"attributes":[]},{"id":235,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/buffered.rs","byte_start":12754978,"byte_end":12754986,"line_start":27,"line_end":27,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":12604}],"docs":"","sig":null,"attributes":[]},{"id":236,"kind":"Inherent","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/buffered.rs","byte_start":12755333,"byte_end":12755341,"line_start":41,"line_end":41,"column_start":10,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":12607},{"krate":0,"index":12780},{"krate":0,"index":12781},{"krate":0,"index":12782},{"krate":0,"index":12783}],"docs":"","sig":null,"attributes":[]},{"id":237,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/buffered.rs","byte_start":12755621,"byte_end":12755629,"line_start":53,"line_end":53,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":12610},{"krate":0,"index":12611},{"krate":0,"index":12612}],"docs":"","sig":null,"attributes":[]},{"id":238,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/buffered.rs","byte_start":12757147,"byte_end":12757155,"line_start":100,"line_end":100,"column_start":30,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":12616},{"krate":0,"index":12784},{"krate":0,"index":12785},{"krate":0,"index":12786},{"krate":0,"index":12787}],"docs":"","sig":null,"attributes":[]},{"id":239,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/for_each_concurrent.rs","byte_start":12757966,"byte_end":12757983,"line_start":23,"line_end":23,"column_start":33,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":12661}],"docs":"","sig":null,"attributes":[]},{"id":240,"kind":"Inherent","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/for_each_concurrent.rs","byte_start":12758329,"byte_end":12758346,"line_start":37,"line_end":37,"column_start":18,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":12666}],"docs":"","sig":null,"attributes":[]},{"id":241,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/for_each_concurrent.rs","byte_start":12758779,"byte_end":12758796,"line_start":54,"line_end":54,"column_start":34,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":12671}],"docs":"","sig":null,"attributes":[]},{"id":242,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/for_each_concurrent.rs","byte_start":12759026,"byte_end":12759043,"line_start":65,"line_end":65,"column_start":29,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":12676},{"krate":0,"index":12677}],"docs":"","sig":null,"attributes":[]},{"id":243,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/split.rs","byte_start":12761267,"byte_end":12761278,"line_start":16,"line_end":16,"column_start":19,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":244,"kind":"Inherent","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/split.rs","byte_start":12761301,"byte_end":12761312,"line_start":18,"line_end":18,"column_start":16,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":12712}],"docs":"","sig":null,"attributes":[]},{"id":245,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/split.rs","byte_start":12761745,"byte_end":12761756,"line_start":30,"line_end":30,"column_start":28,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":12716},{"krate":0,"index":12717}],"docs":"","sig":null,"attributes":[]},{"id":246,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/split.rs","byte_start":12762334,"byte_end":12762343,"line_start":52,"line_end":52,"column_start":25,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":247,"kind":"Inherent","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/split.rs","byte_start":12762391,"byte_end":12762400,"line_start":54,"line_end":54,"column_start":35,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":12727}],"docs":"","sig":null,"attributes":[]},{"id":248,"kind":"Inherent","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/split.rs","byte_start":12762864,"byte_end":12762873,"line_start":63,"line_end":63,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":12732},{"krate":0,"index":12733}],"docs":"","sig":null,"attributes":[]},{"id":249,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/split.rs","byte_start":12763595,"byte_end":12763604,"line_start":87,"line_end":87,"column_start":42,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":12737},{"krate":0,"index":12738},{"krate":0,"index":12739},{"krate":0,"index":12740},{"krate":0,"index":12741}],"docs":"","sig":null,"attributes":[]},{"id":250,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/split.rs","byte_start":12765211,"byte_end":12765223,"line_start":131,"line_end":131,"column_start":30,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":12754}],"docs":"","sig":null,"attributes":[]},{"id":251,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/split.rs","byte_start":12765399,"byte_end":12765411,"line_start":137,"line_end":137,"column_start":32,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":12758}],"docs":"","sig":null,"attributes":[]},{"id":252,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/split.rs","byte_start":12765660,"byte_end":12765672,"line_start":144,"line_end":144,"column_start":53,"column_end":65},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":253,"kind":"Inherent","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/catch_unwind.rs","byte_start":300121,"byte_end":300132,"line_start":19,"line_end":19,"column_start":31,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":3728},{"krate":0,"index":12844},{"krate":0,"index":12845},{"krate":0,"index":12846},{"krate":0,"index":12847}],"docs":"","sig":null,"attributes":[]},{"id":254,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/catch_unwind.rs","byte_start":300324,"byte_end":300335,"line_start":27,"line_end":27,"column_start":42,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":3731},{"krate":0,"index":3732},{"krate":0,"index":3735}],"docs":"","sig":null,"attributes":[]},{"id":255,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/catch_unwind.rs","byte_start":301187,"byte_end":301198,"line_start":57,"line_end":57,"column_start":52,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":3738}],"docs":"","sig":null,"attributes":[]},{"id":256,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":177983,"byte_end":177984,"line_start":208,"line_end":208,"column_start":31,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":257,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/and_then.rs","byte_start":338068,"byte_end":338075,"line_start":23,"line_end":23,"column_start":33,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":4060}],"docs":"","sig":null,"attributes":[]},{"id":258,"kind":"Inherent","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/and_then.rs","byte_start":338368,"byte_end":338375,"line_start":36,"line_end":36,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":4065},{"krate":0,"index":12905},{"krate":0,"index":12906},{"krate":0,"index":12907},{"krate":0,"index":12908}],"docs":"","sig":null,"attributes":[]},{"id":259,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/and_then.rs","byte_start":338656,"byte_end":338663,"line_start":49,"line_end":49,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":4070},{"krate":0,"index":4071},{"krate":0,"index":4072}],"docs":"","sig":null,"attributes":[]},{"id":260,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/and_then.rs","byte_start":339806,"byte_end":339813,"line_start":85,"line_end":85,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":4077}],"docs":"","sig":null,"attributes":[]},{"id":261,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/and_then.rs","byte_start":340159,"byte_end":340166,"line_start":98,"line_end":98,"column_start":38,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":4083},{"krate":0,"index":12909},{"krate":0,"index":12910},{"krate":0,"index":12911},{"krate":0,"index":12912}],"docs":"","sig":null,"attributes":[]},{"id":262,"kind":"Inherent","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/into_stream.rs","byte_start":340731,"byte_end":340741,"line_start":18,"line_end":18,"column_start":10,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":4116},{"krate":0,"index":13183},{"krate":0,"index":13184},{"krate":0,"index":13185},{"krate":0,"index":13186}],"docs":"","sig":null,"attributes":[]},{"id":263,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/into_stream.rs","byte_start":340934,"byte_end":340944,"line_start":27,"line_end":27,"column_start":51,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":4119}],"docs":"","sig":null,"attributes":[]},{"id":264,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/into_stream.rs","byte_start":341065,"byte_end":341075,"line_start":33,"line_end":33,"column_start":32,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":4122},{"krate":0,"index":4123},{"krate":0,"index":4124}],"docs":"","sig":null,"attributes":[]},{"id":265,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/into_stream.rs","byte_start":341499,"byte_end":341509,"line_start":48,"line_end":48,"column_start":42,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":4128},{"krate":0,"index":13187},{"krate":0,"index":13188},{"krate":0,"index":13189},{"krate":0,"index":13190}],"docs":"","sig":null,"attributes":[]},{"id":266,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/or_else.rs","byte_start":342174,"byte_end":342180,"line_start":23,"line_end":23,"column_start":33,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":4172}],"docs":"","sig":null,"attributes":[]},{"id":267,"kind":"Inherent","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/or_else.rs","byte_start":342472,"byte_end":342478,"line_start":36,"line_end":36,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":4177},{"krate":0,"index":13404},{"krate":0,"index":13405},{"krate":0,"index":13406},{"krate":0,"index":13407}],"docs":"","sig":null,"attributes":[]},{"id":268,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/or_else.rs","byte_start":342756,"byte_end":342762,"line_start":49,"line_end":49,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":4182},{"krate":0,"index":4183},{"krate":0,"index":4184}],"docs":"","sig":null,"attributes":[]},{"id":269,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/or_else.rs","byte_start":344039,"byte_end":344045,"line_start":89,"line_end":89,"column_start":34,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":4189}],"docs":"","sig":null,"attributes":[]},{"id":270,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/or_else.rs","byte_start":344388,"byte_end":344394,"line_start":102,"line_end":102,"column_start":38,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":4195},{"krate":0,"index":13408},{"krate":0,"index":13409},{"krate":0,"index":13410},{"krate":0,"index":13411}],"docs":"","sig":null,"attributes":[]},{"id":271,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_next.rs","byte_start":344949,"byte_end":344956,"line_start":14,"line_end":14,"column_start":36,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":272,"kind":"Inherent","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_next.rs","byte_start":345010,"byte_end":345017,"line_start":16,"line_end":16,"column_start":42,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":4232}],"docs":"","sig":null,"attributes":[]},{"id":273,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_next.rs","byte_start":345180,"byte_end":345187,"line_start":22,"line_end":22,"column_start":68,"column_end":75},"value":"","parent":null,"children":[{"krate":0,"index":4235}],"docs":"","sig":null,"attributes":[]},{"id":274,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_next.rs","byte_start":345329,"byte_end":345336,"line_start":28,"line_end":28,"column_start":49,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":4238},{"krate":0,"index":4239}],"docs":"","sig":null,"attributes":[]},{"id":275,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_for_each.rs","byte_start":346112,"byte_end":346122,"line_start":21,"line_end":21,"column_start":33,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":4277}],"docs":"","sig":null,"attributes":[]},{"id":276,"kind":"Inherent","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_for_each.rs","byte_start":346418,"byte_end":346428,"line_start":34,"line_end":34,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":4282}],"docs":"","sig":null,"attributes":[]},{"id":277,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_for_each.rs","byte_start":346673,"byte_end":346683,"line_start":45,"line_end":45,"column_start":29,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":4287},{"krate":0,"index":4288}],"docs":"","sig":null,"attributes":[]},{"id":278,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_filter.rs","byte_start":348082,"byte_end":348091,"line_start":27,"line_end":27,"column_start":33,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":4332}],"docs":"","sig":null,"attributes":[]},{"id":279,"kind":"Inherent","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_filter.rs","byte_start":348487,"byte_end":348496,"line_start":42,"line_end":42,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":4337},{"krate":0,"index":13538},{"krate":0,"index":13539},{"krate":0,"index":13540},{"krate":0,"index":13541}],"docs":"","sig":null,"attributes":[]},{"id":280,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_filter.rs","byte_start":348739,"byte_end":348748,"line_start":53,"line_end":53,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":4342}],"docs":"","sig":null,"attributes":[]},{"id":281,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_filter.rs","byte_start":349005,"byte_end":349014,"line_start":64,"line_end":64,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":4347},{"krate":0,"index":4348},{"krate":0,"index":4349}],"docs":"","sig":null,"attributes":[]},{"id":282,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_filter.rs","byte_start":350403,"byte_end":350412,"line_start":105,"line_end":105,"column_start":41,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":4356},{"krate":0,"index":13542},{"krate":0,"index":13543},{"krate":0,"index":13544},{"krate":0,"index":13545}],"docs":"","sig":null,"attributes":[]},{"id":283,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_filter_map.rs","byte_start":351155,"byte_end":351167,"line_start":24,"line_end":24,"column_start":33,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":4400}],"docs":"","sig":null,"attributes":[]},{"id":284,"kind":"Inherent","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_filter_map.rs","byte_start":351467,"byte_end":351479,"line_start":37,"line_end":37,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":4405},{"krate":0,"index":13603},{"krate":0,"index":13604},{"krate":0,"index":13605},{"krate":0,"index":13606}],"docs":"","sig":null,"attributes":[]},{"id":285,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_filter_map.rs","byte_start":351676,"byte_end":351688,"line_start":45,"line_end":45,"column_start":37,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":4411}],"docs":"","sig":null,"attributes":[]},{"id":286,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_filter_map.rs","byte_start":351966,"byte_end":351978,"line_start":56,"line_end":56,"column_start":32,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":4417},{"krate":0,"index":4418},{"krate":0,"index":4419}],"docs":"","sig":null,"attributes":[]},{"id":287,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_filter_map.rs","byte_start":353478,"byte_end":353490,"line_start":99,"line_end":99,"column_start":38,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":4425},{"krate":0,"index":13607},{"krate":0,"index":13608},{"krate":0,"index":13609},{"krate":0,"index":13610}],"docs":"","sig":null,"attributes":[]},{"id":288,"kind":"Inherent","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_flatten.rs","byte_start":354162,"byte_end":354172,"line_start":24,"line_end":24,"column_start":10,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":4461},{"krate":0,"index":13651},{"krate":0,"index":13652},{"krate":0,"index":13653},{"krate":0,"index":13654}],"docs":"","sig":null,"attributes":[]},{"id":289,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_flatten.rs","byte_start":354437,"byte_end":354447,"line_start":37,"line_end":37,"column_start":26,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":4464}],"docs":"","sig":null,"attributes":[]},{"id":290,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_flatten.rs","byte_start":354693,"byte_end":354703,"line_start":48,"line_end":48,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":4467},{"krate":0,"index":4468}],"docs":"","sig":null,"attributes":[]},{"id":291,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_flatten.rs","byte_start":355622,"byte_end":355632,"line_start":77,"line_end":77,"column_start":30,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":4472},{"krate":0,"index":13655},{"krate":0,"index":13656},{"krate":0,"index":13657},{"krate":0,"index":13658}],"docs":"","sig":null,"attributes":[]},{"id":292,"kind":"Inherent","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_collect.rs","byte_start":356312,"byte_end":356322,"line_start":20,"line_end":20,"column_start":33,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":4513}],"docs":"","sig":null,"attributes":[]},{"id":293,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_collect.rs","byte_start":356462,"byte_end":356472,"line_start":26,"line_end":26,"column_start":29,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":4517}],"docs":"","sig":null,"attributes":[]},{"id":294,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_collect.rs","byte_start":356660,"byte_end":356670,"line_start":36,"line_end":36,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":4521},{"krate":0,"index":4522}],"docs":"","sig":null,"attributes":[]},{"id":295,"kind":"Inherent","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_concat.rs","byte_start":357668,"byte_end":357677,"line_start":19,"line_end":19,"column_start":10,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":4551}],"docs":"","sig":null,"attributes":[]},{"id":296,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_concat.rs","byte_start":357896,"byte_end":357905,"line_start":29,"line_end":29,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":4554},{"krate":0,"index":4555}],"docs":"","sig":null,"attributes":[]},{"id":297,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_fold.rs","byte_start":359168,"byte_end":359175,"line_start":22,"line_end":22,"column_start":36,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":4597}],"docs":"","sig":null,"attributes":[]},{"id":298,"kind":"Inherent","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_fold.rs","byte_start":359534,"byte_end":359541,"line_start":37,"line_end":37,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":4603}],"docs":"","sig":null,"attributes":[]},{"id":299,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_fold.rs","byte_start":359821,"byte_end":359828,"line_start":48,"line_end":48,"column_start":37,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":4609}],"docs":"","sig":null,"attributes":[]},{"id":300,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_fold.rs","byte_start":360082,"byte_end":360089,"line_start":59,"line_end":59,"column_start":32,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":4615},{"krate":0,"index":4616}],"docs":"","sig":null,"attributes":[]},{"id":301,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_unfold.rs","byte_start":363952,"byte_end":363961,"line_start":78,"line_end":78,"column_start":32,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":4658}],"docs":"","sig":null,"attributes":[]},{"id":302,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_unfold.rs","byte_start":364223,"byte_end":364232,"line_start":88,"line_end":88,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":4664},{"krate":0,"index":4665}],"docs":"","sig":null,"attributes":[]},{"id":303,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_skip_while.rs","byte_start":365978,"byte_end":365990,"line_start":26,"line_end":26,"column_start":33,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":4713}],"docs":"","sig":null,"attributes":[]},{"id":304,"kind":"Inherent","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_skip_while.rs","byte_start":366446,"byte_end":366458,"line_start":42,"line_end":42,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":4718},{"krate":0,"index":13939},{"krate":0,"index":13940},{"krate":0,"index":13941},{"krate":0,"index":13942}],"docs":"","sig":null,"attributes":[]},{"id":305,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_skip_while.rs","byte_start":366798,"byte_end":366810,"line_start":55,"line_end":55,"column_start":29,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":4723},{"krate":0,"index":4724},{"krate":0,"index":4725}],"docs":"","sig":null,"attributes":[]},{"id":306,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_skip_while.rs","byte_start":368309,"byte_end":368321,"line_start":100,"line_end":100,"column_start":34,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":4730}],"docs":"","sig":null,"attributes":[]},{"id":307,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_skip_while.rs","byte_start":368688,"byte_end":368700,"line_start":113,"line_end":113,"column_start":41,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":4737},{"krate":0,"index":13943},{"krate":0,"index":13944},{"krate":0,"index":13945},{"krate":0,"index":13946}],"docs":"","sig":null,"attributes":[]},{"id":308,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_take_while.rs","byte_start":369549,"byte_end":369561,"line_start":29,"line_end":29,"column_start":33,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":4781}],"docs":"","sig":null,"attributes":[]},{"id":309,"kind":"Inherent","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_take_while.rs","byte_start":370013,"byte_end":370025,"line_start":45,"line_end":45,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":4786},{"krate":0,"index":14012},{"krate":0,"index":14013},{"krate":0,"index":14014},{"krate":0,"index":14015}],"docs":"","sig":null,"attributes":[]},{"id":310,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_take_while.rs","byte_start":370363,"byte_end":370375,"line_start":58,"line_end":58,"column_start":29,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":4791},{"krate":0,"index":4792},{"krate":0,"index":4793}],"docs":"","sig":null,"attributes":[]},{"id":311,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_take_while.rs","byte_start":371982,"byte_end":371994,"line_start":109,"line_end":109,"column_start":34,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":4798}],"docs":"","sig":null,"attributes":[]},{"id":312,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_take_while.rs","byte_start":372381,"byte_end":372393,"line_start":122,"line_end":122,"column_start":41,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":4805},{"krate":0,"index":14016},{"krate":0,"index":14017},{"krate":0,"index":14018},{"krate":0,"index":14019}],"docs":"","sig":null,"attributes":[]},{"id":313,"kind":"Inherent","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_buffer_unordered.rs","byte_start":12766455,"byte_end":12766473,"line_start":26,"line_end":26,"column_start":10,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":14069},{"krate":0,"index":14209},{"krate":0,"index":14210},{"krate":0,"index":14211},{"krate":0,"index":14212}],"docs":"","sig":null,"attributes":[]},{"id":314,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_buffer_unordered.rs","byte_start":12766812,"byte_end":12766830,"line_start":42,"line_end":42,"column_start":21,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":14072},{"krate":0,"index":14073}],"docs":"","sig":null,"attributes":[]},{"id":315,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_buffer_unordered.rs","byte_start":12768107,"byte_end":12768125,"line_start":78,"line_end":78,"column_start":33,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":14078},{"krate":0,"index":14213},{"krate":0,"index":14214},{"krate":0,"index":14215},{"krate":0,"index":14216}],"docs":"","sig":null,"attributes":[]},{"id":316,"kind":"Inherent","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_buffered.rs","byte_start":12769036,"byte_end":12769047,"line_start":27,"line_end":27,"column_start":10,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":14131},{"krate":0,"index":14217},{"krate":0,"index":14218},{"krate":0,"index":14219},{"krate":0,"index":14220}],"docs":"","sig":null,"attributes":[]},{"id":317,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_buffered.rs","byte_start":12769384,"byte_end":12769395,"line_start":43,"line_end":43,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":14134},{"krate":0,"index":14135}],"docs":"","sig":null,"attributes":[]},{"id":318,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_buffered.rs","byte_start":12770672,"byte_end":12770683,"line_start":79,"line_end":79,"column_start":33,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":14140},{"krate":0,"index":14221},{"krate":0,"index":14222},{"krate":0,"index":14223},{"krate":0,"index":14224}],"docs":"","sig":null,"attributes":[]},{"id":319,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_for_each_concurrent.rs","byte_start":12771553,"byte_end":12771573,"line_start":25,"line_end":25,"column_start":33,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":14188}],"docs":"","sig":null,"attributes":[]},{"id":320,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_for_each_concurrent.rs","byte_start":12771938,"byte_end":12771958,"line_start":39,"line_end":39,"column_start":34,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":14193}],"docs":"","sig":null,"attributes":[]},{"id":321,"kind":"Inherent","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_for_each_concurrent.rs","byte_start":12772197,"byte_end":12772217,"line_start":50,"line_end":50,"column_start":18,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":14198}],"docs":"","sig":null,"attributes":[]},{"id":322,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_for_each_concurrent.rs","byte_start":12772665,"byte_end":12772685,"line_start":67,"line_end":67,"column_start":29,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":14203},{"krate":0,"index":14204}],"docs":"","sig":null,"attributes":[]},{"id":323,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/into_async_read.rs","byte_start":373138,"byte_end":373151,"line_start":23,"line_end":23,"column_start":20,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":324,"kind":"Inherent","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/into_async_read.rs","byte_start":373367,"byte_end":373380,"line_start":37,"line_end":37,"column_start":10,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":4853}],"docs":"","sig":null,"attributes":[]},{"id":325,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/into_async_read.rs","byte_start":373592,"byte_end":373605,"line_start":47,"line_end":47,"column_start":24,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":4856}],"docs":"","sig":null,"attributes":[]},{"id":326,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/into_async_read.rs","byte_start":375226,"byte_end":375239,"line_start":95,"line_end":95,"column_start":25,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":4859},{"krate":0,"index":4860},{"krate":0,"index":4861}],"docs":"","sig":null,"attributes":[]},{"id":327,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/into_async_read.rs","byte_start":375846,"byte_end":375859,"line_start":117,"line_end":117,"column_start":27,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":4864},{"krate":0,"index":4865}],"docs":"","sig":null,"attributes":[]},{"id":328,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":306228,"byte_end":306229,"line_start":142,"line_end":142,"column_start":46,"column_end":47},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":329,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/iter.rs","byte_start":377895,"byte_end":377899,"line_start":13,"line_end":13,"column_start":19,"column_end":23},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":330,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/iter.rs","byte_start":378521,"byte_end":378525,"line_start":36,"line_end":36,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":5024},{"krate":0,"index":5025},{"krate":0,"index":5026}],"docs":"","sig":null,"attributes":[]},{"id":331,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat.rs","byte_start":379716,"byte_end":379722,"line_start":34,"line_end":34,"column_start":19,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":332,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat.rs","byte_start":379749,"byte_end":379755,"line_start":36,"line_end":36,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":5061},{"krate":0,"index":5062},{"krate":0,"index":5063}],"docs":"","sig":null,"attributes":[]},{"id":333,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat.rs","byte_start":380063,"byte_end":380069,"line_start":51,"line_end":51,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":5066}],"docs":"","sig":null,"attributes":[]},{"id":334,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat_with.rs","byte_start":380666,"byte_end":380676,"line_start":17,"line_end":17,"column_start":36,"column_end":46},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":335,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat_with.rs","byte_start":380720,"byte_end":380730,"line_start":19,"line_end":19,"column_start":37,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":5101},{"krate":0,"index":5102},{"krate":0,"index":5103}],"docs":"","sig":null,"attributes":[]},{"id":336,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat_with.rs","byte_start":381044,"byte_end":381054,"line_start":31,"line_end":31,"column_start":42,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":5107}],"docs":"","sig":null,"attributes":[]},{"id":337,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/empty.rs","byte_start":383574,"byte_end":383579,"line_start":21,"line_end":21,"column_start":19,"column_end":24},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":338,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/empty.rs","byte_start":383611,"byte_end":383616,"line_start":23,"line_end":23,"column_start":25,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":5148}],"docs":"","sig":null,"attributes":[]},{"id":339,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/empty.rs","byte_start":383701,"byte_end":383706,"line_start":29,"line_end":29,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":5151},{"krate":0,"index":5152},{"krate":0,"index":5153}],"docs":"","sig":null,"attributes":[]},{"id":340,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/empty.rs","byte_start":383955,"byte_end":383960,"line_start":41,"line_end":41,"column_start":19,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":5156}],"docs":"","sig":null,"attributes":[]},{"id":341,"kind":"Inherent","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/once.rs","byte_start":384899,"byte_end":384903,"line_start":34,"line_end":34,"column_start":11,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":5198}],"docs":"","sig":null,"attributes":[]},{"id":342,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/once.rs","byte_start":385032,"byte_end":385036,"line_start":40,"line_end":40,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":5201},{"krate":0,"index":5202},{"krate":0,"index":5203}],"docs":"","sig":null,"attributes":[]},{"id":343,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/once.rs","byte_start":385641,"byte_end":385645,"line_start":63,"line_end":63,"column_start":35,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":5206}],"docs":"","sig":null,"attributes":[]},{"id":344,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/pending.rs","byte_start":386304,"byte_end":386311,"line_start":21,"line_end":21,"column_start":19,"column_end":26},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":345,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/pending.rs","byte_start":386343,"byte_end":386350,"line_start":23,"line_end":23,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":5244}],"docs":"","sig":null,"attributes":[]},{"id":346,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/pending.rs","byte_start":386435,"byte_end":386442,"line_start":29,"line_end":29,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":5247},{"krate":0,"index":5248},{"krate":0,"index":5249}],"docs":"","sig":null,"attributes":[]},{"id":347,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/pending.rs","byte_start":386687,"byte_end":386694,"line_start":41,"line_end":41,"column_start":19,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":5252}],"docs":"","sig":null,"attributes":[]},{"id":348,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/poll_fn.rs","byte_start":387081,"byte_end":387087,"line_start":15,"line_end":15,"column_start":19,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":349,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/poll_fn.rs","byte_start":387118,"byte_end":387124,"line_start":17,"line_end":17,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":5287}],"docs":"","sig":null,"attributes":[]},{"id":350,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/poll_fn.rs","byte_start":387889,"byte_end":387895,"line_start":48,"line_end":48,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":5294},{"krate":0,"index":5295}],"docs":"","sig":null,"attributes":[]},{"id":351,"kind":"Inherent","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select.rs","byte_start":389349,"byte_end":389355,"line_start":43,"line_end":43,"column_start":16,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":5340},{"krate":0,"index":5341},{"krate":0,"index":5342},{"krate":0,"index":5343}],"docs":"","sig":null,"attributes":[]},{"id":352,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select.rs","byte_start":390778,"byte_end":390784,"line_start":78,"line_end":78,"column_start":32,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":5347}],"docs":"","sig":null,"attributes":[]},{"id":353,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select.rs","byte_start":390997,"byte_end":391003,"line_start":88,"line_end":88,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":5351},{"krate":0,"index":5352}],"docs":"","sig":null,"attributes":[]},{"id":354,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/unfold.rs","byte_start":394347,"byte_end":394353,"line_start":68,"line_end":68,"column_start":32,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":5408}],"docs":"","sig":null,"attributes":[]},{"id":355,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/unfold.rs","byte_start":394593,"byte_end":394599,"line_start":78,"line_end":78,"column_start":39,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":5414}],"docs":"","sig":null,"attributes":[]},{"id":356,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/unfold.rs","byte_start":394879,"byte_end":394885,"line_start":92,"line_end":92,"column_start":34,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":5420},{"krate":0,"index":5421}],"docs":"","sig":null,"attributes":[]},{"id":357,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_ordered.rs","byte_start":12775827,"byte_end":12775839,"line_start":26,"line_end":26,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":14481}],"docs":"","sig":null,"attributes":[]},{"id":358,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_ordered.rs","byte_start":12775944,"byte_end":12775956,"line_start":32,"line_end":32,"column_start":16,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":359,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_ordered.rs","byte_start":12775987,"byte_end":12775999,"line_start":34,"line_end":34,"column_start":24,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":14486}],"docs":"","sig":null,"attributes":[]},{"id":360,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_ordered.rs","byte_start":12776122,"byte_end":12776134,"line_start":40,"line_end":40,"column_start":17,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":14489}],"docs":"","sig":null,"attributes":[]},{"id":361,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_ordered.rs","byte_start":12776315,"byte_end":12776327,"line_start":47,"line_end":47,"column_start":20,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":14492},{"krate":0,"index":14493}],"docs":"","sig":null,"attributes":[]},{"id":362,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_ordered.rs","byte_start":12778909,"byte_end":12778923,"line_start":102,"line_end":102,"column_start":27,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":363,"kind":"Inherent","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_ordered.rs","byte_start":12778949,"byte_end":12778963,"line_start":104,"line_end":104,"column_start":19,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":14505},{"krate":0,"index":14506},{"krate":0,"index":14507},{"krate":0,"index":14508}],"docs":"","sig":null,"attributes":[]},{"id":364,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_ordered.rs","byte_start":12780529,"byte_end":12780543,"line_start":145,"line_end":145,"column_start":31,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":14511}],"docs":"","sig":null,"attributes":[]},{"id":365,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_ordered.rs","byte_start":12780636,"byte_end":12780650,"line_start":151,"line_end":151,"column_start":30,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":14514},{"krate":0,"index":14515},{"krate":0,"index":14516}],"docs":"","sig":null,"attributes":[]},{"id":366,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_ordered.rs","byte_start":12781812,"byte_end":12781826,"line_start":186,"line_end":186,"column_start":29,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":14519}],"docs":"","sig":null,"attributes":[]},{"id":367,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_ordered.rs","byte_start":12781992,"byte_end":12782006,"line_start":192,"line_end":192,"column_start":41,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":14522}],"docs":"","sig":null,"attributes":[]},{"id":368,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_ordered.rs","byte_start":12782286,"byte_end":12782300,"line_start":205,"line_end":205,"column_start":35,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":14527}],"docs":"","sig":null,"attributes":[]},{"id":369,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_ordered.rs","byte_start":12782470,"byte_end":12782484,"line_start":211,"line_end":211,"column_start":35,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":14530}],"docs":"","sig":null,"attributes":[]},{"id":370,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/abort.rs","byte_start":12809625,"byte_end":12809636,"line_start":4,"line_end":4,"column_start":19,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":14632}],"docs":"","sig":null,"attributes":[]},{"id":371,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/iter.rs","byte_start":12810995,"byte_end":12811003,"line_start":39,"line_end":39,"column_start":31,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":14651},{"krate":0,"index":14652},{"krate":0,"index":14653}],"docs":"","sig":null,"attributes":[]},{"id":372,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/iter.rs","byte_start":12812077,"byte_end":12812085,"line_start":71,"line_end":71,"column_start":40,"column_end":48},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":373,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/iter.rs","byte_start":12812122,"byte_end":12812132,"line_start":73,"line_end":73,"column_start":28,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":14659},{"krate":0,"index":14660},{"krate":0,"index":14661}],"docs":"","sig":null,"attributes":[]},{"id":374,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/iter.rs","byte_start":12812984,"byte_end":12812994,"line_start":100,"line_end":100,"column_start":33,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":375,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/iter.rs","byte_start":12813042,"byte_end":12813049,"line_start":102,"line_end":102,"column_start":35,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":14667},{"krate":0,"index":14668},{"krate":0,"index":14669}],"docs":"","sig":null,"attributes":[]},{"id":376,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/iter.rs","byte_start":12813312,"byte_end":12813319,"line_start":114,"line_end":114,"column_start":40,"column_end":47},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":377,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/iter.rs","byte_start":12813360,"byte_end":12813370,"line_start":116,"line_end":116,"column_start":28,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":14675},{"krate":0,"index":14676},{"krate":0,"index":14677}],"docs":"","sig":null,"attributes":[]},{"id":378,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/iter.rs","byte_start":12814239,"byte_end":12814249,"line_start":143,"line_end":143,"column_start":33,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":379,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/iter.rs","byte_start":12814297,"byte_end":12814301,"line_start":145,"line_end":145,"column_start":35,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":14683},{"krate":0,"index":14684},{"krate":0,"index":14685}],"docs":"","sig":null,"attributes":[]},{"id":380,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/iter.rs","byte_start":12814560,"byte_end":12814564,"line_start":157,"line_end":157,"column_start":40,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":381,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/iter.rs","byte_start":12814733,"byte_end":12814743,"line_start":161,"line_end":161,"column_start":33,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":382,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/iter.rs","byte_start":12814788,"byte_end":12814798,"line_start":162,"line_end":162,"column_start":33,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":383,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/iter.rs","byte_start":12814844,"byte_end":12814854,"line_start":164,"line_end":164,"column_start":33,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":384,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/iter.rs","byte_start":12814899,"byte_end":12814909,"line_start":165,"line_end":165,"column_start":33,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":385,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/iter.rs","byte_start":12814963,"byte_end":12814971,"line_start":167,"line_end":167,"column_start":41,"column_end":49},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":386,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/iter.rs","byte_start":12815020,"byte_end":12815028,"line_start":168,"line_end":168,"column_start":41,"column_end":49},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":387,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/task.rs","byte_start":12816513,"byte_end":12816517,"line_start":41,"line_end":41,"column_start":27,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":388,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/task.rs","byte_start":12816552,"byte_end":12816556,"line_start":42,"line_end":42,"column_start":27,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":389,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/task.rs","byte_start":12816588,"byte_end":12816592,"line_start":44,"line_end":44,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":14772}],"docs":"","sig":null,"attributes":[]},{"id":390,"kind":"Inherent","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/task.rs","byte_start":12817669,"byte_end":12817673,"line_start":71,"line_end":71,"column_start":11,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":14775},{"krate":0,"index":14776}],"docs":"","sig":null,"attributes":[]},{"id":391,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/task.rs","byte_start":12818673,"byte_end":12818677,"line_start":102,"line_end":102,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":14779}],"docs":"","sig":null,"attributes":[]},{"id":392,"kind":"Inherent","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/ready_to_run_queue.rs","byte_start":12820127,"byte_end":12820142,"line_start":29,"line_end":29,"column_start":11,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":14835},{"krate":0,"index":14836},{"krate":0,"index":14837},{"krate":0,"index":14838}],"docs":"","sig":null,"attributes":[]},{"id":393,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/ready_to_run_queue.rs","byte_start":12822798,"byte_end":12822813,"line_start":111,"line_end":111,"column_start":20,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":14841}],"docs":"","sig":null,"attributes":[]},{"id":394,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/mod.rs","byte_start":12784871,"byte_end":12784887,"line_start":60,"line_end":60,"column_start":33,"column_end":49},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":395,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/mod.rs","byte_start":12784928,"byte_end":12784944,"line_start":61,"line_end":61,"column_start":33,"column_end":49},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":396,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/mod.rs","byte_start":12784973,"byte_end":12784989,"line_start":62,"line_end":62,"column_start":21,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":397,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/mod.rs","byte_start":12785014,"byte_end":12785030,"line_start":64,"line_end":64,"column_start":16,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":14861}],"docs":"","sig":null,"attributes":[]},{"id":398,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/mod.rs","byte_start":12785215,"byte_end":12785231,"line_start":71,"line_end":71,"column_start":21,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":14863}],"docs":"","sig":null,"attributes":[]},{"id":399,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/mod.rs","byte_start":12786938,"byte_end":12786954,"line_start":103,"line_end":103,"column_start":23,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":14866}],"docs":"","sig":null,"attributes":[]},{"id":400,"kind":"Inherent","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/mod.rs","byte_start":12787028,"byte_end":12787044,"line_start":109,"line_end":109,"column_start":11,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":14869},{"krate":0,"index":14870},{"krate":0,"index":14871},{"krate":0,"index":14872},{"krate":0,"index":14873},{"krate":0,"index":14874},{"krate":0,"index":14875},{"krate":0,"index":14876},{"krate":0,"index":14877},{"krate":0,"index":14878},{"krate":0,"index":14879},{"krate":0,"index":14880},{"krate":0,"index":14881}],"docs":"","sig":null,"attributes":[]},{"id":401,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/mod.rs","byte_start":12798575,"byte_end":12798591,"line_start":382,"line_end":382,"column_start":30,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":14884},{"krate":0,"index":14885},{"krate":0,"index":14894}],"docs":"","sig":null,"attributes":[]},{"id":402,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/mod.rs","byte_start":12803775,"byte_end":12803779,"line_start":493,"line_end":493,"column_start":32,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":14893}],"docs":"","sig":null,"attributes":[]},{"id":403,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/mod.rs","byte_start":12806034,"byte_end":12806050,"line_start":550,"line_end":550,"column_start":21,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":14897}],"docs":"","sig":null,"attributes":[]},{"id":404,"kind":"Inherent","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/mod.rs","byte_start":12806188,"byte_end":12806204,"line_start":556,"line_end":556,"column_start":11,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":14900},{"krate":0,"index":14901}],"docs":"","sig":null,"attributes":[]},{"id":405,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/mod.rs","byte_start":12806775,"byte_end":12806791,"line_start":576,"line_end":576,"column_start":20,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":14904}],"docs":"","sig":null,"attributes":[]},{"id":406,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/mod.rs","byte_start":12808441,"byte_end":12808457,"line_start":617,"line_end":617,"column_start":35,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":14919},{"krate":0,"index":14920},{"krate":0,"index":14921}],"docs":"","sig":null,"attributes":[]},{"id":407,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/mod.rs","byte_start":12808927,"byte_end":12808943,"line_start":631,"line_end":631,"column_start":33,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":14924}],"docs":"","sig":null,"attributes":[]},{"id":408,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/mod.rs","byte_start":12809219,"byte_end":12809235,"line_start":644,"line_end":644,"column_start":35,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":14929}],"docs":"","sig":null,"attributes":[]},{"id":409,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/mod.rs","byte_start":12809357,"byte_end":12809373,"line_start":650,"line_end":650,"column_start":27,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":14932}],"docs":"","sig":null,"attributes":[]},{"id":410,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select_all.rs","byte_start":12824408,"byte_end":12824417,"line_start":36,"line_end":36,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":14989}],"docs":"","sig":null,"attributes":[]},{"id":411,"kind":"Inherent","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select_all.rs","byte_start":12824562,"byte_end":12824571,"line_start":42,"line_end":42,"column_start":26,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":14992},{"krate":0,"index":14993},{"krate":0,"index":14994},{"krate":0,"index":14995},{"krate":0,"index":14996},{"krate":0,"index":14997},{"krate":0,"index":14998}],"docs":"","sig":null,"attributes":[]},{"id":412,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select_all.rs","byte_start":12826044,"byte_end":12826053,"line_start":89,"line_end":89,"column_start":38,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":15001}],"docs":"","sig":null,"attributes":[]},{"id":413,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select_all.rs","byte_start":12826152,"byte_end":12826161,"line_start":95,"line_end":95,"column_start":37,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":15004},{"krate":0,"index":15005}],"docs":"","sig":null,"attributes":[]},{"id":414,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select_all.rs","byte_start":12826945,"byte_end":12826954,"line_start":117,"line_end":117,"column_start":42,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":15008}],"docs":"","sig":null,"attributes":[]},{"id":415,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select_all.rs","byte_start":12827972,"byte_end":12827981,"line_start":149,"line_end":149,"column_start":47,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":15013}],"docs":"","sig":null,"attributes":[]},{"id":416,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select_all.rs","byte_start":12828126,"byte_end":12828135,"line_start":155,"line_end":155,"column_start":41,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":15017}],"docs":"","sig":null,"attributes":[]},{"id":417,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select_all.rs","byte_start":12828318,"byte_end":12828327,"line_start":163,"line_end":163,"column_start":43,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":15021},{"krate":0,"index":15022},{"krate":0,"index":15023}],"docs":"","sig":null,"attributes":[]},{"id":418,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select_all.rs","byte_start":12829410,"byte_end":12829414,"line_start":202,"line_end":202,"column_start":43,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":15039},{"krate":0,"index":15040},{"krate":0,"index":15041}],"docs":"","sig":null,"attributes":[]},{"id":419,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select_all.rs","byte_start":12829847,"byte_end":12829851,"line_start":218,"line_end":218,"column_start":48,"column_end":52},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":420,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select_all.rs","byte_start":12829906,"byte_end":12829913,"line_start":220,"line_end":220,"column_start":43,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":15047},{"krate":0,"index":15048},{"krate":0,"index":15049}],"docs":"","sig":null,"attributes":[]},{"id":421,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select_all.rs","byte_start":12830350,"byte_end":12830357,"line_start":236,"line_end":236,"column_start":48,"column_end":55},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":422,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select_all.rs","byte_start":12830408,"byte_end":12830416,"line_start":238,"line_end":238,"column_start":39,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":15054},{"krate":0,"index":15055},{"krate":0,"index":15056}],"docs":"","sig":null,"attributes":[]},{"id":423,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select_all.rs","byte_start":12830844,"byte_end":12830852,"line_start":254,"line_end":254,"column_start":48,"column_end":56},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":424,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/sink/close.rs","byte_start":407404,"byte_end":407409,"line_start":15,"line_end":15,"column_start":42,"column_end":47},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":425,"kind":"Inherent","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/sink/close.rs","byte_start":407603,"byte_end":407608,"line_start":20,"line_end":20,"column_start":49,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":5503}],"docs":"","sig":null,"attributes":[]},{"id":426,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/sink/close.rs","byte_start":407784,"byte_end":407789,"line_start":26,"line_end":26,"column_start":56,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":5507},{"krate":0,"index":5508}],"docs":"","sig":null,"attributes":[]},{"id":427,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/sink/drain.rs","byte_start":408779,"byte_end":408784,"line_start":33,"line_end":33,"column_start":19,"column_end":24},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":428,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/sink/drain.rs","byte_start":408812,"byte_end":408817,"line_start":35,"line_end":35,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":5541},{"krate":0,"index":5542},{"krate":0,"index":5543},{"krate":0,"index":5544},{"krate":0,"index":5545}],"docs":"","sig":null,"attributes":[]},{"id":429,"kind":"Inherent","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/sink/fanout.rs","byte_start":409978,"byte_end":409984,"line_start":21,"line_end":21,"column_start":16,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":5583},{"krate":0,"index":5584},{"krate":0,"index":5585},{"krate":0,"index":5586},{"krate":0,"index":5587}],"docs":"","sig":null,"attributes":[]},{"id":430,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/sink/fanout.rs","byte_start":410952,"byte_end":410958,"line_start":51,"line_end":51,"column_start":40,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":5591}],"docs":"","sig":null,"attributes":[]},{"id":431,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/sink/fanout.rs","byte_start":411170,"byte_end":411176,"line_start":57,"line_end":57,"column_start":37,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":5596},{"krate":0,"index":5597},{"krate":0,"index":5598},{"krate":0,"index":5599},{"krate":0,"index":5600}],"docs":"","sig":null,"attributes":[]},{"id":432,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/sink/feed.rs","byte_start":413255,"byte_end":413259,"line_start":16,"line_end":16,"column_start":42,"column_end":46},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":433,"kind":"Inherent","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/sink/feed.rs","byte_start":413326,"byte_end":413330,"line_start":18,"line_end":18,"column_start":49,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":5631},{"krate":0,"index":5632},{"krate":0,"index":5633}],"docs":"","sig":null,"attributes":[]},{"id":434,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/sink/feed.rs","byte_start":413694,"byte_end":413698,"line_start":32,"line_end":32,"column_start":56,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":5637},{"krate":0,"index":5638}],"docs":"","sig":null,"attributes":[]},{"id":435,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/sink/flush.rs","byte_start":414600,"byte_end":414605,"line_start":16,"line_end":16,"column_start":42,"column_end":47},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":436,"kind":"Inherent","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/sink/flush.rs","byte_start":414956,"byte_end":414961,"line_start":24,"line_end":24,"column_start":49,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":5669}],"docs":"","sig":null,"attributes":[]},{"id":437,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/sink/flush.rs","byte_start":415137,"byte_end":415142,"line_start":30,"line_end":30,"column_start":56,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":5673},{"krate":0,"index":5674}],"docs":"","sig":null,"attributes":[]},{"id":438,"kind":"Inherent","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/sink/err_into.rs","byte_start":415802,"byte_end":415813,"line_start":16,"line_end":16,"column_start":19,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":5703},{"krate":0,"index":15282},{"krate":0,"index":15283},{"krate":0,"index":15284},{"krate":0,"index":15285}],"docs":"","sig":null,"attributes":[]},{"id":439,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/sink/err_into.rs","byte_start":416070,"byte_end":416081,"line_start":28,"line_end":28,"column_start":34,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":5708},{"krate":0,"index":15286},{"krate":0,"index":15287},{"krate":0,"index":15288},{"krate":0,"index":15289}],"docs":"","sig":null,"attributes":[]},{"id":440,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/sink/err_into.rs","byte_start":416285,"byte_end":416296,"line_start":39,"line_end":39,"column_start":29,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":5713},{"krate":0,"index":15290},{"krate":0,"index":15291}],"docs":"","sig":null,"attributes":[]},{"id":441,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/sink/err_into.rs","byte_start":416458,"byte_end":416469,"line_start":49,"line_end":49,"column_start":34,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":5718}],"docs":"","sig":null,"attributes":[]},{"id":442,"kind":"Inherent","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/sink/map_err.rs","byte_start":417078,"byte_end":417088,"line_start":18,"line_end":18,"column_start":13,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":5749},{"krate":0,"index":15345},{"krate":0,"index":15346},{"krate":0,"index":15347},{"krate":0,"index":15348},{"krate":0,"index":5750}],"docs":"","sig":null,"attributes":[]},{"id":443,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/sink/map_err.rs","byte_start":417391,"byte_end":417401,"line_start":30,"line_end":30,"column_start":37,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":5756},{"krate":0,"index":5757},{"krate":0,"index":5759},{"krate":0,"index":5761},{"krate":0,"index":5763}],"docs":"","sig":null,"attributes":[]},{"id":444,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/sink/map_err.rs","byte_start":418357,"byte_end":418367,"line_start":55,"line_end":55,"column_start":31,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":5768},{"krate":0,"index":15349},{"krate":0,"index":15350}],"docs":"","sig":null,"attributes":[]},{"id":445,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/sink/map_err.rs","byte_start":418473,"byte_end":418483,"line_start":61,"line_end":61,"column_start":41,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":5772}],"docs":"","sig":null,"attributes":[]},{"id":446,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/sink/send.rs","byte_start":419034,"byte_end":419038,"line_start":16,"line_end":16,"column_start":42,"column_end":46},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":447,"kind":"Inherent","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/sink/send.rs","byte_start":419105,"byte_end":419109,"line_start":18,"line_end":18,"column_start":49,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":5806}],"docs":"","sig":null,"attributes":[]},{"id":448,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/sink/send.rs","byte_start":419297,"byte_end":419301,"line_start":24,"line_end":24,"column_start":56,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":5810},{"krate":0,"index":5811}],"docs":"","sig":null,"attributes":[]},{"id":449,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/sink/send_all.rs","byte_start":420507,"byte_end":420514,"line_start":23,"line_end":23,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":5865}],"docs":"","sig":null,"attributes":[]},{"id":450,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/sink/send_all.rs","byte_start":420953,"byte_end":420960,"line_start":39,"line_end":39,"column_start":24,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":451,"kind":"Inherent","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/sink/send_all.rs","byte_start":421072,"byte_end":421079,"line_start":46,"line_end":46,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":5875},{"krate":0,"index":5876}],"docs":"","sig":null,"attributes":[]},{"id":452,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/sink/send_all.rs","byte_start":421855,"byte_end":421862,"line_start":71,"line_end":71,"column_start":36,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":5882},{"krate":0,"index":5883}],"docs":"","sig":null,"attributes":[]},{"id":453,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/sink/unfold.rs","byte_start":424161,"byte_end":424167,"line_start":47,"line_end":47,"column_start":39,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":5929},{"krate":0,"index":5930},{"krate":0,"index":5931},{"krate":0,"index":5932},{"krate":0,"index":5933}],"docs":"","sig":null,"attributes":[]},{"id":454,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/sink/with.rs","byte_start":426084,"byte_end":426088,"line_start":24,"line_end":24,"column_start":42,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":5979}],"docs":"","sig":null,"attributes":[]},{"id":455,"kind":"Inherent","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/sink/with.rs","byte_start":426351,"byte_end":426355,"line_start":34,"line_end":34,"column_start":27,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":5986}],"docs":"","sig":null,"attributes":[]},{"id":456,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/sink/with.rs","byte_start":426692,"byte_end":426696,"line_start":49,"line_end":49,"column_start":37,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":5994}],"docs":"","sig":null,"attributes":[]},{"id":457,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/sink/with.rs","byte_start":427067,"byte_end":427071,"line_start":66,"line_end":66,"column_start":37,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":6001},{"krate":0,"index":15496},{"krate":0,"index":15497}],"docs":"","sig":null,"attributes":[]},{"id":458,"kind":"Inherent","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/sink/with.rs","byte_start":427255,"byte_end":427259,"line_start":77,"line_end":77,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":15498},{"krate":0,"index":15499},{"krate":0,"index":15500},{"krate":0,"index":15501},{"krate":0,"index":6009}],"docs":"","sig":null,"attributes":[]},{"id":459,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/sink/with.rs","byte_start":427934,"byte_end":427938,"line_start":100,"line_end":100,"column_start":42,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":6017},{"krate":0,"index":6018},{"krate":0,"index":6019},{"krate":0,"index":6020},{"krate":0,"index":6021}],"docs":"","sig":null,"attributes":[]},{"id":460,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/sink/with_flat_map.rs","byte_start":429657,"byte_end":429668,"line_start":24,"line_end":24,"column_start":41,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":6064}],"docs":"","sig":null,"attributes":[]},{"id":461,"kind":"Inherent","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/sink/with_flat_map.rs","byte_start":430041,"byte_end":430052,"line_start":39,"line_end":39,"column_start":26,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":6071},{"krate":0,"index":15583},{"krate":0,"index":15584},{"krate":0,"index":15585},{"krate":0,"index":15586},{"krate":0,"index":6072}],"docs":"","sig":null,"attributes":[]},{"id":462,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/sink/with_flat_map.rs","byte_start":431339,"byte_end":431350,"line_start":76,"line_end":76,"column_start":36,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":6079},{"krate":0,"index":15587},{"krate":0,"index":15588}],"docs":"","sig":null,"attributes":[]},{"id":463,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/sink/with_flat_map.rs","byte_start":431573,"byte_end":431584,"line_start":87,"line_end":87,"column_start":41,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":6086}],"docs":"","sig":null,"attributes":[]},{"id":464,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/sink/with_flat_map.rs","byte_start":431833,"byte_end":431844,"line_start":98,"line_end":98,"column_start":38,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":6093},{"krate":0,"index":6094},{"krate":0,"index":6095},{"krate":0,"index":6096},{"krate":0,"index":6097}],"docs":"","sig":null,"attributes":[]},{"id":465,"kind":"Inherent","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/sink/buffer.rs","byte_start":433388,"byte_end":433394,"line_start":23,"line_end":23,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":6134},{"krate":0,"index":15642},{"krate":0,"index":15643},{"krate":0,"index":15644},{"krate":0,"index":15645},{"krate":0,"index":6135}],"docs":"","sig":null,"attributes":[]},{"id":466,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/sink/buffer.rs","byte_start":434122,"byte_end":434128,"line_start":44,"line_end":44,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":6139},{"krate":0,"index":6140},{"krate":0,"index":6141}],"docs":"","sig":null,"attributes":[]},{"id":467,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/sink/buffer.rs","byte_start":434458,"byte_end":434464,"line_start":59,"line_end":59,"column_start":31,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":6145}],"docs":"","sig":null,"attributes":[]},{"id":468,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/sink/buffer.rs","byte_start":434638,"byte_end":434644,"line_start":68,"line_end":68,"column_start":43,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":6149},{"krate":0,"index":6150},{"krate":0,"index":6151},{"krate":0,"index":6152},{"krate":0,"index":6153}],"docs":"","sig":null,"attributes":[]},{"id":469,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/sink/mod.rs","byte_start":396949,"byte_end":396950,"line_start":61,"line_end":61,"column_start":41,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":470,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/spawn.rs","byte_start":437415,"byte_end":437417,"line_start":16,"line_end":16,"column_start":31,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":471,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/spawn.rs","byte_start":437472,"byte_end":437474,"line_start":17,"line_end":17,"column_start":36,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":472,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/allow_std.rs","byte_start":471922,"byte_end":471932,"line_start":21,"line_end":21,"column_start":19,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":473,"kind":"Inherent","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/allow_std.rs","byte_start":472370,"byte_end":472380,"line_start":41,"line_end":41,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":6395},{"krate":0,"index":6396},{"krate":0,"index":6397},{"krate":0,"index":6398}],"docs":"","sig":null,"attributes":[]},{"id":474,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/allow_std.rs","byte_start":472891,"byte_end":472901,"line_start":63,"line_end":63,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":6401},{"krate":0,"index":6402},{"krate":0,"index":6403},{"krate":0,"index":6404},{"krate":0,"index":6405}],"docs":"","sig":null,"attributes":[]},{"id":475,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/allow_std.rs","byte_start":473446,"byte_end":473456,"line_start":84,"line_end":84,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":6408},{"krate":0,"index":6409},{"krate":0,"index":6410},{"krate":0,"index":6411}],"docs":"","sig":null,"attributes":[]},{"id":476,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/allow_std.rs","byte_start":474248,"byte_end":474258,"line_start":114,"line_end":114,"column_start":22,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":6414},{"krate":0,"index":6415},{"krate":0,"index":6416},{"krate":0,"index":6417},{"krate":0,"index":6418}],"docs":"","sig":null,"attributes":[]},{"id":477,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/allow_std.rs","byte_start":474983,"byte_end":474993,"line_start":139,"line_end":139,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":6421},{"krate":0,"index":6422}],"docs":"","sig":null,"attributes":[]},{"id":478,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/allow_std.rs","byte_start":475624,"byte_end":475634,"line_start":165,"line_end":165,"column_start":22,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":6425}],"docs":"","sig":null,"attributes":[]},{"id":479,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/allow_std.rs","byte_start":475778,"byte_end":475788,"line_start":174,"line_end":174,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":6428}],"docs":"","sig":null,"attributes":[]},{"id":480,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/allow_std.rs","byte_start":476050,"byte_end":476060,"line_start":187,"line_end":187,"column_start":25,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":6431},{"krate":0,"index":6432}],"docs":"","sig":null,"attributes":[]},{"id":481,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/allow_std.rs","byte_start":476276,"byte_end":476286,"line_start":199,"line_end":199,"column_start":26,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":6435},{"krate":0,"index":6436}],"docs":"","sig":null,"attributes":[]},{"id":482,"kind":"Inherent","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/buf_reader.rs","byte_start":478125,"byte_end":478134,"line_start":41,"line_end":41,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":6495},{"krate":0,"index":6496},{"krate":0,"index":15740},{"krate":0,"index":15741},{"krate":0,"index":15742},{"krate":0,"index":15743},{"krate":0,"index":6497},{"krate":0,"index":6498}],"docs":"","sig":null,"attributes":[]},{"id":483,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/buf_reader.rs","byte_start":479279,"byte_end":479288,"line_start":76,"line_end":76,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":6501},{"krate":0,"index":6502}],"docs":"","sig":null,"attributes":[]},{"id":484,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/buf_reader.rs","byte_start":480900,"byte_end":480909,"line_start":120,"line_end":120,"column_start":37,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":6506},{"krate":0,"index":6507}],"docs":"","sig":null,"attributes":[]},{"id":485,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/buf_reader.rs","byte_start":481739,"byte_end":481748,"line_start":141,"line_end":141,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":15744},{"krate":0,"index":15745},{"krate":0,"index":15746},{"krate":0,"index":15747}],"docs":"","sig":null,"attributes":[]},{"id":486,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/buf_reader.rs","byte_start":481826,"byte_end":481835,"line_start":145,"line_end":145,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":6512}],"docs":"","sig":null,"attributes":[]},{"id":487,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/buf_reader.rs","byte_start":482151,"byte_end":482160,"line_start":154,"line_end":154,"column_start":46,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":6515}],"docs":"","sig":null,"attributes":[]},{"id":488,"kind":"Inherent","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/buf_writer.rs","byte_start":486128,"byte_end":486137,"line_start":40,"line_end":40,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":6570},{"krate":0,"index":6571},{"krate":0,"index":6572},{"krate":0,"index":15789},{"krate":0,"index":15790},{"krate":0,"index":15791},{"krate":0,"index":15792},{"krate":0,"index":6573}],"docs":"","sig":null,"attributes":[]},{"id":489,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/buf_writer.rs","byte_start":487666,"byte_end":487675,"line_start":88,"line_end":88,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":6576},{"krate":0,"index":6577},{"krate":0,"index":6579},{"krate":0,"index":6580}],"docs":"","sig":null,"attributes":[]},{"id":490,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/buf_writer.rs","byte_start":489098,"byte_end":489107,"line_start":131,"line_end":131,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":15793},{"krate":0,"index":15794}],"docs":"","sig":null,"attributes":[]},{"id":491,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/buf_writer.rs","byte_start":489188,"byte_end":489197,"line_start":135,"line_end":135,"column_start":40,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":15795},{"krate":0,"index":15796}],"docs":"","sig":null,"attributes":[]},{"id":492,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/buf_writer.rs","byte_start":489278,"byte_end":489287,"line_start":139,"line_end":139,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":6587}],"docs":"","sig":null,"attributes":[]},{"id":493,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/buf_writer.rs","byte_start":489646,"byte_end":489655,"line_start":149,"line_end":149,"column_start":47,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":6590}],"docs":"","sig":null,"attributes":[]},{"id":494,"kind":"Inherent","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/chain.rs","byte_start":490592,"byte_end":490597,"line_start":23,"line_end":23,"column_start":12,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":6630},{"krate":0,"index":6631},{"krate":0,"index":6632},{"krate":0,"index":6633},{"krate":0,"index":6634}],"docs":"","sig":null,"attributes":[]},{"id":495,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/chain.rs","byte_start":491853,"byte_end":491858,"line_start":62,"line_end":62,"column_start":27,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":6638}],"docs":"","sig":null,"attributes":[]},{"id":496,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/chain.rs","byte_start":492188,"byte_end":492193,"line_start":76,"line_end":76,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":6642},{"krate":0,"index":6643}],"docs":"","sig":null,"attributes":[]},{"id":497,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/chain.rs","byte_start":493546,"byte_end":493551,"line_start":126,"line_end":126,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":6648},{"krate":0,"index":6649}],"docs":"","sig":null,"attributes":[]},{"id":498,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/close.rs","byte_start":494662,"byte_end":494667,"line_start":14,"line_end":14,"column_start":35,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":499,"kind":"Inherent","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/close.rs","byte_start":494720,"byte_end":494725,"line_start":16,"line_end":16,"column_start":42,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":6678}],"docs":"","sig":null,"attributes":[]},{"id":500,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/close.rs","byte_start":494867,"byte_end":494872,"line_start":22,"line_end":22,"column_start":49,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":6681},{"krate":0,"index":6682}],"docs":"","sig":null,"attributes":[]},{"id":501,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/copy.rs","byte_start":496642,"byte_end":496646,"line_start":52,"line_end":52,"column_start":63,"column_end":67},"value":"","parent":null,"children":[{"krate":0,"index":6729},{"krate":0,"index":6730}],"docs":"","sig":null,"attributes":[]},{"id":502,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/copy_buf.rs","byte_start":498369,"byte_end":498376,"line_start":54,"line_end":54,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":6774},{"krate":0,"index":6775}],"docs":"","sig":null,"attributes":[]},{"id":503,"kind":"Inherent","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":500209,"byte_end":500215,"line_start":29,"line_end":29,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":6821},{"krate":0,"index":6822},{"krate":0,"index":6823},{"krate":0,"index":6824},{"krate":0,"index":6825},{"krate":0,"index":6826}],"docs":"","sig":null,"attributes":[]},{"id":504,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":503415,"byte_end":503421,"line_start":148,"line_end":148,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":6829}],"docs":"","sig":null,"attributes":[]},{"id":505,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":503708,"byte_end":503714,"line_start":161,"line_end":161,"column_start":44,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":6832},{"krate":0,"index":6833}],"docs":"","sig":null,"attributes":[]},{"id":506,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":504346,"byte_end":504352,"line_start":185,"line_end":185,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":6836},{"krate":0,"index":6837}],"docs":"","sig":null,"attributes":[]},{"id":507,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":505556,"byte_end":505562,"line_start":226,"line_end":226,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":15982},{"krate":0,"index":15983},{"krate":0,"index":15984},{"krate":0,"index":15985}],"docs":"","sig":null,"attributes":[]},{"id":508,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":505637,"byte_end":505643,"line_start":230,"line_end":230,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":15986},{"krate":0,"index":15987},{"krate":0,"index":15988},{"krate":0,"index":15989}],"docs":"","sig":null,"attributes":[]},{"id":509,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":505721,"byte_end":505727,"line_start":234,"line_end":234,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":15990},{"krate":0,"index":15991},{"krate":0,"index":15992},{"krate":0,"index":15993}],"docs":"","sig":null,"attributes":[]},{"id":510,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":505800,"byte_end":505806,"line_start":238,"line_end":238,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":15994},{"krate":0,"index":15995},{"krate":0,"index":15996},{"krate":0,"index":15997}],"docs":"","sig":null,"attributes":[]},{"id":511,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/empty.rs","byte_start":506789,"byte_end":506794,"line_start":37,"line_end":37,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":6874}],"docs":"","sig":null,"attributes":[]},{"id":512,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/empty.rs","byte_start":507142,"byte_end":507147,"line_start":54,"line_end":54,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":6876},{"krate":0,"index":6877}],"docs":"","sig":null,"attributes":[]},{"id":513,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/empty.rs","byte_start":507379,"byte_end":507384,"line_start":63,"line_end":63,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":6879}],"docs":"","sig":null,"attributes":[]},{"id":514,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/fill_buf.rs","byte_start":507882,"byte_end":507889,"line_start":14,"line_end":14,"column_start":27,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":515,"kind":"Inherent","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/fill_buf.rs","byte_start":507944,"byte_end":507951,"line_start":16,"line_end":16,"column_start":44,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":6912}],"docs":"","sig":null,"attributes":[]},{"id":516,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/fill_buf.rs","byte_start":508082,"byte_end":508089,"line_start":22,"line_end":22,"column_start":24,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":6916},{"krate":0,"index":6917}],"docs":"","sig":null,"attributes":[]},{"id":517,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/flush.rs","byte_start":509659,"byte_end":509664,"line_start":14,"line_end":14,"column_start":35,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":518,"kind":"Inherent","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/flush.rs","byte_start":509717,"byte_end":509722,"line_start":16,"line_end":16,"column_start":42,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":6946}],"docs":"","sig":null,"attributes":[]},{"id":519,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/flush.rs","byte_start":509835,"byte_end":509840,"line_start":22,"line_end":22,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":6949},{"krate":0,"index":6950}],"docs":"","sig":null,"attributes":[]},{"id":520,"kind":"Inherent","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/into_sink.rs","byte_start":510862,"byte_end":510870,"line_start":29,"line_end":29,"column_start":40,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":6983},{"krate":0,"index":6984}],"docs":"","sig":null,"attributes":[]},{"id":521,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/into_sink.rs","byte_start":511803,"byte_end":511811,"line_start":57,"line_end":57,"column_start":55,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":6988},{"krate":0,"index":6989},{"krate":0,"index":6990},{"krate":0,"index":6991},{"krate":0,"index":6992}],"docs":"","sig":null,"attributes":[]},{"id":522,"kind":"Inherent","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/lines.rs","byte_start":513364,"byte_end":513369,"line_start":24,"line_end":24,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":7030}],"docs":"","sig":null,"attributes":[]},{"id":523,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/lines.rs","byte_start":513532,"byte_end":513537,"line_start":30,"line_end":30,"column_start":34,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":7033},{"krate":0,"index":7034}],"docs":"","sig":null,"attributes":[]},{"id":524,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/read.rs","byte_start":514532,"byte_end":514536,"line_start":15,"line_end":15,"column_start":35,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":525,"kind":"Inherent","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/read.rs","byte_start":514588,"byte_end":514592,"line_start":17,"line_end":17,"column_start":41,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":7063}],"docs":"","sig":null,"attributes":[]},{"id":526,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/read.rs","byte_start":514757,"byte_end":514761,"line_start":23,"line_end":23,"column_start":48,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":7066},{"krate":0,"index":7067}],"docs":"","sig":null,"attributes":[]},{"id":527,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/read_vectored.rs","byte_start":515449,"byte_end":515461,"line_start":15,"line_end":15,"column_start":35,"column_end":47},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":528,"kind":"Inherent","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/read_vectored.rs","byte_start":515513,"byte_end":515525,"line_start":17,"line_end":17,"column_start":41,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":7100}],"docs":"","sig":null,"attributes":[]},{"id":529,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/read_vectored.rs","byte_start":515704,"byte_end":515716,"line_start":23,"line_end":23,"column_start":48,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":7103},{"krate":0,"index":7104}],"docs":"","sig":null,"attributes":[]},{"id":530,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/read_exact.rs","byte_start":516411,"byte_end":516420,"line_start":17,"line_end":17,"column_start":35,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":531,"kind":"Inherent","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/read_exact.rs","byte_start":516472,"byte_end":516481,"line_start":19,"line_end":19,"column_start":41,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":7139}],"docs":"","sig":null,"attributes":[]},{"id":532,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/read_exact.rs","byte_start":516646,"byte_end":516655,"line_start":25,"line_end":25,"column_start":48,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":7142},{"krate":0,"index":7143}],"docs":"","sig":null,"attributes":[]},{"id":533,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/read_line.rs","byte_start":517798,"byte_end":517806,"line_start":21,"line_end":21,"column_start":35,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":534,"kind":"Inherent","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/read_line.rs","byte_start":517861,"byte_end":517869,"line_start":23,"line_end":23,"column_start":44,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":7184}],"docs":"","sig":null,"attributes":[]},{"id":535,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/read_line.rs","byte_start":518838,"byte_end":518846,"line_start":50,"line_end":50,"column_start":51,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":7190},{"krate":0,"index":7191}],"docs":"","sig":null,"attributes":[]},{"id":536,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/read_to_end.rs","byte_start":519601,"byte_end":519610,"line_start":18,"line_end":18,"column_start":35,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":537,"kind":"Inherent","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/read_to_end.rs","byte_start":519662,"byte_end":519671,"line_start":20,"line_end":20,"column_start":41,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":7226}],"docs":"","sig":null,"attributes":[]},{"id":538,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/read_to_end.rs","byte_start":519916,"byte_end":519921,"line_start":32,"line_end":32,"column_start":15,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":7232}],"docs":"","sig":null,"attributes":[]},{"id":539,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/read_to_end.rs","byte_start":521756,"byte_end":521765,"line_start":81,"line_end":81,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":7237},{"krate":0,"index":7238}],"docs":"","sig":null,"attributes":[]},{"id":540,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/read_to_string.rs","byte_start":522638,"byte_end":522650,"line_start":20,"line_end":20,"column_start":35,"column_end":47},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":541,"kind":"Inherent","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/read_to_string.rs","byte_start":522702,"byte_end":522714,"line_start":22,"line_end":22,"column_start":41,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":7283}],"docs":"","sig":null,"attributes":[]},{"id":542,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/read_to_string.rs","byte_start":523643,"byte_end":523655,"line_start":49,"line_end":49,"column_start":20,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":7289},{"krate":0,"index":7290}],"docs":"","sig":null,"attributes":[]},{"id":543,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/read_until.rs","byte_start":524475,"byte_end":524484,"line_start":19,"line_end":19,"column_start":35,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":544,"kind":"Inherent","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/read_until.rs","byte_start":524539,"byte_end":524548,"line_start":21,"line_end":21,"column_start":44,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":7325}],"docs":"","sig":null,"attributes":[]},{"id":545,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/read_until.rs","byte_start":525520,"byte_end":525529,"line_start":53,"line_end":53,"column_start":51,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":7330},{"krate":0,"index":7331}],"docs":"","sig":null,"attributes":[]},{"id":546,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/repeat.rs","byte_start":526753,"byte_end":526759,"line_start":37,"line_end":37,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":7366},{"krate":0,"index":7367}],"docs":"","sig":null,"attributes":[]},{"id":547,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/repeat.rs","byte_start":527539,"byte_end":527545,"line_start":70,"line_end":70,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":7369}],"docs":"","sig":null,"attributes":[]},{"id":548,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/seek.rs","byte_start":528059,"byte_end":528063,"line_start":15,"line_end":15,"column_start":35,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":549,"kind":"Inherent","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/seek.rs","byte_start":528115,"byte_end":528119,"line_start":17,"line_end":17,"column_start":41,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":7406}],"docs":"","sig":null,"attributes":[]},{"id":550,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/seek.rs","byte_start":528276,"byte_end":528280,"line_start":23,"line_end":23,"column_start":48,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":7409},{"krate":0,"index":7410}],"docs":"","sig":null,"attributes":[]},{"id":551,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/sink.rs","byte_start":529409,"byte_end":529413,"line_start":34,"line_end":34,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":7442},{"krate":0,"index":7443},{"krate":0,"index":7445},{"krate":0,"index":7446}],"docs":"","sig":null,"attributes":[]},{"id":552,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/sink.rs","byte_start":530131,"byte_end":530135,"line_start":63,"line_end":63,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":7448}],"docs":"","sig":null,"attributes":[]},{"id":553,"kind":"Inherent","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/split.rs","byte_start":531152,"byte_end":531160,"line_start":34,"line_end":34,"column_start":16,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":7501}],"docs":"","sig":null,"attributes":[]},{"id":554,"kind":"Inherent","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/split.rs","byte_start":531660,"byte_end":531669,"line_start":45,"line_end":45,"column_start":16,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":7505}],"docs":"","sig":null,"attributes":[]},{"id":555,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/split.rs","byte_start":532061,"byte_end":532069,"line_start":54,"line_end":54,"column_start":34,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":7508},{"krate":0,"index":7510}],"docs":"","sig":null,"attributes":[]},{"id":556,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/split.rs","byte_start":532572,"byte_end":532581,"line_start":72,"line_end":72,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":7514},{"krate":0,"index":7516},{"krate":0,"index":7518},{"krate":0,"index":7520}],"docs":"","sig":null,"attributes":[]},{"id":557,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/split.rs","byte_start":533596,"byte_end":533608,"line_start":102,"line_end":102,"column_start":24,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":7529}],"docs":"","sig":null,"attributes":[]},{"id":558,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/split.rs","byte_start":533772,"byte_end":533784,"line_start":108,"line_end":108,"column_start":26,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":7532}],"docs":"","sig":null,"attributes":[]},{"id":559,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/split.rs","byte_start":534018,"byte_end":534030,"line_start":115,"line_end":115,"column_start":47,"column_end":59},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":560,"kind":"Inherent","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/take.rs","byte_start":534569,"byte_end":534573,"line_start":21,"line_end":21,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":7578},{"krate":0,"index":7579},{"krate":0,"index":7580},{"krate":0,"index":16249},{"krate":0,"index":16250},{"krate":0,"index":16251},{"krate":0,"index":16252}],"docs":"","sig":null,"attributes":[]},{"id":561,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/take.rs","byte_start":536490,"byte_end":536494,"line_start":86,"line_end":86,"column_start":34,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":7583}],"docs":"","sig":null,"attributes":[]},{"id":562,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/take.rs","byte_start":537135,"byte_end":537139,"line_start":110,"line_end":110,"column_start":40,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":7586},{"krate":0,"index":7587}],"docs":"","sig":null,"attributes":[]},{"id":563,"kind":"Inherent","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/window.rs","byte_start":538982,"byte_end":538988,"line_start":26,"line_end":26,"column_start":22,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":7604},{"krate":0,"index":7605},{"krate":0,"index":7606},{"krate":0,"index":7607},{"krate":0,"index":7608},{"krate":0,"index":7609},{"krate":0,"index":7610}],"docs":"","sig":null,"attributes":[]},{"id":564,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/window.rs","byte_start":541058,"byte_end":541064,"line_start":94,"line_end":94,"column_start":38,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":7614}],"docs":"","sig":null,"attributes":[]},{"id":565,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/window.rs","byte_start":541211,"byte_end":541217,"line_start":100,"line_end":100,"column_start":38,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":7617}],"docs":"","sig":null,"attributes":[]},{"id":566,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/write.rs","byte_start":541738,"byte_end":541743,"line_start":15,"line_end":15,"column_start":35,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":567,"kind":"Inherent","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/write.rs","byte_start":541796,"byte_end":541801,"line_start":17,"line_end":17,"column_start":42,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":7646}],"docs":"","sig":null,"attributes":[]},{"id":568,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/write.rs","byte_start":541963,"byte_end":541968,"line_start":23,"line_end":23,"column_start":49,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":7649},{"krate":0,"index":7650}],"docs":"","sig":null,"attributes":[]},{"id":569,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/write_vectored.rs","byte_start":542652,"byte_end":542665,"line_start":15,"line_end":15,"column_start":35,"column_end":48},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":570,"kind":"Inherent","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/write_vectored.rs","byte_start":542718,"byte_end":542731,"line_start":17,"line_end":17,"column_start":42,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":7683}],"docs":"","sig":null,"attributes":[]},{"id":571,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/write_vectored.rs","byte_start":542904,"byte_end":542917,"line_start":23,"line_end":23,"column_start":49,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":7686},{"krate":0,"index":7687}],"docs":"","sig":null,"attributes":[]},{"id":572,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/write_all.rs","byte_start":543609,"byte_end":543617,"line_start":17,"line_end":17,"column_start":35,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":573,"kind":"Inherent","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/write_all.rs","byte_start":543670,"byte_end":543678,"line_start":19,"line_end":19,"column_start":42,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":7722}],"docs":"","sig":null,"attributes":[]},{"id":574,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/write_all.rs","byte_start":543840,"byte_end":543848,"line_start":25,"line_end":25,"column_start":49,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":7725},{"krate":0,"index":7726}],"docs":"","sig":null,"attributes":[]},{"id":575,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":455787,"byte_end":455788,"line_start":402,"line_end":402,"column_start":46,"column_end":47},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":576,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":462243,"byte_end":462244,"line_start":596,"line_end":596,"column_start":48,"column_end":49},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":577,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":463131,"byte_end":463132,"line_start":624,"line_end":624,"column_start":46,"column_end":47},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":578,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":470611,"byte_end":470612,"line_start":828,"line_end":828,"column_start":52,"column_end":53},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":579,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":12832352,"byte_end":12832357,"line_start":26,"line_end":26,"column_start":32,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":16348}],"docs":"","sig":null,"attributes":[]},{"id":580,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":12832690,"byte_end":12832695,"line_start":36,"line_end":36,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":16351}],"docs":"","sig":null,"attributes":[]},{"id":581,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":12832788,"byte_end":12832793,"line_start":42,"line_end":42,"column_start":30,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":16354}],"docs":"","sig":null,"attributes":[]},{"id":582,"kind":"Inherent","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":12832926,"byte_end":12832932,"line_start":53,"line_end":53,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":16362},{"krate":0,"index":16363}],"docs":"","sig":null,"attributes":[]},{"id":583,"kind":"Inherent","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":12833464,"byte_end":12833469,"line_start":73,"line_end":73,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":16368},{"krate":0,"index":16369}],"docs":"","sig":null,"attributes":[]},{"id":584,"kind":"Inherent","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":12834040,"byte_end":12834045,"line_start":98,"line_end":98,"column_start":17,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":16372},{"krate":0,"index":16373},{"krate":0,"index":16374},{"krate":0,"index":16375},{"krate":0,"index":16376}],"docs":"","sig":null,"attributes":[]},{"id":585,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":12837160,"byte_end":12837175,"line_start":186,"line_end":186,"column_start":32,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":16385}],"docs":"","sig":null,"attributes":[]},{"id":586,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":12837606,"byte_end":12837621,"line_start":199,"line_end":199,"column_start":33,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":16388}],"docs":"","sig":null,"attributes":[]},{"id":587,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":12837738,"byte_end":12837753,"line_start":205,"line_end":205,"column_start":32,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":16392},{"krate":0,"index":16393}],"docs":"","sig":null,"attributes":[]},{"id":588,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":12838982,"byte_end":12838997,"line_start":241,"line_end":241,"column_start":26,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":16396}],"docs":"","sig":null,"attributes":[]},{"id":589,"kind":"Inherent","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":12839599,"byte_end":12839609,"line_start":260,"line_end":260,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":16404}],"docs":"","sig":null,"attributes":[]},{"id":590,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":12840621,"byte_end":12840631,"line_start":290,"line_end":290,"column_start":45,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":16409}],"docs":"","sig":null,"attributes":[]},{"id":591,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":12840837,"byte_end":12840847,"line_start":296,"line_end":296,"column_start":26,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":16412}],"docs":"","sig":null,"attributes":[]},{"id":592,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":12840945,"byte_end":12840955,"line_start":302,"line_end":302,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":16415},{"krate":0,"index":16416}],"docs":"","sig":null,"attributes":[]},{"id":593,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":12841096,"byte_end":12841106,"line_start":309,"line_end":309,"column_start":30,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":16419}],"docs":"","sig":null,"attributes":[]},{"id":594,"kind":"Inherent","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":12841557,"byte_end":12841573,"line_start":323,"line_end":323,"column_start":32,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":16431}],"docs":"","sig":null,"attributes":[]},{"id":595,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":12842703,"byte_end":12842719,"line_start":354,"line_end":354,"column_start":56,"column_end":72},"value":"","parent":null,"children":[{"krate":0,"index":16437}],"docs":"","sig":null,"attributes":[]},{"id":596,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":12842984,"byte_end":12843000,"line_start":363,"line_end":363,"column_start":37,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":16441}],"docs":"","sig":null,"attributes":[]},{"id":597,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":12843112,"byte_end":12843128,"line_start":369,"line_end":369,"column_start":38,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":16445},{"krate":0,"index":16446}],"docs":"","sig":null,"attributes":[]},{"id":598,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":12843271,"byte_end":12843287,"line_start":376,"line_end":376,"column_start":41,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":16450}],"docs":"","sig":null,"attributes":[]},{"id":599,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":12843564,"byte_end":12843569,"line_start":384,"line_end":384,"column_start":40,"column_end":45},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":600,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":12843615,"byte_end":12843620,"line_start":385,"line_end":385,"column_start":40,"column_end":45},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":601,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":12843787,"byte_end":12843802,"line_start":389,"line_end":389,"column_start":40,"column_end":55},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":602,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":12843906,"byte_end":12843921,"line_start":391,"line_end":391,"column_start":33,"column_end":48},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":603,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":12844125,"byte_end":12844135,"line_start":395,"line_end":395,"column_start":40,"column_end":50},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":604,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":12844185,"byte_end":12844195,"line_start":396,"line_end":396,"column_start":40,"column_end":50},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":605,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":12844263,"byte_end":12844279,"line_start":397,"line_end":397,"column_start":58,"column_end":74},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":606,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":12844350,"byte_end":12844366,"line_start":398,"line_end":398,"column_start":58,"column_end":74},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":607,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/bilock.rs","byte_start":12846370,"byte_end":12846375,"line_start":48,"line_end":48,"column_start":31,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":608,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/bilock.rs","byte_start":12846412,"byte_end":12846417,"line_start":49,"line_end":49,"column_start":31,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":609,"kind":"Inherent","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/bilock.rs","byte_start":12846433,"byte_end":12846439,"line_start":51,"line_end":51,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":16527},{"krate":0,"index":16528},{"krate":0,"index":16530},{"krate":0,"index":16531}],"docs":"","sig":null,"attributes":[]},{"id":610,"kind":"Inherent","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/bilock.rs","byte_start":12852059,"byte_end":12852064,"line_start":184,"line_end":184,"column_start":16,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":16534}],"docs":"","sig":null,"attributes":[]},{"id":611,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/bilock.rs","byte_start":12852186,"byte_end":12852191,"line_start":190,"line_end":190,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":16537}],"docs":"","sig":null,"attributes":[]},{"id":612,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/bilock.rs","byte_start":12852519,"byte_end":12852531,"line_start":201,"line_end":201,"column_start":24,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":16545}],"docs":"","sig":null,"attributes":[]},{"id":613,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/bilock.rs","byte_start":12852695,"byte_end":12852707,"line_start":207,"line_end":207,"column_start":26,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":16548}],"docs":"","sig":null,"attributes":[]},{"id":614,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/bilock.rs","byte_start":12852928,"byte_end":12852940,"line_start":214,"line_end":214,"column_start":47,"column_end":59},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":615,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/bilock.rs","byte_start":12853322,"byte_end":12853333,"line_start":227,"line_end":227,"column_start":19,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":16553},{"krate":0,"index":16554}],"docs":"","sig":null,"attributes":[]},{"id":616,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/bilock.rs","byte_start":12853496,"byte_end":12853507,"line_start":234,"line_end":234,"column_start":29,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":16557}],"docs":"","sig":null,"attributes":[]},{"id":617,"kind":"Inherent","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/bilock.rs","byte_start":12853645,"byte_end":12853656,"line_start":240,"line_end":240,"column_start":9,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":16560}],"docs":"","sig":null,"attributes":[]},{"id":618,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/bilock.rs","byte_start":12854008,"byte_end":12854019,"line_start":249,"line_end":249,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":16563}],"docs":"","sig":null,"attributes":[]},{"id":619,"kind":"Inherent","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/abortable.rs","byte_start":12855332,"byte_end":12855341,"line_start":22,"line_end":22,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":16626},{"krate":0,"index":16627}],"docs":"","sig":null,"attributes":[]},{"id":620,"kind":"Inherent","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/abortable.rs","byte_start":12857614,"byte_end":12857625,"line_start":87,"line_end":87,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":16629}],"docs":"","sig":null,"attributes":[]},{"id":621,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/abortable.rs","byte_start":12858408,"byte_end":12858415,"line_start":112,"line_end":112,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":16631}],"docs":"","sig":null,"attributes":[]},{"id":622,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/abortable.rs","byte_start":12858598,"byte_end":12858605,"line_start":119,"line_end":119,"column_start":28,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":623,"kind":"Inherent","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/abortable.rs","byte_start":12858618,"byte_end":12858627,"line_start":121,"line_end":121,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":16635}],"docs":"","sig":null,"attributes":[]},{"id":624,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/abortable.rs","byte_start":12859616,"byte_end":12859625,"line_start":152,"line_end":152,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":16640},{"krate":0,"index":16641}],"docs":"","sig":null,"attributes":[]},{"id":625,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/abortable.rs","byte_start":12859864,"byte_end":12859873,"line_start":163,"line_end":163,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":16645},{"krate":0,"index":16646}],"docs":"","sig":null,"attributes":[]},{"id":626,"kind":"Inherent","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/abortable.rs","byte_start":12860132,"byte_end":12860143,"line_start":174,"line_end":174,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":16649}],"docs":"","sig":null,"attributes":[]},{"id":627,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/fns.rs","byte_start":545473,"byte_end":545474,"line_start":9,"line_end":9,"column_start":30,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":7824},{"krate":0,"index":7825}],"docs":"","sig":null,"attributes":[]},{"id":628,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/fns.rs","byte_start":545709,"byte_end":545710,"line_start":23,"line_end":23,"column_start":29,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":7833}],"docs":"","sig":null,"attributes":[]},{"id":629,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/fns.rs","byte_start":545980,"byte_end":545981,"line_start":38,"line_end":38,"column_start":26,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":7841}],"docs":"","sig":null,"attributes":[]},{"id":630,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/fns.rs","byte_start":546997,"byte_end":547001,"line_start":76,"line_end":76,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":7849}],"docs":"","sig":null,"attributes":[]},{"id":631,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/fns.rs","byte_start":547095,"byte_end":547099,"line_start":82,"line_end":82,"column_start":27,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":7853},{"krate":0,"index":7854}],"docs":"","sig":null,"attributes":[]},{"id":637,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/fns.rs","byte_start":547358,"byte_end":547365,"line_start":94,"line_end":94,"column_start":30,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":7859},{"krate":0,"index":7860}],"docs":"","sig":null,"attributes":[]},{"id":638,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/fns.rs","byte_start":547588,"byte_end":547595,"line_start":104,"line_end":104,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":7865}],"docs":"","sig":null,"attributes":[]},{"id":639,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/fns.rs","byte_start":547786,"byte_end":547793,"line_start":113,"line_end":113,"column_start":26,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":7870}],"docs":"","sig":null,"attributes":[]},{"id":640,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/fns.rs","byte_start":548098,"byte_end":548111,"line_start":129,"line_end":129,"column_start":35,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":7876},{"krate":0,"index":7877}],"docs":"","sig":null,"attributes":[]},{"id":646,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/fns.rs","byte_start":548528,"byte_end":548537,"line_start":144,"line_end":144,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":7882},{"krate":0,"index":7883}],"docs":"","sig":null,"attributes":[]},{"id":647,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/fns.rs","byte_start":548821,"byte_end":548830,"line_start":155,"line_end":155,"column_start":26,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":7888}],"docs":"","sig":null,"attributes":[]},{"id":648,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/fns.rs","byte_start":549092,"byte_end":549101,"line_start":165,"line_end":165,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":7893}],"docs":"","sig":null,"attributes":[]},{"id":649,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/fns.rs","byte_start":549423,"byte_end":549430,"line_start":181,"line_end":181,"column_start":41,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":7900},{"krate":0,"index":7901}],"docs":"","sig":null,"attributes":[]},{"id":650,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/fns.rs","byte_start":549649,"byte_end":549656,"line_start":190,"line_end":190,"column_start":40,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":7907}],"docs":"","sig":null,"attributes":[]},{"id":651,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/fns.rs","byte_start":549834,"byte_end":549841,"line_start":198,"line_end":198,"column_start":37,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":7913}],"docs":"","sig":null,"attributes":[]},{"id":652,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/fns.rs","byte_start":550142,"byte_end":550150,"line_start":213,"line_end":213,"column_start":41,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":7921},{"krate":0,"index":7922}],"docs":"","sig":null,"attributes":[]},{"id":653,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/fns.rs","byte_start":550373,"byte_end":550381,"line_start":222,"line_end":222,"column_start":40,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":7928}],"docs":"","sig":null,"attributes":[]},{"id":654,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/fns.rs","byte_start":550563,"byte_end":550571,"line_start":230,"line_end":230,"column_start":37,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":7934}],"docs":"","sig":null,"attributes":[]},{"id":655,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/fns.rs","byte_start":550881,"byte_end":550892,"line_start":245,"line_end":245,"column_start":49,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":7943},{"krate":0,"index":7944}],"docs":"","sig":null,"attributes":[]},{"id":656,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/fns.rs","byte_start":551152,"byte_end":551163,"line_start":256,"line_end":256,"column_start":48,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":7950}],"docs":"","sig":null,"attributes":[]},{"id":657,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/fns.rs","byte_start":551400,"byte_end":551411,"line_start":266,"line_end":266,"column_start":45,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":7956}],"docs":"","sig":null,"attributes":[]},{"id":658,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/fns.rs","byte_start":551778,"byte_end":551790,"line_start":283,"line_end":283,"column_start":49,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":7964},{"krate":0,"index":7965}],"docs":"","sig":null,"attributes":[]},{"id":659,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/fns.rs","byte_start":552051,"byte_end":552063,"line_start":294,"line_end":294,"column_start":48,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":7971}],"docs":"","sig":null,"attributes":[]},{"id":660,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/fns.rs","byte_start":552301,"byte_end":552313,"line_start":304,"line_end":304,"column_start":45,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":7977}],"docs":"","sig":null,"attributes":[]},{"id":661,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/fns.rs","byte_start":552932,"byte_end":552946,"line_start":326,"line_end":326,"column_start":41,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":7990},{"krate":0,"index":7991}],"docs":"","sig":null,"attributes":[]},{"id":662,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/fns.rs","byte_start":553169,"byte_end":553183,"line_start":335,"line_end":335,"column_start":40,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":7997}],"docs":"","sig":null,"attributes":[]},{"id":663,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/fns.rs","byte_start":553384,"byte_end":553398,"line_start":343,"line_end":343,"column_start":37,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":8003}],"docs":"","sig":null,"attributes":[]},{"id":664,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/fns.rs","byte_start":553704,"byte_end":553710,"line_start":357,"line_end":357,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":8013}],"docs":"","sig":null,"attributes":[]},{"id":665,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/fns.rs","byte_start":553803,"byte_end":553809,"line_start":362,"line_end":362,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":8017},{"krate":0,"index":8018}],"docs":"","sig":null,"attributes":[]},{"id":671,"kind":"Inherent","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/unfold_state.rs","byte_start":554414,"byte_end":554425,"line_start":22,"line_end":22,"column_start":12,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":8029},{"krate":0,"index":8030}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lib.rs","byte_start":11238,"byte_end":11244,"line_start":301,"line_end":301,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":163}},{"kind":"Mod","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lib.rs","byte_start":11339,"byte_end":11345,"line_start":305,"line_end":305,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":2028}},{"kind":"Mod","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":170859,"byte_end":170876,"line_start":101,"line_end":101,"column_start":13,"column_end":30},"ref_id":{"krate":0,"index":14535}},{"kind":"Mod","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":171025,"byte_end":171035,"line_start":107,"line_end":107,"column_start":13,"column_end":23},"ref_id":{"krate":0,"index":14937}},{"kind":"Mod","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lib.rs","byte_start":11513,"byte_end":11517,"line_start":311,"line_end":311,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":5445}},{"kind":"Mod","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lib.rs","byte_start":11606,"byte_end":11610,"line_start":316,"line_end":316,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":6205}},{"kind":"Mod","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lib.rs","byte_start":11621,"byte_end":11626,"line_start":318,"line_end":318,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":6299}},{"kind":"Mod","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lib.rs","byte_start":11824,"byte_end":11826,"line_start":327,"line_end":327,"column_start":9,"column_end":11},"ref_id":{"krate":0,"index":6301}},{"kind":"Mod","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lib.rs","byte_start":12065,"byte_end":12069,"line_start":337,"line_end":337,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":7804}}],"macro_refs":[],"relations":[{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/async_await/poll.rs","byte_start":14590,"byte_end":14598,"line_start":34,"line_end":34,"column_start":36,"column_end":44},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":45},"to":{"krate":2,"index":12101}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/async_await/pending.rs","byte_start":15766,"byte_end":15777,"line_start":33,"line_end":33,"column_start":17,"column_end":28},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":69},"to":{"krate":2,"index":12101}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/flatten.rs","byte_start":58672,"byte_end":58679,"line_start":20,"line_end":20,"column_start":18,"column_end":25},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":8043},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/flatten.rs","byte_start":58809,"byte_end":58816,"line_start":26,"line_end":26,"column_start":27,"column_end":34},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":8043},"to":{"krate":19,"index":27}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/flatten.rs","byte_start":59041,"byte_end":59048,"line_start":39,"line_end":39,"column_start":22,"column_end":29},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":8043},"to":{"krate":2,"index":12101}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/flatten.rs","byte_start":59822,"byte_end":59829,"line_start":64,"line_end":64,"column_start":27,"column_end":34},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":8043},"to":{"krate":19,"index":110}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/flatten.rs","byte_start":60054,"byte_end":60061,"line_start":77,"line_end":77,"column_start":22,"column_end":29},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":8043},"to":{"krate":19,"index":96}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/flatten.rs","byte_start":60914,"byte_end":60921,"line_start":105,"line_end":105,"column_start":32,"column_end":39},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":8043},"to":{"krate":23,"index":17}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/fuse.rs","byte_start":63075,"byte_end":63079,"line_start":17,"line_end":17,"column_start":11,"column_end":15},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":8091},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/fuse.rs","byte_start":63186,"byte_end":63190,"line_start":23,"line_end":23,"column_start":19,"column_end":23},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":8091},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/fuse.rs","byte_start":64919,"byte_end":64923,"line_start":74,"line_end":74,"column_start":35,"column_end":39},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":8091},"to":{"krate":19,"index":27}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/fuse.rs","byte_start":65036,"byte_end":65040,"line_start":80,"line_end":80,"column_start":30,"column_end":34},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":8091},"to":{"krate":2,"index":12101}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/map.rs","byte_start":66018,"byte_end":66021,"line_start":25,"line_end":25,"column_start":14,"column_end":17},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":8126},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/map.rs","byte_start":66190,"byte_end":66193,"line_start":32,"line_end":32,"column_start":33,"column_end":36},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":8126},"to":{"krate":19,"index":27}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/map.rs","byte_start":66455,"byte_end":66458,"line_start":45,"line_end":45,"column_start":28,"column_end":31},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":8126},"to":{"krate":2,"index":12101}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/catch_unwind.rs","byte_start":67664,"byte_end":67675,"line_start":19,"line_end":19,"column_start":11,"column_end":22},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":8687},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/catch_unwind.rs","byte_start":67818,"byte_end":67829,"line_start":28,"line_end":28,"column_start":22,"column_end":33},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":8687},"to":{"krate":2,"index":12101}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/remote_handle.rs","byte_start":69740,"byte_end":69752,"line_start":47,"line_end":47,"column_start":9,"column_end":21},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":8718},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/remote_handle.rs","byte_start":70059,"byte_end":70071,"line_start":57,"line_end":57,"column_start":29,"column_end":41},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":8718},"to":{"krate":2,"index":12101}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/remote_handle.rs","byte_start":71112,"byte_end":71118,"line_start":86,"line_end":86,"column_start":47,"column_end":53},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":8725},"to":{"krate":2,"index":8887}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/remote_handle.rs","byte_start":71288,"byte_end":71294,"line_start":92,"line_end":92,"column_start":30,"column_end":36},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":8725},"to":{"krate":2,"index":12101}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/shared.rs","byte_start":73283,"byte_end":73293,"line_start":32,"line_end":32,"column_start":29,"column_end":39},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":597},"to":{"krate":2,"index":2474}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/shared.rs","byte_start":73494,"byte_end":73500,"line_start":40,"line_end":40,"column_start":29,"column_end":35},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":586},"to":{"krate":2,"index":2894}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/shared.rs","byte_start":73543,"byte_end":73549,"line_start":42,"line_end":42,"column_start":34,"column_end":40},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":586},"to":{"krate":2,"index":8887}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/shared.rs","byte_start":73807,"byte_end":73812,"line_start":51,"line_end":51,"column_start":34,"column_end":39},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":590},"to":{"krate":2,"index":8887}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/shared.rs","byte_start":73966,"byte_end":73976,"line_start":57,"line_end":57,"column_start":34,"column_end":44},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":597},"to":{"krate":2,"index":8887}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/shared.rs","byte_start":74208,"byte_end":74213,"line_start":68,"line_end":68,"column_start":27,"column_end":32},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":590},"to":{"krate":2,"index":2853}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/shared.rs","byte_start":74310,"byte_end":74315,"line_start":75,"line_end":75,"column_start":27,"column_end":32},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":590},"to":{"krate":2,"index":2865}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/shared.rs","byte_start":74559,"byte_end":74565,"line_start":89,"line_end":89,"column_start":19,"column_end":25},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":586},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/shared.rs","byte_start":74989,"byte_end":74995,"line_start":103,"line_end":103,"column_start":11,"column_end":17},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":586},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/shared.rs","byte_start":77061,"byte_end":77066,"line_start":160,"line_end":160,"column_start":11,"column_end":16},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":590},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/shared.rs","byte_start":78762,"byte_end":78768,"line_start":209,"line_end":209,"column_start":27,"column_end":33},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":586},"to":{"krate":19,"index":27}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/shared.rs","byte_start":78920,"byte_end":78926,"line_start":219,"line_end":219,"column_start":22,"column_end":28},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":586},"to":{"krate":2,"index":12101}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/shared.rs","byte_start":80515,"byte_end":80520,"line_start":267,"line_end":267,"column_start":23,"column_end":28},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":656},"to":{"krate":2,"index":3088}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/shared.rs","byte_start":82227,"byte_end":82233,"line_start":324,"line_end":324,"column_start":21,"column_end":27},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":586},"to":{"krate":2,"index":2474}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/shared.rs","byte_start":82392,"byte_end":82398,"line_start":333,"line_end":333,"column_start":20,"column_end":26},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":586},"to":{"krate":2,"index":3088}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/shared.rs","byte_start":82826,"byte_end":82834,"line_start":350,"line_end":350,"column_start":18,"column_end":26},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":594},"to":{"krate":22,"index":327}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/shared.rs","byte_start":83193,"byte_end":83203,"line_start":363,"line_end":363,"column_start":19,"column_end":29},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":597},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":41823,"byte_end":41824,"line_start":119,"line_end":119,"column_start":31,"column_end":32},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":684},"to":{"krate":0,"index":685}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":41955,"byte_end":41961,"line_start":123,"line_end":123,"column_start":22,"column_end":28},"kind":"SuperTrait","from":{"krate":2,"index":12101},"to":{"krate":0,"index":685}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/into_future.rs","byte_start":105629,"byte_end":105639,"line_start":16,"line_end":16,"column_start":11,"column_end":21},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":8771},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/into_future.rs","byte_start":105790,"byte_end":105800,"line_start":23,"line_end":23,"column_start":52,"column_end":62},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":8771},"to":{"krate":19,"index":27}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/into_future.rs","byte_start":105923,"byte_end":105933,"line_start":29,"line_end":29,"column_start":33,"column_end":43},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":8771},"to":{"krate":2,"index":12101}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/try_flatten.rs","byte_start":106642,"byte_end":106652,"line_start":20,"line_end":20,"column_start":18,"column_end":28},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":8806},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/try_flatten.rs","byte_start":106782,"byte_end":106792,"line_start":26,"line_end":26,"column_start":27,"column_end":37},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":8806},"to":{"krate":19,"index":27}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/try_flatten.rs","byte_start":107035,"byte_end":107045,"line_start":39,"line_end":39,"column_start":22,"column_end":32},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":8806},"to":{"krate":2,"index":12101}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/try_flatten.rs","byte_start":107998,"byte_end":108008,"line_start":67,"line_end":67,"column_start":27,"column_end":37},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":8806},"to":{"krate":19,"index":110}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/try_flatten.rs","byte_start":108251,"byte_end":108261,"line_start":80,"line_end":80,"column_start":22,"column_end":32},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":8806},"to":{"krate":19,"index":96}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/try_flatten.rs","byte_start":109298,"byte_end":109308,"line_start":111,"line_end":111,"column_start":32,"column_end":42},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":8806},"to":{"krate":23,"index":17}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/try_flatten_err.rs","byte_start":111585,"byte_end":111598,"line_start":17,"line_end":17,"column_start":18,"column_end":31},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":8853},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/try_flatten_err.rs","byte_start":111728,"byte_end":111741,"line_start":23,"line_end":23,"column_start":27,"column_end":40},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":8853},"to":{"krate":19,"index":27}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/try_flatten_err.rs","byte_start":111984,"byte_end":111997,"line_start":36,"line_end":36,"column_start":22,"column_end":35},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":8853},"to":{"krate":2,"index":12101}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":88175,"byte_end":88178,"line_start":134,"line_end":134,"column_start":48,"column_end":51},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":985},"to":{"krate":0,"index":986}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":88261,"byte_end":88270,"line_start":137,"line_end":137,"column_start":25,"column_end":34},"kind":"SuperTrait","from":{"krate":19,"index":44},"to":{"krate":0,"index":986}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/lazy.rs","byte_start":113306,"byte_end":113310,"line_start":14,"line_end":14,"column_start":19,"column_end":23},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":9795},"to":{"krate":2,"index":2894}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/lazy.rs","byte_start":113906,"byte_end":113910,"line_start":42,"line_end":42,"column_start":28,"column_end":32},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":9795},"to":{"krate":19,"index":27}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/lazy.rs","byte_start":114054,"byte_end":114058,"line_start":51,"line_end":51,"column_start":23,"column_end":27},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":9795},"to":{"krate":2,"index":12101}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/pending.rs","byte_start":114661,"byte_end":114668,"line_start":14,"line_end":14,"column_start":25,"column_end":32},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":9801},"to":{"krate":19,"index":27}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/pending.rs","byte_start":115229,"byte_end":115236,"line_start":40,"line_end":40,"column_start":20,"column_end":27},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":9801},"to":{"krate":2,"index":12101}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/pending.rs","byte_start":115381,"byte_end":115388,"line_start":48,"line_end":48,"column_start":19,"column_end":26},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":9801},"to":{"krate":2,"index":2894}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/pending.rs","byte_start":115414,"byte_end":115421,"line_start":50,"line_end":50,"column_start":19,"column_end":26},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":9801},"to":{"krate":2,"index":2474}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/maybe_done.rs","byte_start":116175,"byte_end":116184,"line_start":24,"line_end":24,"column_start":37,"column_end":46},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":9807},"to":{"krate":2,"index":2894}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/maybe_done.rs","byte_start":116787,"byte_end":116796,"line_start":47,"line_end":47,"column_start":19,"column_end":28},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":9807},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/maybe_done.rs","byte_start":117894,"byte_end":117903,"line_start":79,"line_end":79,"column_start":35,"column_end":44},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":9807},"to":{"krate":19,"index":27}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/maybe_done.rs","byte_start":118104,"byte_end":118113,"line_start":88,"line_end":88,"column_start":30,"column_end":39},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":9807},"to":{"krate":2,"index":12101}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_maybe_done.rs","byte_start":119433,"byte_end":119445,"line_start":25,"line_end":25,"column_start":40,"column_end":52},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":9820},"to":{"krate":2,"index":2894}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_maybe_done.rs","byte_start":119671,"byte_end":119683,"line_start":32,"line_end":32,"column_start":22,"column_end":34},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":9820},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_maybe_done.rs","byte_start":120796,"byte_end":120808,"line_start":64,"line_end":64,"column_start":38,"column_end":50},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":9820},"to":{"krate":19,"index":27}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_maybe_done.rs","byte_start":121012,"byte_end":121024,"line_start":73,"line_end":73,"column_start":33,"column_end":45},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":9820},"to":{"krate":2,"index":12101}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/option.rs","byte_start":122681,"byte_end":122693,"line_start":34,"line_end":34,"column_start":28,"column_end":40},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":9838},"to":{"krate":2,"index":12101}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/option.rs","byte_start":123007,"byte_end":123019,"line_start":45,"line_end":45,"column_start":38,"column_end":50},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":9838},"to":{"krate":19,"index":27}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/option.rs","byte_start":123206,"byte_end":123218,"line_start":54,"line_end":54,"column_start":29,"column_end":41},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":9838},"to":{"krate":2,"index":2759}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/poll_fn.rs","byte_start":123656,"byte_end":123662,"line_start":15,"line_end":15,"column_start":19,"column_end":25},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":1307},"to":{"krate":2,"index":2894}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/poll_fn.rs","byte_start":124356,"byte_end":124362,"line_start":43,"line_end":43,"column_start":24,"column_end":30},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":1307},"to":{"krate":2,"index":8887}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/poll_fn.rs","byte_start":124504,"byte_end":124510,"line_start":49,"line_end":49,"column_start":23,"column_end":29},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":1307},"to":{"krate":2,"index":12101}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/ready.rs","byte_start":125013,"byte_end":125018,"line_start":11,"line_end":11,"column_start":9,"column_end":14},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":9872},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/ready.rs","byte_start":125197,"byte_end":125202,"line_start":19,"line_end":19,"column_start":19,"column_end":24},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":9872},"to":{"krate":2,"index":2894}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/ready.rs","byte_start":125234,"byte_end":125239,"line_start":21,"line_end":21,"column_start":25,"column_end":30},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":9872},"to":{"krate":19,"index":27}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/ready.rs","byte_start":125336,"byte_end":125341,"line_start":27,"line_end":27,"column_start":20,"column_end":25},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":9872},"to":{"krate":2,"index":12101}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join_all.rs","byte_start":132955,"byte_end":132962,"line_start":31,"line_end":31,"column_start":24,"column_end":31},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":1502},"to":{"krate":2,"index":8887}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join_all.rs","byte_start":134753,"byte_end":134760,"line_start":87,"line_end":87,"column_start":20,"column_end":27},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":1502},"to":{"krate":2,"index":12101}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join_all.rs","byte_start":135423,"byte_end":135430,"line_start":112,"line_end":112,"column_start":37,"column_end":44},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":1502},"to":{"krate":2,"index":7143}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select.rs","byte_start":135926,"byte_end":135932,"line_start":14,"line_end":14,"column_start":36,"column_end":42},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":10226},"to":{"krate":2,"index":2894}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select.rs","byte_start":138368,"byte_end":138374,"line_start":94,"line_end":94,"column_start":23,"column_end":29},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":10226},"to":{"krate":2,"index":12101}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select.rs","byte_start":139078,"byte_end":139084,"line_start":116,"line_end":116,"column_start":28,"column_end":34},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":10226},"to":{"krate":19,"index":27}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select_all.rs","byte_start":139647,"byte_end":139656,"line_start":17,"line_end":17,"column_start":28,"column_end":37},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":10234},"to":{"krate":2,"index":2894}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select_all.rs","byte_start":140663,"byte_end":140672,"line_start":44,"line_end":44,"column_start":11,"column_end":20},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":10234},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select_all.rs","byte_start":140855,"byte_end":140864,"line_start":51,"line_end":51,"column_start":38,"column_end":47},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":10234},"to":{"krate":2,"index":12101}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select_all.rs","byte_start":141534,"byte_end":141543,"line_start":70,"line_end":70,"column_start":49,"column_end":58},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":10234},"to":{"krate":2,"index":7143}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join_all.rs","byte_start":150151,"byte_end":150161,"line_start":37,"line_end":37,"column_start":24,"column_end":34},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":1758},"to":{"krate":2,"index":8887}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join_all.rs","byte_start":151991,"byte_end":152001,"line_start":97,"line_end":97,"column_start":20,"column_end":30},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":1758},"to":{"krate":2,"index":12101}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join_all.rs","byte_start":153149,"byte_end":153159,"line_start":133,"line_end":133,"column_start":40,"column_end":50},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":1758},"to":{"krate":2,"index":7143}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_select.rs","byte_start":153641,"byte_end":153650,"line_start":13,"line_end":13,"column_start":36,"column_end":45},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":10562},"to":{"krate":2,"index":2894}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_select.rs","byte_start":155489,"byte_end":155498,"line_start":61,"line_end":61,"column_start":37,"column_end":46},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":10562},"to":{"krate":2,"index":12101}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select_ok.rs","byte_start":156860,"byte_end":156868,"line_start":17,"line_end":17,"column_start":28,"column_end":36},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":10570},"to":{"krate":2,"index":2894}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select_ok.rs","byte_start":157946,"byte_end":157954,"line_start":45,"line_end":45,"column_start":41,"column_end":49},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":10570},"to":{"krate":2,"index":12101}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select_ok.rs","byte_start":159385,"byte_end":159393,"line_start":81,"line_end":81,"column_start":52,"column_end":60},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":10570},"to":{"krate":2,"index":7143}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/either.rs","byte_start":160372,"byte_end":160378,"line_start":35,"line_end":35,"column_start":12,"column_end":18},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":10576},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/either.rs","byte_start":160717,"byte_end":160723,"line_start":46,"line_end":46,"column_start":15,"column_end":21},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":10576},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/either.rs","byte_start":161108,"byte_end":161114,"line_start":58,"line_end":58,"column_start":15,"column_end":21},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":10576},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/either.rs","byte_start":161495,"byte_end":161501,"line_start":70,"line_end":70,"column_start":9,"column_end":15},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":10576},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/either.rs","byte_start":161742,"byte_end":161748,"line_start":80,"line_end":80,"column_start":23,"column_end":29},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":10576},"to":{"krate":2,"index":12101}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/either.rs","byte_start":162087,"byte_end":162093,"line_start":95,"line_end":95,"column_start":28,"column_end":34},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":10576},"to":{"krate":19,"index":27}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/either.rs","byte_start":162369,"byte_end":162375,"line_start":108,"line_end":108,"column_start":23,"column_end":29},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":10576},"to":{"krate":19,"index":96}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/either.rs","byte_start":162910,"byte_end":162916,"line_start":130,"line_end":130,"column_start":28,"column_end":34},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":10576},"to":{"krate":19,"index":110}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/either.rs","byte_start":163223,"byte_end":163229,"line_start":144,"line_end":144,"column_start":33,"column_end":39},"kind":{"Impl":{"id":103}},"from":{"krate":0,"index":10576},"to":{"krate":23,"index":17}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/either.rs","byte_start":164662,"byte_end":164668,"line_start":193,"line_end":193,"column_start":30,"column_end":36},"kind":{"Impl":{"id":104}},"from":{"krate":0,"index":10576},"to":{"krate":27,"index":39}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/either.rs","byte_start":165723,"byte_end":165729,"line_start":229,"line_end":229,"column_start":31,"column_end":37},"kind":{"Impl":{"id":105}},"from":{"krate":0,"index":10576},"to":{"krate":27,"index":42}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/either.rs","byte_start":167036,"byte_end":167042,"line_start":271,"line_end":271,"column_start":30,"column_end":36},"kind":{"Impl":{"id":106}},"from":{"krate":0,"index":10576},"to":{"krate":27,"index":47}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/either.rs","byte_start":167472,"byte_end":167478,"line_start":288,"line_end":288,"column_start":33,"column_end":39},"kind":{"Impl":{"id":107}},"from":{"krate":0,"index":10576},"to":{"krate":27,"index":49}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/chain.rs","byte_start":222782,"byte_end":222787,"line_start":20,"line_end":20,"column_start":16,"column_end":21},"kind":{"Impl":{"id":108}},"from":{"krate":0,"index":10635},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/chain.rs","byte_start":223013,"byte_end":223018,"line_start":30,"line_end":30,"column_start":32,"column_end":37},"kind":{"Impl":{"id":109}},"from":{"krate":0,"index":10635},"to":{"krate":19,"index":110}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/chain.rs","byte_start":223227,"byte_end":223232,"line_start":40,"line_end":40,"column_start":27,"column_end":32},"kind":{"Impl":{"id":110}},"from":{"krate":0,"index":10635},"to":{"krate":19,"index":96}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/collect.rs","byte_start":224828,"byte_end":224835,"line_start":20,"line_end":20,"column_start":30,"column_end":37},"kind":{"Impl":{"id":111}},"from":{"krate":0,"index":10684},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/collect.rs","byte_start":225100,"byte_end":225107,"line_start":30,"line_end":30,"column_start":29,"column_end":36},"kind":{"Impl":{"id":112}},"from":{"krate":0,"index":10684},"to":{"krate":19,"index":27}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/collect.rs","byte_start":225285,"byte_end":225292,"line_start":40,"line_end":40,"column_start":24,"column_end":31},"kind":{"Impl":{"id":113}},"from":{"krate":0,"index":10684},"to":{"krate":2,"index":12101}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/unzip.rs","byte_start":226318,"byte_end":226323,"line_start":21,"line_end":21,"column_start":50,"column_end":55},"kind":{"Impl":{"id":114}},"from":{"krate":0,"index":10735},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/unzip.rs","byte_start":226717,"byte_end":226722,"line_start":32,"line_end":32,"column_start":46,"column_end":51},"kind":{"Impl":{"id":115}},"from":{"krate":0,"index":10735},"to":{"krate":19,"index":27}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/unzip.rs","byte_start":226972,"byte_end":226977,"line_start":43,"line_end":43,"column_start":41,"column_end":46},"kind":{"Impl":{"id":116}},"from":{"krate":0,"index":10735},"to":{"krate":2,"index":12101}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/concat.rs","byte_start":228102,"byte_end":228108,"line_start":19,"line_end":19,"column_start":10,"column_end":16},"kind":{"Impl":{"id":117}},"from":{"krate":0,"index":10793},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/concat.rs","byte_start":228328,"byte_end":228334,"line_start":29,"line_end":29,"column_start":21,"column_end":27},"kind":{"Impl":{"id":118}},"from":{"krate":0,"index":10793},"to":{"krate":2,"index":12101}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/concat.rs","byte_start":229042,"byte_end":229048,"line_start":54,"line_end":54,"column_start":26,"column_end":32},"kind":{"Impl":{"id":119}},"from":{"krate":0,"index":10793},"to":{"krate":19,"index":27}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/cycle.rs","byte_start":229711,"byte_end":229716,"line_start":19,"line_end":19,"column_start":10,"column_end":15},"kind":{"Impl":{"id":120}},"from":{"krate":0,"index":10833},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/cycle.rs","byte_start":229872,"byte_end":229877,"line_start":28,"line_end":28,"column_start":21,"column_end":26},"kind":{"Impl":{"id":121}},"from":{"krate":0,"index":10833},"to":{"krate":19,"index":96}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/cycle.rs","byte_start":230626,"byte_end":230631,"line_start":56,"line_end":56,"column_start":26,"column_end":31},"kind":{"Impl":{"id":122}},"from":{"krate":0,"index":10833},"to":{"krate":19,"index":110}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/enumerate.rs","byte_start":231379,"byte_end":231388,"line_start":20,"line_end":20,"column_start":18,"column_end":27},"kind":{"Impl":{"id":123}},"from":{"krate":0,"index":10873},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/enumerate.rs","byte_start":231574,"byte_end":231583,"line_start":28,"line_end":28,"column_start":48,"column_end":57},"kind":{"Impl":{"id":124}},"from":{"krate":0,"index":10873},"to":{"krate":19,"index":110}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/enumerate.rs","byte_start":231701,"byte_end":231710,"line_start":34,"line_end":34,"column_start":29,"column_end":38},"kind":{"Impl":{"id":125}},"from":{"krate":0,"index":10873},"to":{"krate":19,"index":96}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/enumerate.rs","byte_start":232363,"byte_end":232372,"line_start":57,"line_end":57,"column_start":30,"column_end":39},"kind":{"Impl":{"id":126}},"from":{"krate":0,"index":10873},"to":{"krate":23,"index":17}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/filter.rs","byte_start":233151,"byte_end":233157,"line_start":27,"line_end":27,"column_start":33,"column_end":39},"kind":{"Impl":{"id":127}},"from":{"krate":0,"index":10916},"to":{"krate":2,"index":8887}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/filter.rs","byte_start":233630,"byte_end":233636,"line_start":43,"line_end":43,"column_start":18,"column_end":24},"kind":{"Impl":{"id":128}},"from":{"krate":0,"index":10916},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/filter.rs","byte_start":233959,"byte_end":233965,"line_start":56,"line_end":56,"column_start":34,"column_end":40},"kind":{"Impl":{"id":129}},"from":{"krate":0,"index":10916},"to":{"krate":19,"index":110}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/filter.rs","byte_start":234302,"byte_end":234308,"line_start":68,"line_end":68,"column_start":29,"column_end":35},"kind":{"Impl":{"id":130}},"from":{"krate":0,"index":10916},"to":{"krate":19,"index":96}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/filter.rs","byte_start":235687,"byte_end":235693,"line_start":108,"line_end":108,"column_start":38,"column_end":44},"kind":{"Impl":{"id":131}},"from":{"krate":0,"index":10916},"to":{"krate":23,"index":17}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/filter_map.rs","byte_start":236480,"byte_end":236489,"line_start":24,"line_end":24,"column_start":33,"column_end":42},"kind":{"Impl":{"id":132}},"from":{"krate":0,"index":10985},"to":{"krate":2,"index":8887}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/filter_map.rs","byte_start":236786,"byte_end":236795,"line_start":37,"line_end":37,"column_start":18,"column_end":27},"kind":{"Impl":{"id":133}},"from":{"krate":0,"index":10985},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/filter_map.rs","byte_start":237062,"byte_end":237071,"line_start":50,"line_end":50,"column_start":37,"column_end":46},"kind":{"Impl":{"id":134}},"from":{"krate":0,"index":10985},"to":{"krate":19,"index":110}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/filter_map.rs","byte_start":237338,"byte_end":237347,"line_start":61,"line_end":61,"column_start":32,"column_end":41},"kind":{"Impl":{"id":135}},"from":{"krate":0,"index":10985},"to":{"krate":19,"index":96}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/filter_map.rs","byte_start":238765,"byte_end":238774,"line_start":102,"line_end":102,"column_start":38,"column_end":47},"kind":{"Impl":{"id":136}},"from":{"krate":0,"index":10985},"to":{"krate":23,"index":17}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/flatten.rs","byte_start":239449,"byte_end":239456,"line_start":21,"line_end":21,"column_start":13,"column_end":20},"kind":{"Impl":{"id":137}},"from":{"krate":0,"index":11057},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/flatten.rs","byte_start":239625,"byte_end":239632,"line_start":29,"line_end":29,"column_start":26,"column_end":33},"kind":{"Impl":{"id":138}},"from":{"krate":0,"index":11057},"to":{"krate":19,"index":110}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/flatten.rs","byte_start":239824,"byte_end":239831,"line_start":39,"line_end":39,"column_start":21,"column_end":28},"kind":{"Impl":{"id":139}},"from":{"krate":0,"index":11057},"to":{"krate":19,"index":96}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/flatten.rs","byte_start":240653,"byte_end":240660,"line_start":66,"line_end":66,"column_start":30,"column_end":37},"kind":{"Impl":{"id":140}},"from":{"krate":0,"index":11057},"to":{"krate":23,"index":17}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/fold.rs","byte_start":241345,"byte_end":241349,"line_start":22,"line_end":22,"column_start":36,"column_end":40},"kind":{"Impl":{"id":141}},"from":{"krate":0,"index":11170},"to":{"krate":2,"index":8887}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/fold.rs","byte_start":241705,"byte_end":241709,"line_start":37,"line_end":37,"column_start":21,"column_end":25},"kind":{"Impl":{"id":142}},"from":{"krate":0,"index":11170},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/fold.rs","byte_start":241970,"byte_end":241974,"line_start":48,"line_end":48,"column_start":37,"column_end":41},"kind":{"Impl":{"id":143}},"from":{"krate":0,"index":11170},"to":{"krate":19,"index":27}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/fold.rs","byte_start":242209,"byte_end":242213,"line_start":59,"line_end":59,"column_start":32,"column_end":36},"kind":{"Impl":{"id":144}},"from":{"krate":0,"index":11170},"to":{"krate":2,"index":12101}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/forward.rs","byte_start":243884,"byte_end":243891,"line_start":24,"line_end":24,"column_start":20,"column_end":27},"kind":{"Impl":{"id":145}},"from":{"krate":0,"index":11248},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/forward.rs","byte_start":244091,"byte_end":244098,"line_start":30,"line_end":30,"column_start":39,"column_end":46},"kind":{"Impl":{"id":146}},"from":{"krate":0,"index":11248},"to":{"krate":19,"index":27}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/forward.rs","byte_start":244300,"byte_end":244307,"line_start":40,"line_end":40,"column_start":34,"column_end":41},"kind":{"Impl":{"id":147}},"from":{"krate":0,"index":11248},"to":{"krate":2,"index":12101}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/for_each.rs","byte_start":246112,"byte_end":246119,"line_start":21,"line_end":21,"column_start":33,"column_end":40},"kind":{"Impl":{"id":148}},"from":{"krate":0,"index":11362},"to":{"krate":2,"index":8887}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/for_each.rs","byte_start":246412,"byte_end":246419,"line_start":34,"line_end":34,"column_start":18,"column_end":25},"kind":{"Impl":{"id":149}},"from":{"krate":0,"index":11362},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/for_each.rs","byte_start":246650,"byte_end":246657,"line_start":45,"line_end":45,"column_start":34,"column_end":41},"kind":{"Impl":{"id":150}},"from":{"krate":0,"index":11362},"to":{"krate":19,"index":27}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/for_each.rs","byte_start":246896,"byte_end":246903,"line_start":56,"line_end":56,"column_start":29,"column_end":36},"kind":{"Impl":{"id":151}},"from":{"krate":0,"index":11362},"to":{"krate":2,"index":12101}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/fuse.rs","byte_start":248004,"byte_end":248008,"line_start":20,"line_end":20,"column_start":10,"column_end":14},"kind":{"Impl":{"id":152}},"from":{"krate":0,"index":11424},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/fuse.rs","byte_start":248505,"byte_end":248509,"line_start":37,"line_end":37,"column_start":33,"column_end":37},"kind":{"Impl":{"id":153}},"from":{"krate":0,"index":11424},"to":{"krate":19,"index":110}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/fuse.rs","byte_start":248607,"byte_end":248611,"line_start":43,"line_end":43,"column_start":28,"column_end":32},"kind":{"Impl":{"id":154}},"from":{"krate":0,"index":11424},"to":{"krate":19,"index":96}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/fuse.rs","byte_start":249297,"byte_end":249301,"line_start":71,"line_end":71,"column_start":51,"column_end":55},"kind":{"Impl":{"id":155}},"from":{"krate":0,"index":11424},"to":{"krate":23,"index":17}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/into_future.rs","byte_start":249813,"byte_end":249825,"line_start":15,"line_end":15,"column_start":26,"column_end":38},"kind":{"Impl":{"id":156}},"from":{"krate":0,"index":11467},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/into_future.rs","byte_start":252315,"byte_end":252327,"line_start":73,"line_end":73,"column_start":42,"column_end":54},"kind":{"Impl":{"id":157}},"from":{"krate":0,"index":11467},"to":{"krate":19,"index":27}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/into_future.rs","byte_start":252447,"byte_end":252459,"line_start":79,"line_end":79,"column_start":37,"column_end":49},"kind":{"Impl":{"id":158}},"from":{"krate":0,"index":11467},"to":{"krate":2,"index":12101}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/map.rs","byte_start":253344,"byte_end":253347,"line_start":22,"line_end":22,"column_start":28,"column_end":31},"kind":{"Impl":{"id":159}},"from":{"krate":0,"index":11551},"to":{"krate":2,"index":8887}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/map.rs","byte_start":253536,"byte_end":253539,"line_start":31,"line_end":31,"column_start":13,"column_end":16},"kind":{"Impl":{"id":160}},"from":{"krate":0,"index":11551},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/map.rs","byte_start":253708,"byte_end":253711,"line_start":39,"line_end":39,"column_start":29,"column_end":32},"kind":{"Impl":{"id":161}},"from":{"krate":0,"index":11551},"to":{"krate":19,"index":110}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/map.rs","byte_start":253879,"byte_end":253882,"line_start":49,"line_end":49,"column_start":24,"column_end":27},"kind":{"Impl":{"id":162}},"from":{"krate":0,"index":11551},"to":{"krate":19,"index":96}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/map.rs","byte_start":254424,"byte_end":254427,"line_start":69,"line_end":69,"column_start":34,"column_end":37},"kind":{"Impl":{"id":163}},"from":{"krate":0,"index":11551},"to":{"krate":23,"index":17}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/next.rs","byte_start":254994,"byte_end":254998,"line_start":14,"line_end":14,"column_start":36,"column_end":40},"kind":{"Impl":{"id":164}},"from":{"krate":0,"index":11697},"to":{"krate":2,"index":2894}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/next.rs","byte_start":255049,"byte_end":255053,"line_start":16,"line_end":16,"column_start":39,"column_end":43},"kind":{"Impl":{"id":165}},"from":{"krate":0,"index":11697},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/next.rs","byte_start":255204,"byte_end":255208,"line_start":22,"line_end":22,"column_start":56,"column_end":60},"kind":{"Impl":{"id":166}},"from":{"krate":0,"index":11697},"to":{"krate":19,"index":27}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/next.rs","byte_start":255347,"byte_end":255351,"line_start":28,"line_end":28,"column_start":46,"column_end":50},"kind":{"Impl":{"id":167}},"from":{"krate":0,"index":11697},"to":{"krate":2,"index":12101}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/select_next_some.rs","byte_start":256002,"byte_end":256016,"line_start":16,"line_end":16,"column_start":22,"column_end":36},"kind":{"Impl":{"id":168}},"from":{"krate":0,"index":11705},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/select_next_some.rs","byte_start":256167,"byte_end":256181,"line_start":22,"line_end":22,"column_start":56,"column_end":70},"kind":{"Impl":{"id":169}},"from":{"krate":0,"index":11705},"to":{"krate":19,"index":27}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/select_next_some.rs","byte_start":256325,"byte_end":256339,"line_start":28,"line_end":28,"column_start":51,"column_end":65},"kind":{"Impl":{"id":170}},"from":{"krate":0,"index":11705},"to":{"krate":2,"index":12101}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":257650,"byte_end":257658,"line_start":29,"line_end":29,"column_start":18,"column_end":26},"kind":{"Impl":{"id":171}},"from":{"krate":0,"index":11718},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":261624,"byte_end":261632,"line_start":141,"line_end":141,"column_start":34,"column_end":42},"kind":{"Impl":{"id":172}},"from":{"krate":0,"index":11718},"to":{"krate":19,"index":110}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":261774,"byte_end":261782,"line_start":147,"line_end":147,"column_start":28,"column_end":36},"kind":{"Impl":{"id":173}},"from":{"krate":0,"index":11718},"to":{"krate":19,"index":96}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":262567,"byte_end":262575,"line_start":172,"line_end":172,"column_start":30,"column_end":38},"kind":{"Impl":{"id":174}},"from":{"krate":0,"index":11718},"to":{"krate":23,"index":17}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":262941,"byte_end":262945,"line_start":189,"line_end":189,"column_start":25,"column_end":29},"kind":{"Impl":{"id":175}},"from":{"krate":0,"index":11761},"to":{"krate":2,"index":8887}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":263190,"byte_end":263194,"line_start":199,"line_end":199,"column_start":34,"column_end":38},"kind":{"Impl":{"id":176}},"from":{"krate":0,"index":11761},"to":{"krate":19,"index":27}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":263305,"byte_end":263309,"line_start":205,"line_end":205,"column_start":25,"column_end":29},"kind":{"Impl":{"id":177}},"from":{"krate":0,"index":11761},"to":{"krate":2,"index":12101}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":264014,"byte_end":264020,"line_start":231,"line_end":231,"column_start":28,"column_end":34},"kind":{"Impl":{"id":178}},"from":{"krate":0,"index":11802},"to":{"krate":2,"index":8887}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":264372,"byte_end":264378,"line_start":242,"line_end":242,"column_start":29,"column_end":35},"kind":{"Impl":{"id":179}},"from":{"krate":0,"index":11802},"to":{"krate":19,"index":27}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":264647,"byte_end":264653,"line_start":253,"line_end":253,"column_start":24,"column_end":30},"kind":{"Impl":{"id":180}},"from":{"krate":0,"index":11802},"to":{"krate":2,"index":12101}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":265914,"byte_end":265922,"line_start":291,"line_end":291,"column_start":28,"column_end":36},"kind":{"Impl":{"id":181}},"from":{"krate":0,"index":11851},"to":{"krate":2,"index":8887}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":266242,"byte_end":266250,"line_start":304,"line_end":304,"column_start":29,"column_end":37},"kind":{"Impl":{"id":182}},"from":{"krate":0,"index":11851},"to":{"krate":19,"index":27}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":266434,"byte_end":266442,"line_start":315,"line_end":315,"column_start":24,"column_end":32},"kind":{"Impl":{"id":183}},"from":{"krate":0,"index":11851},"to":{"krate":2,"index":12101}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":266813,"byte_end":266823,"line_start":333,"line_end":333,"column_start":34,"column_end":44},"kind":{"Impl":{"id":184}},"from":{"krate":0,"index":3079},"to":{"krate":0,"index":7816}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/skip.rs","byte_start":267488,"byte_end":267492,"line_start":20,"line_end":20,"column_start":18,"column_end":22},"kind":{"Impl":{"id":185}},"from":{"krate":0,"index":11905},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/skip.rs","byte_start":267683,"byte_end":267687,"line_start":28,"line_end":28,"column_start":39,"column_end":43},"kind":{"Impl":{"id":186}},"from":{"krate":0,"index":11905},"to":{"krate":19,"index":110}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/skip.rs","byte_start":267805,"byte_end":267809,"line_start":34,"line_end":34,"column_start":29,"column_end":33},"kind":{"Impl":{"id":187}},"from":{"krate":0,"index":11905},"to":{"krate":19,"index":96}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/skip.rs","byte_start":268620,"byte_end":268624,"line_start":63,"line_end":63,"column_start":30,"column_end":34},"kind":{"Impl":{"id":188}},"from":{"krate":0,"index":11905},"to":{"krate":23,"index":17}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/skip_while.rs","byte_start":269406,"byte_end":269415,"line_start":25,"line_end":25,"column_start":33,"column_end":42},"kind":{"Impl":{"id":189}},"from":{"krate":0,"index":11948},"to":{"krate":2,"index":8887}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/skip_while.rs","byte_start":269867,"byte_end":269876,"line_start":41,"line_end":41,"column_start":18,"column_end":27},"kind":{"Impl":{"id":190}},"from":{"krate":0,"index":11948},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/skip_while.rs","byte_start":270202,"byte_end":270211,"line_start":54,"line_end":54,"column_start":34,"column_end":43},"kind":{"Impl":{"id":191}},"from":{"krate":0,"index":11948},"to":{"krate":19,"index":110}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/skip_while.rs","byte_start":270459,"byte_end":270468,"line_start":65,"line_end":65,"column_start":29,"column_end":38},"kind":{"Impl":{"id":192}},"from":{"krate":0,"index":11948},"to":{"krate":19,"index":96}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/skip_while.rs","byte_start":272082,"byte_end":272091,"line_start":115,"line_end":115,"column_start":38,"column_end":47},"kind":{"Impl":{"id":193}},"from":{"krate":0,"index":11948},"to":{"krate":23,"index":17}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/take.rs","byte_start":272768,"byte_end":272772,"line_start":21,"line_end":21,"column_start":18,"column_end":22},"kind":{"Impl":{"id":194}},"from":{"krate":0,"index":12026},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/take.rs","byte_start":272945,"byte_end":272949,"line_start":29,"line_end":29,"column_start":21,"column_end":25},"kind":{"Impl":{"id":195}},"from":{"krate":0,"index":12026},"to":{"krate":19,"index":96}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/take.rs","byte_start":273921,"byte_end":273925,"line_start":68,"line_end":68,"column_start":26,"column_end":30},"kind":{"Impl":{"id":196}},"from":{"krate":0,"index":12026},"to":{"krate":19,"index":110}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/take.rs","byte_start":274173,"byte_end":274177,"line_start":79,"line_end":79,"column_start":30,"column_end":34},"kind":{"Impl":{"id":197}},"from":{"krate":0,"index":12026},"to":{"krate":23,"index":17}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/take_while.rs","byte_start":274948,"byte_end":274957,"line_start":25,"line_end":25,"column_start":33,"column_end":42},"kind":{"Impl":{"id":198}},"from":{"krate":0,"index":12069},"to":{"krate":2,"index":8887}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/take_while.rs","byte_start":275405,"byte_end":275414,"line_start":41,"line_end":41,"column_start":18,"column_end":27},"kind":{"Impl":{"id":199}},"from":{"krate":0,"index":12069},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/take_while.rs","byte_start":275733,"byte_end":275742,"line_start":54,"line_end":54,"column_start":29,"column_end":38},"kind":{"Impl":{"id":200}},"from":{"krate":0,"index":12069},"to":{"krate":19,"index":96}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/take_while.rs","byte_start":277261,"byte_end":277270,"line_start":104,"line_end":104,"column_start":34,"column_end":43},"kind":{"Impl":{"id":201}},"from":{"krate":0,"index":12069},"to":{"krate":19,"index":110}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/take_while.rs","byte_start":277626,"byte_end":277635,"line_start":117,"line_end":117,"column_start":38,"column_end":47},"kind":{"Impl":{"id":202}},"from":{"krate":0,"index":12069},"to":{"krate":23,"index":17}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/take_until.rs","byte_start":278654,"byte_end":278663,"line_start":30,"line_end":30,"column_start":30,"column_end":39},"kind":{"Impl":{"id":203}},"from":{"krate":0,"index":12142},"to":{"krate":2,"index":8887}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/take_until.rs","byte_start":278951,"byte_end":278960,"line_start":41,"line_end":41,"column_start":15,"column_end":24},"kind":{"Impl":{"id":204}},"from":{"krate":0,"index":12142},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/take_until.rs","byte_start":281077,"byte_end":281086,"line_start":111,"line_end":111,"column_start":26,"column_end":35},"kind":{"Impl":{"id":205}},"from":{"krate":0,"index":12142},"to":{"krate":19,"index":96}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/take_until.rs","byte_start":282118,"byte_end":282127,"line_start":150,"line_end":150,"column_start":31,"column_end":40},"kind":{"Impl":{"id":206}},"from":{"krate":0,"index":12142},"to":{"krate":19,"index":110}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/take_until.rs","byte_start":282364,"byte_end":282373,"line_start":162,"line_end":162,"column_start":35,"column_end":44},"kind":{"Impl":{"id":207}},"from":{"krate":0,"index":12142},"to":{"krate":23,"index":17}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/then.rs","byte_start":283069,"byte_end":283073,"line_start":23,"line_end":23,"column_start":33,"column_end":37},"kind":{"Impl":{"id":208}},"from":{"krate":0,"index":12203},"to":{"krate":2,"index":8887}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/then.rs","byte_start":283324,"byte_end":283328,"line_start":33,"line_end":33,"column_start":18,"column_end":22},"kind":{"Impl":{"id":209}},"from":{"krate":0,"index":12203},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/then.rs","byte_start":283574,"byte_end":283578,"line_start":45,"line_end":45,"column_start":34,"column_end":38},"kind":{"Impl":{"id":210}},"from":{"krate":0,"index":12203},"to":{"krate":19,"index":110}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/then.rs","byte_start":283804,"byte_end":283808,"line_start":56,"line_end":56,"column_start":29,"column_end":33},"kind":{"Impl":{"id":211}},"from":{"krate":0,"index":12203},"to":{"krate":19,"index":96}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/then.rs","byte_start":284987,"byte_end":284991,"line_start":94,"line_end":94,"column_start":38,"column_end":42},"kind":{"Impl":{"id":212}},"from":{"krate":0,"index":12203},"to":{"krate":23,"index":17}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/zip.rs","byte_start":285690,"byte_end":285693,"line_start":22,"line_end":22,"column_start":32,"column_end":35},"kind":{"Impl":{"id":213}},"from":{"krate":0,"index":12275},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/zip.rs","byte_start":287279,"byte_end":287282,"line_start":61,"line_end":61,"column_start":32,"column_end":35},"kind":{"Impl":{"id":214}},"from":{"krate":0,"index":12275},"to":{"krate":19,"index":110}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/zip.rs","byte_start":287477,"byte_end":287480,"line_start":71,"line_end":71,"column_start":27,"column_end":30},"kind":{"Impl":{"id":215}},"from":{"krate":0,"index":12275},"to":{"krate":19,"index":96}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/chunks.rs","byte_start":290175,"byte_end":290181,"line_start":24,"line_end":24,"column_start":18,"column_end":24},"kind":{"Impl":{"id":216}},"from":{"krate":0,"index":12330},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/chunks.rs","byte_start":290689,"byte_end":290695,"line_start":46,"line_end":46,"column_start":29,"column_end":35},"kind":{"Impl":{"id":217}},"from":{"krate":0,"index":12330},"to":{"krate":19,"index":96}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/chunks.rs","byte_start":292311,"byte_end":292317,"line_start":91,"line_end":91,"column_start":39,"column_end":45},"kind":{"Impl":{"id":218}},"from":{"krate":0,"index":12330},"to":{"krate":19,"index":110}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/chunks.rs","byte_start":292540,"byte_end":292546,"line_start":99,"line_end":99,"column_start":30,"column_end":36},"kind":{"Impl":{"id":219}},"from":{"krate":0,"index":12330},"to":{"krate":23,"index":17}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/ready_chunks.rs","byte_start":293289,"byte_end":293300,"line_start":23,"line_end":23,"column_start":18,"column_end":29},"kind":{"Impl":{"id":220}},"from":{"krate":0,"index":12382},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/ready_chunks.rs","byte_start":293652,"byte_end":293663,"line_start":40,"line_end":40,"column_start":29,"column_end":40},"kind":{"Impl":{"id":221}},"from":{"krate":0,"index":12382},"to":{"krate":19,"index":96}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/ready_chunks.rs","byte_start":295832,"byte_end":295843,"line_start":99,"line_end":99,"column_start":39,"column_end":50},"kind":{"Impl":{"id":222}},"from":{"krate":0,"index":12382},"to":{"krate":19,"index":110}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/ready_chunks.rs","byte_start":296066,"byte_end":296077,"line_start":107,"line_end":107,"column_start":30,"column_end":41},"kind":{"Impl":{"id":223}},"from":{"krate":0,"index":12382},"to":{"krate":23,"index":17}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/scan.rs","byte_start":296841,"byte_end":296845,"line_start":28,"line_end":28,"column_start":36,"column_end":40},"kind":{"Impl":{"id":224}},"from":{"krate":0,"index":12429},"to":{"krate":2,"index":8887}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/scan.rs","byte_start":297331,"byte_end":297335,"line_start":45,"line_end":45,"column_start":29,"column_end":33},"kind":{"Impl":{"id":225}},"from":{"krate":0,"index":12429},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/scan.rs","byte_start":297499,"byte_end":297503,"line_start":52,"line_end":52,"column_start":24,"column_end":28},"kind":{"Impl":{"id":226}},"from":{"krate":0,"index":12429},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/scan.rs","byte_start":297865,"byte_end":297869,"line_start":65,"line_end":65,"column_start":35,"column_end":39},"kind":{"Impl":{"id":227}},"from":{"krate":0,"index":12429},"to":{"krate":19,"index":96}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/scan.rs","byte_start":299096,"byte_end":299100,"line_start":108,"line_end":108,"column_start":40,"column_end":44},"kind":{"Impl":{"id":228}},"from":{"krate":0,"index":12429},"to":{"krate":19,"index":110}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/scan.rs","byte_start":299470,"byte_end":299474,"line_start":121,"line_end":121,"column_start":38,"column_end":42},"kind":{"Impl":{"id":229}},"from":{"krate":0,"index":12429},"to":{"krate":23,"index":17}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/buffer_unordered.rs","byte_start":12751635,"byte_end":12751650,"line_start":26,"line_end":26,"column_start":25,"column_end":40},"kind":{"Impl":{"id":230}},"from":{"krate":0,"index":17284},"to":{"krate":2,"index":8887}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/buffer_unordered.rs","byte_start":12751982,"byte_end":12751997,"line_start":39,"line_end":39,"column_start":10,"column_end":25},"kind":{"Impl":{"id":231}},"from":{"krate":0,"index":17284},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/buffer_unordered.rs","byte_start":12752384,"byte_end":12752399,"line_start":59,"line_end":59,"column_start":21,"column_end":36},"kind":{"Impl":{"id":232}},"from":{"krate":0,"index":17284},"to":{"krate":19,"index":96}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/buffer_unordered.rs","byte_start":12753853,"byte_end":12753868,"line_start":104,"line_end":104,"column_start":26,"column_end":41},"kind":{"Impl":{"id":233}},"from":{"krate":0,"index":17284},"to":{"krate":19,"index":110}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/buffer_unordered.rs","byte_start":12754152,"byte_end":12754167,"line_start":116,"line_end":116,"column_start":30,"column_end":45},"kind":{"Impl":{"id":234}},"from":{"krate":0,"index":17284},"to":{"krate":23,"index":17}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/buffered.rs","byte_start":12754978,"byte_end":12754986,"line_start":27,"line_end":27,"column_start":25,"column_end":33},"kind":{"Impl":{"id":235}},"from":{"krate":0,"index":17243},"to":{"krate":2,"index":8887}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/buffered.rs","byte_start":12755333,"byte_end":12755341,"line_start":41,"line_end":41,"column_start":10,"column_end":18},"kind":{"Impl":{"id":236}},"from":{"krate":0,"index":17243},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/buffered.rs","byte_start":12755621,"byte_end":12755629,"line_start":53,"line_end":53,"column_start":21,"column_end":29},"kind":{"Impl":{"id":237}},"from":{"krate":0,"index":17243},"to":{"krate":19,"index":96}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/buffered.rs","byte_start":12757147,"byte_end":12757155,"line_start":100,"line_end":100,"column_start":30,"column_end":38},"kind":{"Impl":{"id":238}},"from":{"krate":0,"index":17243},"to":{"krate":23,"index":17}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/for_each_concurrent.rs","byte_start":12757966,"byte_end":12757983,"line_start":23,"line_end":23,"column_start":33,"column_end":50},"kind":{"Impl":{"id":239}},"from":{"krate":0,"index":17182},"to":{"krate":2,"index":8887}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/for_each_concurrent.rs","byte_start":12758329,"byte_end":12758346,"line_start":37,"line_end":37,"column_start":18,"column_end":35},"kind":{"Impl":{"id":240}},"from":{"krate":0,"index":17182},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/for_each_concurrent.rs","byte_start":12758779,"byte_end":12758796,"line_start":54,"line_end":54,"column_start":34,"column_end":51},"kind":{"Impl":{"id":241}},"from":{"krate":0,"index":17182},"to":{"krate":19,"index":27}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/for_each_concurrent.rs","byte_start":12759026,"byte_end":12759043,"line_start":65,"line_end":65,"column_start":29,"column_end":46},"kind":{"Impl":{"id":242}},"from":{"krate":0,"index":17182},"to":{"krate":2,"index":12101}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/split.rs","byte_start":12761267,"byte_end":12761278,"line_start":16,"line_end":16,"column_start":19,"column_end":30},"kind":{"Impl":{"id":243}},"from":{"krate":0,"index":12788},"to":{"krate":2,"index":2894}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/split.rs","byte_start":12761301,"byte_end":12761312,"line_start":18,"line_end":18,"column_start":16,"column_end":27},"kind":{"Impl":{"id":244}},"from":{"krate":0,"index":12788},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/split.rs","byte_start":12761745,"byte_end":12761756,"line_start":30,"line_end":30,"column_start":28,"column_end":39},"kind":{"Impl":{"id":245}},"from":{"krate":0,"index":12788},"to":{"krate":19,"index":96}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/split.rs","byte_start":12762334,"byte_end":12762343,"line_start":52,"line_end":52,"column_start":25,"column_end":34},"kind":{"Impl":{"id":246}},"from":{"krate":0,"index":12795},"to":{"krate":2,"index":2894}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/split.rs","byte_start":12762391,"byte_end":12762400,"line_start":54,"line_end":54,"column_start":35,"column_end":44},"kind":{"Impl":{"id":247}},"from":{"krate":0,"index":12795},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/split.rs","byte_start":12762864,"byte_end":12762873,"line_start":63,"line_end":63,"column_start":27,"column_end":36},"kind":{"Impl":{"id":248}},"from":{"krate":0,"index":12795},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/split.rs","byte_start":12763595,"byte_end":12763604,"line_start":87,"line_end":87,"column_start":42,"column_end":51},"kind":{"Impl":{"id":249}},"from":{"krate":0,"index":12795},"to":{"krate":23,"index":17}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/split.rs","byte_start":12765211,"byte_end":12765223,"line_start":131,"line_end":131,"column_start":30,"column_end":42},"kind":{"Impl":{"id":250}},"from":{"krate":0,"index":12745},"to":{"krate":2,"index":8887}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/split.rs","byte_start":12765399,"byte_end":12765411,"line_start":137,"line_end":137,"column_start":32,"column_end":44},"kind":{"Impl":{"id":251}},"from":{"krate":0,"index":12745},"to":{"krate":2,"index":8894}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/split.rs","byte_start":12765660,"byte_end":12765672,"line_start":144,"line_end":144,"column_start":53,"column_end":65},"kind":{"Impl":{"id":252}},"from":{"krate":0,"index":12745},"to":{"krate":1,"index":2326}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/catch_unwind.rs","byte_start":300121,"byte_end":300132,"line_start":19,"line_end":19,"column_start":31,"column_end":42},"kind":{"Impl":{"id":253}},"from":{"krate":0,"index":12809},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/catch_unwind.rs","byte_start":300324,"byte_end":300335,"line_start":27,"line_end":27,"column_start":42,"column_end":53},"kind":{"Impl":{"id":254}},"from":{"krate":0,"index":12809},"to":{"krate":19,"index":96}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/catch_unwind.rs","byte_start":301187,"byte_end":301198,"line_start":57,"line_end":57,"column_start":52,"column_end":63},"kind":{"Impl":{"id":255}},"from":{"krate":0,"index":12809},"to":{"krate":19,"index":110}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":177983,"byte_end":177984,"line_start":208,"line_end":208,"column_start":31,"column_end":32},"kind":{"Impl":{"id":256}},"from":{"krate":0,"index":3743},"to":{"krate":0,"index":3744}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":178127,"byte_end":178133,"line_start":212,"line_end":212,"column_start":22,"column_end":28},"kind":"SuperTrait","from":{"krate":19,"index":96},"to":{"krate":0,"index":3744}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/and_then.rs","byte_start":338068,"byte_end":338075,"line_start":23,"line_end":23,"column_start":33,"column_end":40},"kind":{"Impl":{"id":257}},"from":{"krate":0,"index":12848},"to":{"krate":2,"index":8887}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/and_then.rs","byte_start":338368,"byte_end":338375,"line_start":36,"line_end":36,"column_start":18,"column_end":25},"kind":{"Impl":{"id":258}},"from":{"krate":0,"index":12848},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/and_then.rs","byte_start":338656,"byte_end":338663,"line_start":49,"line_end":49,"column_start":29,"column_end":36},"kind":{"Impl":{"id":259}},"from":{"krate":0,"index":12848},"to":{"krate":19,"index":96}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/and_then.rs","byte_start":339806,"byte_end":339813,"line_start":85,"line_end":85,"column_start":34,"column_end":41},"kind":{"Impl":{"id":260}},"from":{"krate":0,"index":12848},"to":{"krate":19,"index":110}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/and_then.rs","byte_start":340159,"byte_end":340166,"line_start":98,"line_end":98,"column_start":38,"column_end":45},"kind":{"Impl":{"id":261}},"from":{"krate":0,"index":12848},"to":{"krate":23,"index":17}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/into_stream.rs","byte_start":340731,"byte_end":340741,"line_start":18,"line_end":18,"column_start":10,"column_end":20},"kind":{"Impl":{"id":262}},"from":{"krate":0,"index":13152},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/into_stream.rs","byte_start":340934,"byte_end":340944,"line_start":27,"line_end":27,"column_start":51,"column_end":61},"kind":{"Impl":{"id":263}},"from":{"krate":0,"index":13152},"to":{"krate":19,"index":110}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/into_stream.rs","byte_start":341065,"byte_end":341075,"line_start":33,"line_end":33,"column_start":32,"column_end":42},"kind":{"Impl":{"id":264}},"from":{"krate":0,"index":13152},"to":{"krate":19,"index":96}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/into_stream.rs","byte_start":341499,"byte_end":341509,"line_start":48,"line_end":48,"column_start":42,"column_end":52},"kind":{"Impl":{"id":265}},"from":{"krate":0,"index":13152},"to":{"krate":23,"index":17}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/or_else.rs","byte_start":342174,"byte_end":342180,"line_start":23,"line_end":23,"column_start":33,"column_end":39},"kind":{"Impl":{"id":266}},"from":{"krate":0,"index":13347},"to":{"krate":2,"index":8887}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/or_else.rs","byte_start":342472,"byte_end":342478,"line_start":36,"line_end":36,"column_start":18,"column_end":24},"kind":{"Impl":{"id":267}},"from":{"krate":0,"index":13347},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/or_else.rs","byte_start":342756,"byte_end":342762,"line_start":49,"line_end":49,"column_start":29,"column_end":35},"kind":{"Impl":{"id":268}},"from":{"krate":0,"index":13347},"to":{"krate":19,"index":96}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/or_else.rs","byte_start":344039,"byte_end":344045,"line_start":89,"line_end":89,"column_start":34,"column_end":40},"kind":{"Impl":{"id":269}},"from":{"krate":0,"index":13347},"to":{"krate":19,"index":110}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/or_else.rs","byte_start":344388,"byte_end":344394,"line_start":102,"line_end":102,"column_start":38,"column_end":44},"kind":{"Impl":{"id":270}},"from":{"krate":0,"index":13347},"to":{"krate":23,"index":17}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_next.rs","byte_start":344949,"byte_end":344956,"line_start":14,"line_end":14,"column_start":36,"column_end":43},"kind":{"Impl":{"id":271}},"from":{"krate":0,"index":13412},"to":{"krate":2,"index":2894}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_next.rs","byte_start":345010,"byte_end":345017,"line_start":16,"line_end":16,"column_start":42,"column_end":49},"kind":{"Impl":{"id":272}},"from":{"krate":0,"index":13412},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_next.rs","byte_start":345180,"byte_end":345187,"line_start":22,"line_end":22,"column_start":68,"column_end":75},"kind":{"Impl":{"id":273}},"from":{"krate":0,"index":13412},"to":{"krate":19,"index":27}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_next.rs","byte_start":345329,"byte_end":345336,"line_start":28,"line_end":28,"column_start":49,"column_end":56},"kind":{"Impl":{"id":274}},"from":{"krate":0,"index":13412},"to":{"krate":2,"index":12101}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_for_each.rs","byte_start":346112,"byte_end":346122,"line_start":21,"line_end":21,"column_start":33,"column_end":43},"kind":{"Impl":{"id":275}},"from":{"krate":0,"index":13420},"to":{"krate":2,"index":8887}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_for_each.rs","byte_start":346418,"byte_end":346428,"line_start":34,"line_end":34,"column_start":18,"column_end":28},"kind":{"Impl":{"id":276}},"from":{"krate":0,"index":13420},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_for_each.rs","byte_start":346673,"byte_end":346683,"line_start":45,"line_end":45,"column_start":29,"column_end":39},"kind":{"Impl":{"id":277}},"from":{"krate":0,"index":13420},"to":{"krate":2,"index":12101}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_filter.rs","byte_start":348082,"byte_end":348091,"line_start":27,"line_end":27,"column_start":33,"column_end":42},"kind":{"Impl":{"id":278}},"from":{"krate":0,"index":13477},"to":{"krate":2,"index":8887}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_filter.rs","byte_start":348487,"byte_end":348496,"line_start":42,"line_end":42,"column_start":18,"column_end":27},"kind":{"Impl":{"id":279}},"from":{"krate":0,"index":13477},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_filter.rs","byte_start":348739,"byte_end":348748,"line_start":53,"line_end":53,"column_start":34,"column_end":43},"kind":{"Impl":{"id":280}},"from":{"krate":0,"index":13477},"to":{"krate":19,"index":110}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_filter.rs","byte_start":349005,"byte_end":349014,"line_start":64,"line_end":64,"column_start":29,"column_end":38},"kind":{"Impl":{"id":281}},"from":{"krate":0,"index":13477},"to":{"krate":19,"index":96}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_filter.rs","byte_start":350403,"byte_end":350412,"line_start":105,"line_end":105,"column_start":41,"column_end":50},"kind":{"Impl":{"id":282}},"from":{"krate":0,"index":13477},"to":{"krate":23,"index":17}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_filter_map.rs","byte_start":351155,"byte_end":351167,"line_start":24,"line_end":24,"column_start":33,"column_end":45},"kind":{"Impl":{"id":283}},"from":{"krate":0,"index":13546},"to":{"krate":2,"index":8887}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_filter_map.rs","byte_start":351467,"byte_end":351479,"line_start":37,"line_end":37,"column_start":18,"column_end":30},"kind":{"Impl":{"id":284}},"from":{"krate":0,"index":13546},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_filter_map.rs","byte_start":351676,"byte_end":351688,"line_start":45,"line_end":45,"column_start":37,"column_end":49},"kind":{"Impl":{"id":285}},"from":{"krate":0,"index":13546},"to":{"krate":19,"index":110}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_filter_map.rs","byte_start":351966,"byte_end":351978,"line_start":56,"line_end":56,"column_start":32,"column_end":44},"kind":{"Impl":{"id":286}},"from":{"krate":0,"index":13546},"to":{"krate":19,"index":96}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_filter_map.rs","byte_start":353478,"byte_end":353490,"line_start":99,"line_end":99,"column_start":38,"column_end":50},"kind":{"Impl":{"id":287}},"from":{"krate":0,"index":13546},"to":{"krate":23,"index":17}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_flatten.rs","byte_start":354162,"byte_end":354172,"line_start":24,"line_end":24,"column_start":10,"column_end":20},"kind":{"Impl":{"id":288}},"from":{"krate":0,"index":13616},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_flatten.rs","byte_start":354437,"byte_end":354447,"line_start":37,"line_end":37,"column_start":26,"column_end":36},"kind":{"Impl":{"id":289}},"from":{"krate":0,"index":13616},"to":{"krate":19,"index":110}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_flatten.rs","byte_start":354693,"byte_end":354703,"line_start":48,"line_end":48,"column_start":21,"column_end":31},"kind":{"Impl":{"id":290}},"from":{"krate":0,"index":13616},"to":{"krate":19,"index":96}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_flatten.rs","byte_start":355622,"byte_end":355632,"line_start":77,"line_end":77,"column_start":30,"column_end":40},"kind":{"Impl":{"id":291}},"from":{"krate":0,"index":13616},"to":{"krate":23,"index":17}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_collect.rs","byte_start":356312,"byte_end":356322,"line_start":20,"line_end":20,"column_start":33,"column_end":43},"kind":{"Impl":{"id":292}},"from":{"krate":0,"index":13666},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_collect.rs","byte_start":356462,"byte_end":356472,"line_start":26,"line_end":26,"column_start":29,"column_end":39},"kind":{"Impl":{"id":293}},"from":{"krate":0,"index":13666},"to":{"krate":19,"index":27}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_collect.rs","byte_start":356660,"byte_end":356670,"line_start":36,"line_end":36,"column_start":24,"column_end":34},"kind":{"Impl":{"id":294}},"from":{"krate":0,"index":13666},"to":{"krate":2,"index":12101}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_concat.rs","byte_start":357668,"byte_end":357677,"line_start":19,"line_end":19,"column_start":10,"column_end":19},"kind":{"Impl":{"id":295}},"from":{"krate":0,"index":13713},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_concat.rs","byte_start":357896,"byte_end":357905,"line_start":29,"line_end":29,"column_start":21,"column_end":30},"kind":{"Impl":{"id":296}},"from":{"krate":0,"index":13713},"to":{"krate":2,"index":12101}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_fold.rs","byte_start":359168,"byte_end":359175,"line_start":22,"line_end":22,"column_start":36,"column_end":43},"kind":{"Impl":{"id":297}},"from":{"krate":0,"index":13748},"to":{"krate":2,"index":8887}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_fold.rs","byte_start":359534,"byte_end":359541,"line_start":37,"line_end":37,"column_start":21,"column_end":28},"kind":{"Impl":{"id":298}},"from":{"krate":0,"index":13748},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_fold.rs","byte_start":359821,"byte_end":359828,"line_start":48,"line_end":48,"column_start":37,"column_end":44},"kind":{"Impl":{"id":299}},"from":{"krate":0,"index":13748},"to":{"krate":19,"index":27}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_fold.rs","byte_start":360082,"byte_end":360089,"line_start":59,"line_end":59,"column_start":32,"column_end":39},"kind":{"Impl":{"id":300}},"from":{"krate":0,"index":13748},"to":{"krate":2,"index":12101}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_unfold.rs","byte_start":363952,"byte_end":363961,"line_start":78,"line_end":78,"column_start":32,"column_end":41},"kind":{"Impl":{"id":301}},"from":{"krate":0,"index":13817},"to":{"krate":2,"index":8887}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_unfold.rs","byte_start":364223,"byte_end":364232,"line_start":88,"line_end":88,"column_start":34,"column_end":43},"kind":{"Impl":{"id":302}},"from":{"krate":0,"index":13817},"to":{"krate":19,"index":96}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_skip_while.rs","byte_start":365978,"byte_end":365990,"line_start":26,"line_end":26,"column_start":33,"column_end":45},"kind":{"Impl":{"id":303}},"from":{"krate":0,"index":13874},"to":{"krate":2,"index":8887}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_skip_while.rs","byte_start":366446,"byte_end":366458,"line_start":42,"line_end":42,"column_start":18,"column_end":30},"kind":{"Impl":{"id":304}},"from":{"krate":0,"index":13874},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_skip_while.rs","byte_start":366798,"byte_end":366810,"line_start":55,"line_end":55,"column_start":29,"column_end":41},"kind":{"Impl":{"id":305}},"from":{"krate":0,"index":13874},"to":{"krate":19,"index":96}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_skip_while.rs","byte_start":368309,"byte_end":368321,"line_start":100,"line_end":100,"column_start":34,"column_end":46},"kind":{"Impl":{"id":306}},"from":{"krate":0,"index":13874},"to":{"krate":19,"index":110}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_skip_while.rs","byte_start":368688,"byte_end":368700,"line_start":113,"line_end":113,"column_start":41,"column_end":53},"kind":{"Impl":{"id":307}},"from":{"krate":0,"index":13874},"to":{"krate":23,"index":17}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_take_while.rs","byte_start":369549,"byte_end":369561,"line_start":29,"line_end":29,"column_start":33,"column_end":45},"kind":{"Impl":{"id":308}},"from":{"krate":0,"index":13947},"to":{"krate":2,"index":8887}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_take_while.rs","byte_start":370013,"byte_end":370025,"line_start":45,"line_end":45,"column_start":18,"column_end":30},"kind":{"Impl":{"id":309}},"from":{"krate":0,"index":13947},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_take_while.rs","byte_start":370363,"byte_end":370375,"line_start":58,"line_end":58,"column_start":29,"column_end":41},"kind":{"Impl":{"id":310}},"from":{"krate":0,"index":13947},"to":{"krate":19,"index":96}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_take_while.rs","byte_start":371982,"byte_end":371994,"line_start":109,"line_end":109,"column_start":34,"column_end":46},"kind":{"Impl":{"id":311}},"from":{"krate":0,"index":13947},"to":{"krate":19,"index":110}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_take_while.rs","byte_start":372381,"byte_end":372393,"line_start":122,"line_end":122,"column_start":41,"column_end":53},"kind":{"Impl":{"id":312}},"from":{"krate":0,"index":13947},"to":{"krate":23,"index":17}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_buffer_unordered.rs","byte_start":12766455,"byte_end":12766473,"line_start":26,"line_end":26,"column_start":10,"column_end":28},"kind":{"Impl":{"id":313}},"from":{"krate":0,"index":17143},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_buffer_unordered.rs","byte_start":12766812,"byte_end":12766830,"line_start":42,"line_end":42,"column_start":21,"column_end":39},"kind":{"Impl":{"id":314}},"from":{"krate":0,"index":17143},"to":{"krate":19,"index":96}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_buffer_unordered.rs","byte_start":12768107,"byte_end":12768125,"line_start":78,"line_end":78,"column_start":33,"column_end":51},"kind":{"Impl":{"id":315}},"from":{"krate":0,"index":17143},"to":{"krate":23,"index":17}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_buffered.rs","byte_start":12769036,"byte_end":12769047,"line_start":27,"line_end":27,"column_start":10,"column_end":21},"kind":{"Impl":{"id":316}},"from":{"krate":0,"index":17099},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_buffered.rs","byte_start":12769384,"byte_end":12769395,"line_start":43,"line_end":43,"column_start":21,"column_end":32},"kind":{"Impl":{"id":317}},"from":{"krate":0,"index":17099},"to":{"krate":19,"index":96}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_buffered.rs","byte_start":12770672,"byte_end":12770683,"line_start":79,"line_end":79,"column_start":33,"column_end":44},"kind":{"Impl":{"id":318}},"from":{"krate":0,"index":17099},"to":{"krate":23,"index":17}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_for_each_concurrent.rs","byte_start":12771553,"byte_end":12771573,"line_start":25,"line_end":25,"column_start":33,"column_end":53},"kind":{"Impl":{"id":319}},"from":{"krate":0,"index":17033},"to":{"krate":2,"index":8887}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_for_each_concurrent.rs","byte_start":12771938,"byte_end":12771958,"line_start":39,"line_end":39,"column_start":34,"column_end":54},"kind":{"Impl":{"id":320}},"from":{"krate":0,"index":17033},"to":{"krate":19,"index":27}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_for_each_concurrent.rs","byte_start":12772197,"byte_end":12772217,"line_start":50,"line_end":50,"column_start":18,"column_end":38},"kind":{"Impl":{"id":321}},"from":{"krate":0,"index":17033},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_for_each_concurrent.rs","byte_start":12772665,"byte_end":12772685,"line_start":67,"line_end":67,"column_start":29,"column_end":49},"kind":{"Impl":{"id":322}},"from":{"krate":0,"index":17033},"to":{"krate":2,"index":12101}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/into_async_read.rs","byte_start":373138,"byte_end":373151,"line_start":23,"line_end":23,"column_start":20,"column_end":33},"kind":{"Impl":{"id":323}},"from":{"krate":0,"index":14225},"to":{"krate":2,"index":2894}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/into_async_read.rs","byte_start":373367,"byte_end":373380,"line_start":37,"line_end":37,"column_start":10,"column_end":23},"kind":{"Impl":{"id":324}},"from":{"krate":0,"index":14225},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/into_async_read.rs","byte_start":373592,"byte_end":373605,"line_start":47,"line_end":47,"column_start":24,"column_end":37},"kind":{"Impl":{"id":325}},"from":{"krate":0,"index":14225},"to":{"krate":27,"index":39}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/into_async_read.rs","byte_start":375226,"byte_end":375239,"line_start":95,"line_end":95,"column_start":25,"column_end":38},"kind":{"Impl":{"id":326}},"from":{"krate":0,"index":14225},"to":{"krate":27,"index":42}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/into_async_read.rs","byte_start":375846,"byte_end":375859,"line_start":117,"line_end":117,"column_start":27,"column_end":40},"kind":{"Impl":{"id":327}},"from":{"krate":0,"index":14225},"to":{"krate":27,"index":49}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":306228,"byte_end":306229,"line_start":142,"line_end":142,"column_start":46,"column_end":47},"kind":{"Impl":{"id":328}},"from":{"krate":0,"index":4870},"to":{"krate":0,"index":4871}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":306310,"byte_end":306319,"line_start":145,"line_end":145,"column_start":25,"column_end":34},"kind":"SuperTrait","from":{"krate":19,"index":127},"to":{"krate":0,"index":4871}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/iter.rs","byte_start":377895,"byte_end":377899,"line_start":13,"line_end":13,"column_start":19,"column_end":23},"kind":{"Impl":{"id":329}},"from":{"krate":0,"index":14244},"to":{"krate":2,"index":2894}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/iter.rs","byte_start":378521,"byte_end":378525,"line_start":36,"line_end":36,"column_start":20,"column_end":24},"kind":{"Impl":{"id":330}},"from":{"krate":0,"index":14244},"to":{"krate":19,"index":96}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat.rs","byte_start":379716,"byte_end":379722,"line_start":34,"line_end":34,"column_start":19,"column_end":25},"kind":{"Impl":{"id":331}},"from":{"krate":0,"index":14253},"to":{"krate":2,"index":2894}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat.rs","byte_start":379749,"byte_end":379755,"line_start":36,"line_end":36,"column_start":20,"column_end":26},"kind":{"Impl":{"id":332}},"from":{"krate":0,"index":14253},"to":{"krate":19,"index":96}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat.rs","byte_start":380063,"byte_end":380069,"line_start":51,"line_end":51,"column_start":25,"column_end":31},"kind":{"Impl":{"id":333}},"from":{"krate":0,"index":14253},"to":{"krate":19,"index":110}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat_with.rs","byte_start":380666,"byte_end":380676,"line_start":17,"line_end":17,"column_start":36,"column_end":46},"kind":{"Impl":{"id":334}},"from":{"krate":0,"index":14262},"to":{"krate":2,"index":2894}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat_with.rs","byte_start":380720,"byte_end":380730,"line_start":19,"line_end":19,"column_start":37,"column_end":47},"kind":{"Impl":{"id":335}},"from":{"krate":0,"index":14262},"to":{"krate":19,"index":96}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat_with.rs","byte_start":381044,"byte_end":381054,"line_start":31,"line_end":31,"column_start":42,"column_end":52},"kind":{"Impl":{"id":336}},"from":{"krate":0,"index":14262},"to":{"krate":19,"index":110}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/empty.rs","byte_start":383574,"byte_end":383579,"line_start":21,"line_end":21,"column_start":19,"column_end":24},"kind":{"Impl":{"id":337}},"from":{"krate":0,"index":14271},"to":{"krate":2,"index":2894}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/empty.rs","byte_start":383611,"byte_end":383616,"line_start":23,"line_end":23,"column_start":25,"column_end":30},"kind":{"Impl":{"id":338}},"from":{"krate":0,"index":14271},"to":{"krate":19,"index":110}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/empty.rs","byte_start":383701,"byte_end":383706,"line_start":29,"line_end":29,"column_start":20,"column_end":25},"kind":{"Impl":{"id":339}},"from":{"krate":0,"index":14271},"to":{"krate":19,"index":96}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/empty.rs","byte_start":383955,"byte_end":383960,"line_start":41,"line_end":41,"column_start":19,"column_end":24},"kind":{"Impl":{"id":340}},"from":{"krate":0,"index":14271},"to":{"krate":2,"index":2474}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/once.rs","byte_start":384899,"byte_end":384903,"line_start":34,"line_end":34,"column_start":11,"column_end":15},"kind":{"Impl":{"id":341}},"from":{"krate":0,"index":14282},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/once.rs","byte_start":385032,"byte_end":385036,"line_start":40,"line_end":40,"column_start":30,"column_end":34},"kind":{"Impl":{"id":342}},"from":{"krate":0,"index":14282},"to":{"krate":19,"index":96}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/once.rs","byte_start":385641,"byte_end":385645,"line_start":63,"line_end":63,"column_start":35,"column_end":39},"kind":{"Impl":{"id":343}},"from":{"krate":0,"index":14282},"to":{"krate":19,"index":110}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/pending.rs","byte_start":386304,"byte_end":386311,"line_start":21,"line_end":21,"column_start":19,"column_end":26},"kind":{"Impl":{"id":344}},"from":{"krate":0,"index":14313},"to":{"krate":2,"index":2894}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/pending.rs","byte_start":386343,"byte_end":386350,"line_start":23,"line_end":23,"column_start":25,"column_end":32},"kind":{"Impl":{"id":345}},"from":{"krate":0,"index":14313},"to":{"krate":19,"index":110}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/pending.rs","byte_start":386435,"byte_end":386442,"line_start":29,"line_end":29,"column_start":20,"column_end":27},"kind":{"Impl":{"id":346}},"from":{"krate":0,"index":14313},"to":{"krate":19,"index":96}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/pending.rs","byte_start":386687,"byte_end":386694,"line_start":41,"line_end":41,"column_start":19,"column_end":26},"kind":{"Impl":{"id":347}},"from":{"krate":0,"index":14313},"to":{"krate":2,"index":2474}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/poll_fn.rs","byte_start":387081,"byte_end":387087,"line_start":15,"line_end":15,"column_start":19,"column_end":25},"kind":{"Impl":{"id":348}},"from":{"krate":0,"index":5280},"to":{"krate":2,"index":2894}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/poll_fn.rs","byte_start":387118,"byte_end":387124,"line_start":17,"line_end":17,"column_start":24,"column_end":30},"kind":{"Impl":{"id":349}},"from":{"krate":0,"index":5280},"to":{"krate":2,"index":8887}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/poll_fn.rs","byte_start":387889,"byte_end":387895,"line_start":48,"line_end":48,"column_start":23,"column_end":29},"kind":{"Impl":{"id":350}},"from":{"krate":0,"index":5280},"to":{"krate":19,"index":96}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select.rs","byte_start":389349,"byte_end":389355,"line_start":43,"line_end":43,"column_start":16,"column_end":22},"kind":{"Impl":{"id":351}},"from":{"krate":0,"index":14326},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select.rs","byte_start":390778,"byte_end":390784,"line_start":78,"line_end":78,"column_start":32,"column_end":38},"kind":{"Impl":{"id":352}},"from":{"krate":0,"index":14326},"to":{"krate":19,"index":110}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select.rs","byte_start":390997,"byte_end":391003,"line_start":88,"line_end":88,"column_start":27,"column_end":33},"kind":{"Impl":{"id":353}},"from":{"krate":0,"index":14326},"to":{"krate":19,"index":96}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/unfold.rs","byte_start":394347,"byte_end":394353,"line_start":68,"line_end":68,"column_start":32,"column_end":38},"kind":{"Impl":{"id":354}},"from":{"krate":0,"index":14372},"to":{"krate":2,"index":8887}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/unfold.rs","byte_start":394593,"byte_end":394599,"line_start":78,"line_end":78,"column_start":39,"column_end":45},"kind":{"Impl":{"id":355}},"from":{"krate":0,"index":14372},"to":{"krate":19,"index":110}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/unfold.rs","byte_start":394879,"byte_end":394885,"line_start":92,"line_end":92,"column_start":34,"column_end":40},"kind":{"Impl":{"id":356}},"from":{"krate":0,"index":14372},"to":{"krate":19,"index":96}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_ordered.rs","byte_start":12775827,"byte_end":12775839,"line_start":26,"line_end":26,"column_start":23,"column_end":35},"kind":{"Impl":{"id":357}},"from":{"krate":0,"index":16998},"to":{"krate":2,"index":2504}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_ordered.rs","byte_start":12775944,"byte_end":12775956,"line_start":32,"line_end":32,"column_start":16,"column_end":28},"kind":{"Impl":{"id":358}},"from":{"krate":0,"index":16998},"to":{"krate":2,"index":2509}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_ordered.rs","byte_start":12775987,"byte_end":12775999,"line_start":34,"line_end":34,"column_start":24,"column_end":36},"kind":{"Impl":{"id":359}},"from":{"krate":0,"index":16998},"to":{"krate":2,"index":2551}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_ordered.rs","byte_start":12776122,"byte_end":12776134,"line_start":40,"line_end":40,"column_start":17,"column_end":29},"kind":{"Impl":{"id":360}},"from":{"krate":0,"index":16998},"to":{"krate":2,"index":2540}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_ordered.rs","byte_start":12776315,"byte_end":12776327,"line_start":47,"line_end":47,"column_start":20,"column_end":32},"kind":{"Impl":{"id":361}},"from":{"krate":0,"index":16998},"to":{"krate":2,"index":12101}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_ordered.rs","byte_start":12778909,"byte_end":12778923,"line_start":102,"line_end":102,"column_start":27,"column_end":41},"kind":{"Impl":{"id":362}},"from":{"krate":0,"index":14495},"to":{"krate":2,"index":2894}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_ordered.rs","byte_start":12778949,"byte_end":12778963,"line_start":104,"line_end":104,"column_start":19,"column_end":33},"kind":{"Impl":{"id":363}},"from":{"krate":0,"index":14495},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_ordered.rs","byte_start":12780529,"byte_end":12780543,"line_start":145,"line_end":145,"column_start":31,"column_end":45},"kind":{"Impl":{"id":364}},"from":{"krate":0,"index":14495},"to":{"krate":2,"index":2831}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_ordered.rs","byte_start":12780636,"byte_end":12780650,"line_start":151,"line_end":151,"column_start":30,"column_end":44},"kind":{"Impl":{"id":365}},"from":{"krate":0,"index":14495},"to":{"krate":19,"index":96}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_ordered.rs","byte_start":12781812,"byte_end":12781826,"line_start":186,"line_end":186,"column_start":29,"column_end":43},"kind":{"Impl":{"id":366}},"from":{"krate":0,"index":14495},"to":{"krate":2,"index":8887}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_ordered.rs","byte_start":12781992,"byte_end":12782006,"line_start":192,"line_end":192,"column_start":41,"column_end":55},"kind":{"Impl":{"id":367}},"from":{"krate":0,"index":14495},"to":{"krate":2,"index":7143}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_ordered.rs","byte_start":12782286,"byte_end":12782300,"line_start":205,"line_end":205,"column_start":35,"column_end":49},"kind":{"Impl":{"id":368}},"from":{"krate":0,"index":14495},"to":{"krate":19,"index":110}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_ordered.rs","byte_start":12782470,"byte_end":12782484,"line_start":211,"line_end":211,"column_start":35,"column_end":49},"kind":{"Impl":{"id":369}},"from":{"krate":0,"index":14495},"to":{"krate":2,"index":7156}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/abort.rs","byte_start":12809625,"byte_end":12809636,"line_start":4,"line_end":4,"column_start":19,"column_end":30},"kind":{"Impl":{"id":370}},"from":{"krate":0,"index":14629},"to":{"krate":2,"index":3088}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/iter.rs","byte_start":12810995,"byte_end":12811003,"line_start":39,"line_end":39,"column_start":31,"column_end":39},"kind":{"Impl":{"id":371}},"from":{"krate":0,"index":15137},"to":{"krate":2,"index":7310}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/iter.rs","byte_start":12812077,"byte_end":12812085,"line_start":71,"line_end":71,"column_start":40,"column_end":48},"kind":{"Impl":{"id":372}},"from":{"krate":0,"index":15137},"to":{"krate":2,"index":7199}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/iter.rs","byte_start":12812122,"byte_end":12812132,"line_start":73,"line_end":73,"column_start":28,"column_end":38},"kind":{"Impl":{"id":373}},"from":{"krate":0,"index":15098},"to":{"krate":2,"index":7310}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/iter.rs","byte_start":12812984,"byte_end":12812994,"line_start":100,"line_end":100,"column_start":33,"column_end":43},"kind":{"Impl":{"id":374}},"from":{"krate":0,"index":15098},"to":{"krate":2,"index":7199}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/iter.rs","byte_start":12813042,"byte_end":12813049,"line_start":102,"line_end":102,"column_start":35,"column_end":42},"kind":{"Impl":{"id":375}},"from":{"krate":0,"index":15108},"to":{"krate":2,"index":7310}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/iter.rs","byte_start":12813312,"byte_end":12813319,"line_start":114,"line_end":114,"column_start":40,"column_end":47},"kind":{"Impl":{"id":376}},"from":{"krate":0,"index":15108},"to":{"krate":2,"index":7199}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/iter.rs","byte_start":12813360,"byte_end":12813370,"line_start":116,"line_end":116,"column_start":28,"column_end":38},"kind":{"Impl":{"id":377}},"from":{"krate":0,"index":15117},"to":{"krate":2,"index":7310}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/iter.rs","byte_start":12814239,"byte_end":12814249,"line_start":143,"line_end":143,"column_start":33,"column_end":43},"kind":{"Impl":{"id":378}},"from":{"krate":0,"index":15117},"to":{"krate":2,"index":7199}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/iter.rs","byte_start":12814297,"byte_end":12814301,"line_start":145,"line_end":145,"column_start":35,"column_end":39},"kind":{"Impl":{"id":379}},"from":{"krate":0,"index":15128},"to":{"krate":2,"index":7310}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/iter.rs","byte_start":12814560,"byte_end":12814564,"line_start":157,"line_end":157,"column_start":40,"column_end":44},"kind":{"Impl":{"id":380}},"from":{"krate":0,"index":15128},"to":{"krate":2,"index":7199}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/iter.rs","byte_start":12814733,"byte_end":12814743,"line_start":161,"line_end":161,"column_start":33,"column_end":43},"kind":{"Impl":{"id":381}},"from":{"krate":0,"index":15117},"to":{"krate":2,"index":2853}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/iter.rs","byte_start":12814788,"byte_end":12814798,"line_start":162,"line_end":162,"column_start":33,"column_end":43},"kind":{"Impl":{"id":382}},"from":{"krate":0,"index":15117},"to":{"krate":2,"index":2865}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/iter.rs","byte_start":12814844,"byte_end":12814854,"line_start":164,"line_end":164,"column_start":33,"column_end":43},"kind":{"Impl":{"id":383}},"from":{"krate":0,"index":15098},"to":{"krate":2,"index":2853}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/iter.rs","byte_start":12814899,"byte_end":12814909,"line_start":165,"line_end":165,"column_start":33,"column_end":43},"kind":{"Impl":{"id":384}},"from":{"krate":0,"index":15098},"to":{"krate":2,"index":2865}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/iter.rs","byte_start":12814963,"byte_end":12814971,"line_start":167,"line_end":167,"column_start":41,"column_end":49},"kind":{"Impl":{"id":385}},"from":{"krate":0,"index":15137},"to":{"krate":2,"index":2853}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/iter.rs","byte_start":12815020,"byte_end":12815028,"line_start":168,"line_end":168,"column_start":41,"column_end":49},"kind":{"Impl":{"id":386}},"from":{"krate":0,"index":15137},"to":{"krate":2,"index":2865}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/task.rs","byte_start":12816513,"byte_end":12816517,"line_start":41,"line_end":41,"column_start":27,"column_end":31},"kind":{"Impl":{"id":387}},"from":{"krate":0,"index":14757},"to":{"krate":2,"index":2853}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/task.rs","byte_start":12816552,"byte_end":12816556,"line_start":42,"line_end":42,"column_start":27,"column_end":31},"kind":{"Impl":{"id":388}},"from":{"krate":0,"index":14757},"to":{"krate":2,"index":2865}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/task.rs","byte_start":12816588,"byte_end":12816592,"line_start":44,"line_end":44,"column_start":23,"column_end":27},"kind":{"Impl":{"id":389}},"from":{"krate":0,"index":14757},"to":{"krate":22,"index":327}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/task.rs","byte_start":12817669,"byte_end":12817673,"line_start":71,"line_end":71,"column_start":11,"column_end":15},"kind":{"Impl":{"id":390}},"from":{"krate":0,"index":14757},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/task.rs","byte_start":12818673,"byte_end":12818677,"line_start":102,"line_end":102,"column_start":20,"column_end":24},"kind":{"Impl":{"id":391}},"from":{"krate":0,"index":14757},"to":{"krate":2,"index":3088}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/ready_to_run_queue.rs","byte_start":12820127,"byte_end":12820142,"line_start":29,"line_end":29,"column_start":11,"column_end":26},"kind":{"Impl":{"id":392}},"from":{"krate":0,"index":14827},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/ready_to_run_queue.rs","byte_start":12822798,"byte_end":12822813,"line_start":111,"line_end":111,"column_start":20,"column_end":35},"kind":{"Impl":{"id":393}},"from":{"krate":0,"index":14827},"to":{"krate":2,"index":3088}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/mod.rs","byte_start":12784871,"byte_end":12784887,"line_start":60,"line_end":60,"column_start":33,"column_end":49},"kind":{"Impl":{"id":394}},"from":{"krate":0,"index":14849},"to":{"krate":2,"index":2853}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/mod.rs","byte_start":12784928,"byte_end":12784944,"line_start":61,"line_end":61,"column_start":33,"column_end":49},"kind":{"Impl":{"id":395}},"from":{"krate":0,"index":14849},"to":{"krate":2,"index":2865}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/mod.rs","byte_start":12784973,"byte_end":12784989,"line_start":62,"line_end":62,"column_start":21,"column_end":37},"kind":{"Impl":{"id":396}},"from":{"krate":0,"index":14849},"to":{"krate":2,"index":2894}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/mod.rs","byte_start":12785014,"byte_end":12785030,"line_start":64,"line_end":64,"column_start":16,"column_end":32},"kind":{"Impl":{"id":397}},"from":{"krate":0,"index":14849},"to":{"krate":22,"index":16}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/mod.rs","byte_start":12785215,"byte_end":12785231,"line_start":71,"line_end":71,"column_start":21,"column_end":37},"kind":{"Impl":{"id":398}},"from":{"krate":0,"index":14849},"to":{"krate":22,"index":19}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/mod.rs","byte_start":12786938,"byte_end":12786954,"line_start":103,"line_end":103,"column_start":23,"column_end":39},"kind":{"Impl":{"id":399}},"from":{"krate":0,"index":14849},"to":{"krate":2,"index":2831}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/mod.rs","byte_start":12787028,"byte_end":12787044,"line_start":109,"line_end":109,"column_start":11,"column_end":27},"kind":{"Impl":{"id":400}},"from":{"krate":0,"index":14849},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/mod.rs","byte_start":12798575,"byte_end":12798591,"line_start":382,"line_end":382,"column_start":30,"column_end":46},"kind":{"Impl":{"id":401}},"from":{"krate":0,"index":14849},"to":{"krate":19,"index":96}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/mod.rs","byte_start":12803775,"byte_end":12803779,"line_start":493,"line_end":493,"column_start":32,"column_end":36},"kind":{"Impl":{"id":402}},"from":{"krate":0,"index":14886},"to":{"krate":2,"index":3088}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/mod.rs","byte_start":12806034,"byte_end":12806050,"line_start":550,"line_end":550,"column_start":21,"column_end":37},"kind":{"Impl":{"id":403}},"from":{"krate":0,"index":14849},"to":{"krate":2,"index":8887}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/mod.rs","byte_start":12806188,"byte_end":12806204,"line_start":556,"line_end":556,"column_start":11,"column_end":27},"kind":{"Impl":{"id":404}},"from":{"krate":0,"index":14849},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/mod.rs","byte_start":12806775,"byte_end":12806791,"line_start":576,"line_end":576,"column_start":20,"column_end":36},"kind":{"Impl":{"id":405}},"from":{"krate":0,"index":14849},"to":{"krate":2,"index":3088}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/mod.rs","byte_start":12808441,"byte_end":12808457,"line_start":617,"line_end":617,"column_start":35,"column_end":51},"kind":{"Impl":{"id":406}},"from":{"krate":0,"index":14849},"to":{"krate":2,"index":7147}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/mod.rs","byte_start":12808927,"byte_end":12808943,"line_start":631,"line_end":631,"column_start":33,"column_end":49},"kind":{"Impl":{"id":407}},"from":{"krate":0,"index":14849},"to":{"krate":2,"index":7143}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/mod.rs","byte_start":12809219,"byte_end":12809235,"line_start":644,"line_end":644,"column_start":35,"column_end":51},"kind":{"Impl":{"id":408}},"from":{"krate":0,"index":14849},"to":{"krate":19,"index":110}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/mod.rs","byte_start":12809357,"byte_end":12809373,"line_start":650,"line_end":650,"column_start":27,"column_end":43},"kind":{"Impl":{"id":409}},"from":{"krate":0,"index":14849},"to":{"krate":2,"index":7156}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select_all.rs","byte_start":12824408,"byte_end":12824417,"line_start":36,"line_end":36,"column_start":27,"column_end":36},"kind":{"Impl":{"id":410}},"from":{"krate":0,"index":16960},"to":{"krate":2,"index":8887}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select_all.rs","byte_start":12824562,"byte_end":12824571,"line_start":42,"line_end":42,"column_start":26,"column_end":35},"kind":{"Impl":{"id":411}},"from":{"krate":0,"index":16960},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select_all.rs","byte_start":12826044,"byte_end":12826053,"line_start":89,"line_end":89,"column_start":38,"column_end":47},"kind":{"Impl":{"id":412}},"from":{"krate":0,"index":16960},"to":{"krate":2,"index":2831}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select_all.rs","byte_start":12826152,"byte_end":12826161,"line_start":95,"line_end":95,"column_start":37,"column_end":46},"kind":{"Impl":{"id":413}},"from":{"krate":0,"index":16960},"to":{"krate":19,"index":96}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select_all.rs","byte_start":12826945,"byte_end":12826954,"line_start":117,"line_end":117,"column_start":42,"column_end":51},"kind":{"Impl":{"id":414}},"from":{"krate":0,"index":16960},"to":{"krate":19,"index":110}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select_all.rs","byte_start":12827972,"byte_end":12827981,"line_start":149,"line_end":149,"column_start":47,"column_end":56},"kind":{"Impl":{"id":415}},"from":{"krate":0,"index":16960},"to":{"krate":2,"index":7143}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select_all.rs","byte_start":12828126,"byte_end":12828135,"line_start":155,"line_end":155,"column_start":41,"column_end":50},"kind":{"Impl":{"id":416}},"from":{"krate":0,"index":16960},"to":{"krate":2,"index":7156}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select_all.rs","byte_start":12828318,"byte_end":12828327,"line_start":163,"line_end":163,"column_start":43,"column_end":52},"kind":{"Impl":{"id":417}},"from":{"krate":0,"index":16960},"to":{"krate":2,"index":7147}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select_all.rs","byte_start":12829410,"byte_end":12829414,"line_start":202,"line_end":202,"column_start":43,"column_end":47},"kind":{"Impl":{"id":418}},"from":{"krate":0,"index":16951},"to":{"krate":2,"index":7310}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select_all.rs","byte_start":12829847,"byte_end":12829851,"line_start":218,"line_end":218,"column_start":48,"column_end":52},"kind":{"Impl":{"id":419}},"from":{"krate":0,"index":16951},"to":{"krate":2,"index":7199}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select_all.rs","byte_start":12829906,"byte_end":12829913,"line_start":220,"line_end":220,"column_start":43,"column_end":50},"kind":{"Impl":{"id":420}},"from":{"krate":0,"index":16942},"to":{"krate":2,"index":7310}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select_all.rs","byte_start":12830350,"byte_end":12830357,"line_start":236,"line_end":236,"column_start":48,"column_end":55},"kind":{"Impl":{"id":421}},"from":{"krate":0,"index":16942},"to":{"krate":2,"index":7199}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select_all.rs","byte_start":12830408,"byte_end":12830416,"line_start":238,"line_end":238,"column_start":39,"column_end":47},"kind":{"Impl":{"id":422}},"from":{"krate":0,"index":16935},"to":{"krate":2,"index":7310}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select_all.rs","byte_start":12830844,"byte_end":12830852,"line_start":254,"line_end":254,"column_start":48,"column_end":56},"kind":{"Impl":{"id":423}},"from":{"krate":0,"index":16935},"to":{"krate":2,"index":7199}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/sink/close.rs","byte_start":407404,"byte_end":407409,"line_start":15,"line_end":15,"column_start":42,"column_end":47},"kind":{"Impl":{"id":424}},"from":{"krate":0,"index":15144},"to":{"krate":2,"index":2894}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/sink/close.rs","byte_start":407603,"byte_end":407608,"line_start":20,"line_end":20,"column_start":49,"column_end":54},"kind":{"Impl":{"id":425}},"from":{"krate":0,"index":15144},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/sink/close.rs","byte_start":407784,"byte_end":407789,"line_start":26,"line_end":26,"column_start":56,"column_end":61},"kind":{"Impl":{"id":426}},"from":{"krate":0,"index":15144},"to":{"krate":2,"index":12101}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/sink/drain.rs","byte_start":408779,"byte_end":408784,"line_start":33,"line_end":33,"column_start":19,"column_end":24},"kind":{"Impl":{"id":427}},"from":{"krate":0,"index":15155},"to":{"krate":2,"index":2894}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/sink/drain.rs","byte_start":408812,"byte_end":408817,"line_start":35,"line_end":35,"column_start":21,"column_end":26},"kind":{"Impl":{"id":428}},"from":{"krate":0,"index":15155},"to":{"krate":23,"index":17}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/sink/fanout.rs","byte_start":409978,"byte_end":409984,"line_start":21,"line_end":21,"column_start":16,"column_end":22},"kind":{"Impl":{"id":429}},"from":{"krate":0,"index":15161},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/sink/fanout.rs","byte_start":410952,"byte_end":410958,"line_start":51,"line_end":51,"column_start":40,"column_end":46},"kind":{"Impl":{"id":430}},"from":{"krate":0,"index":15161},"to":{"krate":2,"index":8887}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/sink/fanout.rs","byte_start":411170,"byte_end":411176,"line_start":57,"line_end":57,"column_start":37,"column_end":43},"kind":{"Impl":{"id":431}},"from":{"krate":0,"index":15161},"to":{"krate":23,"index":17}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/sink/feed.rs","byte_start":413255,"byte_end":413259,"line_start":16,"line_end":16,"column_start":42,"column_end":46},"kind":{"Impl":{"id":432}},"from":{"krate":0,"index":15206},"to":{"krate":2,"index":2894}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/sink/feed.rs","byte_start":413326,"byte_end":413330,"line_start":18,"line_end":18,"column_start":49,"column_end":53},"kind":{"Impl":{"id":433}},"from":{"krate":0,"index":15206},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/sink/feed.rs","byte_start":413694,"byte_end":413698,"line_start":32,"line_end":32,"column_start":56,"column_end":60},"kind":{"Impl":{"id":434}},"from":{"krate":0,"index":15206},"to":{"krate":2,"index":12101}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/sink/flush.rs","byte_start":414600,"byte_end":414605,"line_start":16,"line_end":16,"column_start":42,"column_end":47},"kind":{"Impl":{"id":435}},"from":{"krate":0,"index":15217},"to":{"krate":2,"index":2894}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/sink/flush.rs","byte_start":414956,"byte_end":414961,"line_start":24,"line_end":24,"column_start":49,"column_end":54},"kind":{"Impl":{"id":436}},"from":{"krate":0,"index":15217},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/sink/flush.rs","byte_start":415137,"byte_end":415142,"line_start":30,"line_end":30,"column_start":56,"column_end":61},"kind":{"Impl":{"id":437}},"from":{"krate":0,"index":15217},"to":{"krate":2,"index":12101}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/sink/err_into.rs","byte_start":415802,"byte_end":415813,"line_start":16,"line_end":16,"column_start":19,"column_end":30},"kind":{"Impl":{"id":438}},"from":{"krate":0,"index":15237},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/sink/err_into.rs","byte_start":416070,"byte_end":416081,"line_start":28,"line_end":28,"column_start":34,"column_end":45},"kind":{"Impl":{"id":439}},"from":{"krate":0,"index":15237},"to":{"krate":23,"index":17}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/sink/err_into.rs","byte_start":416285,"byte_end":416296,"line_start":39,"line_end":39,"column_start":29,"column_end":40},"kind":{"Impl":{"id":440}},"from":{"krate":0,"index":15237},"to":{"krate":19,"index":96}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/sink/err_into.rs","byte_start":416458,"byte_end":416469,"line_start":49,"line_end":49,"column_start":34,"column_end":45},"kind":{"Impl":{"id":441}},"from":{"krate":0,"index":15237},"to":{"krate":19,"index":110}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/sink/map_err.rs","byte_start":417078,"byte_end":417088,"line_start":18,"line_end":18,"column_start":13,"column_end":23},"kind":{"Impl":{"id":442}},"from":{"krate":0,"index":15299},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/sink/map_err.rs","byte_start":417391,"byte_end":417401,"line_start":30,"line_end":30,"column_start":37,"column_end":47},"kind":{"Impl":{"id":443}},"from":{"krate":0,"index":15299},"to":{"krate":23,"index":17}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/sink/map_err.rs","byte_start":418357,"byte_end":418367,"line_start":55,"line_end":55,"column_start":31,"column_end":41},"kind":{"Impl":{"id":444}},"from":{"krate":0,"index":15299},"to":{"krate":19,"index":96}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/sink/map_err.rs","byte_start":418473,"byte_end":418483,"line_start":61,"line_end":61,"column_start":41,"column_end":51},"kind":{"Impl":{"id":445}},"from":{"krate":0,"index":15299},"to":{"krate":19,"index":110}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/sink/send.rs","byte_start":419034,"byte_end":419038,"line_start":16,"line_end":16,"column_start":42,"column_end":46},"kind":{"Impl":{"id":446}},"from":{"krate":0,"index":15351},"to":{"krate":2,"index":2894}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/sink/send.rs","byte_start":419105,"byte_end":419109,"line_start":18,"line_end":18,"column_start":49,"column_end":53},"kind":{"Impl":{"id":447}},"from":{"krate":0,"index":15351},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/sink/send.rs","byte_start":419297,"byte_end":419301,"line_start":24,"line_end":24,"column_start":56,"column_end":60},"kind":{"Impl":{"id":448}},"from":{"krate":0,"index":15351},"to":{"krate":2,"index":12101}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/sink/send_all.rs","byte_start":420507,"byte_end":420514,"line_start":23,"line_end":23,"column_start":29,"column_end":36},"kind":{"Impl":{"id":449}},"from":{"krate":0,"index":5855},"to":{"krate":2,"index":8887}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/sink/send_all.rs","byte_start":420953,"byte_end":420960,"line_start":39,"line_end":39,"column_start":24,"column_end":31},"kind":{"Impl":{"id":450}},"from":{"krate":0,"index":5855},"to":{"krate":2,"index":2894}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/sink/send_all.rs","byte_start":421072,"byte_end":421079,"line_start":46,"line_end":46,"column_start":29,"column_end":36},"kind":{"Impl":{"id":451}},"from":{"krate":0,"index":5855},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/sink/send_all.rs","byte_start":421855,"byte_end":421862,"line_start":71,"line_end":71,"column_start":36,"column_end":43},"kind":{"Impl":{"id":452}},"from":{"krate":0,"index":5855},"to":{"krate":2,"index":12101}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/sink/unfold.rs","byte_start":424161,"byte_end":424167,"line_start":47,"line_end":47,"column_start":39,"column_end":45},"kind":{"Impl":{"id":453}},"from":{"krate":0,"index":15370},"to":{"krate":23,"index":17}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/sink/with.rs","byte_start":426084,"byte_end":426088,"line_start":24,"line_end":24,"column_start":42,"column_end":46},"kind":{"Impl":{"id":454}},"from":{"krate":0,"index":15419},"to":{"krate":2,"index":8887}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/sink/with.rs","byte_start":426351,"byte_end":426355,"line_start":34,"line_end":34,"column_start":27,"column_end":31},"kind":{"Impl":{"id":455}},"from":{"krate":0,"index":15419},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/sink/with.rs","byte_start":426692,"byte_end":426696,"line_start":49,"line_end":49,"column_start":37,"column_end":41},"kind":{"Impl":{"id":456}},"from":{"krate":0,"index":15419},"to":{"krate":2,"index":2474}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/sink/with.rs","byte_start":427067,"byte_end":427071,"line_start":66,"line_end":66,"column_start":37,"column_end":41},"kind":{"Impl":{"id":457}},"from":{"krate":0,"index":15419},"to":{"krate":19,"index":96}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/sink/with.rs","byte_start":427255,"byte_end":427259,"line_start":77,"line_end":77,"column_start":30,"column_end":34},"kind":{"Impl":{"id":458}},"from":{"krate":0,"index":15419},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/sink/with.rs","byte_start":427934,"byte_end":427938,"line_start":100,"line_end":100,"column_start":42,"column_end":46},"kind":{"Impl":{"id":459}},"from":{"krate":0,"index":15419},"to":{"krate":23,"index":17}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/sink/with_flat_map.rs","byte_start":429657,"byte_end":429668,"line_start":24,"line_end":24,"column_start":41,"column_end":52},"kind":{"Impl":{"id":460}},"from":{"krate":0,"index":15502},"to":{"krate":2,"index":8887}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/sink/with_flat_map.rs","byte_start":430041,"byte_end":430052,"line_start":39,"line_end":39,"column_start":26,"column_end":37},"kind":{"Impl":{"id":461}},"from":{"krate":0,"index":15502},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/sink/with_flat_map.rs","byte_start":431339,"byte_end":431350,"line_start":76,"line_end":76,"column_start":36,"column_end":47},"kind":{"Impl":{"id":462}},"from":{"krate":0,"index":15502},"to":{"krate":19,"index":96}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/sink/with_flat_map.rs","byte_start":431573,"byte_end":431584,"line_start":87,"line_end":87,"column_start":41,"column_end":52},"kind":{"Impl":{"id":463}},"from":{"krate":0,"index":15502},"to":{"krate":19,"index":110}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/sink/with_flat_map.rs","byte_start":431833,"byte_end":431844,"line_start":98,"line_end":98,"column_start":38,"column_end":49},"kind":{"Impl":{"id":464}},"from":{"krate":0,"index":15502},"to":{"krate":23,"index":17}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/sink/buffer.rs","byte_start":433388,"byte_end":433394,"line_start":23,"line_end":23,"column_start":28,"column_end":34},"kind":{"Impl":{"id":465}},"from":{"krate":0,"index":15596},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/sink/buffer.rs","byte_start":434122,"byte_end":434128,"line_start":44,"line_end":44,"column_start":26,"column_end":32},"kind":{"Impl":{"id":466}},"from":{"krate":0,"index":15596},"to":{"krate":19,"index":96}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/sink/buffer.rs","byte_start":434458,"byte_end":434464,"line_start":59,"line_end":59,"column_start":31,"column_end":37},"kind":{"Impl":{"id":467}},"from":{"krate":0,"index":15596},"to":{"krate":19,"index":110}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/sink/buffer.rs","byte_start":434638,"byte_end":434644,"line_start":68,"line_end":68,"column_start":43,"column_end":49},"kind":{"Impl":{"id":468}},"from":{"krate":0,"index":15596},"to":{"krate":23,"index":17}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/sink/mod.rs","byte_start":396949,"byte_end":396950,"line_start":61,"line_end":61,"column_start":41,"column_end":42},"kind":{"Impl":{"id":469}},"from":{"krate":0,"index":6158},"to":{"krate":0,"index":6160}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/sink/mod.rs","byte_start":397099,"byte_end":397103,"line_start":65,"line_end":65,"column_start":26,"column_end":30},"kind":"SuperTrait","from":{"krate":23,"index":17},"to":{"krate":0,"index":6160}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/spawn.rs","byte_start":437415,"byte_end":437417,"line_start":16,"line_end":16,"column_start":31,"column_end":33},"kind":{"Impl":{"id":470}},"from":{"krate":0,"index":6279},"to":{"krate":0,"index":6282}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/spawn.rs","byte_start":437472,"byte_end":437474,"line_start":17,"line_end":17,"column_start":36,"column_end":38},"kind":{"Impl":{"id":471}},"from":{"krate":0,"index":6281},"to":{"krate":0,"index":6287}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/spawn.rs","byte_start":437553,"byte_end":437558,"line_start":20,"line_end":20,"column_start":21,"column_end":26},"kind":"SuperTrait","from":{"krate":22,"index":16},"to":{"krate":0,"index":6282}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/spawn.rs","byte_start":440322,"byte_end":440332,"line_start":97,"line_end":97,"column_start":26,"column_end":36},"kind":"SuperTrait","from":{"krate":22,"index":19},"to":{"krate":0,"index":6287}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/allow_std.rs","byte_start":471922,"byte_end":471932,"line_start":21,"line_end":21,"column_start":19,"column_end":29},"kind":{"Impl":{"id":472}},"from":{"krate":0,"index":15662},"to":{"krate":2,"index":2894}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/allow_std.rs","byte_start":472370,"byte_end":472380,"line_start":41,"line_end":41,"column_start":9,"column_end":19},"kind":{"Impl":{"id":473}},"from":{"krate":0,"index":15662},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/allow_std.rs","byte_start":472891,"byte_end":472901,"line_start":63,"line_end":63,"column_start":23,"column_end":33},"kind":{"Impl":{"id":474}},"from":{"krate":0,"index":15662},"to":{"krate":1,"index":4335}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/allow_std.rs","byte_start":473446,"byte_end":473456,"line_start":84,"line_end":84,"column_start":24,"column_end":34},"kind":{"Impl":{"id":475}},"from":{"krate":0,"index":15662},"to":{"krate":27,"index":42}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/allow_std.rs","byte_start":474248,"byte_end":474258,"line_start":114,"line_end":114,"column_start":22,"column_end":32},"kind":{"Impl":{"id":476}},"from":{"krate":0,"index":15662},"to":{"krate":1,"index":4274}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/allow_std.rs","byte_start":474983,"byte_end":474993,"line_start":139,"line_end":139,"column_start":23,"column_end":33},"kind":{"Impl":{"id":477}},"from":{"krate":0,"index":15662},"to":{"krate":27,"index":39}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/allow_std.rs","byte_start":475624,"byte_end":475634,"line_start":165,"line_end":165,"column_start":22,"column_end":32},"kind":{"Impl":{"id":478}},"from":{"krate":0,"index":15662},"to":{"krate":1,"index":4353}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/allow_std.rs","byte_start":475778,"byte_end":475788,"line_start":174,"line_end":174,"column_start":23,"column_end":33},"kind":{"Impl":{"id":479}},"from":{"krate":0,"index":15662},"to":{"krate":27,"index":47}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/allow_std.rs","byte_start":476050,"byte_end":476060,"line_start":187,"line_end":187,"column_start":25,"column_end":35},"kind":{"Impl":{"id":480}},"from":{"krate":0,"index":15662},"to":{"krate":1,"index":4360}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/allow_std.rs","byte_start":476276,"byte_end":476286,"line_start":199,"line_end":199,"column_start":26,"column_end":36},"kind":{"Impl":{"id":481}},"from":{"krate":0,"index":15662},"to":{"krate":27,"index":49}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/buf_reader.rs","byte_start":478125,"byte_end":478134,"line_start":41,"line_end":41,"column_start":20,"column_end":29},"kind":{"Impl":{"id":482}},"from":{"krate":0,"index":15695},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/buf_reader.rs","byte_start":479279,"byte_end":479288,"line_start":76,"line_end":76,"column_start":34,"column_end":43},"kind":{"Impl":{"id":483}},"from":{"krate":0,"index":15695},"to":{"krate":27,"index":39}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/buf_reader.rs","byte_start":480900,"byte_end":480909,"line_start":120,"line_end":120,"column_start":37,"column_end":46},"kind":{"Impl":{"id":484}},"from":{"krate":0,"index":15695},"to":{"krate":27,"index":49}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/buf_reader.rs","byte_start":481739,"byte_end":481748,"line_start":141,"line_end":141,"column_start":36,"column_end":45},"kind":{"Impl":{"id":485}},"from":{"krate":0,"index":15695},"to":{"krate":27,"index":42}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/buf_reader.rs","byte_start":481826,"byte_end":481835,"line_start":145,"line_end":145,"column_start":36,"column_end":45},"kind":{"Impl":{"id":486}},"from":{"krate":0,"index":15695},"to":{"krate":2,"index":8887}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/buf_reader.rs","byte_start":482151,"byte_end":482160,"line_start":154,"line_end":154,"column_start":46,"column_end":55},"kind":{"Impl":{"id":487}},"from":{"krate":0,"index":15695},"to":{"krate":27,"index":47}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/buf_writer.rs","byte_start":486128,"byte_end":486137,"line_start":40,"line_end":40,"column_start":21,"column_end":30},"kind":{"Impl":{"id":488}},"from":{"krate":0,"index":15748},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/buf_writer.rs","byte_start":487666,"byte_end":487675,"line_start":88,"line_end":88,"column_start":36,"column_end":45},"kind":{"Impl":{"id":489}},"from":{"krate":0,"index":15748},"to":{"krate":27,"index":42}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/buf_writer.rs","byte_start":489098,"byte_end":489107,"line_start":131,"line_end":131,"column_start":34,"column_end":43},"kind":{"Impl":{"id":490}},"from":{"krate":0,"index":15748},"to":{"krate":27,"index":39}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/buf_writer.rs","byte_start":489188,"byte_end":489197,"line_start":135,"line_end":135,"column_start":40,"column_end":49},"kind":{"Impl":{"id":491}},"from":{"krate":0,"index":15748},"to":{"krate":27,"index":49}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/buf_writer.rs","byte_start":489278,"byte_end":489287,"line_start":139,"line_end":139,"column_start":36,"column_end":45},"kind":{"Impl":{"id":492}},"from":{"krate":0,"index":15748},"to":{"krate":2,"index":8887}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/buf_writer.rs","byte_start":489646,"byte_end":489655,"line_start":149,"line_end":149,"column_start":47,"column_end":56},"kind":{"Impl":{"id":493}},"from":{"krate":0,"index":15748},"to":{"krate":27,"index":47}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/chain.rs","byte_start":490592,"byte_end":490597,"line_start":23,"line_end":23,"column_start":12,"column_end":17},"kind":{"Impl":{"id":494}},"from":{"krate":0,"index":15797},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/chain.rs","byte_start":491853,"byte_end":491858,"line_start":62,"line_end":62,"column_start":27,"column_end":32},"kind":{"Impl":{"id":495}},"from":{"krate":0,"index":15797},"to":{"krate":2,"index":8887}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/chain.rs","byte_start":492188,"byte_end":492193,"line_start":76,"line_end":76,"column_start":26,"column_end":31},"kind":{"Impl":{"id":496}},"from":{"krate":0,"index":15797},"to":{"krate":27,"index":39}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/chain.rs","byte_start":493546,"byte_end":493551,"line_start":126,"line_end":126,"column_start":29,"column_end":34},"kind":{"Impl":{"id":497}},"from":{"krate":0,"index":15797},"to":{"krate":27,"index":49}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/close.rs","byte_start":494662,"byte_end":494667,"line_start":14,"line_end":14,"column_start":35,"column_end":40},"kind":{"Impl":{"id":498}},"from":{"krate":0,"index":15846},"to":{"krate":2,"index":2894}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/close.rs","byte_start":494720,"byte_end":494725,"line_start":16,"line_end":16,"column_start":42,"column_end":47},"kind":{"Impl":{"id":499}},"from":{"krate":0,"index":15846},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/close.rs","byte_start":494867,"byte_end":494872,"line_start":22,"line_end":22,"column_start":49,"column_end":54},"kind":{"Impl":{"id":500}},"from":{"krate":0,"index":15846},"to":{"krate":2,"index":12101}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/copy.rs","byte_start":496642,"byte_end":496646,"line_start":52,"line_end":52,"column_start":63,"column_end":67},"kind":{"Impl":{"id":501}},"from":{"krate":0,"index":15863},"to":{"krate":2,"index":12101}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/copy_buf.rs","byte_start":498369,"byte_end":498376,"line_start":54,"line_end":54,"column_start":23,"column_end":30},"kind":{"Impl":{"id":502}},"from":{"krate":0,"index":15917},"to":{"krate":2,"index":12101}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":500209,"byte_end":500215,"line_start":29,"line_end":29,"column_start":9,"column_end":15},"kind":{"Impl":{"id":503}},"from":{"krate":0,"index":15970},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":503415,"byte_end":503421,"line_start":148,"line_end":148,"column_start":23,"column_end":29},"kind":{"Impl":{"id":504}},"from":{"krate":0,"index":15970},"to":{"krate":27,"index":47}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":503708,"byte_end":503714,"line_start":161,"line_end":161,"column_start":44,"column_end":50},"kind":{"Impl":{"id":505}},"from":{"krate":0,"index":15970},"to":{"krate":27,"index":39}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":504346,"byte_end":504352,"line_start":185,"line_end":185,"column_start":26,"column_end":32},"kind":{"Impl":{"id":506}},"from":{"krate":0,"index":15970},"to":{"krate":27,"index":49}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":505556,"byte_end":505562,"line_start":226,"line_end":226,"column_start":21,"column_end":27},"kind":{"Impl":{"id":507}},"from":{"krate":0,"index":15970},"to":{"krate":27,"index":42}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":505637,"byte_end":505643,"line_start":230,"line_end":230,"column_start":21,"column_end":27},"kind":{"Impl":{"id":508}},"from":{"krate":0,"index":15970},"to":{"krate":27,"index":42}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":505721,"byte_end":505727,"line_start":234,"line_end":234,"column_start":21,"column_end":27},"kind":{"Impl":{"id":509}},"from":{"krate":0,"index":15970},"to":{"krate":27,"index":42}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":505800,"byte_end":505806,"line_start":238,"line_end":238,"column_start":21,"column_end":27},"kind":{"Impl":{"id":510}},"from":{"krate":0,"index":15970},"to":{"krate":27,"index":42}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/empty.rs","byte_start":506789,"byte_end":506794,"line_start":37,"line_end":37,"column_start":20,"column_end":25},"kind":{"Impl":{"id":511}},"from":{"krate":0,"index":6870},"to":{"krate":27,"index":39}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/empty.rs","byte_start":507142,"byte_end":507147,"line_start":54,"line_end":54,"column_start":23,"column_end":28},"kind":{"Impl":{"id":512}},"from":{"krate":0,"index":6870},"to":{"krate":27,"index":49}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/empty.rs","byte_start":507379,"byte_end":507384,"line_start":63,"line_end":63,"column_start":21,"column_end":26},"kind":{"Impl":{"id":513}},"from":{"krate":0,"index":6870},"to":{"krate":2,"index":8887}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/fill_buf.rs","byte_start":507882,"byte_end":507889,"line_start":14,"line_end":14,"column_start":27,"column_end":34},"kind":{"Impl":{"id":514}},"from":{"krate":0,"index":15998},"to":{"krate":2,"index":2894}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/fill_buf.rs","byte_start":507944,"byte_end":507951,"line_start":16,"line_end":16,"column_start":44,"column_end":51},"kind":{"Impl":{"id":515}},"from":{"krate":0,"index":15998},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/fill_buf.rs","byte_start":508082,"byte_end":508089,"line_start":22,"line_end":22,"column_start":24,"column_end":31},"kind":{"Impl":{"id":516}},"from":{"krate":0,"index":15998},"to":{"krate":2,"index":12101}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/flush.rs","byte_start":509659,"byte_end":509664,"line_start":14,"line_end":14,"column_start":35,"column_end":40},"kind":{"Impl":{"id":517}},"from":{"krate":0,"index":16006},"to":{"krate":2,"index":2894}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/flush.rs","byte_start":509717,"byte_end":509722,"line_start":16,"line_end":16,"column_start":42,"column_end":47},"kind":{"Impl":{"id":518}},"from":{"krate":0,"index":16006},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/flush.rs","byte_start":509835,"byte_end":509840,"line_start":22,"line_end":22,"column_start":20,"column_end":25},"kind":{"Impl":{"id":519}},"from":{"krate":0,"index":16006},"to":{"krate":2,"index":12101}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/into_sink.rs","byte_start":510862,"byte_end":510870,"line_start":29,"line_end":29,"column_start":40,"column_end":48},"kind":{"Impl":{"id":520}},"from":{"krate":0,"index":16028},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/into_sink.rs","byte_start":511803,"byte_end":511811,"line_start":57,"line_end":57,"column_start":55,"column_end":63},"kind":{"Impl":{"id":521}},"from":{"krate":0,"index":16028},"to":{"krate":23,"index":17}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/lines.rs","byte_start":513364,"byte_end":513369,"line_start":24,"line_end":24,"column_start":23,"column_end":28},"kind":{"Impl":{"id":522}},"from":{"krate":0,"index":16075},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/lines.rs","byte_start":513532,"byte_end":513537,"line_start":30,"line_end":30,"column_start":34,"column_end":39},"kind":{"Impl":{"id":523}},"from":{"krate":0,"index":16075},"to":{"krate":19,"index":96}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/read.rs","byte_start":514532,"byte_end":514536,"line_start":15,"line_end":15,"column_start":35,"column_end":39},"kind":{"Impl":{"id":524}},"from":{"krate":0,"index":16118},"to":{"krate":2,"index":2894}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/read.rs","byte_start":514588,"byte_end":514592,"line_start":17,"line_end":17,"column_start":41,"column_end":45},"kind":{"Impl":{"id":525}},"from":{"krate":0,"index":16118},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/read.rs","byte_start":514757,"byte_end":514761,"line_start":23,"line_end":23,"column_start":48,"column_end":52},"kind":{"Impl":{"id":526}},"from":{"krate":0,"index":16118},"to":{"krate":2,"index":12101}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/read_vectored.rs","byte_start":515449,"byte_end":515461,"line_start":15,"line_end":15,"column_start":35,"column_end":47},"kind":{"Impl":{"id":527}},"from":{"krate":0,"index":16127},"to":{"krate":2,"index":2894}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/read_vectored.rs","byte_start":515513,"byte_end":515525,"line_start":17,"line_end":17,"column_start":41,"column_end":53},"kind":{"Impl":{"id":528}},"from":{"krate":0,"index":16127},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/read_vectored.rs","byte_start":515704,"byte_end":515716,"line_start":23,"line_end":23,"column_start":48,"column_end":60},"kind":{"Impl":{"id":529}},"from":{"krate":0,"index":16127},"to":{"krate":2,"index":12101}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/read_exact.rs","byte_start":516411,"byte_end":516420,"line_start":17,"line_end":17,"column_start":35,"column_end":44},"kind":{"Impl":{"id":530}},"from":{"krate":0,"index":16136},"to":{"krate":2,"index":2894}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/read_exact.rs","byte_start":516472,"byte_end":516481,"line_start":19,"line_end":19,"column_start":41,"column_end":50},"kind":{"Impl":{"id":531}},"from":{"krate":0,"index":16136},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/read_exact.rs","byte_start":516646,"byte_end":516655,"line_start":25,"line_end":25,"column_start":48,"column_end":57},"kind":{"Impl":{"id":532}},"from":{"krate":0,"index":16136},"to":{"krate":2,"index":12101}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/read_line.rs","byte_start":517798,"byte_end":517806,"line_start":21,"line_end":21,"column_start":35,"column_end":43},"kind":{"Impl":{"id":533}},"from":{"krate":0,"index":16145},"to":{"krate":2,"index":2894}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/read_line.rs","byte_start":517861,"byte_end":517869,"line_start":23,"line_end":23,"column_start":44,"column_end":52},"kind":{"Impl":{"id":534}},"from":{"krate":0,"index":16145},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/read_line.rs","byte_start":518838,"byte_end":518846,"line_start":50,"line_end":50,"column_start":51,"column_end":59},"kind":{"Impl":{"id":535}},"from":{"krate":0,"index":16145},"to":{"krate":2,"index":12101}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/read_to_end.rs","byte_start":519601,"byte_end":519610,"line_start":18,"line_end":18,"column_start":35,"column_end":44},"kind":{"Impl":{"id":536}},"from":{"krate":0,"index":16156},"to":{"krate":2,"index":2894}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/read_to_end.rs","byte_start":519662,"byte_end":519671,"line_start":20,"line_end":20,"column_start":41,"column_end":50},"kind":{"Impl":{"id":537}},"from":{"krate":0,"index":16156},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/read_to_end.rs","byte_start":519916,"byte_end":519921,"line_start":32,"line_end":32,"column_start":15,"column_end":20},"kind":{"Impl":{"id":538}},"from":{"krate":0,"index":7227},"to":{"krate":2,"index":3088}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/read_to_end.rs","byte_start":521756,"byte_end":521765,"line_start":81,"line_end":81,"column_start":20,"column_end":29},"kind":{"Impl":{"id":539}},"from":{"krate":0,"index":16156},"to":{"krate":2,"index":12101}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/read_to_string.rs","byte_start":522638,"byte_end":522650,"line_start":20,"line_end":20,"column_start":35,"column_end":47},"kind":{"Impl":{"id":540}},"from":{"krate":0,"index":16166},"to":{"krate":2,"index":2894}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/read_to_string.rs","byte_start":522702,"byte_end":522714,"line_start":22,"line_end":22,"column_start":41,"column_end":53},"kind":{"Impl":{"id":541}},"from":{"krate":0,"index":16166},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/read_to_string.rs","byte_start":523643,"byte_end":523655,"line_start":49,"line_end":49,"column_start":20,"column_end":32},"kind":{"Impl":{"id":542}},"from":{"krate":0,"index":16166},"to":{"krate":2,"index":12101}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/read_until.rs","byte_start":524475,"byte_end":524484,"line_start":19,"line_end":19,"column_start":35,"column_end":44},"kind":{"Impl":{"id":543}},"from":{"krate":0,"index":16177},"to":{"krate":2,"index":2894}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/read_until.rs","byte_start":524539,"byte_end":524548,"line_start":21,"line_end":21,"column_start":44,"column_end":53},"kind":{"Impl":{"id":544}},"from":{"krate":0,"index":16177},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/read_until.rs","byte_start":525520,"byte_end":525529,"line_start":53,"line_end":53,"column_start":51,"column_end":60},"kind":{"Impl":{"id":545}},"from":{"krate":0,"index":16177},"to":{"krate":2,"index":12101}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/repeat.rs","byte_start":526753,"byte_end":526759,"line_start":37,"line_end":37,"column_start":20,"column_end":26},"kind":{"Impl":{"id":546}},"from":{"krate":0,"index":7362},"to":{"krate":27,"index":39}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/repeat.rs","byte_start":527539,"byte_end":527545,"line_start":70,"line_end":70,"column_start":21,"column_end":27},"kind":{"Impl":{"id":547}},"from":{"krate":0,"index":7362},"to":{"krate":2,"index":8887}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/seek.rs","byte_start":528059,"byte_end":528063,"line_start":15,"line_end":15,"column_start":35,"column_end":39},"kind":{"Impl":{"id":548}},"from":{"krate":0,"index":16188},"to":{"krate":2,"index":2894}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/seek.rs","byte_start":528115,"byte_end":528119,"line_start":17,"line_end":17,"column_start":41,"column_end":45},"kind":{"Impl":{"id":549}},"from":{"krate":0,"index":16188},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/seek.rs","byte_start":528276,"byte_end":528280,"line_start":23,"line_end":23,"column_start":48,"column_end":52},"kind":{"Impl":{"id":550}},"from":{"krate":0,"index":16188},"to":{"krate":2,"index":12101}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/sink.rs","byte_start":529409,"byte_end":529413,"line_start":34,"line_end":34,"column_start":21,"column_end":25},"kind":{"Impl":{"id":551}},"from":{"krate":0,"index":7438},"to":{"krate":27,"index":42}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/sink.rs","byte_start":530131,"byte_end":530135,"line_start":63,"line_end":63,"column_start":21,"column_end":25},"kind":{"Impl":{"id":552}},"from":{"krate":0,"index":7438},"to":{"krate":2,"index":8887}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/split.rs","byte_start":531152,"byte_end":531160,"line_start":34,"line_end":34,"column_start":16,"column_end":24},"kind":{"Impl":{"id":553}},"from":{"krate":0,"index":16197},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/split.rs","byte_start":531660,"byte_end":531669,"line_start":45,"line_end":45,"column_start":16,"column_end":25},"kind":{"Impl":{"id":554}},"from":{"krate":0,"index":16203},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/split.rs","byte_start":532061,"byte_end":532069,"line_start":54,"line_end":54,"column_start":34,"column_end":42},"kind":{"Impl":{"id":555}},"from":{"krate":0,"index":16197},"to":{"krate":27,"index":39}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/split.rs","byte_start":532572,"byte_end":532581,"line_start":72,"line_end":72,"column_start":36,"column_end":45},"kind":{"Impl":{"id":556}},"from":{"krate":0,"index":16203},"to":{"krate":27,"index":42}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/split.rs","byte_start":533596,"byte_end":533608,"line_start":102,"line_end":102,"column_start":24,"column_end":36},"kind":{"Impl":{"id":557}},"from":{"krate":0,"index":7522},"to":{"krate":2,"index":8887}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/split.rs","byte_start":533772,"byte_end":533784,"line_start":108,"line_end":108,"column_start":26,"column_end":38},"kind":{"Impl":{"id":558}},"from":{"krate":0,"index":7522},"to":{"krate":2,"index":8894}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/split.rs","byte_start":534018,"byte_end":534030,"line_start":115,"line_end":115,"column_start":47,"column_end":59},"kind":{"Impl":{"id":559}},"from":{"krate":0,"index":7522},"to":{"krate":1,"index":2326}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/take.rs","byte_start":534569,"byte_end":534573,"line_start":21,"line_end":21,"column_start":20,"column_end":24},"kind":{"Impl":{"id":560}},"from":{"krate":0,"index":16214},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/take.rs","byte_start":536490,"byte_end":536494,"line_start":86,"line_end":86,"column_start":34,"column_end":38},"kind":{"Impl":{"id":561}},"from":{"krate":0,"index":16214},"to":{"krate":27,"index":39}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/take.rs","byte_start":537135,"byte_end":537139,"line_start":110,"line_end":110,"column_start":40,"column_end":44},"kind":{"Impl":{"id":562}},"from":{"krate":0,"index":16214},"to":{"krate":27,"index":49}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/window.rs","byte_start":538982,"byte_end":538988,"line_start":26,"line_end":26,"column_start":22,"column_end":28},"kind":{"Impl":{"id":563}},"from":{"krate":0,"index":16253},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/window.rs","byte_start":541058,"byte_end":541064,"line_start":94,"line_end":94,"column_start":38,"column_end":44},"kind":{"Impl":{"id":564}},"from":{"krate":0,"index":16253},"to":{"krate":2,"index":2750}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/window.rs","byte_start":541211,"byte_end":541217,"line_start":100,"line_end":100,"column_start":38,"column_end":44},"kind":{"Impl":{"id":565}},"from":{"krate":0,"index":16253},"to":{"krate":2,"index":2753}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/write.rs","byte_start":541738,"byte_end":541743,"line_start":15,"line_end":15,"column_start":35,"column_end":40},"kind":{"Impl":{"id":566}},"from":{"krate":0,"index":16260},"to":{"krate":2,"index":2894}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/write.rs","byte_start":541796,"byte_end":541801,"line_start":17,"line_end":17,"column_start":42,"column_end":47},"kind":{"Impl":{"id":567}},"from":{"krate":0,"index":16260},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/write.rs","byte_start":541963,"byte_end":541968,"line_start":23,"line_end":23,"column_start":49,"column_end":54},"kind":{"Impl":{"id":568}},"from":{"krate":0,"index":16260},"to":{"krate":2,"index":12101}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/write_vectored.rs","byte_start":542652,"byte_end":542665,"line_start":15,"line_end":15,"column_start":35,"column_end":48},"kind":{"Impl":{"id":569}},"from":{"krate":0,"index":16269},"to":{"krate":2,"index":2894}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/write_vectored.rs","byte_start":542718,"byte_end":542731,"line_start":17,"line_end":17,"column_start":42,"column_end":55},"kind":{"Impl":{"id":570}},"from":{"krate":0,"index":16269},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/write_vectored.rs","byte_start":542904,"byte_end":542917,"line_start":23,"line_end":23,"column_start":49,"column_end":62},"kind":{"Impl":{"id":571}},"from":{"krate":0,"index":16269},"to":{"krate":2,"index":12101}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/write_all.rs","byte_start":543609,"byte_end":543617,"line_start":17,"line_end":17,"column_start":35,"column_end":43},"kind":{"Impl":{"id":572}},"from":{"krate":0,"index":16278},"to":{"krate":2,"index":2894}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/write_all.rs","byte_start":543670,"byte_end":543678,"line_start":19,"line_end":19,"column_start":42,"column_end":50},"kind":{"Impl":{"id":573}},"from":{"krate":0,"index":16278},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/write_all.rs","byte_start":543840,"byte_end":543848,"line_start":25,"line_end":25,"column_start":49,"column_end":57},"kind":{"Impl":{"id":574}},"from":{"krate":0,"index":16278},"to":{"krate":2,"index":12101}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":447530,"byte_end":447539,"line_start":152,"line_end":152,"column_start":25,"column_end":34},"kind":"SuperTrait","from":{"krate":27,"index":39},"to":{"krate":0,"index":7730}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":455787,"byte_end":455788,"line_start":402,"line_end":402,"column_start":46,"column_end":47},"kind":{"Impl":{"id":575}},"from":{"krate":0,"index":7746},"to":{"krate":0,"index":7730}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":455891,"byte_end":455901,"line_start":405,"line_end":405,"column_start":26,"column_end":36},"kind":"SuperTrait","from":{"krate":27,"index":42},"to":{"krate":0,"index":7747}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":462243,"byte_end":462244,"line_start":596,"line_end":596,"column_start":48,"column_end":49},"kind":{"Impl":{"id":576}},"from":{"krate":0,"index":7759},"to":{"krate":0,"index":7747}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":462345,"byte_end":462354,"line_start":599,"line_end":599,"column_start":25,"column_end":34},"kind":"SuperTrait","from":{"krate":27,"index":47},"to":{"krate":0,"index":7760}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":463131,"byte_end":463132,"line_start":624,"line_end":624,"column_start":46,"column_end":47},"kind":{"Impl":{"id":577}},"from":{"krate":0,"index":7764},"to":{"krate":0,"index":7760}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":463239,"byte_end":463251,"line_start":627,"line_end":627,"column_start":28,"column_end":40},"kind":"SuperTrait","from":{"krate":27,"index":49},"to":{"krate":0,"index":7765}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":470611,"byte_end":470612,"line_start":828,"line_end":828,"column_start":52,"column_end":53},"kind":{"Impl":{"id":578}},"from":{"krate":0,"index":7774},"to":{"krate":0,"index":7765}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":12832352,"byte_end":12832357,"line_start":26,"line_end":26,"column_start":32,"column_end":37},"kind":{"Impl":{"id":579}},"from":{"krate":0,"index":16341},"to":{"krate":2,"index":8887}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":12832690,"byte_end":12832695,"line_start":36,"line_end":36,"column_start":21,"column_end":26},"kind":{"Impl":{"id":580}},"from":{"krate":0,"index":16341},"to":{"krate":2,"index":2759}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":12832788,"byte_end":12832793,"line_start":42,"line_end":42,"column_start":30,"column_end":35},"kind":{"Impl":{"id":581}},"from":{"krate":0,"index":16341},"to":{"krate":2,"index":2831}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":12832926,"byte_end":12832932,"line_start":53,"line_end":53,"column_start":6,"column_end":12},"kind":{"Impl":{"id":582}},"from":{"krate":0,"index":16355},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":12833464,"byte_end":12833469,"line_start":73,"line_end":73,"column_start":9,"column_end":14},"kind":{"Impl":{"id":583}},"from":{"krate":0,"index":16341},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":12834040,"byte_end":12834045,"line_start":98,"line_end":98,"column_start":17,"column_end":22},"kind":{"Impl":{"id":584}},"from":{"krate":0,"index":16341},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":12837160,"byte_end":12837175,"line_start":186,"line_end":186,"column_start":32,"column_end":47},"kind":{"Impl":{"id":585}},"from":{"krate":0,"index":16378},"to":{"krate":2,"index":8887}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":12837606,"byte_end":12837621,"line_start":199,"line_end":199,"column_start":33,"column_end":48},"kind":{"Impl":{"id":586}},"from":{"krate":0,"index":16378},"to":{"krate":19,"index":27}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":12837738,"byte_end":12837753,"line_start":205,"line_end":205,"column_start":32,"column_end":47},"kind":{"Impl":{"id":587}},"from":{"krate":0,"index":16378},"to":{"krate":2,"index":12101}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":12838982,"byte_end":12838997,"line_start":241,"line_end":241,"column_start":26,"column_end":41},"kind":{"Impl":{"id":588}},"from":{"krate":0,"index":16378},"to":{"krate":2,"index":3088}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":12839599,"byte_end":12839609,"line_start":260,"line_end":260,"column_start":21,"column_end":31},"kind":{"Impl":{"id":589}},"from":{"krate":0,"index":16397},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":12840621,"byte_end":12840631,"line_start":290,"line_end":290,"column_start":45,"column_end":55},"kind":{"Impl":{"id":590}},"from":{"krate":0,"index":16397},"to":{"krate":2,"index":8887}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":12840837,"byte_end":12840847,"line_start":296,"line_end":296,"column_start":26,"column_end":36},"kind":{"Impl":{"id":591}},"from":{"krate":0,"index":16397},"to":{"krate":2,"index":3088}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":12840945,"byte_end":12840955,"line_start":302,"line_end":302,"column_start":27,"column_end":37},"kind":{"Impl":{"id":592}},"from":{"krate":0,"index":16397},"to":{"krate":2,"index":3064}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":12841096,"byte_end":12841106,"line_start":309,"line_end":309,"column_start":30,"column_end":40},"kind":{"Impl":{"id":593}},"from":{"krate":0,"index":16397},"to":{"krate":2,"index":3077}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":12841557,"byte_end":12841573,"line_start":323,"line_end":323,"column_start":32,"column_end":48},"kind":{"Impl":{"id":594}},"from":{"krate":0,"index":16420},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":12842703,"byte_end":12842719,"line_start":354,"line_end":354,"column_start":56,"column_end":72},"kind":{"Impl":{"id":595}},"from":{"krate":0,"index":16420},"to":{"krate":2,"index":8887}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":12842984,"byte_end":12843000,"line_start":363,"line_end":363,"column_start":37,"column_end":53},"kind":{"Impl":{"id":596}},"from":{"krate":0,"index":16420},"to":{"krate":2,"index":3088}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":12843112,"byte_end":12843128,"line_start":369,"line_end":369,"column_start":38,"column_end":54},"kind":{"Impl":{"id":597}},"from":{"krate":0,"index":16420},"to":{"krate":2,"index":3064}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":12843271,"byte_end":12843287,"line_start":376,"line_end":376,"column_start":41,"column_end":57},"kind":{"Impl":{"id":598}},"from":{"krate":0,"index":16420},"to":{"krate":2,"index":3077}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":12843564,"byte_end":12843569,"line_start":384,"line_end":384,"column_start":40,"column_end":45},"kind":{"Impl":{"id":599}},"from":{"krate":0,"index":16341},"to":{"krate":2,"index":2853}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":12843615,"byte_end":12843620,"line_start":385,"line_end":385,"column_start":40,"column_end":45},"kind":{"Impl":{"id":600}},"from":{"krate":0,"index":16341},"to":{"krate":2,"index":2865}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":12843787,"byte_end":12843802,"line_start":389,"line_end":389,"column_start":40,"column_end":55},"kind":{"Impl":{"id":601}},"from":{"krate":0,"index":16378},"to":{"krate":2,"index":2853}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":12843906,"byte_end":12843921,"line_start":391,"line_end":391,"column_start":33,"column_end":48},"kind":{"Impl":{"id":602}},"from":{"krate":0,"index":16378},"to":{"krate":2,"index":2865}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":12844125,"byte_end":12844135,"line_start":395,"line_end":395,"column_start":40,"column_end":50},"kind":{"Impl":{"id":603}},"from":{"krate":0,"index":16397},"to":{"krate":2,"index":2853}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":12844185,"byte_end":12844195,"line_start":396,"line_end":396,"column_start":40,"column_end":50},"kind":{"Impl":{"id":604}},"from":{"krate":0,"index":16397},"to":{"krate":2,"index":2865}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":12844263,"byte_end":12844279,"line_start":397,"line_end":397,"column_start":58,"column_end":74},"kind":{"Impl":{"id":605}},"from":{"krate":0,"index":16420},"to":{"krate":2,"index":2853}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":12844350,"byte_end":12844366,"line_start":398,"line_end":398,"column_start":58,"column_end":74},"kind":{"Impl":{"id":606}},"from":{"krate":0,"index":16420},"to":{"krate":2,"index":2865}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/bilock.rs","byte_start":12846370,"byte_end":12846375,"line_start":48,"line_end":48,"column_start":31,"column_end":36},"kind":{"Impl":{"id":607}},"from":{"krate":0,"index":16573},"to":{"krate":2,"index":2853}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/bilock.rs","byte_start":12846412,"byte_end":12846417,"line_start":49,"line_end":49,"column_start":31,"column_end":36},"kind":{"Impl":{"id":608}},"from":{"krate":0,"index":16573},"to":{"krate":2,"index":2865}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/bilock.rs","byte_start":12846433,"byte_end":12846439,"line_start":51,"line_end":51,"column_start":9,"column_end":15},"kind":{"Impl":{"id":609}},"from":{"krate":0,"index":16567},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/bilock.rs","byte_start":12852059,"byte_end":12852064,"line_start":184,"line_end":184,"column_start":16,"column_end":21},"kind":{"Impl":{"id":610}},"from":{"krate":0,"index":16573},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/bilock.rs","byte_start":12852186,"byte_end":12852191,"line_start":190,"line_end":190,"column_start":18,"column_end":23},"kind":{"Impl":{"id":611}},"from":{"krate":0,"index":16573},"to":{"krate":2,"index":3088}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/bilock.rs","byte_start":12852519,"byte_end":12852531,"line_start":201,"line_end":201,"column_start":24,"column_end":36},"kind":{"Impl":{"id":612}},"from":{"krate":0,"index":16538},"to":{"krate":2,"index":8887}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/bilock.rs","byte_start":12852695,"byte_end":12852707,"line_start":207,"line_end":207,"column_start":26,"column_end":38},"kind":{"Impl":{"id":613}},"from":{"krate":0,"index":16538},"to":{"krate":2,"index":8894}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/bilock.rs","byte_start":12852928,"byte_end":12852940,"line_start":214,"line_end":214,"column_start":47,"column_end":59},"kind":{"Impl":{"id":614}},"from":{"krate":0,"index":16538},"to":{"krate":1,"index":2326}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/bilock.rs","byte_start":12853322,"byte_end":12853333,"line_start":227,"line_end":227,"column_start":19,"column_end":30},"kind":{"Impl":{"id":615}},"from":{"krate":0,"index":16580},"to":{"krate":2,"index":3064}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/bilock.rs","byte_start":12853496,"byte_end":12853507,"line_start":234,"line_end":234,"column_start":29,"column_end":40},"kind":{"Impl":{"id":616}},"from":{"krate":0,"index":16580},"to":{"krate":2,"index":3077}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/bilock.rs","byte_start":12853645,"byte_end":12853656,"line_start":240,"line_end":240,"column_start":9,"column_end":20},"kind":{"Impl":{"id":617}},"from":{"krate":0,"index":16580},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/bilock.rs","byte_start":12854008,"byte_end":12854019,"line_start":249,"line_end":249,"column_start":18,"column_end":29},"kind":{"Impl":{"id":618}},"from":{"krate":0,"index":16580},"to":{"krate":2,"index":3088}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/abortable.rs","byte_start":12855332,"byte_end":12855341,"line_start":22,"line_end":22,"column_start":9,"column_end":18},"kind":{"Impl":{"id":619}},"from":{"krate":0,"index":16897},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/abortable.rs","byte_start":12857614,"byte_end":12857625,"line_start":87,"line_end":87,"column_start":6,"column_end":17},"kind":{"Impl":{"id":620}},"from":{"krate":0,"index":16654},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/abortable.rs","byte_start":12858408,"byte_end":12858415,"line_start":112,"line_end":112,"column_start":23,"column_end":30},"kind":{"Impl":{"id":621}},"from":{"krate":0,"index":16665},"to":{"krate":2,"index":8894}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/abortable.rs","byte_start":12858598,"byte_end":12858605,"line_start":119,"line_end":119,"column_start":28,"column_end":35},"kind":{"Impl":{"id":622}},"from":{"krate":0,"index":16665},"to":{"krate":1,"index":2326}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/abortable.rs","byte_start":12858618,"byte_end":12858627,"line_start":121,"line_end":121,"column_start":9,"column_end":18},"kind":{"Impl":{"id":623}},"from":{"krate":0,"index":16897},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/abortable.rs","byte_start":12859616,"byte_end":12859625,"line_start":152,"line_end":152,"column_start":22,"column_end":31},"kind":{"Impl":{"id":624}},"from":{"krate":0,"index":16897},"to":{"krate":2,"index":12101}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/abortable.rs","byte_start":12859864,"byte_end":12859873,"line_start":163,"line_end":163,"column_start":21,"column_end":30},"kind":{"Impl":{"id":625}},"from":{"krate":0,"index":16897},"to":{"krate":19,"index":96}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/abortable.rs","byte_start":12860132,"byte_end":12860143,"line_start":174,"line_end":174,"column_start":6,"column_end":17},"kind":{"Impl":{"id":626}},"from":{"krate":0,"index":16654},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/fns.rs","byte_start":545473,"byte_end":545474,"line_start":9,"line_end":9,"column_start":30,"column_end":31},"kind":{"Impl":{"id":627}},"from":{"krate":0,"index":7821},"to":{"krate":0,"index":7816}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/fns.rs","byte_start":545613,"byte_end":545620,"line_start":19,"line_end":19,"column_start":22,"column_end":29},"kind":"SuperTrait","from":{"krate":0,"index":7816},"to":{"krate":0,"index":7826}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/fns.rs","byte_start":545709,"byte_end":545710,"line_start":23,"line_end":23,"column_start":29,"column_end":30},"kind":{"Impl":{"id":628}},"from":{"krate":0,"index":7830},"to":{"krate":0,"index":7826}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/fns.rs","byte_start":545896,"byte_end":545902,"line_start":34,"line_end":34,"column_start":19,"column_end":25},"kind":"SuperTrait","from":{"krate":0,"index":7826},"to":{"krate":0,"index":7834}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/fns.rs","byte_start":545980,"byte_end":545981,"line_start":38,"line_end":38,"column_start":26,"column_end":27},"kind":{"Impl":{"id":629}},"from":{"krate":0,"index":7838},"to":{"krate":0,"index":7834}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/fns.rs","byte_start":546997,"byte_end":547001,"line_start":76,"line_end":76,"column_start":21,"column_end":25},"kind":{"Impl":{"id":630}},"from":{"krate":0,"index":7843},"to":{"krate":2,"index":2831}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/fns.rs","byte_start":547095,"byte_end":547099,"line_start":82,"line_end":82,"column_start":27,"column_end":31},"kind":{"Impl":{"id":631}},"from":{"krate":0,"index":7843},"to":{"krate":0,"index":7816}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/fns.rs","byte_start":547358,"byte_end":547365,"line_start":94,"line_end":94,"column_start":30,"column_end":37},"kind":{"Impl":{"id":637}},"from":{"krate":0,"index":16696},"to":{"krate":0,"index":7816}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/fns.rs","byte_start":547588,"byte_end":547595,"line_start":104,"line_end":104,"column_start":29,"column_end":36},"kind":{"Impl":{"id":638}},"from":{"krate":0,"index":16696},"to":{"krate":0,"index":7826}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/fns.rs","byte_start":547786,"byte_end":547793,"line_start":113,"line_end":113,"column_start":26,"column_end":33},"kind":{"Impl":{"id":639}},"from":{"krate":0,"index":16696},"to":{"krate":0,"index":7834}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/fns.rs","byte_start":548098,"byte_end":548111,"line_start":129,"line_end":129,"column_start":35,"column_end":48},"kind":{"Impl":{"id":640}},"from":{"krate":0,"index":16717},"to":{"krate":0,"index":7816}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/fns.rs","byte_start":548528,"byte_end":548537,"line_start":144,"line_end":144,"column_start":27,"column_end":36},"kind":{"Impl":{"id":646}},"from":{"krate":0,"index":16733},"to":{"krate":0,"index":7816}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/fns.rs","byte_start":548821,"byte_end":548830,"line_start":155,"line_end":155,"column_start":26,"column_end":35},"kind":{"Impl":{"id":647}},"from":{"krate":0,"index":16733},"to":{"krate":0,"index":7826}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/fns.rs","byte_start":549092,"byte_end":549101,"line_start":165,"line_end":165,"column_start":23,"column_end":32},"kind":{"Impl":{"id":648}},"from":{"krate":0,"index":16733},"to":{"krate":0,"index":7834}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/fns.rs","byte_start":549423,"byte_end":549430,"line_start":181,"line_end":181,"column_start":41,"column_end":48},"kind":{"Impl":{"id":649}},"from":{"krate":0,"index":16748},"to":{"krate":0,"index":7816}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/fns.rs","byte_start":549649,"byte_end":549656,"line_start":190,"line_end":190,"column_start":40,"column_end":47},"kind":{"Impl":{"id":650}},"from":{"krate":0,"index":16748},"to":{"krate":0,"index":7826}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/fns.rs","byte_start":549834,"byte_end":549841,"line_start":198,"line_end":198,"column_start":37,"column_end":44},"kind":{"Impl":{"id":651}},"from":{"krate":0,"index":16748},"to":{"krate":0,"index":7834}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/fns.rs","byte_start":550142,"byte_end":550150,"line_start":213,"line_end":213,"column_start":41,"column_end":49},"kind":{"Impl":{"id":652}},"from":{"krate":0,"index":16763},"to":{"krate":0,"index":7816}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/fns.rs","byte_start":550373,"byte_end":550381,"line_start":222,"line_end":222,"column_start":40,"column_end":48},"kind":{"Impl":{"id":653}},"from":{"krate":0,"index":16763},"to":{"krate":0,"index":7826}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/fns.rs","byte_start":550563,"byte_end":550571,"line_start":230,"line_end":230,"column_start":37,"column_end":45},"kind":{"Impl":{"id":654}},"from":{"krate":0,"index":16763},"to":{"krate":0,"index":7834}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/fns.rs","byte_start":550881,"byte_end":550892,"line_start":245,"line_end":245,"column_start":49,"column_end":60},"kind":{"Impl":{"id":655}},"from":{"krate":0,"index":16778},"to":{"krate":0,"index":7816}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/fns.rs","byte_start":551152,"byte_end":551163,"line_start":256,"line_end":256,"column_start":48,"column_end":59},"kind":{"Impl":{"id":656}},"from":{"krate":0,"index":16778},"to":{"krate":0,"index":7826}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/fns.rs","byte_start":551400,"byte_end":551411,"line_start":266,"line_end":266,"column_start":45,"column_end":56},"kind":{"Impl":{"id":657}},"from":{"krate":0,"index":16778},"to":{"krate":0,"index":7834}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/fns.rs","byte_start":551778,"byte_end":551790,"line_start":283,"line_end":283,"column_start":49,"column_end":61},"kind":{"Impl":{"id":658}},"from":{"krate":0,"index":16790},"to":{"krate":0,"index":7816}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/fns.rs","byte_start":552051,"byte_end":552063,"line_start":294,"line_end":294,"column_start":48,"column_end":60},"kind":{"Impl":{"id":659}},"from":{"krate":0,"index":16790},"to":{"krate":0,"index":7826}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/fns.rs","byte_start":552301,"byte_end":552313,"line_start":304,"line_end":304,"column_start":45,"column_end":57},"kind":{"Impl":{"id":660}},"from":{"krate":0,"index":16790},"to":{"krate":0,"index":7834}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/fns.rs","byte_start":552932,"byte_end":552946,"line_start":326,"line_end":326,"column_start":41,"column_end":55},"kind":{"Impl":{"id":661}},"from":{"krate":0,"index":16802},"to":{"krate":0,"index":7816}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/fns.rs","byte_start":553169,"byte_end":553183,"line_start":335,"line_end":335,"column_start":40,"column_end":54},"kind":{"Impl":{"id":662}},"from":{"krate":0,"index":16802},"to":{"krate":0,"index":7826}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/fns.rs","byte_start":553384,"byte_end":553398,"line_start":343,"line_end":343,"column_start":37,"column_end":51},"kind":{"Impl":{"id":663}},"from":{"krate":0,"index":16802},"to":{"krate":0,"index":7834}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/fns.rs","byte_start":553704,"byte_end":553710,"line_start":357,"line_end":357,"column_start":21,"column_end":27},"kind":{"Impl":{"id":664}},"from":{"krate":0,"index":8007},"to":{"krate":2,"index":2831}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/fns.rs","byte_start":553803,"byte_end":553809,"line_start":362,"line_end":362,"column_start":27,"column_end":33},"kind":{"Impl":{"id":665}},"from":{"krate":0,"index":8007},"to":{"krate":0,"index":7816}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/unfold_state.rs","byte_start":554414,"byte_end":554425,"line_start":22,"line_end":22,"column_start":12,"column_end":23},"kind":{"Impl":{"id":671}},"from":{"krate":0,"index":16839},"to":{"krate":4294967295,"index":4294967295}}]}