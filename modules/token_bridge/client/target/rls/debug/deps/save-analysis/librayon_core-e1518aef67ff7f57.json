{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1","program":"/home/franglin/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","rayon_core","--edition=2018","/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","-C","metadata=e1518aef67ff7f57","-C","extra-filename=-e1518aef67ff7f57","--out-dir","/mnt/d/dev/blockchain/wormhole/solana/modules/token_bridge/client/target/rls/debug/deps","-L","dependency=/mnt/d/dev/blockchain/wormhole/solana/modules/token_bridge/client/target/rls/debug/deps","--extern","crossbeam_channel=/mnt/d/dev/blockchain/wormhole/solana/modules/token_bridge/client/target/rls/debug/deps/libcrossbeam_channel-167b27e9146a7ae0.rmeta","--extern","crossbeam_deque=/mnt/d/dev/blockchain/wormhole/solana/modules/token_bridge/client/target/rls/debug/deps/libcrossbeam_deque-c45c7955371417b2.rmeta","--extern","crossbeam_utils=/mnt/d/dev/blockchain/wormhole/solana/modules/token_bridge/client/target/rls/debug/deps/libcrossbeam_utils-fdbe24cfd538b7da.rmeta","--extern","lazy_static=/mnt/d/dev/blockchain/wormhole/solana/modules/token_bridge/client/target/rls/debug/deps/liblazy_static-8ca6dd8a6b189380.rmeta","--extern","num_cpus=/mnt/d/dev/blockchain/wormhole/solana/modules/token_bridge/client/target/rls/debug/deps/libnum_cpus-b2d4582863800ef1.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/franglin/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/mnt/d/dev/blockchain/wormhole/solana/modules/token_bridge/client/target/rls/debug/deps/librayon_core-e1518aef67ff7f57.rmeta"},"prelude":{"crate_id":{"name":"rayon_core","disambiguator":[7356762917753499219,15245420143893303827]},"crate_root":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src","external_crates":[{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[15256637969148649584,12170509131058075833]}},{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[2572959971889902175,17506693968225989007]}},{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[7380289047210505863,13821127130725723065]}},{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[15494144285296940423,1517275930380298805]}},{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[16074686111301742862,11174094882134223101]}},{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[9848143689052418189,5596786287495938678]}},{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[4765876764407181064,11122159180720543906]}},{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[3249135693812064660,5763443684941168569]}},{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[17048817722375060837,16920886256309599893]}},{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[13552797903376776722,10482089333731059857]}},{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[5989449439605467183,7256304997069434828]}},{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","num":12,"id":{"name":"std_detect","disambiguator":[13279369789493161905,12463804053127379464]}},{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","num":13,"id":{"name":"addr2line","disambiguator":[295047501211602818,3843164955111373824]}},{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","num":14,"id":{"name":"gimli","disambiguator":[14781020588812023641,7393321088923443539]}},{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","num":15,"id":{"name":"object","disambiguator":[1927264790928947756,6617054577979570835]}},{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","num":16,"id":{"name":"miniz_oxide","disambiguator":[7597657085106642381,11470551509849691989]}},{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","num":17,"id":{"name":"adler","disambiguator":[2355022556203982070,155364045674250901]}},{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","num":18,"id":{"name":"panic_unwind","disambiguator":[3046834347757213021,4625500188193743608]}},{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/log.rs","num":19,"id":{"name":"crossbeam_channel","disambiguator":[3707731319287789356,14696153254112323969]}},{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/log.rs","num":20,"id":{"name":"cfg_if","disambiguator":[663853888918535240,12010312547204163862]}},{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/sleep/mod.rs","num":21,"id":{"name":"crossbeam_utils","disambiguator":[17250537229360352289,1126838770626651535]}},{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/log.rs","num":22,"id":{"name":"lazy_static","disambiguator":[358928172711118086,18042123231704770647]}},{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/log.rs","num":23,"id":{"name":"spin","disambiguator":[436552169699734843,16437830209725182468]}},{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/job.rs","num":24,"id":{"name":"crossbeam_deque","disambiguator":[17957267274730670299,4013453342807974454]}},{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/job.rs","num":25,"id":{"name":"crossbeam_epoch","disambiguator":[12663890029908565456,16219286067027408843]}},{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/job.rs","num":26,"id":{"name":"scopeguard","disambiguator":[2489176029422886084,9277911216960919523]}},{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/job.rs","num":27,"id":{"name":"memoffset","disambiguator":[16665156952129350432,572110552286209239]}},{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","num":28,"id":{"name":"num_cpus","disambiguator":[2343622875408166391,14302830920531080922]}},{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","num":29,"id":{"name":"libc","disambiguator":[17859206791878318737,13552342158167686951]}}],"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":0,"byte_end":28136,"line_start":1,"line_end":782,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":198},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":2872,"byte_end":2876,"line_start":79,"line_end":79,"column_start":22,"column_end":26},"alias_span":null,"name":"join","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":208},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":2878,"byte_end":2890,"line_start":79,"line_end":79,"column_start":28,"column_end":40},"alias_span":null,"name":"join_context","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":428},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":2917,"byte_end":2930,"line_start":80,"line_end":80,"column_start":25,"column_end":38},"alias_span":null,"name":"ThreadBuilder","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":663},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":2954,"byte_end":2968,"line_start":81,"line_end":81,"column_start":23,"column_end":37},"alias_span":null,"name":"in_place_scope","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":651},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":2970,"byte_end":2975,"line_start":81,"line_end":81,"column_start":39,"column_end":44},"alias_span":null,"name":"scope","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":631},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":2977,"byte_end":2982,"line_start":81,"line_end":81,"column_start":46,"column_end":51},"alias_span":null,"name":"Scope","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":672},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":3007,"byte_end":3026,"line_start":82,"line_end":82,"column_start":23,"column_end":42},"alias_span":null,"name":"in_place_scope_fifo","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":657},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":3028,"byte_end":3038,"line_start":82,"line_end":82,"column_start":44,"column_end":54},"alias_span":null,"name":"scope_fifo","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":634},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":3040,"byte_end":3049,"line_start":82,"line_end":82,"column_start":56,"column_end":65},"alias_span":null,"name":"ScopeFifo","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":855},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":3074,"byte_end":3079,"line_start":83,"line_end":83,"column_start":23,"column_end":28},"alias_span":null,"name":"spawn","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":862},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":3081,"byte_end":3091,"line_start":83,"line_end":83,"column_start":30,"column_end":40},"alias_span":null,"name":"spawn_fifo","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":969},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":3121,"byte_end":3153,"line_start":84,"line_end":84,"column_start":28,"column_end":60},"alias_span":null,"name":"current_thread_has_pending_tasks","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":968},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":3182,"byte_end":3202,"line_start":85,"line_end":85,"column_start":28,"column_end":48},"alias_span":null,"name":"current_thread_index","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":923},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":3231,"byte_end":3241,"line_start":86,"line_end":86,"column_start":28,"column_end":38},"alias_span":null,"name":"ThreadPool","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":0,"byte_end":28136,"line_start":1,"line_end":782,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":6},{"krate":0,"index":7},{"krate":0,"index":9},{"krate":0,"index":12},{"krate":0,"index":15},{"krate":0,"index":18},{"krate":0,"index":19},{"krate":0,"index":21},{"krate":0,"index":24},{"krate":0,"index":84},{"krate":0,"index":89},{"krate":0,"index":175},{"krate":0,"index":225},{"krate":0,"index":309},{"krate":0,"index":572},{"krate":0,"index":724},{"krate":0,"index":841},{"krate":0,"index":866},{"krate":0,"index":970},{"krate":0,"index":992},{"krate":0,"index":1001},{"krate":0,"index":1002},{"krate":0,"index":1005},{"krate":0,"index":1008},{"krate":0,"index":1011},{"krate":0,"index":1012},{"krate":0,"index":1015},{"krate":0,"index":1018},{"krate":0,"index":1021},{"krate":0,"index":1022},{"krate":0,"index":1025},{"krate":0,"index":1028},{"krate":0,"index":1031},{"krate":0,"index":1032},{"krate":0,"index":1035},{"krate":0,"index":1038},{"krate":0,"index":1041},{"krate":0,"index":1044},{"krate":0,"index":1047},{"krate":0,"index":1048},{"krate":0,"index":1051},{"krate":0,"index":1052},{"krate":0,"index":1054},{"krate":0,"index":1057},{"krate":0,"index":1351},{"krate":0,"index":1353},{"krate":0,"index":1355},{"krate":0,"index":1361},{"krate":0,"index":1058},{"krate":0,"index":1068},{"krate":0,"index":1070},{"krate":0,"index":1071},{"krate":0,"index":1072},{"krate":0,"index":1073},{"krate":0,"index":1075},{"krate":0,"index":1077},{"krate":0,"index":1081},{"krate":0,"index":1089},{"krate":0,"index":1114},{"krate":0,"index":1129},{"krate":0,"index":1131},{"krate":0,"index":1132},{"krate":0,"index":1135},{"krate":0,"index":1137},{"krate":0,"index":1138},{"krate":0,"index":1149},{"krate":0,"index":1151},{"krate":0,"index":1363},{"krate":0,"index":1366},{"krate":0,"index":1153},{"krate":0,"index":1155}],"decl_id":null,"docs":" Rayon-core houses the core stable APIs of Rayon.","sig":null,"attributes":[{"value":"/ Rayon-core houses the core stable APIs of Rayon.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":0,"byte_end":52,"line_start":1,"line_end":1,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":53,"byte_end":56,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ These APIs have been mirrored in the Rayon crate and it is recommended to use these from there.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":57,"byte_end":156,"line_start":3,"line_end":3,"column_start":1,"column_end":100}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":157,"byte_end":160,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ [`join`] is used to take two closures and potentially run them in parallel.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":161,"byte_end":240,"line_start":5,"line_end":5,"column_start":1,"column_end":80}},{"value":"/   - It will run in parallel if task B gets stolen before task A can finish.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":241,"byte_end":320,"line_start":6,"line_end":6,"column_start":1,"column_end":80}},{"value":"/   - It will run sequentially if task A finishes before task B is stolen and can continue on task B.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":321,"byte_end":424,"line_start":7,"line_end":7,"column_start":1,"column_end":104}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":425,"byte_end":428,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ [`scope`] creates a scope in which you can run any number of parallel tasks.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":429,"byte_end":509,"line_start":9,"line_end":9,"column_start":1,"column_end":81}},{"value":"/ These tasks can spawn nested tasks and scopes, but given the nature of work stealing, the order of execution can not be guaranteed.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":510,"byte_end":645,"line_start":10,"line_end":10,"column_start":1,"column_end":136}},{"value":"/ The scope will exist until all tasks spawned within the scope have been completed.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":646,"byte_end":732,"line_start":11,"line_end":11,"column_start":1,"column_end":87}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":733,"byte_end":736,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ [`spawn`] add a task into the 'static' or 'global' scope, or a local scope created by the [`scope()`] function.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":737,"byte_end":852,"line_start":13,"line_end":13,"column_start":1,"column_end":116}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":853,"byte_end":856,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ [`ThreadPool`] can be used to create your own thread pools (using [`ThreadPoolBuilder`]) or to customize the global one.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":857,"byte_end":981,"line_start":15,"line_end":15,"column_start":1,"column_end":125}},{"value":"/ Tasks spawned within the pool (using [`install()`], [`join()`], etc.) will be added to a deque,","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":982,"byte_end":1081,"line_start":16,"line_end":16,"column_start":1,"column_end":100}},{"value":"/ where it becomes available for work stealing from other threads in the local threadpool.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":1082,"byte_end":1174,"line_start":17,"line_end":17,"column_start":1,"column_end":93}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":1175,"byte_end":1178,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ [`join`]: fn.join.html","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":1179,"byte_end":1205,"line_start":19,"line_end":19,"column_start":1,"column_end":27}},{"value":"/ [`scope`]: fn.scope.html","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":1206,"byte_end":1234,"line_start":20,"line_end":20,"column_start":1,"column_end":29}},{"value":"/ [`scope()`]: fn.scope.html","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":1235,"byte_end":1265,"line_start":21,"line_end":21,"column_start":1,"column_end":31}},{"value":"/ [`spawn`]: fn.spawn.html","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":1266,"byte_end":1294,"line_start":22,"line_end":22,"column_start":1,"column_end":29}},{"value":"/ [`ThreadPool`]: struct.threadpool.html","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":1295,"byte_end":1337,"line_start":23,"line_end":23,"column_start":1,"column_end":43}},{"value":"/ [`install()`]: struct.ThreadPool.html#method.install","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":1338,"byte_end":1394,"line_start":24,"line_end":24,"column_start":1,"column_end":57}},{"value":"/ [`spawn()`]: struct.ThreadPool.html#method.spawn","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":1395,"byte_end":1447,"line_start":25,"line_end":25,"column_start":1,"column_end":53}},{"value":"/ [`join()`]: struct.ThreadPool.html#method.join","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":1448,"byte_end":1498,"line_start":26,"line_end":26,"column_start":1,"column_end":51}},{"value":"/ [`ThreadPoolBuilder`]: struct.ThreadPoolBuilder.html","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":1499,"byte_end":1555,"line_start":27,"line_end":27,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":1556,"byte_end":1559,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ ## Restricting multiple versions","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":1560,"byte_end":1596,"line_start":29,"line_end":29,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":1597,"byte_end":1600,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ In order to ensure proper coordination between threadpools, and especially","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":1601,"byte_end":1679,"line_start":31,"line_end":31,"column_start":1,"column_end":79}},{"value":"/ to make sure there's only one global threadpool, `rayon-core` is actively","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":1680,"byte_end":1757,"line_start":32,"line_end":32,"column_start":1,"column_end":78}},{"value":"/ restricted from building multiple versions of itself into a single target.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":1758,"byte_end":1836,"line_start":33,"line_end":33,"column_start":1,"column_end":79}},{"value":"/ You may see a build error like this in violation:","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":1837,"byte_end":1890,"line_start":34,"line_end":34,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":1891,"byte_end":1894,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":1895,"byte_end":1906,"line_start":36,"line_end":36,"column_start":1,"column_end":12}},{"value":"/ error: native library `rayon-core` is being linked to by more","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":1907,"byte_end":1972,"line_start":37,"line_end":37,"column_start":1,"column_end":66}},{"value":"/ than one package, and can only be linked to by one package","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":1973,"byte_end":2035,"line_start":38,"line_end":38,"column_start":1,"column_end":63}},{"value":"/ ```","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":2036,"byte_end":2043,"line_start":39,"line_end":39,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":2044,"byte_end":2047,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ While we strive to keep `rayon-core` semver-compatible, it's still","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":2048,"byte_end":2118,"line_start":41,"line_end":41,"column_start":1,"column_end":71}},{"value":"/ possible to arrive at this situation if different crates have overly","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":2119,"byte_end":2191,"line_start":42,"line_end":42,"column_start":1,"column_end":73}},{"value":"/ restrictive tilde or inequality requirements for `rayon-core`.  The","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":2192,"byte_end":2263,"line_start":43,"line_end":43,"column_start":1,"column_end":72}},{"value":"/ conflicting requirements will need to be resolved before the build will","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":2264,"byte_end":2339,"line_start":44,"line_end":44,"column_start":1,"column_end":76}},{"value":"/ succeed.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":2340,"byte_end":2352,"line_start":45,"line_end":45,"column_start":1,"column_end":13}},{"value":"deny(missing_debug_implementations)","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":2412,"byte_end":2451,"line_start":48,"line_end":48,"column_start":1,"column_end":40}},{"value":"deny(missing_docs)","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":2452,"byte_end":2474,"line_start":49,"line_end":49,"column_start":1,"column_end":23}},{"value":"deny(unreachable_pub)","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":2475,"byte_end":2500,"line_start":50,"line_end":50,"column_start":1,"column_end":26}},{"value":"warn(rust_2018_idioms)","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":2501,"byte_end":2527,"line_start":51,"line_end":51,"column_start":1,"column_end":27}}]},{"kind":"Struct","id":{"krate":0,"index":85},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/private.rs","byte_start":42027,"byte_end":42040,"line_start":9,"line_end":9,"column_start":12,"column_end":25},"name":"PrivateMarker","qualname":"::private::PrivateMarker","value":"","parent":null,"children":[],"decl_id":null,"docs":" If this type is pub but not publicly reachable, third parties\n can't name it and can't implement traits using it.\n","sig":null,"attributes":[{"value":"/ If this type is pub but not publicly reachable, third parties","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/private.rs","byte_start":41855,"byte_end":41920,"line_start":6,"line_end":6,"column_start":1,"column_end":66}},{"value":"/ can't name it and can't implement traits using it.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/private.rs","byte_start":41921,"byte_end":41975,"line_start":7,"line_end":7,"column_start":1,"column_end":55}},{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/private.rs","byte_start":41976,"byte_end":42015,"line_start":8,"line_end":8,"column_start":1,"column_end":40}}]},{"kind":"Function","id":{"krate":0,"index":198},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/join/mod.rs","byte_start":52267,"byte_end":52271,"line_start":93,"line_end":93,"column_start":8,"column_end":12},"name":"join","qualname":"::join::join","value":"pub fn join<A, B, RA, RB>(A, B) -> (RA, RB) where A: FnOnce() -> RA + Send,\nB: FnOnce() -> RB + Send, RA: Send, RB: Send","parent":null,"children":[],"decl_id":null,"docs":" Takes two closures and *potentially* runs them in parallel. It\n returns a pair of the results from those closures.","sig":null,"attributes":[{"value":"/ Takes two closures and *potentially* runs them in parallel. It","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/join/mod.rs","byte_start":48933,"byte_end":48999,"line_start":12,"line_end":12,"column_start":1,"column_end":67}},{"value":"/ returns a pair of the results from those closures.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/join/mod.rs","byte_start":49000,"byte_end":49054,"line_start":13,"line_end":13,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/join/mod.rs","byte_start":49055,"byte_end":49058,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ Conceptually, calling `join()` is similar to spawning two threads,","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/join/mod.rs","byte_start":49059,"byte_end":49129,"line_start":15,"line_end":15,"column_start":1,"column_end":71}},{"value":"/ one executing each of the two closures. However, the","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/join/mod.rs","byte_start":49130,"byte_end":49186,"line_start":16,"line_end":16,"column_start":1,"column_end":57}},{"value":"/ implementation is quite different and incurs very low","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/join/mod.rs","byte_start":49187,"byte_end":49244,"line_start":17,"line_end":17,"column_start":1,"column_end":58}},{"value":"/ overhead. The underlying technique is called \"work stealing\": the","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/join/mod.rs","byte_start":49245,"byte_end":49314,"line_start":18,"line_end":18,"column_start":1,"column_end":70}},{"value":"/ Rayon runtime uses a fixed pool of worker threads and attempts to","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/join/mod.rs","byte_start":49315,"byte_end":49384,"line_start":19,"line_end":19,"column_start":1,"column_end":70}},{"value":"/ only execute code in parallel when there are idle CPUs to handle","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/join/mod.rs","byte_start":49385,"byte_end":49453,"line_start":20,"line_end":20,"column_start":1,"column_end":69}},{"value":"/ it.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/join/mod.rs","byte_start":49454,"byte_end":49461,"line_start":21,"line_end":21,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/join/mod.rs","byte_start":49462,"byte_end":49465,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ When `join` is called from outside the thread pool, the calling","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/join/mod.rs","byte_start":49466,"byte_end":49533,"line_start":23,"line_end":23,"column_start":1,"column_end":68}},{"value":"/ thread will block while the closures execute in the pool.  When","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/join/mod.rs","byte_start":49534,"byte_end":49601,"line_start":24,"line_end":24,"column_start":1,"column_end":68}},{"value":"/ `join` is called within the pool, the calling thread still actively","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/join/mod.rs","byte_start":49602,"byte_end":49673,"line_start":25,"line_end":25,"column_start":1,"column_end":72}},{"value":"/ participates in the thread pool. It will begin by executing closure","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/join/mod.rs","byte_start":49674,"byte_end":49745,"line_start":26,"line_end":26,"column_start":1,"column_end":72}},{"value":"/ A (on the current thread). While it is doing that, it will advertise","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/join/mod.rs","byte_start":49746,"byte_end":49818,"line_start":27,"line_end":27,"column_start":1,"column_end":73}},{"value":"/ closure B as being available for other threads to execute. Once closure A","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/join/mod.rs","byte_start":49819,"byte_end":49896,"line_start":28,"line_end":28,"column_start":1,"column_end":78}},{"value":"/ has completed, the current thread will try to execute closure B;","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/join/mod.rs","byte_start":49897,"byte_end":49965,"line_start":29,"line_end":29,"column_start":1,"column_end":69}},{"value":"/ if however closure B has been stolen, then it will look for other work","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/join/mod.rs","byte_start":49966,"byte_end":50040,"line_start":30,"line_end":30,"column_start":1,"column_end":75}},{"value":"/ while waiting for the thief to fully execute closure B. (This is the","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/join/mod.rs","byte_start":50041,"byte_end":50113,"line_start":31,"line_end":31,"column_start":1,"column_end":73}},{"value":"/ typical work-stealing strategy).","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/join/mod.rs","byte_start":50114,"byte_end":50150,"line_start":32,"line_end":32,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/join/mod.rs","byte_start":50151,"byte_end":50154,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/join/mod.rs","byte_start":50155,"byte_end":50169,"line_start":34,"line_end":34,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/join/mod.rs","byte_start":50170,"byte_end":50173,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ This example uses join to perform a quick-sort (note this is not a","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/join/mod.rs","byte_start":50174,"byte_end":50244,"line_start":36,"line_end":36,"column_start":1,"column_end":71}},{"value":"/ particularly optimized implementation: if you **actually** want to","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/join/mod.rs","byte_start":50245,"byte_end":50315,"line_start":37,"line_end":37,"column_start":1,"column_end":71}},{"value":"/ sort for real, you should prefer [the `par_sort` method] offered","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/join/mod.rs","byte_start":50316,"byte_end":50384,"line_start":38,"line_end":38,"column_start":1,"column_end":69}},{"value":"/ by Rayon).","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/join/mod.rs","byte_start":50385,"byte_end":50399,"line_start":39,"line_end":39,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/join/mod.rs","byte_start":50400,"byte_end":50403,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ [the `par_sort` method]: ../rayon/slice/trait.ParallelSliceMut.html#method.par_sort","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/join/mod.rs","byte_start":50404,"byte_end":50491,"line_start":41,"line_end":41,"column_start":1,"column_end":88}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/join/mod.rs","byte_start":50492,"byte_end":50495,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/join/mod.rs","byte_start":50496,"byte_end":50507,"line_start":43,"line_end":43,"column_start":1,"column_end":12}},{"value":"/ # use rayon_core as rayon;","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/join/mod.rs","byte_start":50508,"byte_end":50538,"line_start":44,"line_end":44,"column_start":1,"column_end":31}},{"value":"/ let mut v = vec![5, 1, 8, 22, 0, 44];","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/join/mod.rs","byte_start":50539,"byte_end":50580,"line_start":45,"line_end":45,"column_start":1,"column_end":42}},{"value":"/ quick_sort(&mut v);","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/join/mod.rs","byte_start":50581,"byte_end":50604,"line_start":46,"line_end":46,"column_start":1,"column_end":24}},{"value":"/ assert_eq!(v, vec![0, 1, 5, 8, 22, 44]);","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/join/mod.rs","byte_start":50605,"byte_end":50649,"line_start":47,"line_end":47,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/join/mod.rs","byte_start":50650,"byte_end":50653,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ fn quick_sort<T:PartialOrd+Send>(v: &mut [T]) {","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/join/mod.rs","byte_start":50654,"byte_end":50705,"line_start":49,"line_end":49,"column_start":1,"column_end":52}},{"value":"/    if v.len() > 1 {","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/join/mod.rs","byte_start":50706,"byte_end":50729,"line_start":50,"line_end":50,"column_start":1,"column_end":24}},{"value":"/        let mid = partition(v);","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/join/mod.rs","byte_start":50730,"byte_end":50764,"line_start":51,"line_end":51,"column_start":1,"column_end":35}},{"value":"/        let (lo, hi) = v.split_at_mut(mid);","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/join/mod.rs","byte_start":50765,"byte_end":50811,"line_start":52,"line_end":52,"column_start":1,"column_end":47}},{"value":"/        rayon::join(|| quick_sort(lo),","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/join/mod.rs","byte_start":50812,"byte_end":50853,"line_start":53,"line_end":53,"column_start":1,"column_end":42}},{"value":"/                    || quick_sort(hi));","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/join/mod.rs","byte_start":50854,"byte_end":50896,"line_start":54,"line_end":54,"column_start":1,"column_end":43}},{"value":"/    }","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/join/mod.rs","byte_start":50897,"byte_end":50905,"line_start":55,"line_end":55,"column_start":1,"column_end":9}},{"value":"/ }","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/join/mod.rs","byte_start":50906,"byte_end":50911,"line_start":56,"line_end":56,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/join/mod.rs","byte_start":50912,"byte_end":50915,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ // Partition rearranges all items `<=` to the pivot","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/join/mod.rs","byte_start":50916,"byte_end":50971,"line_start":58,"line_end":58,"column_start":1,"column_end":56}},{"value":"/ // item (arbitrary selected to be the last item in the slice)","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/join/mod.rs","byte_start":50972,"byte_end":51037,"line_start":59,"line_end":59,"column_start":1,"column_end":66}},{"value":"/ // to the first half of the slice. It then returns the","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/join/mod.rs","byte_start":51038,"byte_end":51096,"line_start":60,"line_end":60,"column_start":1,"column_end":59}},{"value":"/ // \"dividing point\" where the pivot is placed.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/join/mod.rs","byte_start":51097,"byte_end":51147,"line_start":61,"line_end":61,"column_start":1,"column_end":51}},{"value":"/ fn partition<T:PartialOrd+Send>(v: &mut [T]) -> usize {","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/join/mod.rs","byte_start":51148,"byte_end":51207,"line_start":62,"line_end":62,"column_start":1,"column_end":60}},{"value":"/     let pivot = v.len() - 1;","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/join/mod.rs","byte_start":51208,"byte_end":51240,"line_start":63,"line_end":63,"column_start":1,"column_end":33}},{"value":"/     let mut i = 0;","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/join/mod.rs","byte_start":51241,"byte_end":51263,"line_start":64,"line_end":64,"column_start":1,"column_end":23}},{"value":"/     for j in 0..pivot {","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/join/mod.rs","byte_start":51264,"byte_end":51291,"line_start":65,"line_end":65,"column_start":1,"column_end":28}},{"value":"/         if v[j] <= v[pivot] {","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/join/mod.rs","byte_start":51292,"byte_end":51325,"line_start":66,"line_end":66,"column_start":1,"column_end":34}},{"value":"/             v.swap(i, j);","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/join/mod.rs","byte_start":51326,"byte_end":51355,"line_start":67,"line_end":67,"column_start":1,"column_end":30}},{"value":"/             i += 1;","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/join/mod.rs","byte_start":51356,"byte_end":51379,"line_start":68,"line_end":68,"column_start":1,"column_end":24}},{"value":"/         }","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/join/mod.rs","byte_start":51380,"byte_end":51393,"line_start":69,"line_end":69,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/join/mod.rs","byte_start":51394,"byte_end":51403,"line_start":70,"line_end":70,"column_start":1,"column_end":10}},{"value":"/     v.swap(i, pivot);","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/join/mod.rs","byte_start":51404,"byte_end":51429,"line_start":71,"line_end":71,"column_start":1,"column_end":26}},{"value":"/     i","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/join/mod.rs","byte_start":51430,"byte_end":51439,"line_start":72,"line_end":72,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/join/mod.rs","byte_start":51440,"byte_end":51445,"line_start":73,"line_end":73,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/join/mod.rs","byte_start":51446,"byte_end":51453,"line_start":74,"line_end":74,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/join/mod.rs","byte_start":51454,"byte_end":51457,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ # Warning about blocking I/O","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/join/mod.rs","byte_start":51458,"byte_end":51490,"line_start":76,"line_end":76,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/join/mod.rs","byte_start":51491,"byte_end":51494,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/ The assumption is that the closures given to `join()` are","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/join/mod.rs","byte_start":51495,"byte_end":51556,"line_start":78,"line_end":78,"column_start":1,"column_end":62}},{"value":"/ CPU-bound tasks that do not perform I/O or other blocking","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/join/mod.rs","byte_start":51557,"byte_end":51618,"line_start":79,"line_end":79,"column_start":1,"column_end":62}},{"value":"/ operations. If you do perform I/O, and that I/O should block","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/join/mod.rs","byte_start":51619,"byte_end":51683,"line_start":80,"line_end":80,"column_start":1,"column_end":65}},{"value":"/ (e.g., waiting for a network request), the overall performance may","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/join/mod.rs","byte_start":51684,"byte_end":51754,"line_start":81,"line_end":81,"column_start":1,"column_end":71}},{"value":"/ be poor.  Moreover, if you cause one closure to be blocked waiting","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/join/mod.rs","byte_start":51755,"byte_end":51825,"line_start":82,"line_end":82,"column_start":1,"column_end":71}},{"value":"/ on another (for example, using a channel), that could lead to a","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/join/mod.rs","byte_start":51826,"byte_end":51893,"line_start":83,"line_end":83,"column_start":1,"column_end":68}},{"value":"/ deadlock.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/join/mod.rs","byte_start":51894,"byte_end":51907,"line_start":84,"line_end":84,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/join/mod.rs","byte_start":51908,"byte_end":51911,"line_start":85,"line_end":85,"column_start":1,"column_end":4}},{"value":"/ # Panics","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/join/mod.rs","byte_start":51912,"byte_end":51924,"line_start":86,"line_end":86,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/join/mod.rs","byte_start":51925,"byte_end":51928,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"/ No matter what happens, both closures will always be executed.  If","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/join/mod.rs","byte_start":51929,"byte_end":51999,"line_start":88,"line_end":88,"column_start":1,"column_end":71}},{"value":"/ a single closure panics, whether it be the first or second","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/join/mod.rs","byte_start":52000,"byte_end":52062,"line_start":89,"line_end":89,"column_start":1,"column_end":63}},{"value":"/ closure, that panic will be propagated and hence `join()` will","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/join/mod.rs","byte_start":52063,"byte_end":52129,"line_start":90,"line_end":90,"column_start":1,"column_end":67}},{"value":"/ panic with the same panic value. If both closures panic, `join()`","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/join/mod.rs","byte_start":52130,"byte_end":52199,"line_start":91,"line_end":91,"column_start":1,"column_end":70}},{"value":"/ will panic with the panic value from the first closure.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/join/mod.rs","byte_start":52200,"byte_end":52259,"line_start":92,"line_end":92,"column_start":1,"column_end":60}}]},{"kind":"Function","id":{"krate":0,"index":208},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/join/mod.rs","byte_start":52990,"byte_end":53002,"line_start":115,"line_end":115,"column_start":8,"column_end":20},"name":"join_context","qualname":"::join::join_context","value":"pub fn join_context<A, B, RA, RB>(A, B) -> (RA, RB) where A: FnOnce(FnContext)\n-> RA + Send, B: FnOnce(FnContext) -> RB + Send, RA: Send, RB: Send","parent":null,"children":[],"decl_id":null,"docs":" Identical to `join`, except that the closures have a parameter\n that provides context for the way the closure has been called,\n especially indicating whether they're executing on a different\n thread than where `join_context` was called.  This will occur if\n the second job is stolen by a different thread, or if\n `join_context` was called from outside the thread pool to begin\n with.\n","sig":null,"attributes":[{"value":"/ Identical to `join`, except that the closures have a parameter","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/join/mod.rs","byte_start":52577,"byte_end":52643,"line_start":108,"line_end":108,"column_start":1,"column_end":67}},{"value":"/ that provides context for the way the closure has been called,","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/join/mod.rs","byte_start":52644,"byte_end":52710,"line_start":109,"line_end":109,"column_start":1,"column_end":67}},{"value":"/ especially indicating whether they're executing on a different","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/join/mod.rs","byte_start":52711,"byte_end":52777,"line_start":110,"line_end":110,"column_start":1,"column_end":67}},{"value":"/ thread than where `join_context` was called.  This will occur if","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/join/mod.rs","byte_start":52778,"byte_end":52846,"line_start":111,"line_end":111,"column_start":1,"column_end":69}},{"value":"/ the second job is stolen by a different thread, or if","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/join/mod.rs","byte_start":52847,"byte_end":52904,"line_start":112,"line_end":112,"column_start":1,"column_end":58}},{"value":"/ `join_context` was called from outside the thread pool to begin","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/join/mod.rs","byte_start":52905,"byte_end":52972,"line_start":113,"line_end":113,"column_start":1,"column_end":68}},{"value":"/ with.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/join/mod.rs","byte_start":52973,"byte_end":52982,"line_start":114,"line_end":114,"column_start":1,"column_end":10}}]},{"kind":"Struct","id":{"krate":0,"index":428},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/registry.rs","byte_start":68137,"byte_end":68150,"line_start":28,"line_end":28,"column_start":12,"column_end":25},"name":"ThreadBuilder","qualname":"::registry::ThreadBuilder","value":"ThreadBuilder {  }","parent":null,"children":[{"krate":0,"index":429},{"krate":0,"index":430},{"krate":0,"index":431},{"krate":0,"index":432},{"krate":0,"index":433}],"decl_id":null,"docs":" Thread builder used for customization via\n [`ThreadPoolBuilder::spawn_handler`](struct.ThreadPoolBuilder.html#method.spawn_handler).\n","sig":null,"attributes":[{"value":"/ Thread builder used for customization via","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/registry.rs","byte_start":67986,"byte_end":68031,"line_start":26,"line_end":26,"column_start":1,"column_end":46}},{"value":"/ [`ThreadPoolBuilder::spawn_handler`](struct.ThreadPoolBuilder.html#method.spawn_handler).","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/registry.rs","byte_start":68032,"byte_end":68125,"line_start":27,"line_end":27,"column_start":1,"column_end":94}}]},{"kind":"Method","id":{"krate":0,"index":435},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/registry.rs","byte_start":68396,"byte_end":68401,"line_start":38,"line_end":38,"column_start":12,"column_end":17},"name":"index","qualname":"<ThreadBuilder>::index","value":"pub fn index(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Gets the index of this thread in the pool, within `0..num_threads`.\n","sig":null,"attributes":[{"value":"/ Gets the index of this thread in the pool, within `0..num_threads`.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/registry.rs","byte_start":68313,"byte_end":68384,"line_start":37,"line_end":37,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":436},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/registry.rs","byte_start":68532,"byte_end":68536,"line_start":43,"line_end":43,"column_start":12,"column_end":16},"name":"name","qualname":"<ThreadBuilder>::name","value":"pub fn name(&Self) -> Option<&str>","parent":null,"children":[],"decl_id":null,"docs":" Gets the string that was specified by `ThreadPoolBuilder::name()`.\n","sig":null,"attributes":[{"value":"/ Gets the string that was specified by `ThreadPoolBuilder::name()`.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/registry.rs","byte_start":68450,"byte_end":68520,"line_start":42,"line_end":42,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":437},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/registry.rs","byte_start":68707,"byte_end":68717,"line_start":48,"line_end":48,"column_start":12,"column_end":22},"name":"stack_size","qualname":"<ThreadBuilder>::stack_size","value":"pub fn stack_size(&Self) -> Option<usize>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value that was specified by `ThreadPoolBuilder::stack_size()`.\n","sig":null,"attributes":[{"value":"/ Gets the value that was specified by `ThreadPoolBuilder::stack_size()`.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/registry.rs","byte_start":68620,"byte_end":68695,"line_start":47,"line_end":47,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":438},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/registry.rs","byte_start":68897,"byte_end":68900,"line_start":54,"line_end":54,"column_start":12,"column_end":15},"name":"run","qualname":"<ThreadBuilder>::run","value":"pub fn run(Self)","parent":null,"children":[],"decl_id":null,"docs":" Executes the main loop for this thread. This will not return until the\n thread pool is dropped.\n","sig":null,"attributes":[{"value":"/ Executes the main loop for this thread. This will not return until the","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/registry.rs","byte_start":68779,"byte_end":68853,"line_start":52,"line_end":52,"column_start":5,"column_end":79}},{"value":"/ thread pool is dropped.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/registry.rs","byte_start":68858,"byte_end":68885,"line_start":53,"line_end":53,"column_start":5,"column_end":32}}]},{"kind":"Trait","id":{"krate":0,"index":441},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/registry.rs","byte_start":69551,"byte_end":69562,"line_start":74,"line_end":74,"column_start":11,"column_end":22},"name":"ThreadSpawn","qualname":"::registry::ThreadSpawn","value":"ThreadSpawn","parent":null,"children":[{"krate":0,"index":1285},{"krate":0,"index":442}],"decl_id":null,"docs":" Generalized trait for spawning a thread in the `Registry`.","sig":null,"attributes":[{"value":"/ Generalized trait for spawning a thread in the `Registry`.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/registry.rs","byte_start":69336,"byte_end":69398,"line_start":70,"line_end":70,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/registry.rs","byte_start":69399,"byte_end":69402,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ This trait is pub-in-private -- E0445 forces us to make it public,","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/registry.rs","byte_start":69403,"byte_end":69473,"line_start":72,"line_end":72,"column_start":1,"column_end":71}},{"value":"/ but we don't actually want to expose these details in the API.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/registry.rs","byte_start":69474,"byte_end":69540,"line_start":73,"line_end":73,"column_start":1,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":442},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/registry.rs","byte_start":69700,"byte_end":69705,"line_start":79,"line_end":79,"column_start":8,"column_end":13},"name":"spawn","qualname":"::registry::ThreadSpawn::spawn","value":"pub fn spawn(&mut Self, ThreadBuilder) -> io::Result<()>","parent":{"krate":0,"index":441},"children":[],"decl_id":null,"docs":" Spawn a thread with the `ThreadBuilder` parameters, and then\n call `ThreadBuilder::run()`.\n","sig":null,"attributes":[{"value":"/ Spawn a thread with the `ThreadBuilder` parameters, and then","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/registry.rs","byte_start":69591,"byte_end":69655,"line_start":77,"line_end":77,"column_start":5,"column_end":69}},{"value":"/ call `ThreadBuilder::run()`.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/registry.rs","byte_start":69660,"byte_end":69692,"line_start":78,"line_end":78,"column_start":5,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":1286},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/registry.rs","byte_start":70009,"byte_end":70021,"line_start":87,"line_end":87,"column_start":12,"column_end":24},"name":"DefaultSpawn","qualname":"::registry::DefaultSpawn","value":"","parent":null,"children":[],"decl_id":null,"docs":" Spawns a thread in the \"normal\" way with `std::thread::Builder`.","sig":null,"attributes":[{"value":"/ Spawns a thread in the \"normal\" way with `std::thread::Builder`.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/registry.rs","byte_start":69762,"byte_end":69830,"line_start":82,"line_end":82,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/registry.rs","byte_start":69831,"byte_end":69834,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"/ This type is pub-in-private -- E0445 forces us to make it public,","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/registry.rs","byte_start":69835,"byte_end":69904,"line_start":84,"line_end":84,"column_start":1,"column_end":70}},{"value":"/ but we don't actually want to expose these details in the API.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/registry.rs","byte_start":69905,"byte_end":69971,"line_start":85,"line_end":85,"column_start":1,"column_end":67}}]},{"kind":"Struct","id":{"krate":0,"index":1293},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/registry.rs","byte_start":70675,"byte_end":70686,"line_start":110,"line_end":110,"column_start":12,"column_end":23},"name":"CustomSpawn","qualname":"::registry::CustomSpawn","value":"","parent":null,"children":[],"decl_id":null,"docs":" Spawns a thread with a user's custom callback.","sig":null,"attributes":[{"value":"/ Spawns a thread with a user's custom callback.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/registry.rs","byte_start":70455,"byte_end":70505,"line_start":105,"line_end":105,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/registry.rs","byte_start":70506,"byte_end":70509,"line_start":106,"line_end":106,"column_start":1,"column_end":4}},{"value":"/ This type is pub-in-private -- E0445 forces us to make it public,","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/registry.rs","byte_start":70510,"byte_end":70579,"line_start":107,"line_end":107,"column_start":1,"column_end":70}},{"value":"/ but we don't actually want to expose these details in the API.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/registry.rs","byte_start":70580,"byte_end":70646,"line_start":108,"line_end":108,"column_start":1,"column_end":67}}]},{"kind":"Struct","id":{"krate":0,"index":631},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":99261,"byte_end":99266,"line_start":27,"line_end":27,"column_start":12,"column_end":17},"name":"Scope","qualname":"::scope::Scope","value":"Scope {  }","parent":null,"children":[{"krate":0,"index":633}],"decl_id":null,"docs":" Represents a fork-join scope which can be used to spawn any number of tasks.\n See [`scope()`] for more information.","sig":null,"attributes":[{"value":"/ Represents a fork-join scope which can be used to spawn any number of tasks.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":99093,"byte_end":99173,"line_start":23,"line_end":23,"column_start":1,"column_end":81}},{"value":"/ See [`scope()`] for more information.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":99174,"byte_end":99215,"line_start":24,"line_end":24,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":99216,"byte_end":99219,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/[`scope()`]: fn.scope.html","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":99220,"byte_end":99249,"line_start":26,"line_end":26,"column_start":1,"column_end":30}}]},{"kind":"Struct","id":{"krate":0,"index":634},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":99571,"byte_end":99580,"line_start":36,"line_end":36,"column_start":12,"column_end":21},"name":"ScopeFifo","qualname":"::scope::ScopeFifo","value":"ScopeFifo {  }","parent":null,"children":[{"krate":0,"index":636},{"krate":0,"index":637}],"decl_id":null,"docs":" Represents a fork-join scope which can be used to spawn any number of tasks.\n Those spawned from the same thread are prioritized in relative FIFO order.\n See [`scope_fifo()`] for more information.","sig":null,"attributes":[{"value":"/ Represents a fork-join scope which can be used to spawn any number of tasks.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":99309,"byte_end":99389,"line_start":31,"line_end":31,"column_start":1,"column_end":81}},{"value":"/ Those spawned from the same thread are prioritized in relative FIFO order.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":99390,"byte_end":99468,"line_start":32,"line_end":32,"column_start":1,"column_end":79}},{"value":"/ See [`scope_fifo()`] for more information.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":99469,"byte_end":99515,"line_start":33,"line_end":33,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":99516,"byte_end":99519,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/[`scope_fifo()`]: fn.scope_fifo.html","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":99520,"byte_end":99559,"line_start":35,"line_end":35,"column_start":1,"column_end":40}}]},{"kind":"Function","id":{"krate":0,"index":651},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":110175,"byte_end":110180,"line_start":303,"line_end":303,"column_start":8,"column_end":13},"name":"scope","qualname":"::scope::scope","value":"pub fn scope<'scope, OP, R>(OP) -> R where OP: FnOnce(&Scope) -> R + Send,\nR: Send","parent":null,"children":[],"decl_id":null,"docs":" Creates a \"fork-join\" scope `s` and invokes the closure with a\n reference to `s`. This closure can then spawn asynchronous tasks\n into `s`. Those tasks may run asynchronously with respect to the\n closure; they may themselves spawn additional tasks into `s`. When\n the closure returns, it will block until all tasks that have been\n spawned into `s` complete.","sig":null,"attributes":[{"value":"/ Creates a \"fork-join\" scope `s` and invokes the closure with a","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":101391,"byte_end":101457,"line_start":80,"line_end":80,"column_start":1,"column_end":67}},{"value":"/ reference to `s`. This closure can then spawn asynchronous tasks","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":101458,"byte_end":101526,"line_start":81,"line_end":81,"column_start":1,"column_end":69}},{"value":"/ into `s`. Those tasks may run asynchronously with respect to the","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":101527,"byte_end":101595,"line_start":82,"line_end":82,"column_start":1,"column_end":69}},{"value":"/ closure; they may themselves spawn additional tasks into `s`. When","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":101596,"byte_end":101666,"line_start":83,"line_end":83,"column_start":1,"column_end":71}},{"value":"/ the closure returns, it will block until all tasks that have been","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":101667,"byte_end":101736,"line_start":84,"line_end":84,"column_start":1,"column_end":70}},{"value":"/ spawned into `s` complete.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":101737,"byte_end":101767,"line_start":85,"line_end":85,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":101768,"byte_end":101771,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"/ `scope()` is a more flexible building block compared to `join()`,","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":101772,"byte_end":101841,"line_start":87,"line_end":87,"column_start":1,"column_end":70}},{"value":"/ since a loop can be used to spawn any number of tasks without","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":101842,"byte_end":101907,"line_start":88,"line_end":88,"column_start":1,"column_end":66}},{"value":"/ recursing. However, that flexibility comes at a performance price:","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":101908,"byte_end":101978,"line_start":89,"line_end":89,"column_start":1,"column_end":71}},{"value":"/ tasks spawned using `scope()` must be allocated onto the heap,","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":101979,"byte_end":102045,"line_start":90,"line_end":90,"column_start":1,"column_end":67}},{"value":"/ whereas `join()` can make exclusive use of the stack. **Prefer","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":102046,"byte_end":102112,"line_start":91,"line_end":91,"column_start":1,"column_end":67}},{"value":"/ `join()` (or, even better, parallel iterators) where possible.**","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":102113,"byte_end":102181,"line_start":92,"line_end":92,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":102182,"byte_end":102185,"line_start":93,"line_end":93,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":102186,"byte_end":102199,"line_start":94,"line_end":94,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":102200,"byte_end":102203,"line_start":95,"line_end":95,"column_start":1,"column_end":4}},{"value":"/ The Rayon `join()` function launches two closures and waits for them","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":102204,"byte_end":102276,"line_start":96,"line_end":96,"column_start":1,"column_end":73}},{"value":"/ to stop. One could implement `join()` using a scope like so, although","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":102277,"byte_end":102350,"line_start":97,"line_end":97,"column_start":1,"column_end":74}},{"value":"/ it would be less efficient than the real implementation:","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":102351,"byte_end":102411,"line_start":98,"line_end":98,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":102412,"byte_end":102415,"line_start":99,"line_end":99,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":102416,"byte_end":102427,"line_start":100,"line_end":100,"column_start":1,"column_end":12}},{"value":"/ # use rayon_core as rayon;","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":102428,"byte_end":102458,"line_start":101,"line_end":101,"column_start":1,"column_end":31}},{"value":"/ pub fn join<A,B,RA,RB>(oper_a: A, oper_b: B) -> (RA, RB)","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":102459,"byte_end":102519,"line_start":102,"line_end":102,"column_start":1,"column_end":61}},{"value":"/     where A: FnOnce() -> RA + Send,","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":102520,"byte_end":102559,"line_start":103,"line_end":103,"column_start":1,"column_end":40}},{"value":"/           B: FnOnce() -> RB + Send,","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":102560,"byte_end":102599,"line_start":104,"line_end":104,"column_start":1,"column_end":40}},{"value":"/           RA: Send,","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":102600,"byte_end":102623,"line_start":105,"line_end":105,"column_start":1,"column_end":24}},{"value":"/           RB: Send,","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":102624,"byte_end":102647,"line_start":106,"line_end":106,"column_start":1,"column_end":24}},{"value":"/ {","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":102648,"byte_end":102653,"line_start":107,"line_end":107,"column_start":1,"column_end":6}},{"value":"/     let mut result_a: Option<RA> = None;","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":102654,"byte_end":102698,"line_start":108,"line_end":108,"column_start":1,"column_end":45}},{"value":"/     let mut result_b: Option<RB> = None;","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":102699,"byte_end":102743,"line_start":109,"line_end":109,"column_start":1,"column_end":45}},{"value":"/     rayon::scope(|s| {","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":102744,"byte_end":102770,"line_start":110,"line_end":110,"column_start":1,"column_end":27}},{"value":"/         s.spawn(|_| result_a = Some(oper_a()));","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":102771,"byte_end":102822,"line_start":111,"line_end":111,"column_start":1,"column_end":52}},{"value":"/         s.spawn(|_| result_b = Some(oper_b()));","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":102823,"byte_end":102874,"line_start":112,"line_end":112,"column_start":1,"column_end":52}},{"value":"/     });","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":102875,"byte_end":102886,"line_start":113,"line_end":113,"column_start":1,"column_end":12}},{"value":"/     (result_a.unwrap(), result_b.unwrap())","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":102887,"byte_end":102933,"line_start":114,"line_end":114,"column_start":1,"column_end":47}},{"value":"/ }","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":102934,"byte_end":102939,"line_start":115,"line_end":115,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":102940,"byte_end":102947,"line_start":116,"line_end":116,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":102948,"byte_end":102951,"line_start":117,"line_end":117,"column_start":1,"column_end":4}},{"value":"/ # A note on threading","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":102952,"byte_end":102977,"line_start":118,"line_end":118,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":102978,"byte_end":102981,"line_start":119,"line_end":119,"column_start":1,"column_end":4}},{"value":"/ The closure given to `scope()` executes in the Rayon thread-pool,","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":102982,"byte_end":103051,"line_start":120,"line_end":120,"column_start":1,"column_end":70}},{"value":"/ as do those given to `spawn()`. This means that you can't access","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":103052,"byte_end":103120,"line_start":121,"line_end":121,"column_start":1,"column_end":69}},{"value":"/ thread-local variables (well, you can, but they may have","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":103121,"byte_end":103181,"line_start":122,"line_end":122,"column_start":1,"column_end":61}},{"value":"/ unexpected values).","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":103182,"byte_end":103205,"line_start":123,"line_end":123,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":103206,"byte_end":103209,"line_start":124,"line_end":124,"column_start":1,"column_end":4}},{"value":"/ # Task execution","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":103210,"byte_end":103230,"line_start":125,"line_end":125,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":103231,"byte_end":103234,"line_start":126,"line_end":126,"column_start":1,"column_end":4}},{"value":"/ Task execution potentially starts as soon as `spawn()` is called.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":103235,"byte_end":103304,"line_start":127,"line_end":127,"column_start":1,"column_end":70}},{"value":"/ The task will end sometime before `scope()` returns. Note that the","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":103305,"byte_end":103375,"line_start":128,"line_end":128,"column_start":1,"column_end":71}},{"value":"/ *closure* given to scope may return much earlier. In general","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":103376,"byte_end":103440,"line_start":129,"line_end":129,"column_start":1,"column_end":65}},{"value":"/ the lifetime of a scope created like `scope(body) goes something like this:","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":103441,"byte_end":103520,"line_start":130,"line_end":130,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":103521,"byte_end":103524,"line_start":131,"line_end":131,"column_start":1,"column_end":4}},{"value":"/ - Scope begins when `scope(body)` is called","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":103525,"byte_end":103572,"line_start":132,"line_end":132,"column_start":1,"column_end":48}},{"value":"/ - Scope body `body()` is invoked","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":103573,"byte_end":103609,"line_start":133,"line_end":133,"column_start":1,"column_end":37}},{"value":"/     - Scope tasks may be spawned","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":103610,"byte_end":103646,"line_start":134,"line_end":134,"column_start":1,"column_end":37}},{"value":"/ - Scope body returns","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":103647,"byte_end":103671,"line_start":135,"line_end":135,"column_start":1,"column_end":25}},{"value":"/ - Scope tasks execute, possibly spawning more tasks","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":103672,"byte_end":103727,"line_start":136,"line_end":136,"column_start":1,"column_end":56}},{"value":"/ - Once all tasks are done, scope ends and `scope()` returns","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":103728,"byte_end":103791,"line_start":137,"line_end":137,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":103792,"byte_end":103795,"line_start":138,"line_end":138,"column_start":1,"column_end":4}},{"value":"/ To see how and when tasks are joined, consider this example:","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":103796,"byte_end":103860,"line_start":139,"line_end":139,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":103861,"byte_end":103864,"line_start":140,"line_end":140,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":103865,"byte_end":103876,"line_start":141,"line_end":141,"column_start":1,"column_end":12}},{"value":"/ # use rayon_core as rayon;","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":103877,"byte_end":103907,"line_start":142,"line_end":142,"column_start":1,"column_end":31}},{"value":"/ // point start","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":103908,"byte_end":103926,"line_start":143,"line_end":143,"column_start":1,"column_end":19}},{"value":"/ rayon::scope(|s| {","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":103927,"byte_end":103949,"line_start":144,"line_end":144,"column_start":1,"column_end":23}},{"value":"/     s.spawn(|s| { // task s.1","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":103950,"byte_end":103983,"line_start":145,"line_end":145,"column_start":1,"column_end":34}},{"value":"/         s.spawn(|s| { // task s.1.1","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":103984,"byte_end":104023,"line_start":146,"line_end":146,"column_start":1,"column_end":40}},{"value":"/             rayon::scope(|t| {","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":104024,"byte_end":104058,"line_start":147,"line_end":147,"column_start":1,"column_end":35}},{"value":"/                 t.spawn(|_| ()); // task t.1","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":104059,"byte_end":104107,"line_start":148,"line_end":148,"column_start":1,"column_end":49}},{"value":"/                 t.spawn(|_| ()); // task t.2","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":104108,"byte_end":104156,"line_start":149,"line_end":149,"column_start":1,"column_end":49}},{"value":"/             });","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":104157,"byte_end":104176,"line_start":150,"line_end":150,"column_start":1,"column_end":20}},{"value":"/         });","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":104177,"byte_end":104192,"line_start":151,"line_end":151,"column_start":1,"column_end":16}},{"value":"/     });","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":104193,"byte_end":104204,"line_start":152,"line_end":152,"column_start":1,"column_end":12}},{"value":"/     s.spawn(|s| { // task s.2","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":104205,"byte_end":104238,"line_start":153,"line_end":153,"column_start":1,"column_end":34}},{"value":"/     });","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":104239,"byte_end":104250,"line_start":154,"line_end":154,"column_start":1,"column_end":12}},{"value":"/     // point mid","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":104251,"byte_end":104271,"line_start":155,"line_end":155,"column_start":1,"column_end":21}},{"value":"/ });","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":104272,"byte_end":104279,"line_start":156,"line_end":156,"column_start":1,"column_end":8}},{"value":"/ // point end","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":104280,"byte_end":104296,"line_start":157,"line_end":157,"column_start":1,"column_end":17}},{"value":"/ ```","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":104297,"byte_end":104304,"line_start":158,"line_end":158,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":104305,"byte_end":104308,"line_start":159,"line_end":159,"column_start":1,"column_end":4}},{"value":"/ The various tasks that are run will execute roughly like so:","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":104309,"byte_end":104373,"line_start":160,"line_end":160,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":104374,"byte_end":104377,"line_start":161,"line_end":161,"column_start":1,"column_end":4}},{"value":"/ ```notrust","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":104378,"byte_end":104392,"line_start":162,"line_end":162,"column_start":1,"column_end":15}},{"value":"/ | (start)","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":104393,"byte_end":104406,"line_start":163,"line_end":163,"column_start":1,"column_end":14}},{"value":"/ |","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":104407,"byte_end":104412,"line_start":164,"line_end":164,"column_start":1,"column_end":6}},{"value":"/ | (scope `s` created)","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":104413,"byte_end":104438,"line_start":165,"line_end":165,"column_start":1,"column_end":26}},{"value":"/ +-----------------------------------------------+ (task s.2)","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":104439,"byte_end":104503,"line_start":166,"line_end":166,"column_start":1,"column_end":65}},{"value":"/ +-------+ (task s.1)                            |","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":104504,"byte_end":104557,"line_start":167,"line_end":167,"column_start":1,"column_end":54}},{"value":"/ |       |                                       |","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":104558,"byte_end":104611,"line_start":168,"line_end":168,"column_start":1,"column_end":54}},{"value":"/ |       +---+ (task s.1.1)                      |","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":104612,"byte_end":104665,"line_start":169,"line_end":169,"column_start":1,"column_end":54}},{"value":"/ |       |   |                                   |","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":104666,"byte_end":104719,"line_start":170,"line_end":170,"column_start":1,"column_end":54}},{"value":"/ |       |   | (scope `t` created)               |","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":104720,"byte_end":104773,"line_start":171,"line_end":171,"column_start":1,"column_end":54}},{"value":"/ |       |   +----------------+ (task t.2)       |","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":104774,"byte_end":104827,"line_start":172,"line_end":172,"column_start":1,"column_end":54}},{"value":"/ |       |   +---+ (task t.1) |                  |","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":104828,"byte_end":104881,"line_start":173,"line_end":173,"column_start":1,"column_end":54}},{"value":"/ | (mid) |   |   |            |                  |","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":104882,"byte_end":104935,"line_start":174,"line_end":174,"column_start":1,"column_end":54}},{"value":"/ :       |   + <-+------------+ (scope `t` ends) |","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":104936,"byte_end":104989,"line_start":175,"line_end":175,"column_start":1,"column_end":54}},{"value":"/ :       |   |                                   |","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":104990,"byte_end":105043,"line_start":176,"line_end":176,"column_start":1,"column_end":54}},{"value":"/ |<------+---+-----------------------------------+ (scope `s` ends)","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":105044,"byte_end":105114,"line_start":177,"line_end":177,"column_start":1,"column_end":71}},{"value":"/ |","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":105115,"byte_end":105120,"line_start":178,"line_end":178,"column_start":1,"column_end":6}},{"value":"/ | (end)","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":105121,"byte_end":105132,"line_start":179,"line_end":179,"column_start":1,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":105133,"byte_end":105140,"line_start":180,"line_end":180,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":105141,"byte_end":105144,"line_start":181,"line_end":181,"column_start":1,"column_end":4}},{"value":"/ The point here is that everything spawned into scope `s` will","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":105145,"byte_end":105210,"line_start":182,"line_end":182,"column_start":1,"column_end":66}},{"value":"/ terminate (at latest) at the same point -- right before the","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":105211,"byte_end":105274,"line_start":183,"line_end":183,"column_start":1,"column_end":64}},{"value":"/ original call to `rayon::scope` returns. This includes new","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":105275,"byte_end":105337,"line_start":184,"line_end":184,"column_start":1,"column_end":63}},{"value":"/ subtasks created by other subtasks (e.g., task `s.1.1`). If a new","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":105338,"byte_end":105407,"line_start":185,"line_end":185,"column_start":1,"column_end":70}},{"value":"/ scope is created (such as `t`), the things spawned into that scope","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":105408,"byte_end":105478,"line_start":186,"line_end":186,"column_start":1,"column_end":71}},{"value":"/ will be joined before that scope returns, which in turn occurs","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":105479,"byte_end":105545,"line_start":187,"line_end":187,"column_start":1,"column_end":67}},{"value":"/ before the creating task (task `s.1.1` in this case) finishes.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":105546,"byte_end":105612,"line_start":188,"line_end":188,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":105613,"byte_end":105616,"line_start":189,"line_end":189,"column_start":1,"column_end":4}},{"value":"/ There is no guaranteed order of execution for spawns in a scope,","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":105617,"byte_end":105685,"line_start":190,"line_end":190,"column_start":1,"column_end":69}},{"value":"/ given that other threads may steal tasks at any time. However, they","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":105686,"byte_end":105757,"line_start":191,"line_end":191,"column_start":1,"column_end":72}},{"value":"/ are generally prioritized in a LIFO order on the thread from which","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":105758,"byte_end":105828,"line_start":192,"line_end":192,"column_start":1,"column_end":71}},{"value":"/ they were spawned. So in this example, absent any stealing, we can","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":105829,"byte_end":105899,"line_start":193,"line_end":193,"column_start":1,"column_end":71}},{"value":"/ expect `s.2` to execute before `s.1`, and `t.2` before `t.1`. Other","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":105900,"byte_end":105971,"line_start":194,"line_end":194,"column_start":1,"column_end":72}},{"value":"/ threads always steal from the other end of the deque, like FIFO","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":105972,"byte_end":106039,"line_start":195,"line_end":195,"column_start":1,"column_end":68}},{"value":"/ order.  The idea is that \"recent\" tasks are most likely to be fresh","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":106040,"byte_end":106111,"line_start":196,"line_end":196,"column_start":1,"column_end":72}},{"value":"/ in the local CPU's cache, while other threads can steal older","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":106112,"byte_end":106177,"line_start":197,"line_end":197,"column_start":1,"column_end":66}},{"value":"/ \"stale\" tasks.  For an alternate approach, consider","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":106178,"byte_end":106233,"line_start":198,"line_end":198,"column_start":1,"column_end":56}},{"value":"/ [`scope_fifo()`] instead.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":106234,"byte_end":106263,"line_start":199,"line_end":199,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":106264,"byte_end":106267,"line_start":200,"line_end":200,"column_start":1,"column_end":4}},{"value":"/ [`scope_fifo()`]: fn.scope_fifo.html","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":106268,"byte_end":106308,"line_start":201,"line_end":201,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":106309,"byte_end":106312,"line_start":202,"line_end":202,"column_start":1,"column_end":4}},{"value":"/ # Accessing stack data","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":106313,"byte_end":106339,"line_start":203,"line_end":203,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":106340,"byte_end":106343,"line_start":204,"line_end":204,"column_start":1,"column_end":4}},{"value":"/ In general, spawned tasks may access stack data in place that","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":106344,"byte_end":106409,"line_start":205,"line_end":205,"column_start":1,"column_end":66}},{"value":"/ outlives the scope itself. Other data must be fully owned by the","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":106410,"byte_end":106478,"line_start":206,"line_end":206,"column_start":1,"column_end":69}},{"value":"/ spawned task.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":106479,"byte_end":106496,"line_start":207,"line_end":207,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":106497,"byte_end":106500,"line_start":208,"line_end":208,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":106501,"byte_end":106512,"line_start":209,"line_end":209,"column_start":1,"column_end":12}},{"value":"/ # use rayon_core as rayon;","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":106513,"byte_end":106543,"line_start":210,"line_end":210,"column_start":1,"column_end":31}},{"value":"/ let ok: Vec<i32> = vec![1, 2, 3];","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":106544,"byte_end":106581,"line_start":211,"line_end":211,"column_start":1,"column_end":38}},{"value":"/ rayon::scope(|s| {","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":106582,"byte_end":106604,"line_start":212,"line_end":212,"column_start":1,"column_end":23}},{"value":"/     let bad: Vec<i32> = vec![4, 5, 6];","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":106605,"byte_end":106647,"line_start":213,"line_end":213,"column_start":1,"column_end":43}},{"value":"/     s.spawn(|_| {","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":106648,"byte_end":106669,"line_start":214,"line_end":214,"column_start":1,"column_end":22}},{"value":"/         // We can access `ok` because outlives the scope `s`.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":106670,"byte_end":106735,"line_start":215,"line_end":215,"column_start":1,"column_end":66}},{"value":"/         println!(\"ok: {:?}\", ok);","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":106736,"byte_end":106773,"line_start":216,"line_end":216,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":106774,"byte_end":106777,"line_start":217,"line_end":217,"column_start":1,"column_end":4}},{"value":"/         // If we just try to use `bad` here, the closure will borrow `bad`","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":106778,"byte_end":106856,"line_start":218,"line_end":218,"column_start":1,"column_end":79}},{"value":"/         // (because we are just printing it out, and that only requires a","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":106857,"byte_end":106934,"line_start":219,"line_end":219,"column_start":1,"column_end":78}},{"value":"/         // borrow), which will result in a compilation error. Read on","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":106935,"byte_end":107008,"line_start":220,"line_end":220,"column_start":1,"column_end":74}},{"value":"/         // for options.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":107009,"byte_end":107036,"line_start":221,"line_end":221,"column_start":1,"column_end":28}},{"value":"/         // println!(\"bad: {:?}\", bad);","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":107037,"byte_end":107079,"line_start":222,"line_end":222,"column_start":1,"column_end":43}},{"value":"/    });","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":107080,"byte_end":107090,"line_start":223,"line_end":223,"column_start":1,"column_end":11}},{"value":"/ });","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":107091,"byte_end":107098,"line_start":224,"line_end":224,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":107099,"byte_end":107106,"line_start":225,"line_end":225,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":107107,"byte_end":107110,"line_start":226,"line_end":226,"column_start":1,"column_end":4}},{"value":"/ As the comments example above suggest, to reference `bad` we must","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":107111,"byte_end":107180,"line_start":227,"line_end":227,"column_start":1,"column_end":70}},{"value":"/ take ownership of it. One way to do this is to detach the closure","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":107181,"byte_end":107250,"line_start":228,"line_end":228,"column_start":1,"column_end":70}},{"value":"/ from the surrounding stack frame, using the `move` keyword. This","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":107251,"byte_end":107319,"line_start":229,"line_end":229,"column_start":1,"column_end":69}},{"value":"/ will cause it to take ownership of *all* the variables it touches,","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":107320,"byte_end":107390,"line_start":230,"line_end":230,"column_start":1,"column_end":71}},{"value":"/ in this case including both `ok` *and* `bad`:","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":107391,"byte_end":107440,"line_start":231,"line_end":231,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":107441,"byte_end":107444,"line_start":232,"line_end":232,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":107445,"byte_end":107456,"line_start":233,"line_end":233,"column_start":1,"column_end":12}},{"value":"/ # use rayon_core as rayon;","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":107457,"byte_end":107487,"line_start":234,"line_end":234,"column_start":1,"column_end":31}},{"value":"/ let ok: Vec<i32> = vec![1, 2, 3];","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":107488,"byte_end":107525,"line_start":235,"line_end":235,"column_start":1,"column_end":38}},{"value":"/ rayon::scope(|s| {","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":107526,"byte_end":107548,"line_start":236,"line_end":236,"column_start":1,"column_end":23}},{"value":"/     let bad: Vec<i32> = vec![4, 5, 6];","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":107549,"byte_end":107591,"line_start":237,"line_end":237,"column_start":1,"column_end":43}},{"value":"/     s.spawn(move |_| {","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":107592,"byte_end":107618,"line_start":238,"line_end":238,"column_start":1,"column_end":27}},{"value":"/         println!(\"ok: {:?}\", ok);","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":107619,"byte_end":107656,"line_start":239,"line_end":239,"column_start":1,"column_end":38}},{"value":"/         println!(\"bad: {:?}\", bad);","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":107657,"byte_end":107696,"line_start":240,"line_end":240,"column_start":1,"column_end":40}},{"value":"/     });","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":107697,"byte_end":107708,"line_start":241,"line_end":241,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":107709,"byte_end":107712,"line_start":242,"line_end":242,"column_start":1,"column_end":4}},{"value":"/     // That closure is fine, but now we can't use `ok` anywhere else,","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":107713,"byte_end":107786,"line_start":243,"line_end":243,"column_start":1,"column_end":74}},{"value":"/     // since it is owend by the previous task:","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":107787,"byte_end":107837,"line_start":244,"line_end":244,"column_start":1,"column_end":51}},{"value":"/     // s.spawn(|_| println!(\"ok: {:?}\", ok));","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":107838,"byte_end":107887,"line_start":245,"line_end":245,"column_start":1,"column_end":50}},{"value":"/ });","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":107888,"byte_end":107895,"line_start":246,"line_end":246,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":107896,"byte_end":107903,"line_start":247,"line_end":247,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":107904,"byte_end":107907,"line_start":248,"line_end":248,"column_start":1,"column_end":4}},{"value":"/ While this works, it could be a problem if we want to use `ok` elsewhere.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":107908,"byte_end":107985,"line_start":249,"line_end":249,"column_start":1,"column_end":78}},{"value":"/ There are two choices. We can keep the closure as a `move` closure, but","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":107986,"byte_end":108061,"line_start":250,"line_end":250,"column_start":1,"column_end":76}},{"value":"/ instead of referencing the variable `ok`, we create a shadowed variable that","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":108062,"byte_end":108142,"line_start":251,"line_end":251,"column_start":1,"column_end":81}},{"value":"/ is a borrow of `ok` and capture *that*:","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":108143,"byte_end":108186,"line_start":252,"line_end":252,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":108187,"byte_end":108190,"line_start":253,"line_end":253,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":108191,"byte_end":108202,"line_start":254,"line_end":254,"column_start":1,"column_end":12}},{"value":"/ # use rayon_core as rayon;","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":108203,"byte_end":108233,"line_start":255,"line_end":255,"column_start":1,"column_end":31}},{"value":"/ let ok: Vec<i32> = vec![1, 2, 3];","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":108234,"byte_end":108271,"line_start":256,"line_end":256,"column_start":1,"column_end":38}},{"value":"/ rayon::scope(|s| {","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":108272,"byte_end":108294,"line_start":257,"line_end":257,"column_start":1,"column_end":23}},{"value":"/     let bad: Vec<i32> = vec![4, 5, 6];","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":108295,"byte_end":108337,"line_start":258,"line_end":258,"column_start":1,"column_end":43}},{"value":"/     let ok: &Vec<i32> = &ok; // shadow the original `ok`","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":108338,"byte_end":108398,"line_start":259,"line_end":259,"column_start":1,"column_end":61}},{"value":"/     s.spawn(move |_| {","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":108399,"byte_end":108425,"line_start":260,"line_end":260,"column_start":1,"column_end":27}},{"value":"/         println!(\"ok: {:?}\", ok); // captures the shadowed version","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":108426,"byte_end":108496,"line_start":261,"line_end":261,"column_start":1,"column_end":71}},{"value":"/         println!(\"bad: {:?}\", bad);","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":108497,"byte_end":108536,"line_start":262,"line_end":262,"column_start":1,"column_end":40}},{"value":"/     });","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":108537,"byte_end":108548,"line_start":263,"line_end":263,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":108549,"byte_end":108552,"line_start":264,"line_end":264,"column_start":1,"column_end":4}},{"value":"/     // Now we too can use the shadowed `ok`, since `&Vec<i32>` references","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":108553,"byte_end":108630,"line_start":265,"line_end":265,"column_start":1,"column_end":78}},{"value":"/     // can be shared freely. Note that we need a `move` closure here though,","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":108631,"byte_end":108711,"line_start":266,"line_end":266,"column_start":1,"column_end":81}},{"value":"/     // because otherwise we'd be trying to borrow the shadowed `ok`,","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":108712,"byte_end":108784,"line_start":267,"line_end":267,"column_start":1,"column_end":73}},{"value":"/     // and that doesn't outlive `scope`.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":108785,"byte_end":108829,"line_start":268,"line_end":268,"column_start":1,"column_end":45}},{"value":"/     s.spawn(move |_| println!(\"ok: {:?}\", ok));","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":108830,"byte_end":108881,"line_start":269,"line_end":269,"column_start":1,"column_end":52}},{"value":"/ });","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":108882,"byte_end":108889,"line_start":270,"line_end":270,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":108890,"byte_end":108897,"line_start":271,"line_end":271,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":108898,"byte_end":108901,"line_start":272,"line_end":272,"column_start":1,"column_end":4}},{"value":"/ Another option is not to use the `move` keyword but instead to take ownership","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":108902,"byte_end":108983,"line_start":273,"line_end":273,"column_start":1,"column_end":82}},{"value":"/ of individual variables:","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":108984,"byte_end":109012,"line_start":274,"line_end":274,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":109013,"byte_end":109016,"line_start":275,"line_end":275,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":109017,"byte_end":109028,"line_start":276,"line_end":276,"column_start":1,"column_end":12}},{"value":"/ # use rayon_core as rayon;","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":109029,"byte_end":109059,"line_start":277,"line_end":277,"column_start":1,"column_end":31}},{"value":"/ let ok: Vec<i32> = vec![1, 2, 3];","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":109060,"byte_end":109097,"line_start":278,"line_end":278,"column_start":1,"column_end":38}},{"value":"/ rayon::scope(|s| {","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":109098,"byte_end":109120,"line_start":279,"line_end":279,"column_start":1,"column_end":23}},{"value":"/     let bad: Vec<i32> = vec![4, 5, 6];","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":109121,"byte_end":109163,"line_start":280,"line_end":280,"column_start":1,"column_end":43}},{"value":"/     s.spawn(|_| {","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":109164,"byte_end":109185,"line_start":281,"line_end":281,"column_start":1,"column_end":22}},{"value":"/         // Transfer ownership of `bad` into a local variable (also named `bad`).","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":109186,"byte_end":109270,"line_start":282,"line_end":282,"column_start":1,"column_end":85}},{"value":"/         // This will force the closure to take ownership of `bad` from the environment.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":109271,"byte_end":109362,"line_start":283,"line_end":283,"column_start":1,"column_end":92}},{"value":"/         let bad = bad;","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":109363,"byte_end":109389,"line_start":284,"line_end":284,"column_start":1,"column_end":27}},{"value":"/         println!(\"ok: {:?}\", ok); // `ok` is only borrowed.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":109390,"byte_end":109453,"line_start":285,"line_end":285,"column_start":1,"column_end":64}},{"value":"/         println!(\"bad: {:?}\", bad); // refers to our local variable, above.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":109454,"byte_end":109533,"line_start":286,"line_end":286,"column_start":1,"column_end":80}},{"value":"/     });","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":109534,"byte_end":109545,"line_start":287,"line_end":287,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":109546,"byte_end":109549,"line_start":288,"line_end":288,"column_start":1,"column_end":4}},{"value":"/     s.spawn(|_| println!(\"ok: {:?}\", ok)); // we too can borrow `ok`","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":109550,"byte_end":109622,"line_start":289,"line_end":289,"column_start":1,"column_end":73}},{"value":"/ });","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":109623,"byte_end":109630,"line_start":290,"line_end":290,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":109631,"byte_end":109638,"line_start":291,"line_end":291,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":109639,"byte_end":109642,"line_start":292,"line_end":292,"column_start":1,"column_end":4}},{"value":"/ # Panics","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":109643,"byte_end":109655,"line_start":293,"line_end":293,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":109656,"byte_end":109659,"line_start":294,"line_end":294,"column_start":1,"column_end":4}},{"value":"/ If a panic occurs, either in the closure given to `scope()` or in","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":109660,"byte_end":109729,"line_start":295,"line_end":295,"column_start":1,"column_end":70}},{"value":"/ any of the spawned jobs, that panic will be propagated and the","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":109730,"byte_end":109796,"line_start":296,"line_end":296,"column_start":1,"column_end":67}},{"value":"/ call to `scope()` will panic. If multiple panics occurs, it is","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":109797,"byte_end":109863,"line_start":297,"line_end":297,"column_start":1,"column_end":67}},{"value":"/ non-deterministic which of their panic values will propagate.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":109864,"byte_end":109929,"line_start":298,"line_end":298,"column_start":1,"column_end":66}},{"value":"/ Regardless, once a task is spawned using `scope.spawn()`, it will","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":109930,"byte_end":109999,"line_start":299,"line_end":299,"column_start":1,"column_end":70}},{"value":"/ execute, even if the spawning task should later panic. `scope()`","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":110000,"byte_end":110068,"line_start":300,"line_end":300,"column_start":1,"column_end":69}},{"value":"/ returns once all spawned jobs have completed, and any panics are","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":110069,"byte_end":110137,"line_start":301,"line_end":301,"column_start":1,"column_end":69}},{"value":"/ propagated at that point.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":110138,"byte_end":110167,"line_start":302,"line_end":302,"column_start":1,"column_end":30}}]},{"kind":"Function","id":{"krate":0,"index":657},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":113645,"byte_end":113655,"line_start":394,"line_end":394,"column_start":8,"column_end":18},"name":"scope_fifo","qualname":"::scope::scope_fifo","value":"pub fn scope_fifo<'scope, OP, R>(OP) -> R where OP: FnOnce(&ScopeFifo) -> R +\nSend, R: Send","parent":null,"children":[],"decl_id":null,"docs":" Creates a \"fork-join\" scope `s` with FIFO order, and invokes the\n closure with a reference to `s`. This closure can then spawn\n asynchronous tasks into `s`. Those tasks may run asynchronously with\n respect to the closure; they may themselves spawn additional tasks\n into `s`. When the closure returns, it will block until all tasks\n that have been spawned into `s` complete.","sig":null,"attributes":[{"value":"/ Creates a \"fork-join\" scope `s` with FIFO order, and invokes the","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":110449,"byte_end":110517,"line_start":314,"line_end":314,"column_start":1,"column_end":69}},{"value":"/ closure with a reference to `s`. This closure can then spawn","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":110518,"byte_end":110582,"line_start":315,"line_end":315,"column_start":1,"column_end":65}},{"value":"/ asynchronous tasks into `s`. Those tasks may run asynchronously with","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":110583,"byte_end":110655,"line_start":316,"line_end":316,"column_start":1,"column_end":73}},{"value":"/ respect to the closure; they may themselves spawn additional tasks","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":110656,"byte_end":110726,"line_start":317,"line_end":317,"column_start":1,"column_end":71}},{"value":"/ into `s`. When the closure returns, it will block until all tasks","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":110727,"byte_end":110796,"line_start":318,"line_end":318,"column_start":1,"column_end":70}},{"value":"/ that have been spawned into `s` complete.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":110797,"byte_end":110842,"line_start":319,"line_end":319,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":110843,"byte_end":110846,"line_start":320,"line_end":320,"column_start":1,"column_end":4}},{"value":"/ # Task execution","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":110847,"byte_end":110867,"line_start":321,"line_end":321,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":110868,"byte_end":110871,"line_start":322,"line_end":322,"column_start":1,"column_end":4}},{"value":"/ Tasks in a `scope_fifo()` run similarly to [`scope()`], but there's a","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":110872,"byte_end":110945,"line_start":323,"line_end":323,"column_start":1,"column_end":74}},{"value":"/ difference in the order of execution. Consider a similar example:","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":110946,"byte_end":111015,"line_start":324,"line_end":324,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":111016,"byte_end":111019,"line_start":325,"line_end":325,"column_start":1,"column_end":4}},{"value":"/ [`scope()`]: fn.scope.html","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":111020,"byte_end":111050,"line_start":326,"line_end":326,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":111051,"byte_end":111054,"line_start":327,"line_end":327,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":111055,"byte_end":111066,"line_start":328,"line_end":328,"column_start":1,"column_end":12}},{"value":"/ # use rayon_core as rayon;","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":111067,"byte_end":111097,"line_start":329,"line_end":329,"column_start":1,"column_end":31}},{"value":"/ // point start","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":111098,"byte_end":111116,"line_start":330,"line_end":330,"column_start":1,"column_end":19}},{"value":"/ rayon::scope_fifo(|s| {","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":111117,"byte_end":111144,"line_start":331,"line_end":331,"column_start":1,"column_end":28}},{"value":"/     s.spawn_fifo(|s| { // task s.1","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":111145,"byte_end":111183,"line_start":332,"line_end":332,"column_start":1,"column_end":39}},{"value":"/         s.spawn_fifo(|s| { // task s.1.1","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":111184,"byte_end":111228,"line_start":333,"line_end":333,"column_start":1,"column_end":45}},{"value":"/             rayon::scope_fifo(|t| {","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":111229,"byte_end":111268,"line_start":334,"line_end":334,"column_start":1,"column_end":40}},{"value":"/                 t.spawn_fifo(|_| ()); // task t.1","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":111269,"byte_end":111322,"line_start":335,"line_end":335,"column_start":1,"column_end":54}},{"value":"/                 t.spawn_fifo(|_| ()); // task t.2","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":111323,"byte_end":111376,"line_start":336,"line_end":336,"column_start":1,"column_end":54}},{"value":"/             });","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":111377,"byte_end":111396,"line_start":337,"line_end":337,"column_start":1,"column_end":20}},{"value":"/         });","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":111397,"byte_end":111412,"line_start":338,"line_end":338,"column_start":1,"column_end":16}},{"value":"/     });","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":111413,"byte_end":111424,"line_start":339,"line_end":339,"column_start":1,"column_end":12}},{"value":"/     s.spawn_fifo(|s| { // task s.2","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":111425,"byte_end":111463,"line_start":340,"line_end":340,"column_start":1,"column_end":39}},{"value":"/     });","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":111464,"byte_end":111475,"line_start":341,"line_end":341,"column_start":1,"column_end":12}},{"value":"/     // point mid","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":111476,"byte_end":111496,"line_start":342,"line_end":342,"column_start":1,"column_end":21}},{"value":"/ });","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":111497,"byte_end":111504,"line_start":343,"line_end":343,"column_start":1,"column_end":8}},{"value":"/ // point end","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":111505,"byte_end":111521,"line_start":344,"line_end":344,"column_start":1,"column_end":17}},{"value":"/ ```","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":111522,"byte_end":111529,"line_start":345,"line_end":345,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":111530,"byte_end":111533,"line_start":346,"line_end":346,"column_start":1,"column_end":4}},{"value":"/ The various tasks that are run will execute roughly like so:","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":111534,"byte_end":111598,"line_start":347,"line_end":347,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":111599,"byte_end":111602,"line_start":348,"line_end":348,"column_start":1,"column_end":4}},{"value":"/ ```notrust","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":111603,"byte_end":111617,"line_start":349,"line_end":349,"column_start":1,"column_end":15}},{"value":"/ | (start)","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":111618,"byte_end":111631,"line_start":350,"line_end":350,"column_start":1,"column_end":14}},{"value":"/ |","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":111632,"byte_end":111637,"line_start":351,"line_end":351,"column_start":1,"column_end":6}},{"value":"/ | (FIFO scope `s` created)","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":111638,"byte_end":111668,"line_start":352,"line_end":352,"column_start":1,"column_end":31}},{"value":"/ +--------------------+ (task s.1)","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":111669,"byte_end":111706,"line_start":353,"line_end":353,"column_start":1,"column_end":38}},{"value":"/ +-------+ (task s.2) |","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":111707,"byte_end":111733,"line_start":354,"line_end":354,"column_start":1,"column_end":27}},{"value":"/ |       |            +---+ (task s.1.1)","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":111734,"byte_end":111777,"line_start":355,"line_end":355,"column_start":1,"column_end":44}},{"value":"/ |       |            |   |","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":111778,"byte_end":111808,"line_start":356,"line_end":356,"column_start":1,"column_end":31}},{"value":"/ |       |            |   | (FIFO scope `t` created)","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":111809,"byte_end":111864,"line_start":357,"line_end":357,"column_start":1,"column_end":56}},{"value":"/ |       |            |   +----------------+ (task t.1)","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":111865,"byte_end":111923,"line_start":358,"line_end":358,"column_start":1,"column_end":59}},{"value":"/ |       |            |   +---+ (task t.2) |","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":111924,"byte_end":111971,"line_start":359,"line_end":359,"column_start":1,"column_end":48}},{"value":"/ | (mid) |            |   |   |            |","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":111972,"byte_end":112019,"line_start":360,"line_end":360,"column_start":1,"column_end":48}},{"value":"/ :       |            |   + <-+------------+ (scope `t` ends)","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":112020,"byte_end":112084,"line_start":361,"line_end":361,"column_start":1,"column_end":65}},{"value":"/ :       |            |   |","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":112085,"byte_end":112115,"line_start":362,"line_end":362,"column_start":1,"column_end":31}},{"value":"/ |<------+------------+---+ (scope `s` ends)","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":112116,"byte_end":112163,"line_start":363,"line_end":363,"column_start":1,"column_end":48}},{"value":"/ |","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":112164,"byte_end":112169,"line_start":364,"line_end":364,"column_start":1,"column_end":6}},{"value":"/ | (end)","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":112170,"byte_end":112181,"line_start":365,"line_end":365,"column_start":1,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":112182,"byte_end":112189,"line_start":366,"line_end":366,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":112190,"byte_end":112193,"line_start":367,"line_end":367,"column_start":1,"column_end":4}},{"value":"/ Under `scope_fifo()`, the spawns are prioritized in a FIFO order on","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":112194,"byte_end":112265,"line_start":368,"line_end":368,"column_start":1,"column_end":72}},{"value":"/ the thread from which they were spawned, as opposed to `scope()`'s","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":112266,"byte_end":112336,"line_start":369,"line_end":369,"column_start":1,"column_end":71}},{"value":"/ LIFO.  So in this example, we can expect `s.1` to execute before","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":112337,"byte_end":112405,"line_start":370,"line_end":370,"column_start":1,"column_end":69}},{"value":"/ `s.2`, and `t.1` before `t.2`. Other threads also steal tasks in","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":112406,"byte_end":112474,"line_start":371,"line_end":371,"column_start":1,"column_end":69}},{"value":"/ FIFO order, as usual. Overall, this has roughly the same order as","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":112475,"byte_end":112544,"line_start":372,"line_end":372,"column_start":1,"column_end":70}},{"value":"/ the now-deprecated [`breadth_first`] option, except the effect is","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":112545,"byte_end":112614,"line_start":373,"line_end":373,"column_start":1,"column_end":70}},{"value":"/ isolated to a particular scope. If spawns are intermingled from any","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":112615,"byte_end":112686,"line_start":374,"line_end":374,"column_start":1,"column_end":72}},{"value":"/ combination of `scope()` and `scope_fifo()`, or from different","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":112687,"byte_end":112753,"line_start":375,"line_end":375,"column_start":1,"column_end":67}},{"value":"/ threads, their order is only specified with respect to spawns in the","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":112754,"byte_end":112826,"line_start":376,"line_end":376,"column_start":1,"column_end":73}},{"value":"/ same scope and thread.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":112827,"byte_end":112853,"line_start":377,"line_end":377,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":112854,"byte_end":112857,"line_start":378,"line_end":378,"column_start":1,"column_end":4}},{"value":"/ For more details on this design, see Rayon [RFC #1].","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":112858,"byte_end":112914,"line_start":379,"line_end":379,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":112915,"byte_end":112918,"line_start":380,"line_end":380,"column_start":1,"column_end":4}},{"value":"/ [`breadth_first`]: struct.ThreadPoolBuilder.html#method.breadth_first","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":112919,"byte_end":112992,"line_start":381,"line_end":381,"column_start":1,"column_end":74}},{"value":"/ [RFC #1]: https://github.com/rayon-rs/rfcs/blob/master/accepted/rfc0001-scope-scheduling.md","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":112993,"byte_end":113088,"line_start":382,"line_end":382,"column_start":1,"column_end":96}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":113089,"byte_end":113092,"line_start":383,"line_end":383,"column_start":1,"column_end":4}},{"value":"/ # Panics","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":113093,"byte_end":113105,"line_start":384,"line_end":384,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":113106,"byte_end":113109,"line_start":385,"line_end":385,"column_start":1,"column_end":4}},{"value":"/ If a panic occurs, either in the closure given to `scope_fifo()` or","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":113110,"byte_end":113181,"line_start":386,"line_end":386,"column_start":1,"column_end":72}},{"value":"/ in any of the spawned jobs, that panic will be propagated and the","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":113182,"byte_end":113251,"line_start":387,"line_end":387,"column_start":1,"column_end":70}},{"value":"/ call to `scope_fifo()` will panic. If multiple panics occurs, it is","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":113252,"byte_end":113323,"line_start":388,"line_end":388,"column_start":1,"column_end":72}},{"value":"/ non-deterministic which of their panic values will propagate.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":113324,"byte_end":113389,"line_start":389,"line_end":389,"column_start":1,"column_end":66}},{"value":"/ Regardless, once a task is spawned using `scope.spawn_fifo()`, it","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":113390,"byte_end":113459,"line_start":390,"line_end":390,"column_start":1,"column_end":70}},{"value":"/ will execute, even if the spawning task should later panic.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":113460,"byte_end":113523,"line_start":391,"line_end":391,"column_start":1,"column_end":64}},{"value":"/ `scope_fifo()` returns once all spawned jobs have completed, and any","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":113524,"byte_end":113596,"line_start":392,"line_end":392,"column_start":1,"column_end":73}},{"value":"/ panics are propagated at that point.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":113597,"byte_end":113637,"line_start":393,"line_end":393,"column_start":1,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":663},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":115040,"byte_end":115054,"line_start":426,"line_end":426,"column_start":8,"column_end":22},"name":"in_place_scope","qualname":"::scope::in_place_scope","value":"pub fn in_place_scope<'scope, OP, R>(OP) -> R where OP: FnOnce(&Scope) -> R","parent":null,"children":[],"decl_id":null,"docs":" Creates a \"fork-join\" scope `s` and invokes the closure with a\n reference to `s`. This closure can then spawn asynchronous tasks\n into `s`. Those tasks may run asynchronously with respect to the\n closure; they may themselves spawn additional tasks into `s`. When\n the closure returns, it will block until all tasks that have been\n spawned into `s` complete.","sig":null,"attributes":[{"value":"/ Creates a \"fork-join\" scope `s` and invokes the closure with a","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":113932,"byte_end":113998,"line_start":405,"line_end":405,"column_start":1,"column_end":67}},{"value":"/ reference to `s`. This closure can then spawn asynchronous tasks","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":113999,"byte_end":114067,"line_start":406,"line_end":406,"column_start":1,"column_end":69}},{"value":"/ into `s`. Those tasks may run asynchronously with respect to the","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":114068,"byte_end":114136,"line_start":407,"line_end":407,"column_start":1,"column_end":69}},{"value":"/ closure; they may themselves spawn additional tasks into `s`. When","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":114137,"byte_end":114207,"line_start":408,"line_end":408,"column_start":1,"column_end":71}},{"value":"/ the closure returns, it will block until all tasks that have been","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":114208,"byte_end":114277,"line_start":409,"line_end":409,"column_start":1,"column_end":70}},{"value":"/ spawned into `s` complete.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":114278,"byte_end":114308,"line_start":410,"line_end":410,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":114309,"byte_end":114312,"line_start":411,"line_end":411,"column_start":1,"column_end":4}},{"value":"/ This is just like `scope()` except the closure runs on the same thread","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":114313,"byte_end":114387,"line_start":412,"line_end":412,"column_start":1,"column_end":75}},{"value":"/ that calls `in_place_scope()`. Only work that it spawns runs in the","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":114388,"byte_end":114459,"line_start":413,"line_end":413,"column_start":1,"column_end":72}},{"value":"/ thread pool.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":114460,"byte_end":114476,"line_start":414,"line_end":414,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":114477,"byte_end":114480,"line_start":415,"line_end":415,"column_start":1,"column_end":4}},{"value":"/ # Panics","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":114481,"byte_end":114493,"line_start":416,"line_end":416,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":114494,"byte_end":114497,"line_start":417,"line_end":417,"column_start":1,"column_end":4}},{"value":"/ If a panic occurs, either in the closure given to `in_place_scope()` or in","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":114498,"byte_end":114576,"line_start":418,"line_end":418,"column_start":1,"column_end":79}},{"value":"/ any of the spawned jobs, that panic will be propagated and the","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":114577,"byte_end":114643,"line_start":419,"line_end":419,"column_start":1,"column_end":67}},{"value":"/ call to `in_place_scope()` will panic. If multiple panics occurs, it is","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":114644,"byte_end":114719,"line_start":420,"line_end":420,"column_start":1,"column_end":76}},{"value":"/ non-deterministic which of their panic values will propagate.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":114720,"byte_end":114785,"line_start":421,"line_end":421,"column_start":1,"column_end":66}},{"value":"/ Regardless, once a task is spawned using `scope.spawn()`, it will","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":114786,"byte_end":114855,"line_start":422,"line_end":422,"column_start":1,"column_end":70}},{"value":"/ execute, even if the spawning task should later panic. `in_place_scope()`","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":114856,"byte_end":114933,"line_start":423,"line_end":423,"column_start":1,"column_end":78}},{"value":"/ returns once all spawned jobs have completed, and any panics are","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":114934,"byte_end":115002,"line_start":424,"line_end":424,"column_start":1,"column_end":69}},{"value":"/ propagated at that point.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":115003,"byte_end":115032,"line_start":425,"line_end":425,"column_start":1,"column_end":30}}]},{"kind":"Function","id":{"krate":0,"index":672},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":116625,"byte_end":116644,"line_start":463,"line_end":463,"column_start":8,"column_end":27},"name":"in_place_scope_fifo","qualname":"::scope::in_place_scope_fifo","value":"pub fn in_place_scope_fifo<'scope, OP, R>(OP) -> R where\nOP: FnOnce(&ScopeFifo) -> R","parent":null,"children":[],"decl_id":null,"docs":" Creates a \"fork-join\" scope `s` with FIFO order, and invokes the\n closure with a reference to `s`. This closure can then spawn\n asynchronous tasks into `s`. Those tasks may run asynchronously with\n respect to the closure; they may themselves spawn additional tasks\n into `s`. When the closure returns, it will block until all tasks\n that have been spawned into `s` complete.","sig":null,"attributes":[{"value":"/ Creates a \"fork-join\" scope `s` with FIFO order, and invokes the","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":115470,"byte_end":115538,"line_start":442,"line_end":442,"column_start":1,"column_end":69}},{"value":"/ closure with a reference to `s`. This closure can then spawn","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":115539,"byte_end":115603,"line_start":443,"line_end":443,"column_start":1,"column_end":65}},{"value":"/ asynchronous tasks into `s`. Those tasks may run asynchronously with","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":115604,"byte_end":115676,"line_start":444,"line_end":444,"column_start":1,"column_end":73}},{"value":"/ respect to the closure; they may themselves spawn additional tasks","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":115677,"byte_end":115747,"line_start":445,"line_end":445,"column_start":1,"column_end":71}},{"value":"/ into `s`. When the closure returns, it will block until all tasks","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":115748,"byte_end":115817,"line_start":446,"line_end":446,"column_start":1,"column_end":70}},{"value":"/ that have been spawned into `s` complete.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":115818,"byte_end":115863,"line_start":447,"line_end":447,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":115864,"byte_end":115867,"line_start":448,"line_end":448,"column_start":1,"column_end":4}},{"value":"/ This is just like `scope_fifo()` except the closure runs on the same thread","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":115868,"byte_end":115947,"line_start":449,"line_end":449,"column_start":1,"column_end":80}},{"value":"/ that calls `in_place_scope_fifo()`. Only work that it spawns runs in the","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":115948,"byte_end":116024,"line_start":450,"line_end":450,"column_start":1,"column_end":77}},{"value":"/ thread pool.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":116025,"byte_end":116041,"line_start":451,"line_end":451,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":116042,"byte_end":116045,"line_start":452,"line_end":452,"column_start":1,"column_end":4}},{"value":"/ # Panics","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":116046,"byte_end":116058,"line_start":453,"line_end":453,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":116059,"byte_end":116062,"line_start":454,"line_end":454,"column_start":1,"column_end":4}},{"value":"/ If a panic occurs, either in the closure given to `in_place_scope_fifo()` or in","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":116063,"byte_end":116146,"line_start":455,"line_end":455,"column_start":1,"column_end":84}},{"value":"/ any of the spawned jobs, that panic will be propagated and the","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":116147,"byte_end":116213,"line_start":456,"line_end":456,"column_start":1,"column_end":67}},{"value":"/ call to `in_place_scope_fifo()` will panic. If multiple panics occurs, it is","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":116214,"byte_end":116294,"line_start":457,"line_end":457,"column_start":1,"column_end":81}},{"value":"/ non-deterministic which of their panic values will propagate.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":116295,"byte_end":116360,"line_start":458,"line_end":458,"column_start":1,"column_end":66}},{"value":"/ Regardless, once a task is spawned using `scope.spawn_fifo()`, it will","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":116361,"byte_end":116435,"line_start":459,"line_end":459,"column_start":1,"column_end":75}},{"value":"/ execute, even if the spawning task should later panic. `in_place_scope_fifo()`","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":116436,"byte_end":116518,"line_start":460,"line_end":460,"column_start":1,"column_end":83}},{"value":"/ returns once all spawned jobs have completed, and any panics are","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":116519,"byte_end":116587,"line_start":461,"line_end":461,"column_start":1,"column_end":69}},{"value":"/ propagated at that point.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":116588,"byte_end":116617,"line_start":462,"line_end":462,"column_start":1,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":684},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":119107,"byte_end":119112,"line_start":537,"line_end":537,"column_start":12,"column_end":17},"name":"spawn","qualname":"<Scope>::spawn","value":"pub fn spawn<BODY>(&Self, BODY) where BODY: FnOnce(&Scope) -> () + Send +\n'scope","parent":null,"children":[],"decl_id":null,"docs":" Spawns a job into the fork-join scope `self`. This job will\n execute sometime before the fork-join scope completes.  The\n job is specified as a closure, and this closure receives its\n own reference to the scope `self` as argument. This can be\n used to inject new jobs into `self`.","sig":null,"attributes":[{"value":"/ Spawns a job into the fork-join scope `self`. This job will","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":117282,"byte_end":117345,"line_start":485,"line_end":485,"column_start":5,"column_end":68}},{"value":"/ execute sometime before the fork-join scope completes.  The","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":117350,"byte_end":117413,"line_start":486,"line_end":486,"column_start":5,"column_end":68}},{"value":"/ job is specified as a closure, and this closure receives its","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":117418,"byte_end":117482,"line_start":487,"line_end":487,"column_start":5,"column_end":69}},{"value":"/ own reference to the scope `self` as argument. This can be","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":117487,"byte_end":117549,"line_start":488,"line_end":488,"column_start":5,"column_end":67}},{"value":"/ used to inject new jobs into `self`.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":117554,"byte_end":117594,"line_start":489,"line_end":489,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":117599,"byte_end":117602,"line_start":490,"line_end":490,"column_start":5,"column_end":8}},{"value":"/ # Returns","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":117607,"byte_end":117620,"line_start":491,"line_end":491,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":117625,"byte_end":117628,"line_start":492,"line_end":492,"column_start":5,"column_end":8}},{"value":"/ Nothing. The spawned closures cannot pass back values to the","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":117633,"byte_end":117697,"line_start":493,"line_end":493,"column_start":5,"column_end":69}},{"value":"/ caller directly, though they can write to local variables on","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":117702,"byte_end":117766,"line_start":494,"line_end":494,"column_start":5,"column_end":69}},{"value":"/ the stack (if those variables outlive the scope) or","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":117771,"byte_end":117826,"line_start":495,"line_end":495,"column_start":5,"column_end":60}},{"value":"/ communicate through shared channels.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":117831,"byte_end":117871,"line_start":496,"line_end":496,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":117876,"byte_end":117879,"line_start":497,"line_end":497,"column_start":5,"column_end":8}},{"value":"/ (The intention is to eventualy integrate with Rust futures to","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":117884,"byte_end":117949,"line_start":498,"line_end":498,"column_start":5,"column_end":70}},{"value":"/ support spawns of functions that compute a value.)","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":117954,"byte_end":118008,"line_start":499,"line_end":499,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":118013,"byte_end":118016,"line_start":500,"line_end":500,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":118021,"byte_end":118035,"line_start":501,"line_end":501,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":118040,"byte_end":118043,"line_start":502,"line_end":502,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":118048,"byte_end":118059,"line_start":503,"line_end":503,"column_start":5,"column_end":16}},{"value":"/ # use rayon_core as rayon;","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":118064,"byte_end":118094,"line_start":504,"line_end":504,"column_start":5,"column_end":35}},{"value":"/ let mut value_a = None;","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":118099,"byte_end":118126,"line_start":505,"line_end":505,"column_start":5,"column_end":32}},{"value":"/ let mut value_b = None;","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":118131,"byte_end":118158,"line_start":506,"line_end":506,"column_start":5,"column_end":32}},{"value":"/ let mut value_c = None;","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":118163,"byte_end":118190,"line_start":507,"line_end":507,"column_start":5,"column_end":32}},{"value":"/ rayon::scope(|s| {","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":118195,"byte_end":118217,"line_start":508,"line_end":508,"column_start":5,"column_end":27}},{"value":"/     s.spawn(|s1| {","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":118222,"byte_end":118244,"line_start":509,"line_end":509,"column_start":5,"column_end":27}},{"value":"/           // ^ this is the same scope as `s`; this handle `s1`","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":118249,"byte_end":118315,"line_start":510,"line_end":510,"column_start":5,"column_end":71}},{"value":"/           //   is intended for use by the spawned task,","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":118320,"byte_end":118379,"line_start":511,"line_end":511,"column_start":5,"column_end":64}},{"value":"/           //   since scope handles cannot cross thread boundaries.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":118384,"byte_end":118454,"line_start":512,"line_end":512,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":118459,"byte_end":118462,"line_start":513,"line_end":513,"column_start":5,"column_end":8}},{"value":"/         value_a = Some(22);","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":118467,"byte_end":118498,"line_start":514,"line_end":514,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":118503,"byte_end":118506,"line_start":515,"line_end":515,"column_start":5,"column_end":8}},{"value":"/         // the scope `s` will not end until all these tasks are done","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":118511,"byte_end":118583,"line_start":516,"line_end":516,"column_start":5,"column_end":77}},{"value":"/         s1.spawn(|_| {","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":118588,"byte_end":118614,"line_start":517,"line_end":517,"column_start":5,"column_end":31}},{"value":"/             value_b = Some(44);","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":118619,"byte_end":118654,"line_start":518,"line_end":518,"column_start":5,"column_end":40}},{"value":"/         });","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":118659,"byte_end":118674,"line_start":519,"line_end":519,"column_start":5,"column_end":20}},{"value":"/     });","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":118679,"byte_end":118690,"line_start":520,"line_end":520,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":118695,"byte_end":118698,"line_start":521,"line_end":521,"column_start":5,"column_end":8}},{"value":"/     s.spawn(|_| {","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":118703,"byte_end":118724,"line_start":522,"line_end":522,"column_start":5,"column_end":26}},{"value":"/         value_c = Some(66);","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":118729,"byte_end":118760,"line_start":523,"line_end":523,"column_start":5,"column_end":36}},{"value":"/     });","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":118765,"byte_end":118776,"line_start":524,"line_end":524,"column_start":5,"column_end":16}},{"value":"/ });","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":118781,"byte_end":118788,"line_start":525,"line_end":525,"column_start":5,"column_end":12}},{"value":"/ assert_eq!(value_a, Some(22));","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":118793,"byte_end":118827,"line_start":526,"line_end":526,"column_start":5,"column_end":39}},{"value":"/ assert_eq!(value_b, Some(44));","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":118832,"byte_end":118866,"line_start":527,"line_end":527,"column_start":5,"column_end":39}},{"value":"/ assert_eq!(value_c, Some(66));","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":118871,"byte_end":118905,"line_start":528,"line_end":528,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":118910,"byte_end":118917,"line_start":529,"line_end":529,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":118922,"byte_end":118925,"line_start":530,"line_end":530,"column_start":5,"column_end":8}},{"value":"/ # See also","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":118930,"byte_end":118944,"line_start":531,"line_end":531,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":118949,"byte_end":118952,"line_start":532,"line_end":532,"column_start":5,"column_end":8}},{"value":"/ The [`scope` function] has more extensive documentation about","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":118957,"byte_end":119022,"line_start":533,"line_end":533,"column_start":5,"column_end":70}},{"value":"/ task spawning.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":119027,"byte_end":119045,"line_start":534,"line_end":534,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":119050,"byte_end":119053,"line_start":535,"line_end":535,"column_start":5,"column_end":8}},{"value":"/ [`scope` function]: fn.scope.html","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":119058,"byte_end":119095,"line_start":536,"line_end":536,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":692},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":120701,"byte_end":120711,"line_start":578,"line_end":578,"column_start":12,"column_end":22},"name":"spawn_fifo","qualname":"<ScopeFifo>::spawn_fifo","value":"pub fn spawn_fifo<BODY>(&Self, BODY) where BODY: FnOnce(&ScopeFifo) -> () +\nSend + 'scope","parent":null,"children":[],"decl_id":null,"docs":" Spawns a job into the fork-join scope `self`. This job will\n execute sometime before the fork-join scope completes.  The\n job is specified as a closure, and this closure receives its\n own reference to the scope `self` as argument. This can be\n used to inject new jobs into `self`.","sig":null,"attributes":[{"value":"/ Spawns a job into the fork-join scope `self`. This job will","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":120060,"byte_end":120123,"line_start":564,"line_end":564,"column_start":5,"column_end":68}},{"value":"/ execute sometime before the fork-join scope completes.  The","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":120128,"byte_end":120191,"line_start":565,"line_end":565,"column_start":5,"column_end":68}},{"value":"/ job is specified as a closure, and this closure receives its","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":120196,"byte_end":120260,"line_start":566,"line_end":566,"column_start":5,"column_end":69}},{"value":"/ own reference to the scope `self` as argument. This can be","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":120265,"byte_end":120327,"line_start":567,"line_end":567,"column_start":5,"column_end":67}},{"value":"/ used to inject new jobs into `self`.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":120332,"byte_end":120372,"line_start":568,"line_end":568,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":120377,"byte_end":120380,"line_start":569,"line_end":569,"column_start":5,"column_end":8}},{"value":"/ # See also","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":120385,"byte_end":120399,"line_start":570,"line_end":570,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":120404,"byte_end":120407,"line_start":571,"line_end":571,"column_start":5,"column_end":8}},{"value":"/ This method is akin to [`Scope::spawn()`], but with a FIFO","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":120412,"byte_end":120474,"line_start":572,"line_end":572,"column_start":5,"column_end":67}},{"value":"/ priority.  The [`scope_fifo` function] has more details about","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":120479,"byte_end":120544,"line_start":573,"line_end":573,"column_start":5,"column_end":70}},{"value":"/ this distinction.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":120549,"byte_end":120570,"line_start":574,"line_end":574,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":120575,"byte_end":120578,"line_start":575,"line_end":575,"column_start":5,"column_end":8}},{"value":"/ [`Scope::spawn()`]: struct.Scope.html#method.spawn","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":120583,"byte_end":120637,"line_start":576,"line_end":576,"column_start":5,"column_end":59}},{"value":"/ [`scope_fifo` function]: fn.scope_fifo.html","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":120642,"byte_end":120689,"line_start":577,"line_end":577,"column_start":5,"column_end":52}}]},{"kind":"Function","id":{"krate":0,"index":855},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/spawn/mod.rs","byte_start":152857,"byte_end":152862,"line_start":60,"line_end":60,"column_start":8,"column_end":13},"name":"spawn","qualname":"::spawn::spawn","value":"pub fn spawn<F>(F) where F: FnOnce() -> () + Send + 'static","parent":null,"children":[],"decl_id":null,"docs":" Fires off a task into the Rayon threadpool in the \"static\" or\n \"global\" scope.  Just like a standard thread, this task is not\n tied to the current stack frame, and hence it cannot hold any\n references other than those with `'static` lifetime. If you want\n to spawn a task that references stack data, use [the `scope()`\n function][scope] to create a scope.","sig":null,"attributes":[{"value":"/ Fires off a task into the Rayon threadpool in the \"static\" or","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/spawn/mod.rs","byte_start":150701,"byte_end":150766,"line_start":7,"line_end":7,"column_start":1,"column_end":66}},{"value":"/ \"global\" scope.  Just like a standard thread, this task is not","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/spawn/mod.rs","byte_start":150767,"byte_end":150833,"line_start":8,"line_end":8,"column_start":1,"column_end":67}},{"value":"/ tied to the current stack frame, and hence it cannot hold any","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/spawn/mod.rs","byte_start":150834,"byte_end":150899,"line_start":9,"line_end":9,"column_start":1,"column_end":66}},{"value":"/ references other than those with `'static` lifetime. If you want","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/spawn/mod.rs","byte_start":150900,"byte_end":150968,"line_start":10,"line_end":10,"column_start":1,"column_end":69}},{"value":"/ to spawn a task that references stack data, use [the `scope()`","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/spawn/mod.rs","byte_start":150969,"byte_end":151035,"line_start":11,"line_end":11,"column_start":1,"column_end":67}},{"value":"/ function][scope] to create a scope.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/spawn/mod.rs","byte_start":151036,"byte_end":151075,"line_start":12,"line_end":12,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/spawn/mod.rs","byte_start":151076,"byte_end":151079,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ [scope]: fn.scope.html","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/spawn/mod.rs","byte_start":151080,"byte_end":151106,"line_start":14,"line_end":14,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/spawn/mod.rs","byte_start":151107,"byte_end":151110,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ Since tasks spawned with this function cannot hold references into","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/spawn/mod.rs","byte_start":151111,"byte_end":151181,"line_start":16,"line_end":16,"column_start":1,"column_end":71}},{"value":"/ the enclosing stack frame, you almost certainly want to use a","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/spawn/mod.rs","byte_start":151182,"byte_end":151247,"line_start":17,"line_end":17,"column_start":1,"column_end":66}},{"value":"/ `move` closure as their argument (otherwise, the closure will","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/spawn/mod.rs","byte_start":151248,"byte_end":151313,"line_start":18,"line_end":18,"column_start":1,"column_end":66}},{"value":"/ typically hold references to any variables from the enclosing","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/spawn/mod.rs","byte_start":151314,"byte_end":151379,"line_start":19,"line_end":19,"column_start":1,"column_end":66}},{"value":"/ function that you happen to use).","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/spawn/mod.rs","byte_start":151380,"byte_end":151417,"line_start":20,"line_end":20,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/spawn/mod.rs","byte_start":151418,"byte_end":151421,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ This API assumes that the closure is executed purely for its","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/spawn/mod.rs","byte_start":151422,"byte_end":151486,"line_start":22,"line_end":22,"column_start":1,"column_end":65}},{"value":"/ side-effects (i.e., it might send messages, modify data protected","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/spawn/mod.rs","byte_start":151487,"byte_end":151556,"line_start":23,"line_end":23,"column_start":1,"column_end":70}},{"value":"/ by a mutex, or some such thing).","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/spawn/mod.rs","byte_start":151557,"byte_end":151593,"line_start":24,"line_end":24,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/spawn/mod.rs","byte_start":151594,"byte_end":151597,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ There is no guaranteed order of execution for spawns, given that","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/spawn/mod.rs","byte_start":151598,"byte_end":151666,"line_start":26,"line_end":26,"column_start":1,"column_end":69}},{"value":"/ other threads may steal tasks at any time. However, they are","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/spawn/mod.rs","byte_start":151667,"byte_end":151731,"line_start":27,"line_end":27,"column_start":1,"column_end":65}},{"value":"/ generally prioritized in a LIFO order on the thread from which","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/spawn/mod.rs","byte_start":151732,"byte_end":151798,"line_start":28,"line_end":28,"column_start":1,"column_end":67}},{"value":"/ they were spawned. Other threads always steal from the other end of","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/spawn/mod.rs","byte_start":151799,"byte_end":151870,"line_start":29,"line_end":29,"column_start":1,"column_end":72}},{"value":"/ the deque, like FIFO order.  The idea is that \"recent\" tasks are","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/spawn/mod.rs","byte_start":151871,"byte_end":151939,"line_start":30,"line_end":30,"column_start":1,"column_end":69}},{"value":"/ most likely to be fresh in the local CPU's cache, while other","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/spawn/mod.rs","byte_start":151940,"byte_end":152005,"line_start":31,"line_end":31,"column_start":1,"column_end":66}},{"value":"/ threads can steal older \"stale\" tasks.  For an alternate approach,","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/spawn/mod.rs","byte_start":152006,"byte_end":152076,"line_start":32,"line_end":32,"column_start":1,"column_end":71}},{"value":"/ consider [`spawn_fifo()`] instead.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/spawn/mod.rs","byte_start":152077,"byte_end":152115,"line_start":33,"line_end":33,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/spawn/mod.rs","byte_start":152116,"byte_end":152119,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ [`spawn_fifo()`]: fn.spawn_fifo.html","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/spawn/mod.rs","byte_start":152120,"byte_end":152160,"line_start":35,"line_end":35,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/spawn/mod.rs","byte_start":152161,"byte_end":152164,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ # Panic handling","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/spawn/mod.rs","byte_start":152165,"byte_end":152185,"line_start":37,"line_end":37,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/spawn/mod.rs","byte_start":152186,"byte_end":152189,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ If this closure should panic, the resulting panic will be","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/spawn/mod.rs","byte_start":152190,"byte_end":152251,"line_start":39,"line_end":39,"column_start":1,"column_end":62}},{"value":"/ propagated to the panic handler registered in the `ThreadPoolBuilder`,","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/spawn/mod.rs","byte_start":152252,"byte_end":152326,"line_start":40,"line_end":40,"column_start":1,"column_end":75}},{"value":"/ if any.  See [`ThreadPoolBuilder::panic_handler()`][ph] for more","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/spawn/mod.rs","byte_start":152327,"byte_end":152395,"line_start":41,"line_end":41,"column_start":1,"column_end":69}},{"value":"/ details.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/spawn/mod.rs","byte_start":152396,"byte_end":152408,"line_start":42,"line_end":42,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/spawn/mod.rs","byte_start":152409,"byte_end":152412,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ [ph]: struct.ThreadPoolBuilder.html#method.panic_handler","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/spawn/mod.rs","byte_start":152413,"byte_end":152473,"line_start":44,"line_end":44,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/spawn/mod.rs","byte_start":152474,"byte_end":152477,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/spawn/mod.rs","byte_start":152478,"byte_end":152492,"line_start":46,"line_end":46,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/spawn/mod.rs","byte_start":152493,"byte_end":152496,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ This code creates a Rayon task that increments a global counter.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/spawn/mod.rs","byte_start":152497,"byte_end":152565,"line_start":48,"line_end":48,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/spawn/mod.rs","byte_start":152566,"byte_end":152569,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/spawn/mod.rs","byte_start":152570,"byte_end":152581,"line_start":50,"line_end":50,"column_start":1,"column_end":12}},{"value":"/ # use rayon_core as rayon;","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/spawn/mod.rs","byte_start":152582,"byte_end":152612,"line_start":51,"line_end":51,"column_start":1,"column_end":31}},{"value":"/ use std::sync::atomic::{AtomicUsize, Ordering, ATOMIC_USIZE_INIT};","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/spawn/mod.rs","byte_start":152613,"byte_end":152683,"line_start":52,"line_end":52,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/spawn/mod.rs","byte_start":152684,"byte_end":152687,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ static GLOBAL_COUNTER: AtomicUsize = ATOMIC_USIZE_INIT;","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/spawn/mod.rs","byte_start":152688,"byte_end":152747,"line_start":54,"line_end":54,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/spawn/mod.rs","byte_start":152748,"byte_end":152751,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ rayon::spawn(move || {","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/spawn/mod.rs","byte_start":152752,"byte_end":152778,"line_start":56,"line_end":56,"column_start":1,"column_end":27}},{"value":"/     GLOBAL_COUNTER.fetch_add(1, Ordering::SeqCst);","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/spawn/mod.rs","byte_start":152779,"byte_end":152833,"line_start":57,"line_end":57,"column_start":1,"column_end":55}},{"value":"/ });","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/spawn/mod.rs","byte_start":152834,"byte_end":152841,"line_start":58,"line_end":58,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/spawn/mod.rs","byte_start":152842,"byte_end":152849,"line_start":59,"line_end":59,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":862},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/spawn/mod.rs","byte_start":155715,"byte_end":155725,"line_start":135,"line_end":135,"column_start":8,"column_end":18},"name":"spawn_fifo","qualname":"::spawn::spawn_fifo","value":"pub fn spawn_fifo<F>(F) where F: FnOnce() -> () + Send + 'static","parent":null,"children":[],"decl_id":null,"docs":" Fires off a task into the Rayon threadpool in the \"static\" or\n \"global\" scope.  Just like a standard thread, this task is not\n tied to the current stack frame, and hence it cannot hold any\n references other than those with `'static` lifetime. If you want\n to spawn a task that references stack data, use [the `scope_fifo()`\n function](fn.scope_fifo.html) to create a scope.","sig":null,"attributes":[{"value":"/ Fires off a task into the Rayon threadpool in the \"static\" or","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/spawn/mod.rs","byte_start":154437,"byte_end":154502,"line_start":109,"line_end":109,"column_start":1,"column_end":66}},{"value":"/ \"global\" scope.  Just like a standard thread, this task is not","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/spawn/mod.rs","byte_start":154503,"byte_end":154569,"line_start":110,"line_end":110,"column_start":1,"column_end":67}},{"value":"/ tied to the current stack frame, and hence it cannot hold any","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/spawn/mod.rs","byte_start":154570,"byte_end":154635,"line_start":111,"line_end":111,"column_start":1,"column_end":66}},{"value":"/ references other than those with `'static` lifetime. If you want","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/spawn/mod.rs","byte_start":154636,"byte_end":154704,"line_start":112,"line_end":112,"column_start":1,"column_end":69}},{"value":"/ to spawn a task that references stack data, use [the `scope_fifo()`","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/spawn/mod.rs","byte_start":154705,"byte_end":154776,"line_start":113,"line_end":113,"column_start":1,"column_end":72}},{"value":"/ function](fn.scope_fifo.html) to create a scope.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/spawn/mod.rs","byte_start":154777,"byte_end":154829,"line_start":114,"line_end":114,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/spawn/mod.rs","byte_start":154830,"byte_end":154833,"line_start":115,"line_end":115,"column_start":1,"column_end":4}},{"value":"/ The behavior is essentially the same as [the `spawn`","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/spawn/mod.rs","byte_start":154834,"byte_end":154890,"line_start":116,"line_end":116,"column_start":1,"column_end":57}},{"value":"/ function](fn.spawn.html), except that calls from the same thread","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/spawn/mod.rs","byte_start":154891,"byte_end":154959,"line_start":117,"line_end":117,"column_start":1,"column_end":69}},{"value":"/ will be prioritized in FIFO order. This is similar to the now-","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/spawn/mod.rs","byte_start":154960,"byte_end":155026,"line_start":118,"line_end":118,"column_start":1,"column_end":67}},{"value":"/ deprecated [`breadth_first`] option, except the effect is isolated","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/spawn/mod.rs","byte_start":155027,"byte_end":155097,"line_start":119,"line_end":119,"column_start":1,"column_end":71}},{"value":"/ to relative `spawn_fifo` calls, not all threadpool tasks.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/spawn/mod.rs","byte_start":155098,"byte_end":155159,"line_start":120,"line_end":120,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/spawn/mod.rs","byte_start":155160,"byte_end":155163,"line_start":121,"line_end":121,"column_start":1,"column_end":4}},{"value":"/ For more details on this design, see Rayon [RFC #1].","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/spawn/mod.rs","byte_start":155164,"byte_end":155220,"line_start":122,"line_end":122,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/spawn/mod.rs","byte_start":155221,"byte_end":155224,"line_start":123,"line_end":123,"column_start":1,"column_end":4}},{"value":"/ [`breadth_first`]: struct.ThreadPoolBuilder.html#method.breadth_first","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/spawn/mod.rs","byte_start":155225,"byte_end":155298,"line_start":124,"line_end":124,"column_start":1,"column_end":74}},{"value":"/ [RFC #1]: https://github.com/rayon-rs/rfcs/blob/master/accepted/rfc0001-scope-scheduling.md","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/spawn/mod.rs","byte_start":155299,"byte_end":155394,"line_start":125,"line_end":125,"column_start":1,"column_end":96}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/spawn/mod.rs","byte_start":155395,"byte_end":155398,"line_start":126,"line_end":126,"column_start":1,"column_end":4}},{"value":"/ # Panic handling","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/spawn/mod.rs","byte_start":155399,"byte_end":155419,"line_start":127,"line_end":127,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/spawn/mod.rs","byte_start":155420,"byte_end":155423,"line_start":128,"line_end":128,"column_start":1,"column_end":4}},{"value":"/ If this closure should panic, the resulting panic will be","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/spawn/mod.rs","byte_start":155424,"byte_end":155485,"line_start":129,"line_end":129,"column_start":1,"column_end":62}},{"value":"/ propagated to the panic handler registered in the `ThreadPoolBuilder`,","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/spawn/mod.rs","byte_start":155486,"byte_end":155560,"line_start":130,"line_end":130,"column_start":1,"column_end":75}},{"value":"/ if any.  See [`ThreadPoolBuilder::panic_handler()`][ph] for more","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/spawn/mod.rs","byte_start":155561,"byte_end":155629,"line_start":131,"line_end":131,"column_start":1,"column_end":69}},{"value":"/ details.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/spawn/mod.rs","byte_start":155630,"byte_end":155642,"line_start":132,"line_end":132,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/spawn/mod.rs","byte_start":155643,"byte_end":155646,"line_start":133,"line_end":133,"column_start":1,"column_end":4}},{"value":"/ [ph]: struct.ThreadPoolBuilder.html#method.panic_handler","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/spawn/mod.rs","byte_start":155647,"byte_end":155707,"line_start":134,"line_end":134,"column_start":1,"column_end":61}}]},{"kind":"Struct","id":{"krate":0,"index":923},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/thread_pool/mod.rs","byte_start":158932,"byte_end":158942,"line_start":52,"line_end":52,"column_start":12,"column_end":22},"name":"ThreadPool","qualname":"::thread_pool::ThreadPool","value":"ThreadPool {  }","parent":null,"children":[{"krate":0,"index":924}],"decl_id":null,"docs":" Represents a user created [thread-pool].","sig":null,"attributes":[{"value":"/ Represents a user created [thread-pool].","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/thread_pool/mod.rs","byte_start":157514,"byte_end":157558,"line_start":21,"line_end":21,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/thread_pool/mod.rs","byte_start":157559,"byte_end":157562,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ Use a [`ThreadPoolBuilder`] to specify the number and/or names of threads","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/thread_pool/mod.rs","byte_start":157563,"byte_end":157640,"line_start":23,"line_end":23,"column_start":1,"column_end":78}},{"value":"/ in the pool. After calling [`ThreadPoolBuilder::build()`], you can then","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/thread_pool/mod.rs","byte_start":157641,"byte_end":157716,"line_start":24,"line_end":24,"column_start":1,"column_end":76}},{"value":"/ execute functions explicitly within this [`ThreadPool`] using","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/thread_pool/mod.rs","byte_start":157717,"byte_end":157782,"line_start":25,"line_end":25,"column_start":1,"column_end":66}},{"value":"/ [`ThreadPool::install()`]. By contrast, top level rayon functions","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/thread_pool/mod.rs","byte_start":157783,"byte_end":157852,"line_start":26,"line_end":26,"column_start":1,"column_end":70}},{"value":"/ (like `join()`) will execute implicitly within the current thread-pool.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/thread_pool/mod.rs","byte_start":157853,"byte_end":157928,"line_start":27,"line_end":27,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/thread_pool/mod.rs","byte_start":157929,"byte_end":157932,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/thread_pool/mod.rs","byte_start":157933,"byte_end":157936,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ ## Creating a ThreadPool","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/thread_pool/mod.rs","byte_start":157937,"byte_end":157965,"line_start":30,"line_end":30,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/thread_pool/mod.rs","byte_start":157966,"byte_end":157969,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/thread_pool/mod.rs","byte_start":157970,"byte_end":157981,"line_start":32,"line_end":32,"column_start":1,"column_end":12}},{"value":"/ # use rayon_core as rayon;","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/thread_pool/mod.rs","byte_start":157982,"byte_end":158012,"line_start":33,"line_end":33,"column_start":1,"column_end":31}},{"value":"/ let pool = rayon::ThreadPoolBuilder::new().num_threads(8).build().unwrap();","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/thread_pool/mod.rs","byte_start":158013,"byte_end":158092,"line_start":34,"line_end":34,"column_start":1,"column_end":80}},{"value":"/ ```","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/thread_pool/mod.rs","byte_start":158093,"byte_end":158100,"line_start":35,"line_end":35,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/thread_pool/mod.rs","byte_start":158101,"byte_end":158104,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ [`install()`][`ThreadPool::install()`] executes a closure in one of the `ThreadPool`'s","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/thread_pool/mod.rs","byte_start":158105,"byte_end":158195,"line_start":37,"line_end":37,"column_start":1,"column_end":91}},{"value":"/ threads. In addition, any other rayon operations called inside of `install()` will also","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/thread_pool/mod.rs","byte_start":158196,"byte_end":158287,"line_start":38,"line_end":38,"column_start":1,"column_end":92}},{"value":"/ execute in the context of the `ThreadPool`.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/thread_pool/mod.rs","byte_start":158288,"byte_end":158335,"line_start":39,"line_end":39,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/thread_pool/mod.rs","byte_start":158336,"byte_end":158339,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ When the `ThreadPool` is dropped, that's a signal for the threads it manages to terminate,","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/thread_pool/mod.rs","byte_start":158340,"byte_end":158434,"line_start":41,"line_end":41,"column_start":1,"column_end":95}},{"value":"/ they will complete executing any remaining work that you have spawned, and automatically","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/thread_pool/mod.rs","byte_start":158435,"byte_end":158527,"line_start":42,"line_end":42,"column_start":1,"column_end":93}},{"value":"/ terminate.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/thread_pool/mod.rs","byte_start":158528,"byte_end":158542,"line_start":43,"line_end":43,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/thread_pool/mod.rs","byte_start":158543,"byte_end":158546,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/thread_pool/mod.rs","byte_start":158547,"byte_end":158550,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ [thread-pool]: https://en.wikipedia.org/wiki/Thread_pool","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/thread_pool/mod.rs","byte_start":158551,"byte_end":158611,"line_start":46,"line_end":46,"column_start":1,"column_end":61}},{"value":"/ [`ThreadPool`]: struct.ThreadPool.html","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/thread_pool/mod.rs","byte_start":158612,"byte_end":158654,"line_start":47,"line_end":47,"column_start":1,"column_end":43}},{"value":"/ [`ThreadPool::new()`]: struct.ThreadPool.html#method.new","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/thread_pool/mod.rs","byte_start":158655,"byte_end":158715,"line_start":48,"line_end":48,"column_start":1,"column_end":61}},{"value":"/ [`ThreadPoolBuilder`]: struct.ThreadPoolBuilder.html","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/thread_pool/mod.rs","byte_start":158716,"byte_end":158772,"line_start":49,"line_end":49,"column_start":1,"column_end":57}},{"value":"/ [`ThreadPoolBuilder::build()`]: struct.ThreadPoolBuilder.html#method.build","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/thread_pool/mod.rs","byte_start":158773,"byte_end":158851,"line_start":50,"line_end":50,"column_start":1,"column_end":79}},{"value":"/ [`ThreadPool::install()`]: struct.ThreadPool.html#method.install","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/thread_pool/mod.rs","byte_start":158852,"byte_end":158920,"line_start":51,"line_end":51,"column_start":1,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":926},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/thread_pool/mod.rs","byte_start":159149,"byte_end":159152,"line_start":60,"line_end":60,"column_start":12,"column_end":15},"name":"new","qualname":"<ThreadPool>::new","value":"pub fn new(Configuration) -> Result<ThreadPool, Box<dyn Error>>","parent":null,"children":[],"decl_id":null,"docs":" Deprecated in favor of `ThreadPoolBuilder::build`.\n","sig":null,"attributes":[{"value":"deprecated(note = \"Use `ThreadPoolBuilder::build`\")","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/thread_pool/mod.rs","byte_start":158999,"byte_end":159053,"line_start":57,"line_end":57,"column_start":5,"column_end":59}},{"value":"allow(deprecated)","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/thread_pool/mod.rs","byte_start":159058,"byte_end":159078,"line_start":58,"line_end":58,"column_start":5,"column_end":25}},{"value":"/ Deprecated in favor of `ThreadPoolBuilder::build`.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/thread_pool/mod.rs","byte_start":159083,"byte_end":159137,"line_start":59,"line_end":59,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":929},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/thread_pool/mod.rs","byte_start":160611,"byte_end":160618,"line_start":106,"line_end":106,"column_start":12,"column_end":19},"name":"install","qualname":"<ThreadPool>::install","value":"pub fn install<OP, R>(&Self, OP) -> R where OP: FnOnce() -> R + Send, R: Send","parent":null,"children":[],"decl_id":null,"docs":" Executes `op` within the threadpool. Any attempts to use\n `join`, `scope`, or parallel iterators will then operate\n within that threadpool.","sig":null,"attributes":[{"value":"/ Executes `op` within the threadpool. Any attempts to use","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/thread_pool/mod.rs","byte_start":159551,"byte_end":159611,"line_start":74,"line_end":74,"column_start":5,"column_end":65}},{"value":"/ `join`, `scope`, or parallel iterators will then operate","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/thread_pool/mod.rs","byte_start":159616,"byte_end":159676,"line_start":75,"line_end":75,"column_start":5,"column_end":65}},{"value":"/ within that threadpool.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/thread_pool/mod.rs","byte_start":159681,"byte_end":159708,"line_start":76,"line_end":76,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/thread_pool/mod.rs","byte_start":159713,"byte_end":159716,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ # Warning: thread-local data","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/thread_pool/mod.rs","byte_start":159721,"byte_end":159753,"line_start":78,"line_end":78,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/thread_pool/mod.rs","byte_start":159758,"byte_end":159761,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"/ Because `op` is executing within the Rayon thread-pool,","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/thread_pool/mod.rs","byte_start":159766,"byte_end":159825,"line_start":80,"line_end":80,"column_start":5,"column_end":64}},{"value":"/ thread-local data from the current thread will not be","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/thread_pool/mod.rs","byte_start":159830,"byte_end":159887,"line_start":81,"line_end":81,"column_start":5,"column_end":62}},{"value":"/ accessible.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/thread_pool/mod.rs","byte_start":159892,"byte_end":159907,"line_start":82,"line_end":82,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/thread_pool/mod.rs","byte_start":159912,"byte_end":159915,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/thread_pool/mod.rs","byte_start":159920,"byte_end":159932,"line_start":84,"line_end":84,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/thread_pool/mod.rs","byte_start":159937,"byte_end":159940,"line_start":85,"line_end":85,"column_start":5,"column_end":8}},{"value":"/ If `op` should panic, that panic will be propagated.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/thread_pool/mod.rs","byte_start":159945,"byte_end":160001,"line_start":86,"line_end":86,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/thread_pool/mod.rs","byte_start":160006,"byte_end":160009,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ ## Using `install()`","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/thread_pool/mod.rs","byte_start":160014,"byte_end":160038,"line_start":88,"line_end":88,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/thread_pool/mod.rs","byte_start":160043,"byte_end":160046,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/thread_pool/mod.rs","byte_start":160051,"byte_end":160062,"line_start":90,"line_end":90,"column_start":5,"column_end":16}},{"value":"/    # use rayon_core as rayon;","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/thread_pool/mod.rs","byte_start":160067,"byte_end":160100,"line_start":91,"line_end":91,"column_start":5,"column_end":38}},{"value":"/    fn main() {","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/thread_pool/mod.rs","byte_start":160105,"byte_end":160123,"line_start":92,"line_end":92,"column_start":5,"column_end":23}},{"value":"/         let pool = rayon::ThreadPoolBuilder::new().num_threads(8).build().unwrap();","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/thread_pool/mod.rs","byte_start":160128,"byte_end":160215,"line_start":93,"line_end":93,"column_start":5,"column_end":92}},{"value":"/         let n = pool.install(|| fib(20));","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/thread_pool/mod.rs","byte_start":160220,"byte_end":160265,"line_start":94,"line_end":94,"column_start":5,"column_end":50}},{"value":"/         println!(\"{}\", n);","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/thread_pool/mod.rs","byte_start":160270,"byte_end":160300,"line_start":95,"line_end":95,"column_start":5,"column_end":35}},{"value":"/    }","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/thread_pool/mod.rs","byte_start":160305,"byte_end":160313,"line_start":96,"line_end":96,"column_start":5,"column_end":13}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/thread_pool/mod.rs","byte_start":160318,"byte_end":160321,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/    fn fib(n: usize) -> usize {","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/thread_pool/mod.rs","byte_start":160326,"byte_end":160360,"line_start":98,"line_end":98,"column_start":5,"column_end":39}},{"value":"/         if n == 0 || n == 1 {","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/thread_pool/mod.rs","byte_start":160365,"byte_end":160398,"line_start":99,"line_end":99,"column_start":5,"column_end":38}},{"value":"/             return n;","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/thread_pool/mod.rs","byte_start":160403,"byte_end":160428,"line_start":100,"line_end":100,"column_start":5,"column_end":30}},{"value":"/         }","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/thread_pool/mod.rs","byte_start":160433,"byte_end":160446,"line_start":101,"line_end":101,"column_start":5,"column_end":18}},{"value":"/         let (a, b) = rayon::join(|| fib(n - 1), || fib(n - 2)); // runs inside of `pool`","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/thread_pool/mod.rs","byte_start":160451,"byte_end":160543,"line_start":102,"line_end":102,"column_start":5,"column_end":97}},{"value":"/         return a + b;","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/thread_pool/mod.rs","byte_start":160548,"byte_end":160573,"line_start":103,"line_end":103,"column_start":5,"column_end":30}},{"value":"/     }","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/thread_pool/mod.rs","byte_start":160578,"byte_end":160587,"line_start":104,"line_end":104,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/thread_pool/mod.rs","byte_start":160592,"byte_end":160599,"line_start":105,"line_end":105,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":933},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/thread_pool/mod.rs","byte_start":161296,"byte_end":161315,"line_start":126,"line_end":126,"column_start":12,"column_end":31},"name":"current_num_threads","qualname":"<ThreadPool>::current_num_threads","value":"pub fn current_num_threads(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the (current) number of threads in the thread pool.","sig":null,"attributes":[{"value":"/ Returns the (current) number of threads in the thread pool.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/thread_pool/mod.rs","byte_start":160769,"byte_end":160832,"line_start":114,"line_end":114,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/thread_pool/mod.rs","byte_start":160837,"byte_end":160840,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ # Future compatibility note","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/thread_pool/mod.rs","byte_start":160845,"byte_end":160876,"line_start":116,"line_end":116,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/thread_pool/mod.rs","byte_start":160881,"byte_end":160884,"line_start":117,"line_end":117,"column_start":5,"column_end":8}},{"value":"/ Note that unless this thread-pool was created with a","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/thread_pool/mod.rs","byte_start":160889,"byte_end":160945,"line_start":118,"line_end":118,"column_start":5,"column_end":61}},{"value":"/ [`ThreadPoolBuilder`] that specifies the number of threads,","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/thread_pool/mod.rs","byte_start":160950,"byte_end":161013,"line_start":119,"line_end":119,"column_start":5,"column_end":68}},{"value":"/ then this number may vary over time in future versions (see [the","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/thread_pool/mod.rs","byte_start":161018,"byte_end":161086,"line_start":120,"line_end":120,"column_start":5,"column_end":73}},{"value":"/ `num_threads()` method for details][snt]).","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/thread_pool/mod.rs","byte_start":161091,"byte_end":161137,"line_start":121,"line_end":121,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/thread_pool/mod.rs","byte_start":161142,"byte_end":161145,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ [snt]: struct.ThreadPoolBuilder.html#method.num_threads","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/thread_pool/mod.rs","byte_start":161150,"byte_end":161209,"line_start":123,"line_end":123,"column_start":5,"column_end":64}},{"value":"/ [`ThreadPoolBuilder`]: struct.ThreadPoolBuilder.html","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/thread_pool/mod.rs","byte_start":161214,"byte_end":161270,"line_start":124,"line_end":124,"column_start":5,"column_end":61}},{"value":"inline","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/thread_pool/mod.rs","byte_start":161275,"byte_end":161284,"line_start":125,"line_end":125,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":934},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/thread_pool/mod.rs","byte_start":162375,"byte_end":162395,"line_start":151,"line_end":151,"column_start":12,"column_end":32},"name":"current_thread_index","qualname":"<ThreadPool>::current_thread_index","value":"pub fn current_thread_index(&Self) -> Option<usize>","parent":null,"children":[],"decl_id":null,"docs":" If called from a Rayon worker thread in this thread-pool,\n returns the index of that thread; if not called from a Rayon\n thread, or called from a Rayon thread that belongs to a\n different thread-pool, returns `None`.","sig":null,"attributes":[{"value":"/ If called from a Rayon worker thread in this thread-pool,","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/thread_pool/mod.rs","byte_start":161381,"byte_end":161442,"line_start":130,"line_end":130,"column_start":5,"column_end":66}},{"value":"/ returns the index of that thread; if not called from a Rayon","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/thread_pool/mod.rs","byte_start":161447,"byte_end":161511,"line_start":131,"line_end":131,"column_start":5,"column_end":69}},{"value":"/ thread, or called from a Rayon thread that belongs to a","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/thread_pool/mod.rs","byte_start":161516,"byte_end":161575,"line_start":132,"line_end":132,"column_start":5,"column_end":64}},{"value":"/ different thread-pool, returns `None`.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/thread_pool/mod.rs","byte_start":161580,"byte_end":161622,"line_start":133,"line_end":133,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/thread_pool/mod.rs","byte_start":161627,"byte_end":161630,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ The index for a given thread will not change over the thread's","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/thread_pool/mod.rs","byte_start":161635,"byte_end":161701,"line_start":135,"line_end":135,"column_start":5,"column_end":71}},{"value":"/ lifetime. However, multiple threads may share the same index if","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/thread_pool/mod.rs","byte_start":161706,"byte_end":161773,"line_start":136,"line_end":136,"column_start":5,"column_end":72}},{"value":"/ they are in distinct thread-pools.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/thread_pool/mod.rs","byte_start":161778,"byte_end":161816,"line_start":137,"line_end":137,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/thread_pool/mod.rs","byte_start":161821,"byte_end":161824,"line_start":138,"line_end":138,"column_start":5,"column_end":8}},{"value":"/ # Future compatibility note","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/thread_pool/mod.rs","byte_start":161829,"byte_end":161860,"line_start":139,"line_end":139,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/thread_pool/mod.rs","byte_start":161865,"byte_end":161868,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ Currently, every thread-pool (including the global","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/thread_pool/mod.rs","byte_start":161873,"byte_end":161927,"line_start":141,"line_end":141,"column_start":5,"column_end":59}},{"value":"/ thread-pool) has a fixed number of threads, but this may","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/thread_pool/mod.rs","byte_start":161932,"byte_end":161992,"line_start":142,"line_end":142,"column_start":5,"column_end":65}},{"value":"/ change in future Rayon versions (see [the `num_threads()` method","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/thread_pool/mod.rs","byte_start":161997,"byte_end":162065,"line_start":143,"line_end":143,"column_start":5,"column_end":73}},{"value":"/ for details][snt]). In that case, the index for a","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/thread_pool/mod.rs","byte_start":162070,"byte_end":162123,"line_start":144,"line_end":144,"column_start":5,"column_end":58}},{"value":"/ thread would not change during its lifetime, but thread","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/thread_pool/mod.rs","byte_start":162128,"byte_end":162187,"line_start":145,"line_end":145,"column_start":5,"column_end":64}},{"value":"/ indices may wind up being reused if threads are terminated and","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/thread_pool/mod.rs","byte_start":162192,"byte_end":162258,"line_start":146,"line_end":146,"column_start":5,"column_end":71}},{"value":"/ restarted.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/thread_pool/mod.rs","byte_start":162263,"byte_end":162277,"line_start":147,"line_end":147,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/thread_pool/mod.rs","byte_start":162282,"byte_end":162285,"line_start":148,"line_end":148,"column_start":5,"column_end":8}},{"value":"/ [snt]: struct.ThreadPoolBuilder.html#method.num_threads","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/thread_pool/mod.rs","byte_start":162290,"byte_end":162349,"line_start":149,"line_end":149,"column_start":5,"column_end":64}},{"value":"inline","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/thread_pool/mod.rs","byte_start":162354,"byte_end":162363,"line_start":150,"line_end":150,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":935},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/thread_pool/mod.rs","byte_start":163763,"byte_end":163795,"line_start":178,"line_end":178,"column_start":12,"column_end":44},"name":"current_thread_has_pending_tasks","qualname":"<ThreadPool>::current_thread_has_pending_tasks","value":"pub fn current_thread_has_pending_tasks(&Self) -> Option<bool>","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the current worker thread currently has \"local\n tasks\" pending. This can be useful as part of a heuristic for\n deciding whether to spawn a new task or execute code on the\n current thread, particularly in breadth-first\n schedulers. However, keep in mind that this is an inherently\n racy check, as other worker threads may be actively \"stealing\"\n tasks from our local deque.","sig":null,"attributes":[{"value":"/ Returns true if the current worker thread currently has \"local","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/thread_pool/mod.rs","byte_start":162512,"byte_end":162578,"line_start":156,"line_end":156,"column_start":5,"column_end":71}},{"value":"/ tasks\" pending. This can be useful as part of a heuristic for","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/thread_pool/mod.rs","byte_start":162583,"byte_end":162648,"line_start":157,"line_end":157,"column_start":5,"column_end":70}},{"value":"/ deciding whether to spawn a new task or execute code on the","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/thread_pool/mod.rs","byte_start":162653,"byte_end":162716,"line_start":158,"line_end":158,"column_start":5,"column_end":68}},{"value":"/ current thread, particularly in breadth-first","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/thread_pool/mod.rs","byte_start":162721,"byte_end":162770,"line_start":159,"line_end":159,"column_start":5,"column_end":54}},{"value":"/ schedulers. However, keep in mind that this is an inherently","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/thread_pool/mod.rs","byte_start":162775,"byte_end":162839,"line_start":160,"line_end":160,"column_start":5,"column_end":69}},{"value":"/ racy check, as other worker threads may be actively \"stealing\"","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/thread_pool/mod.rs","byte_start":162844,"byte_end":162910,"line_start":161,"line_end":161,"column_start":5,"column_end":71}},{"value":"/ tasks from our local deque.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/thread_pool/mod.rs","byte_start":162915,"byte_end":162946,"line_start":162,"line_end":162,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/thread_pool/mod.rs","byte_start":162951,"byte_end":162954,"line_start":163,"line_end":163,"column_start":5,"column_end":8}},{"value":"/ **Background:** Rayon's uses a [work-stealing] scheduler. The","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/thread_pool/mod.rs","byte_start":162959,"byte_end":163024,"line_start":164,"line_end":164,"column_start":5,"column_end":70}},{"value":"/ key idea is that each thread has its own [deque] of","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/thread_pool/mod.rs","byte_start":163029,"byte_end":163084,"line_start":165,"line_end":165,"column_start":5,"column_end":60}},{"value":"/ tasks. Whenever a new task is spawned -- whether through","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/thread_pool/mod.rs","byte_start":163089,"byte_end":163149,"line_start":166,"line_end":166,"column_start":5,"column_end":65}},{"value":"/ `join()`, `Scope::spawn()`, or some other means -- that new","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/thread_pool/mod.rs","byte_start":163154,"byte_end":163217,"line_start":167,"line_end":167,"column_start":5,"column_end":68}},{"value":"/ task is pushed onto the thread's *local* deque. Worker threads","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/thread_pool/mod.rs","byte_start":163222,"byte_end":163288,"line_start":168,"line_end":168,"column_start":5,"column_end":71}},{"value":"/ have a preference for executing their own tasks; if however","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/thread_pool/mod.rs","byte_start":163293,"byte_end":163356,"line_start":169,"line_end":169,"column_start":5,"column_end":68}},{"value":"/ they run out of tasks, they will go try to \"steal\" tasks from","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/thread_pool/mod.rs","byte_start":163361,"byte_end":163426,"line_start":170,"line_end":170,"column_start":5,"column_end":70}},{"value":"/ other threads. This function therefore has an inherent race","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/thread_pool/mod.rs","byte_start":163431,"byte_end":163494,"line_start":171,"line_end":171,"column_start":5,"column_end":68}},{"value":"/ with other active worker threads, which may be removing items","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/thread_pool/mod.rs","byte_start":163499,"byte_end":163564,"line_start":172,"line_end":172,"column_start":5,"column_end":70}},{"value":"/ from the local deque.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/thread_pool/mod.rs","byte_start":163569,"byte_end":163594,"line_start":173,"line_end":173,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/thread_pool/mod.rs","byte_start":163599,"byte_end":163602,"line_start":174,"line_end":174,"column_start":5,"column_end":8}},{"value":"/ [work-stealing]: https://en.wikipedia.org/wiki/Work_stealing","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/thread_pool/mod.rs","byte_start":163607,"byte_end":163671,"line_start":175,"line_end":175,"column_start":5,"column_end":69}},{"value":"/ [deque]: https://en.wikipedia.org/wiki/Double-ended_queue","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/thread_pool/mod.rs","byte_start":163676,"byte_end":163737,"line_start":176,"line_end":176,"column_start":5,"column_end":66}},{"value":"inline","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/thread_pool/mod.rs","byte_start":163742,"byte_end":163751,"line_start":177,"line_end":177,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":936},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/thread_pool/mod.rs","byte_start":164086,"byte_end":164090,"line_start":186,"line_end":186,"column_start":12,"column_end":16},"name":"join","qualname":"<ThreadPool>::join","value":"pub fn join<A, B, RA, RB>(&Self, A, B) -> (RA, RB) where A: FnOnce() -> RA +\nSend, B: FnOnce() -> RB + Send, RA: Send, RB: Send","parent":null,"children":[],"decl_id":null,"docs":" Execute `oper_a` and `oper_b` in the thread-pool and return\n the results. Equivalent to `self.install(|| join(oper_a,\n oper_b))`.\n","sig":null,"attributes":[{"value":"/ Execute `oper_a` and `oper_b` in the thread-pool and return","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/thread_pool/mod.rs","byte_start":163927,"byte_end":163990,"line_start":183,"line_end":183,"column_start":5,"column_end":68}},{"value":"/ the results. Equivalent to `self.install(|| join(oper_a,","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/thread_pool/mod.rs","byte_start":163995,"byte_end":164055,"line_start":184,"line_end":184,"column_start":5,"column_end":65}},{"value":"/ oper_b))`.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/thread_pool/mod.rs","byte_start":164060,"byte_end":164074,"line_start":185,"line_end":185,"column_start":5,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":942},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/thread_pool/mod.rs","byte_start":164544,"byte_end":164549,"line_start":202,"line_end":202,"column_start":12,"column_end":17},"name":"scope","qualname":"<ThreadPool>::scope","value":"pub fn scope<'scope, OP, R>(&Self, OP) -> R where OP: FnOnce(&Scope) -> R +\nSend, R: Send","parent":null,"children":[],"decl_id":null,"docs":" Creates a scope that executes within this thread-pool.\n Equivalent to `self.install(|| scope(...))`.","sig":null,"attributes":[{"value":"/ Creates a scope that executes within this thread-pool.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/thread_pool/mod.rs","byte_start":164323,"byte_end":164381,"line_start":196,"line_end":196,"column_start":5,"column_end":63}},{"value":"/ Equivalent to `self.install(|| scope(...))`.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/thread_pool/mod.rs","byte_start":164386,"byte_end":164434,"line_start":197,"line_end":197,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/thread_pool/mod.rs","byte_start":164439,"byte_end":164442,"line_start":198,"line_end":198,"column_start":5,"column_end":8}},{"value":"/ See also: [the `scope()` function][scope].","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/thread_pool/mod.rs","byte_start":164447,"byte_end":164493,"line_start":199,"line_end":199,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/thread_pool/mod.rs","byte_start":164498,"byte_end":164501,"line_start":200,"line_end":200,"column_start":5,"column_end":8}},{"value":"/ [scope]: fn.scope.html","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/thread_pool/mod.rs","byte_start":164506,"byte_end":164532,"line_start":201,"line_end":201,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":947},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/thread_pool/mod.rs","byte_start":165034,"byte_end":165044,"line_start":217,"line_end":217,"column_start":12,"column_end":22},"name":"scope_fifo","qualname":"<ThreadPool>::scope_fifo","value":"pub fn scope_fifo<'scope, OP, R>(&Self, OP) -> R where OP: FnOnce(&ScopeFifo)\n-> R + Send, R: Send","parent":null,"children":[],"decl_id":null,"docs":" Creates a scope that executes within this thread-pool.\n Spawns from the same thread are prioritized in relative FIFO order.\n Equivalent to `self.install(|| scope_fifo(...))`.","sig":null,"attributes":[{"value":"/ Creates a scope that executes within this thread-pool.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/thread_pool/mod.rs","byte_start":164712,"byte_end":164770,"line_start":210,"line_end":210,"column_start":5,"column_end":63}},{"value":"/ Spawns from the same thread are prioritized in relative FIFO order.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/thread_pool/mod.rs","byte_start":164775,"byte_end":164846,"line_start":211,"line_end":211,"column_start":5,"column_end":76}},{"value":"/ Equivalent to `self.install(|| scope_fifo(...))`.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/thread_pool/mod.rs","byte_start":164851,"byte_end":164904,"line_start":212,"line_end":212,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/thread_pool/mod.rs","byte_start":164909,"byte_end":164912,"line_start":213,"line_end":213,"column_start":5,"column_end":8}},{"value":"/ See also: [the `scope_fifo()` function][scope_fifo].","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/thread_pool/mod.rs","byte_start":164917,"byte_end":164973,"line_start":214,"line_end":214,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/thread_pool/mod.rs","byte_start":164978,"byte_end":164981,"line_start":215,"line_end":215,"column_start":5,"column_end":8}},{"value":"/ [scope_fifo]: fn.scope_fifo.html","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/thread_pool/mod.rs","byte_start":164986,"byte_end":165022,"line_start":216,"line_end":216,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":952},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/thread_pool/mod.rs","byte_start":165421,"byte_end":165435,"line_start":230,"line_end":230,"column_start":12,"column_end":26},"name":"in_place_scope","qualname":"<ThreadPool>::in_place_scope","value":"pub fn in_place_scope<'scope, OP, R>(&Self, OP) -> R where OP: FnOnce(&Scope)\n-> R","parent":null,"children":[],"decl_id":null,"docs":" Creates a scope that spawns work into this thread-pool.","sig":null,"attributes":[{"value":"/ Creates a scope that spawns work into this thread-pool.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/thread_pool/mod.rs","byte_start":165216,"byte_end":165275,"line_start":225,"line_end":225,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/thread_pool/mod.rs","byte_start":165280,"byte_end":165283,"line_start":226,"line_end":226,"column_start":5,"column_end":8}},{"value":"/ See also: [the `in_place_scope()` function][in_place_scope].","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/thread_pool/mod.rs","byte_start":165288,"byte_end":165352,"line_start":227,"line_end":227,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/thread_pool/mod.rs","byte_start":165357,"byte_end":165360,"line_start":228,"line_end":228,"column_start":5,"column_end":8}},{"value":"/ [in_place_scope]: fn.in_place_scope.html","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/thread_pool/mod.rs","byte_start":165365,"byte_end":165409,"line_start":229,"line_end":229,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":956},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/thread_pool/mod.rs","byte_start":165830,"byte_end":165849,"line_start":242,"line_end":242,"column_start":12,"column_end":31},"name":"in_place_scope_fifo","qualname":"<ThreadPool>::in_place_scope_fifo","value":"pub fn in_place_scope_fifo<'scope, OP, R>(&Self, OP) -> R where\nOP: FnOnce(&ScopeFifo) -> R","parent":null,"children":[],"decl_id":null,"docs":" Creates a scope that spawns work into this thread-pool in FIFO order.","sig":null,"attributes":[{"value":"/ Creates a scope that spawns work into this thread-pool in FIFO order.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/thread_pool/mod.rs","byte_start":165591,"byte_end":165664,"line_start":237,"line_end":237,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/thread_pool/mod.rs","byte_start":165669,"byte_end":165672,"line_start":238,"line_end":238,"column_start":5,"column_end":8}},{"value":"/ See also: [the `in_place_scope_fifo()` function][in_place_scope_fifo].","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/thread_pool/mod.rs","byte_start":165677,"byte_end":165751,"line_start":239,"line_end":239,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/thread_pool/mod.rs","byte_start":165756,"byte_end":165759,"line_start":240,"line_end":240,"column_start":5,"column_end":8}},{"value":"/ [in_place_scope_fifo]: fn.in_place_scope_fifo.html","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/thread_pool/mod.rs","byte_start":165764,"byte_end":165818,"line_start":241,"line_end":241,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":960},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/thread_pool/mod.rs","byte_start":166444,"byte_end":166449,"line_start":257,"line_end":257,"column_start":12,"column_end":17},"name":"spawn","qualname":"<ThreadPool>::spawn","value":"pub fn spawn<OP>(&Self, OP) where OP: FnOnce() -> () + Send + 'static","parent":null,"children":[],"decl_id":null,"docs":" Spawns an asynchronous task in this thread-pool. This task will\n run in the implicit, global scope, which means that it may outlast\n the current stack frame -- therefore, it cannot capture any references\n onto the stack (you will likely need a `move` closure).","sig":null,"attributes":[{"value":"/ Spawns an asynchronous task in this thread-pool. This task will","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/thread_pool/mod.rs","byte_start":166014,"byte_end":166081,"line_start":249,"line_end":249,"column_start":5,"column_end":72}},{"value":"/ run in the implicit, global scope, which means that it may outlast","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/thread_pool/mod.rs","byte_start":166086,"byte_end":166156,"line_start":250,"line_end":250,"column_start":5,"column_end":75}},{"value":"/ the current stack frame -- therefore, it cannot capture any references","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/thread_pool/mod.rs","byte_start":166161,"byte_end":166235,"line_start":251,"line_end":251,"column_start":5,"column_end":79}},{"value":"/ onto the stack (you will likely need a `move` closure).","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/thread_pool/mod.rs","byte_start":166240,"byte_end":166299,"line_start":252,"line_end":252,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/thread_pool/mod.rs","byte_start":166304,"byte_end":166307,"line_start":253,"line_end":253,"column_start":5,"column_end":8}},{"value":"/ See also: [the `spawn()` function defined on scopes][spawn].","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/thread_pool/mod.rs","byte_start":166312,"byte_end":166376,"line_start":254,"line_end":254,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/thread_pool/mod.rs","byte_start":166381,"byte_end":166384,"line_start":255,"line_end":255,"column_start":5,"column_end":8}},{"value":"/ [spawn]: struct.Scope.html#method.spawn","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/thread_pool/mod.rs","byte_start":166389,"byte_end":166432,"line_start":256,"line_end":256,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":962},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/thread_pool/mod.rs","byte_start":167106,"byte_end":167116,"line_start":273,"line_end":273,"column_start":12,"column_end":22},"name":"spawn_fifo","qualname":"<ThreadPool>::spawn_fifo","value":"pub fn spawn_fifo<OP>(&Self, OP) where OP: FnOnce() -> () + Send + 'static","parent":null,"children":[],"decl_id":null,"docs":" Spawns an asynchronous task in this thread-pool. This task will\n run in the implicit, global scope, which means that it may outlast\n the current stack frame -- therefore, it cannot capture any references\n onto the stack (you will likely need a `move` closure).","sig":null,"attributes":[{"value":"/ Spawns an asynchronous task in this thread-pool. This task will","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/thread_pool/mod.rs","byte_start":166652,"byte_end":166719,"line_start":265,"line_end":265,"column_start":5,"column_end":72}},{"value":"/ run in the implicit, global scope, which means that it may outlast","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/thread_pool/mod.rs","byte_start":166724,"byte_end":166794,"line_start":266,"line_end":266,"column_start":5,"column_end":75}},{"value":"/ the current stack frame -- therefore, it cannot capture any references","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/thread_pool/mod.rs","byte_start":166799,"byte_end":166873,"line_start":267,"line_end":267,"column_start":5,"column_end":79}},{"value":"/ onto the stack (you will likely need a `move` closure).","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/thread_pool/mod.rs","byte_start":166878,"byte_end":166937,"line_start":268,"line_end":268,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/thread_pool/mod.rs","byte_start":166942,"byte_end":166945,"line_start":269,"line_end":269,"column_start":5,"column_end":8}},{"value":"/ See also: [the `spawn_fifo()` function defined on scopes][spawn_fifo].","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/thread_pool/mod.rs","byte_start":166950,"byte_end":167024,"line_start":270,"line_end":270,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/thread_pool/mod.rs","byte_start":167029,"byte_end":167032,"line_start":271,"line_end":271,"column_start":5,"column_end":8}},{"value":"/ [spawn_fifo]: struct.ScopeFifo.html#method.spawn_fifo","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/thread_pool/mod.rs","byte_start":167037,"byte_end":167094,"line_start":272,"line_end":272,"column_start":5,"column_end":62}}]},{"kind":"Function","id":{"krate":0,"index":968},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/thread_pool/mod.rs","byte_start":168667,"byte_end":168687,"line_start":321,"line_end":321,"column_start":8,"column_end":28},"name":"current_thread_index","qualname":"::thread_pool::current_thread_index","value":"pub fn current_thread_index() -> Option<usize>","parent":null,"children":[],"decl_id":null,"docs":" If called from a Rayon worker thread, returns the index of that\n thread within its current pool; if not called from a Rayon thread,\n returns `None`.","sig":null,"attributes":[{"value":"/ If called from a Rayon worker thread, returns the index of that","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/thread_pool/mod.rs","byte_start":167695,"byte_end":167762,"line_start":297,"line_end":297,"column_start":1,"column_end":68}},{"value":"/ thread within its current pool; if not called from a Rayon thread,","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/thread_pool/mod.rs","byte_start":167763,"byte_end":167833,"line_start":298,"line_end":298,"column_start":1,"column_end":71}},{"value":"/ returns `None`.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/thread_pool/mod.rs","byte_start":167834,"byte_end":167853,"line_start":299,"line_end":299,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/thread_pool/mod.rs","byte_start":167854,"byte_end":167857,"line_start":300,"line_end":300,"column_start":1,"column_end":4}},{"value":"/ The index for a given thread will not change over the thread's","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/thread_pool/mod.rs","byte_start":167858,"byte_end":167924,"line_start":301,"line_end":301,"column_start":1,"column_end":67}},{"value":"/ lifetime. However, multiple threads may share the same index if","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/thread_pool/mod.rs","byte_start":167925,"byte_end":167992,"line_start":302,"line_end":302,"column_start":1,"column_end":68}},{"value":"/ they are in distinct thread-pools.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/thread_pool/mod.rs","byte_start":167993,"byte_end":168031,"line_start":303,"line_end":303,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/thread_pool/mod.rs","byte_start":168032,"byte_end":168035,"line_start":304,"line_end":304,"column_start":1,"column_end":4}},{"value":"/ See also: [the `ThreadPool::current_thread_index()` method].","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/thread_pool/mod.rs","byte_start":168036,"byte_end":168100,"line_start":305,"line_end":305,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/thread_pool/mod.rs","byte_start":168101,"byte_end":168104,"line_start":306,"line_end":306,"column_start":1,"column_end":4}},{"value":"/ [m]: struct.ThreadPool.html#method.current_thread_index","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/thread_pool/mod.rs","byte_start":168105,"byte_end":168164,"line_start":307,"line_end":307,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/thread_pool/mod.rs","byte_start":168165,"byte_end":168168,"line_start":308,"line_end":308,"column_start":1,"column_end":4}},{"value":"/ # Future compatibility note","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/thread_pool/mod.rs","byte_start":168169,"byte_end":168200,"line_start":309,"line_end":309,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/thread_pool/mod.rs","byte_start":168201,"byte_end":168204,"line_start":310,"line_end":310,"column_start":1,"column_end":4}},{"value":"/ Currently, every thread-pool (including the global","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/thread_pool/mod.rs","byte_start":168205,"byte_end":168259,"line_start":311,"line_end":311,"column_start":1,"column_end":55}},{"value":"/ thread-pool) has a fixed number of threads, but this may","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/thread_pool/mod.rs","byte_start":168260,"byte_end":168320,"line_start":312,"line_end":312,"column_start":1,"column_end":61}},{"value":"/ change in future Rayon versions (see [the `num_threads()` method","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/thread_pool/mod.rs","byte_start":168321,"byte_end":168389,"line_start":313,"line_end":313,"column_start":1,"column_end":69}},{"value":"/ for details][snt]). In that case, the index for a","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/thread_pool/mod.rs","byte_start":168390,"byte_end":168443,"line_start":314,"line_end":314,"column_start":1,"column_end":54}},{"value":"/ thread would not change during its lifetime, but thread","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/thread_pool/mod.rs","byte_start":168444,"byte_end":168503,"line_start":315,"line_end":315,"column_start":1,"column_end":60}},{"value":"/ indices may wind up being reused if threads are terminated and","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/thread_pool/mod.rs","byte_start":168504,"byte_end":168570,"line_start":316,"line_end":316,"column_start":1,"column_end":67}},{"value":"/ restarted.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/thread_pool/mod.rs","byte_start":168571,"byte_end":168585,"line_start":317,"line_end":317,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/thread_pool/mod.rs","byte_start":168586,"byte_end":168589,"line_start":318,"line_end":318,"column_start":1,"column_end":4}},{"value":"/ [snt]: struct.ThreadPoolBuilder.html#method.num_threads","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/thread_pool/mod.rs","byte_start":168590,"byte_end":168649,"line_start":319,"line_end":319,"column_start":1,"column_end":60}},{"value":"inline","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/thread_pool/mod.rs","byte_start":168650,"byte_end":168659,"line_start":320,"line_end":320,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":969},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/thread_pool/mod.rs","byte_start":169147,"byte_end":169179,"line_start":335,"line_end":335,"column_start":8,"column_end":40},"name":"current_thread_has_pending_tasks","qualname":"::thread_pool::current_thread_has_pending_tasks","value":"pub fn current_thread_has_pending_tasks() -> Option<bool>","parent":null,"children":[],"decl_id":null,"docs":" If called from a Rayon worker thread, indicates whether that\n thread's local deque still has pending tasks. Otherwise, returns\n `None`. For more information, see [the\n `ThreadPool::current_thread_has_pending_tasks()` method][m].","sig":null,"attributes":[{"value":"/ If called from a Rayon worker thread, indicates whether that","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/thread_pool/mod.rs","byte_start":168812,"byte_end":168876,"line_start":328,"line_end":328,"column_start":1,"column_end":65}},{"value":"/ thread's local deque still has pending tasks. Otherwise, returns","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/thread_pool/mod.rs","byte_start":168877,"byte_end":168945,"line_start":329,"line_end":329,"column_start":1,"column_end":69}},{"value":"/ `None`. For more information, see [the","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/thread_pool/mod.rs","byte_start":168946,"byte_end":168988,"line_start":330,"line_end":330,"column_start":1,"column_end":43}},{"value":"/ `ThreadPool::current_thread_has_pending_tasks()` method][m].","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/thread_pool/mod.rs","byte_start":168989,"byte_end":169053,"line_start":331,"line_end":331,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/thread_pool/mod.rs","byte_start":169054,"byte_end":169057,"line_start":332,"line_end":332,"column_start":1,"column_end":4}},{"value":"/ [m]: struct.ThreadPool.html#method.current_thread_has_pending_tasks","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/thread_pool/mod.rs","byte_start":169058,"byte_end":169129,"line_start":333,"line_end":333,"column_start":1,"column_end":72}},{"value":"inline","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/thread_pool/mod.rs","byte_start":169130,"byte_end":169139,"line_start":334,"line_end":334,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":1057},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":4094,"byte_end":4113,"line_start":108,"line_end":108,"column_start":8,"column_end":27},"name":"current_num_threads","qualname":"::current_num_threads","value":"pub fn current_num_threads() -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of threads in the current registry. If this\n code is executing within a Rayon thread-pool, then this will be\n the number of threads for the thread-pool of the current\n thread. Otherwise, it will be the number of threads for the global\n thread-pool.","sig":null,"attributes":[{"value":"/ Returns the number of threads in the current registry. If this","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":3307,"byte_end":3373,"line_start":90,"line_end":90,"column_start":1,"column_end":67}},{"value":"/ code is executing within a Rayon thread-pool, then this will be","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":3374,"byte_end":3441,"line_start":91,"line_end":91,"column_start":1,"column_end":68}},{"value":"/ the number of threads for the thread-pool of the current","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":3442,"byte_end":3502,"line_start":92,"line_end":92,"column_start":1,"column_end":61}},{"value":"/ thread. Otherwise, it will be the number of threads for the global","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":3503,"byte_end":3573,"line_start":93,"line_end":93,"column_start":1,"column_end":71}},{"value":"/ thread-pool.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":3574,"byte_end":3590,"line_start":94,"line_end":94,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":3591,"byte_end":3594,"line_start":95,"line_end":95,"column_start":1,"column_end":4}},{"value":"/ This can be useful when trying to judge how many times to split","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":3595,"byte_end":3662,"line_start":96,"line_end":96,"column_start":1,"column_end":68}},{"value":"/ parallel work (the parallel iterator traits use this value","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":3663,"byte_end":3725,"line_start":97,"line_end":97,"column_start":1,"column_end":63}},{"value":"/ internally for this purpose).","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":3726,"byte_end":3759,"line_start":98,"line_end":98,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":3760,"byte_end":3763,"line_start":99,"line_end":99,"column_start":1,"column_end":4}},{"value":"/ # Future compatibility note","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":3764,"byte_end":3795,"line_start":100,"line_end":100,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":3796,"byte_end":3799,"line_start":101,"line_end":101,"column_start":1,"column_end":4}},{"value":"/ Note that unless this thread-pool was created with a","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":3800,"byte_end":3856,"line_start":102,"line_end":102,"column_start":1,"column_end":57}},{"value":"/ builder that specifies the number of threads, then this","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":3857,"byte_end":3916,"line_start":103,"line_end":103,"column_start":1,"column_end":60}},{"value":"/ number may vary over time in future versions (see [the","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":3917,"byte_end":3975,"line_start":104,"line_end":104,"column_start":1,"column_end":59}},{"value":"/ `num_threads()` method for details][snt]).","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":3976,"byte_end":4022,"line_start":105,"line_end":105,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":4023,"byte_end":4026,"line_start":106,"line_end":106,"column_start":1,"column_end":4}},{"value":"/ [snt]: struct.ThreadPoolBuilder.html#method.num_threads","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":4027,"byte_end":4086,"line_start":107,"line_end":107,"column_start":1,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":1351},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":4254,"byte_end":4274,"line_start":114,"line_end":114,"column_start":12,"column_end":32},"name":"ThreadPoolBuildError","qualname":"::ThreadPoolBuildError","value":"ThreadPoolBuildError {  }","parent":null,"children":[{"krate":0,"index":1352}],"decl_id":null,"docs":" Error when initializing a thread pool.\n","sig":null,"attributes":[{"value":"/ Error when initializing a thread pool.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":4183,"byte_end":4225,"line_start":112,"line_end":112,"column_start":1,"column_end":43}}]},{"kind":"Struct","id":{"krate":0,"index":1058},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":5045,"byte_end":5062,"line_start":142,"line_end":142,"column_start":12,"column_end":29},"name":"ThreadPoolBuilder","qualname":"::ThreadPoolBuilder","value":"ThreadPoolBuilder {  }","parent":null,"children":[{"krate":0,"index":1060},{"krate":0,"index":1061},{"krate":0,"index":1062},{"krate":0,"index":1063},{"krate":0,"index":1064},{"krate":0,"index":1065},{"krate":0,"index":1066},{"krate":0,"index":1067}],"decl_id":null,"docs":" Used to create a new [`ThreadPool`] or to configure the global rayon thread pool.\n ## Creating a ThreadPool\n The following creates a thread pool with 22 threads.","sig":null,"attributes":[{"value":"/ Used to create a new [`ThreadPool`] or to configure the global rayon thread pool.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":4396,"byte_end":4481,"line_start":124,"line_end":124,"column_start":1,"column_end":86}},{"value":"/ ## Creating a ThreadPool","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":4482,"byte_end":4510,"line_start":125,"line_end":125,"column_start":1,"column_end":29}},{"value":"/ The following creates a thread pool with 22 threads.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":4511,"byte_end":4567,"line_start":126,"line_end":126,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":4568,"byte_end":4571,"line_start":127,"line_end":127,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":4572,"byte_end":4583,"line_start":128,"line_end":128,"column_start":1,"column_end":12}},{"value":"/ # use rayon_core as rayon;","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":4584,"byte_end":4614,"line_start":129,"line_end":129,"column_start":1,"column_end":31}},{"value":"/ let pool = rayon::ThreadPoolBuilder::new().num_threads(22).build().unwrap();","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":4615,"byte_end":4695,"line_start":130,"line_end":130,"column_start":1,"column_end":81}},{"value":"/ ```","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":4696,"byte_end":4703,"line_start":131,"line_end":131,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":4704,"byte_end":4707,"line_start":132,"line_end":132,"column_start":1,"column_end":4}},{"value":"/ To instead configure the global thread pool, use [`build_global()`]:","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":4708,"byte_end":4780,"line_start":133,"line_end":133,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":4781,"byte_end":4784,"line_start":134,"line_end":134,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":4785,"byte_end":4796,"line_start":135,"line_end":135,"column_start":1,"column_end":12}},{"value":"/ # use rayon_core as rayon;","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":4797,"byte_end":4827,"line_start":136,"line_end":136,"column_start":1,"column_end":31}},{"value":"/ rayon::ThreadPoolBuilder::new().num_threads(22).build_global().unwrap();","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":4828,"byte_end":4904,"line_start":137,"line_end":137,"column_start":1,"column_end":77}},{"value":"/ ```","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":4905,"byte_end":4912,"line_start":138,"line_end":138,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":4913,"byte_end":4916,"line_start":139,"line_end":139,"column_start":1,"column_end":4}},{"value":"/ [`ThreadPool`]: struct.ThreadPool.html","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":4917,"byte_end":4959,"line_start":140,"line_end":140,"column_start":1,"column_end":43}},{"value":"/ [`build_global()`]: struct.ThreadPoolBuilder.html#method.build_global","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":4960,"byte_end":5033,"line_start":141,"line_end":141,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":1068},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":6311,"byte_end":6324,"line_start":177,"line_end":177,"column_start":12,"column_end":25},"name":"Configuration","qualname":"::Configuration","value":"Configuration {  }","parent":null,"children":[{"krate":0,"index":1069}],"decl_id":null,"docs":" Contains the rayon thread pool configuration. Use [`ThreadPoolBuilder`] instead.","sig":null,"attributes":[{"value":"/ Contains the rayon thread pool configuration. Use [`ThreadPoolBuilder`] instead.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":6106,"byte_end":6190,"line_start":173,"line_end":173,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":6191,"byte_end":6194,"line_start":174,"line_end":174,"column_start":1,"column_end":4}},{"value":"/ [`ThreadPoolBuilder`]: struct.ThreadPoolBuilder.html","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":6195,"byte_end":6251,"line_start":175,"line_end":175,"column_start":1,"column_end":57}},{"value":"deprecated(note = \"Use `ThreadPoolBuilder`\")","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":6252,"byte_end":6299,"line_start":176,"line_end":176,"column_start":1,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":1076},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":7646,"byte_end":7649,"line_start":213,"line_end":213,"column_start":12,"column_end":15},"name":"new","qualname":"<ThreadPoolBuilder>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates and returns a valid rayon thread pool builder, but does not initialize it.\n","sig":null,"attributes":[{"value":"/ Creates and returns a valid rayon thread pool builder, but does not initialize it.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":7548,"byte_end":7634,"line_start":212,"line_end":212,"column_start":5,"column_end":91}}]},{"kind":"Method","id":{"krate":0,"index":1079},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":8000,"byte_end":8005,"line_start":225,"line_end":225,"column_start":12,"column_end":17},"name":"build","qualname":"<ThreadPoolBuilder<S>>::build","value":"pub fn build(Self) -> Result<ThreadPool, ThreadPoolBuildError>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `ThreadPool` initialized using this configuration.\n","sig":null,"attributes":[{"value":"/ Creates a new `ThreadPool` initialized using this configuration.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":7920,"byte_end":7988,"line_start":224,"line_end":224,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":1080},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":9042,"byte_end":9054,"line_start":246,"line_end":246,"column_start":12,"column_end":24},"name":"build_global","qualname":"<ThreadPoolBuilder<S>>::build_global","value":"pub fn build_global(Self) -> Result<(), ThreadPoolBuildError>","parent":null,"children":[],"decl_id":null,"docs":" Initializes the global thread pool. This initialization is\n **optional**.  If you do not call this function, the thread pool\n will be automatically initialized with the default\n configuration. Calling `build_global` is not recommended, except\n in two scenarios:","sig":null,"attributes":[{"value":"/ Initializes the global thread pool. This initialization is","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":8101,"byte_end":8163,"line_start":229,"line_end":229,"column_start":5,"column_end":67}},{"value":"/ **optional**.  If you do not call this function, the thread pool","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":8168,"byte_end":8236,"line_start":230,"line_end":230,"column_start":5,"column_end":73}},{"value":"/ will be automatically initialized with the default","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":8241,"byte_end":8295,"line_start":231,"line_end":231,"column_start":5,"column_end":59}},{"value":"/ configuration. Calling `build_global` is not recommended, except","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":8300,"byte_end":8368,"line_start":232,"line_end":232,"column_start":5,"column_end":73}},{"value":"/ in two scenarios:","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":8373,"byte_end":8394,"line_start":233,"line_end":233,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":8399,"byte_end":8402,"line_start":234,"line_end":234,"column_start":5,"column_end":8}},{"value":"/ - You wish to change the default configuration.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":8407,"byte_end":8458,"line_start":235,"line_end":235,"column_start":5,"column_end":56}},{"value":"/ - You are running a benchmark, in which case initializing may","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":8463,"byte_end":8528,"line_start":236,"line_end":236,"column_start":5,"column_end":70}},{"value":"/   yield slightly more consistent results, since the worker threads","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":8533,"byte_end":8603,"line_start":237,"line_end":237,"column_start":5,"column_end":75}},{"value":"/   will already be ready to go even in the first iteration.  But","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":8608,"byte_end":8675,"line_start":238,"line_end":238,"column_start":5,"column_end":72}},{"value":"/   this cost is minimal.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":8680,"byte_end":8707,"line_start":239,"line_end":239,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":8712,"byte_end":8715,"line_start":240,"line_end":240,"column_start":5,"column_end":8}},{"value":"/ Initialization of the global thread pool happens exactly","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":8720,"byte_end":8780,"line_start":241,"line_end":241,"column_start":5,"column_end":65}},{"value":"/ once. Once started, the configuration cannot be","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":8785,"byte_end":8836,"line_start":242,"line_end":242,"column_start":5,"column_end":56}},{"value":"/ changed. Therefore, if you call `build_global` a second time, it","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":8841,"byte_end":8909,"line_start":243,"line_end":243,"column_start":5,"column_end":73}},{"value":"/ will return an error. An `Ok` result indicates that this","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":8914,"byte_end":8974,"line_start":244,"line_end":244,"column_start":5,"column_end":65}},{"value":"/ is the first initialization of the thread pool.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":8979,"byte_end":9030,"line_start":245,"line_end":245,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":1082},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":10743,"byte_end":10755,"line_start":291,"line_end":291,"column_start":12,"column_end":24},"name":"build_scoped","qualname":"<ThreadPoolBuilder>::build_scoped","value":"pub fn build_scoped<W, F, R>(Self, W, F) -> Result<R, ThreadPoolBuildError>\nwhere W: Fn(ThreadBuilder) -> () + Sync, F: FnOnce(&ThreadPool) -> R","parent":null,"children":[],"decl_id":null,"docs":" Creates a scoped `ThreadPool` initialized using this configuration.","sig":null,"attributes":[{"value":"/ Creates a scoped `ThreadPool` initialized using this configuration.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":9252,"byte_end":9323,"line_start":254,"line_end":254,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":9328,"byte_end":9331,"line_start":255,"line_end":255,"column_start":5,"column_end":8}},{"value":"/ This is a convenience function for building a pool using [`crossbeam::scope`]","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":9336,"byte_end":9417,"line_start":256,"line_end":256,"column_start":5,"column_end":86}},{"value":"/ to spawn threads in a [`spawn_handler`](#method.spawn_handler).","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":9422,"byte_end":9489,"line_start":257,"line_end":257,"column_start":5,"column_end":72}},{"value":"/ The threads in this pool will start by calling `wrapper`, which should","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":9494,"byte_end":9568,"line_start":258,"line_end":258,"column_start":5,"column_end":79}},{"value":"/ do initialization and continue by calling `ThreadBuilder::run()`.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":9573,"byte_end":9642,"line_start":259,"line_end":259,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":9647,"byte_end":9650,"line_start":260,"line_end":260,"column_start":5,"column_end":8}},{"value":"/ [`crossbeam::scope`]: https://docs.rs/crossbeam/0.7/crossbeam/fn.scope.html","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":9655,"byte_end":9734,"line_start":261,"line_end":261,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":9739,"byte_end":9742,"line_start":262,"line_end":262,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":9747,"byte_end":9761,"line_start":263,"line_end":263,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":9766,"byte_end":9769,"line_start":264,"line_end":264,"column_start":5,"column_end":8}},{"value":"/ A scoped pool may be useful in combination with scoped thread-local variables.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":9774,"byte_end":9856,"line_start":265,"line_end":265,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":9861,"byte_end":9864,"line_start":266,"line_end":266,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":9869,"byte_end":9876,"line_start":267,"line_end":267,"column_start":5,"column_end":12}},{"value":"/ # use rayon_core as rayon;","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":9881,"byte_end":9911,"line_start":268,"line_end":268,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":9916,"byte_end":9919,"line_start":269,"line_end":269,"column_start":5,"column_end":8}},{"value":"/ scoped_tls::scoped_thread_local!(static POOL_DATA: Vec<i32>);","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":9924,"byte_end":9989,"line_start":270,"line_end":270,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":9994,"byte_end":9997,"line_start":271,"line_end":271,"column_start":5,"column_end":8}},{"value":"/ fn main() -> Result<(), rayon::ThreadPoolBuildError> {","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":10002,"byte_end":10060,"line_start":272,"line_end":272,"column_start":5,"column_end":63}},{"value":"/     let pool_data = vec![1, 2, 3];","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":10065,"byte_end":10103,"line_start":273,"line_end":273,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":10108,"byte_end":10111,"line_start":274,"line_end":274,"column_start":5,"column_end":8}},{"value":"/     // We haven't assigned any TLS data yet.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":10116,"byte_end":10164,"line_start":275,"line_end":275,"column_start":5,"column_end":53}},{"value":"/     assert!(!POOL_DATA.is_set());","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":10169,"byte_end":10206,"line_start":276,"line_end":276,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":10211,"byte_end":10214,"line_start":277,"line_end":277,"column_start":5,"column_end":8}},{"value":"/     rayon::ThreadPoolBuilder::new()","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":10219,"byte_end":10258,"line_start":278,"line_end":278,"column_start":5,"column_end":44}},{"value":"/         .build_scoped(","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":10263,"byte_end":10289,"line_start":279,"line_end":279,"column_start":5,"column_end":31}},{"value":"/             // Borrow `pool_data` in TLS for each thread.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":10294,"byte_end":10355,"line_start":280,"line_end":280,"column_start":5,"column_end":66}},{"value":"/             |thread| POOL_DATA.set(&pool_data, || thread.run()),","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":10360,"byte_end":10428,"line_start":281,"line_end":281,"column_start":5,"column_end":73}},{"value":"/             // Do some work that needs the TLS data.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":10433,"byte_end":10489,"line_start":282,"line_end":282,"column_start":5,"column_end":61}},{"value":"/             |pool| pool.install(|| assert!(POOL_DATA.is_set())),","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":10494,"byte_end":10562,"line_start":283,"line_end":283,"column_start":5,"column_end":73}},{"value":"/         )?;","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":10567,"byte_end":10582,"line_start":284,"line_end":284,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":10587,"byte_end":10590,"line_start":285,"line_end":285,"column_start":5,"column_end":8}},{"value":"/     // Once we've returned, `pool_data` is no longer borrowed.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":10595,"byte_end":10661,"line_start":286,"line_end":286,"column_start":5,"column_end":71}},{"value":"/     drop(pool_data);","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":10666,"byte_end":10690,"line_start":287,"line_end":287,"column_start":5,"column_end":29}},{"value":"/     Ok(())","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":10695,"byte_end":10709,"line_start":288,"line_end":288,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":10714,"byte_end":10719,"line_start":289,"line_end":289,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":10724,"byte_end":10731,"line_start":290,"line_end":290,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1091},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":13942,"byte_end":13955,"line_start":376,"line_end":376,"column_start":12,"column_end":25},"name":"spawn_handler","qualname":"<ThreadPoolBuilder<S>>::spawn_handler","value":"pub fn spawn_handler<F>(Self, F) -> ThreadPoolBuilder<CustomSpawn<F>> where\nF: FnMut(ThreadBuilder) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets a custom function for spawning threads.","sig":null,"attributes":[{"value":"/ Sets a custom function for spawning threads.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":11808,"byte_end":11856,"line_start":322,"line_end":322,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":11861,"byte_end":11864,"line_start":323,"line_end":323,"column_start":5,"column_end":8}},{"value":"/ Note that the threads will not exit until after the pool is dropped. It","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":11869,"byte_end":11944,"line_start":324,"line_end":324,"column_start":5,"column_end":80}},{"value":"/ is up to the caller to wait for thread termination if that is important","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":11949,"byte_end":12024,"line_start":325,"line_end":325,"column_start":5,"column_end":80}},{"value":"/ for any invariants. For instance, threads created in [`crossbeam::scope`]","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":12029,"byte_end":12106,"line_start":326,"line_end":326,"column_start":5,"column_end":82}},{"value":"/ will be joined before that scope returns, and this will block indefinitely","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":12111,"byte_end":12189,"line_start":327,"line_end":327,"column_start":5,"column_end":83}},{"value":"/ if the pool is leaked. Furthermore, the global thread pool doesn't terminate","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":12194,"byte_end":12274,"line_start":328,"line_end":328,"column_start":5,"column_end":85}},{"value":"/ until the entire process exits!","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":12279,"byte_end":12314,"line_start":329,"line_end":329,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":12319,"byte_end":12322,"line_start":330,"line_end":330,"column_start":5,"column_end":8}},{"value":"/ [`crossbeam::scope`]: https://docs.rs/crossbeam/0.7/crossbeam/fn.scope.html","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":12327,"byte_end":12406,"line_start":331,"line_end":331,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":12411,"byte_end":12414,"line_start":332,"line_end":332,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":12419,"byte_end":12433,"line_start":333,"line_end":333,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":12438,"byte_end":12441,"line_start":334,"line_end":334,"column_start":5,"column_end":8}},{"value":"/ A minimal spawn handler just needs to call `run()` from an independent thread.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":12446,"byte_end":12528,"line_start":335,"line_end":335,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":12533,"byte_end":12536,"line_start":336,"line_end":336,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":12541,"byte_end":12548,"line_start":337,"line_end":337,"column_start":5,"column_end":12}},{"value":"/ # use rayon_core as rayon;","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":12553,"byte_end":12583,"line_start":338,"line_end":338,"column_start":5,"column_end":35}},{"value":"/ fn main() -> Result<(), rayon::ThreadPoolBuildError> {","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":12588,"byte_end":12646,"line_start":339,"line_end":339,"column_start":5,"column_end":63}},{"value":"/     let pool = rayon::ThreadPoolBuilder::new()","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":12651,"byte_end":12701,"line_start":340,"line_end":340,"column_start":5,"column_end":55}},{"value":"/         .spawn_handler(|thread| {","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":12706,"byte_end":12743,"line_start":341,"line_end":341,"column_start":5,"column_end":42}},{"value":"/             std::thread::spawn(|| thread.run());","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":12748,"byte_end":12800,"line_start":342,"line_end":342,"column_start":5,"column_end":57}},{"value":"/             Ok(())","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":12805,"byte_end":12827,"line_start":343,"line_end":343,"column_start":5,"column_end":27}},{"value":"/         })","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":12832,"byte_end":12846,"line_start":344,"line_end":344,"column_start":5,"column_end":19}},{"value":"/         .build()?;","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":12851,"byte_end":12873,"line_start":345,"line_end":345,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":12878,"byte_end":12881,"line_start":346,"line_end":346,"column_start":5,"column_end":8}},{"value":"/     pool.install(|| println!(\"Hello from my custom thread!\"));","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":12886,"byte_end":12952,"line_start":347,"line_end":347,"column_start":5,"column_end":71}},{"value":"/     Ok(())","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":12957,"byte_end":12971,"line_start":348,"line_end":348,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":12976,"byte_end":12981,"line_start":349,"line_end":349,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":12986,"byte_end":12993,"line_start":350,"line_end":350,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":12998,"byte_end":13001,"line_start":351,"line_end":351,"column_start":5,"column_end":8}},{"value":"/ The default spawn handler sets the name and stack size if given, and propagates","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":13006,"byte_end":13089,"line_start":352,"line_end":352,"column_start":5,"column_end":88}},{"value":"/ any errors from the thread builder.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":13094,"byte_end":13133,"line_start":353,"line_end":353,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":13138,"byte_end":13141,"line_start":354,"line_end":354,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":13146,"byte_end":13153,"line_start":355,"line_end":355,"column_start":5,"column_end":12}},{"value":"/ # use rayon_core as rayon;","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":13158,"byte_end":13188,"line_start":356,"line_end":356,"column_start":5,"column_end":35}},{"value":"/ fn main() -> Result<(), rayon::ThreadPoolBuildError> {","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":13193,"byte_end":13251,"line_start":357,"line_end":357,"column_start":5,"column_end":63}},{"value":"/     let pool = rayon::ThreadPoolBuilder::new()","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":13256,"byte_end":13306,"line_start":358,"line_end":358,"column_start":5,"column_end":55}},{"value":"/         .spawn_handler(|thread| {","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":13311,"byte_end":13348,"line_start":359,"line_end":359,"column_start":5,"column_end":42}},{"value":"/             let mut b = std::thread::Builder::new();","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":13353,"byte_end":13409,"line_start":360,"line_end":360,"column_start":5,"column_end":61}},{"value":"/             if let Some(name) = thread.name() {","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":13414,"byte_end":13465,"line_start":361,"line_end":361,"column_start":5,"column_end":56}},{"value":"/                 b = b.name(name.to_owned());","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":13470,"byte_end":13518,"line_start":362,"line_end":362,"column_start":5,"column_end":53}},{"value":"/             }","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":13523,"byte_end":13540,"line_start":363,"line_end":363,"column_start":5,"column_end":22}},{"value":"/             if let Some(stack_size) = thread.stack_size() {","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":13545,"byte_end":13608,"line_start":364,"line_end":364,"column_start":5,"column_end":68}},{"value":"/                 b = b.stack_size(stack_size);","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":13613,"byte_end":13662,"line_start":365,"line_end":365,"column_start":5,"column_end":54}},{"value":"/             }","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":13667,"byte_end":13684,"line_start":366,"line_end":366,"column_start":5,"column_end":22}},{"value":"/             b.spawn(|| thread.run())?;","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":13689,"byte_end":13731,"line_start":367,"line_end":367,"column_start":5,"column_end":47}},{"value":"/             Ok(())","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":13736,"byte_end":13758,"line_start":368,"line_end":368,"column_start":5,"column_end":27}},{"value":"/         })","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":13763,"byte_end":13777,"line_start":369,"line_end":369,"column_start":5,"column_end":19}},{"value":"/         .build()?;","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":13782,"byte_end":13804,"line_start":370,"line_end":370,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":13809,"byte_end":13812,"line_start":371,"line_end":371,"column_start":5,"column_end":8}},{"value":"/     pool.install(|| println!(\"Hello from my fully custom thread!\"));","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":13817,"byte_end":13889,"line_start":372,"line_end":372,"column_start":5,"column_end":77}},{"value":"/     Ok(())","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":13894,"byte_end":13908,"line_start":373,"line_end":373,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":13913,"byte_end":13918,"line_start":374,"line_end":374,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":13923,"byte_end":13930,"line_start":375,"line_end":375,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1098},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":15812,"byte_end":15823,"line_start":432,"line_end":432,"column_start":12,"column_end":23},"name":"thread_name","qualname":"<ThreadPoolBuilder<S>>::thread_name","value":"pub fn thread_name<F>(Self, F) -> Self where F: FnMut(usize) -> String +\n'static","parent":null,"children":[],"decl_id":null,"docs":" Sets a closure which takes a thread index and returns\n the thread's name.\n","sig":null,"attributes":[{"value":"/ Sets a closure which takes a thread index and returns","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":15716,"byte_end":15773,"line_start":430,"line_end":430,"column_start":5,"column_end":62}},{"value":"/ the thread's name.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":15778,"byte_end":15800,"line_start":431,"line_end":431,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":1100},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":17354,"byte_end":17365,"line_start":466,"line_end":466,"column_start":12,"column_end":23},"name":"num_threads","qualname":"<ThreadPoolBuilder<S>>::num_threads","value":"pub fn num_threads(Self, usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the number of threads to be used in the rayon threadpool.","sig":null,"attributes":[{"value":"/ Sets the number of threads to be used in the rayon threadpool.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":15998,"byte_end":16064,"line_start":440,"line_end":440,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":16069,"byte_end":16072,"line_start":441,"line_end":441,"column_start":5,"column_end":8}},{"value":"/ If you specify a non-zero number of threads using this","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":16077,"byte_end":16135,"line_start":442,"line_end":442,"column_start":5,"column_end":63}},{"value":"/ function, then the resulting thread-pools are guaranteed to","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":16140,"byte_end":16203,"line_start":443,"line_end":443,"column_start":5,"column_end":68}},{"value":"/ start at most this number of threads.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":16208,"byte_end":16249,"line_start":444,"line_end":444,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":16254,"byte_end":16257,"line_start":445,"line_end":445,"column_start":5,"column_end":8}},{"value":"/ If `num_threads` is 0, or you do not call this function, then","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":16262,"byte_end":16327,"line_start":446,"line_end":446,"column_start":5,"column_end":70}},{"value":"/ the Rayon runtime will select the number of threads","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":16332,"byte_end":16387,"line_start":447,"line_end":447,"column_start":5,"column_end":60}},{"value":"/ automatically. At present, this is based on the","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":16392,"byte_end":16443,"line_start":448,"line_end":448,"column_start":5,"column_end":56}},{"value":"/ `RAYON_NUM_THREADS` environment variable (if set),","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":16448,"byte_end":16502,"line_start":449,"line_end":449,"column_start":5,"column_end":59}},{"value":"/ or the number of logical CPUs (otherwise).","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":16507,"byte_end":16553,"line_start":450,"line_end":450,"column_start":5,"column_end":51}},{"value":"/ In the future, however, the default behavior may","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":16558,"byte_end":16610,"line_start":451,"line_end":451,"column_start":5,"column_end":57}},{"value":"/ change to dynamically add or remove threads as needed.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":16615,"byte_end":16673,"line_start":452,"line_end":452,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":16678,"byte_end":16681,"line_start":453,"line_end":453,"column_start":5,"column_end":8}},{"value":"/ **Future compatibility warning:** Given the default behavior","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":16686,"byte_end":16750,"line_start":454,"line_end":454,"column_start":5,"column_end":69}},{"value":"/ may change in the future, if you wish to rely on a fixed","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":16755,"byte_end":16815,"line_start":455,"line_end":455,"column_start":5,"column_end":65}},{"value":"/ number of threads, you should use this function to specify","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":16820,"byte_end":16882,"line_start":456,"line_end":456,"column_start":5,"column_end":67}},{"value":"/ that number. To reproduce the current default behavior, you","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":16887,"byte_end":16950,"line_start":457,"line_end":457,"column_start":5,"column_end":68}},{"value":"/ may wish to use the [`num_cpus`","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":16955,"byte_end":16990,"line_start":458,"line_end":458,"column_start":5,"column_end":40}},{"value":"/ crate](https://crates.io/crates/num_cpus) to query the number","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":16995,"byte_end":17060,"line_start":459,"line_end":459,"column_start":5,"column_end":70}},{"value":"/ of CPUs dynamically.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":17065,"byte_end":17089,"line_start":460,"line_end":460,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":17094,"byte_end":17097,"line_start":461,"line_end":461,"column_start":5,"column_end":8}},{"value":"/ **Old environment variable:** `RAYON_NUM_THREADS` is a one-to-one","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":17102,"byte_end":17171,"line_start":462,"line_end":462,"column_start":5,"column_end":74}},{"value":"/ replacement of the now deprecated `RAYON_RS_NUM_CPUS` environment","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":17176,"byte_end":17245,"line_start":463,"line_end":463,"column_start":5,"column_end":74}},{"value":"/ variable. If both variables are specified, `RAYON_NUM_THREADS` will","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":17250,"byte_end":17321,"line_start":464,"line_end":464,"column_start":5,"column_end":76}},{"value":"/ be prefered.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":17326,"byte_end":17342,"line_start":465,"line_end":465,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":1102},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":18351,"byte_end":18364,"line_start":490,"line_end":490,"column_start":12,"column_end":25},"name":"panic_handler","qualname":"<ThreadPoolBuilder<S>>::panic_handler","value":"pub fn panic_handler<H>(Self, H) -> Self where H: Fn(Box<dyn Any + Send>) ->\n() + Send + Sync + 'static","parent":null,"children":[],"decl_id":null,"docs":" Normally, whenever Rayon catches a panic, it tries to\n propagate it to someplace sensible, to try and reflect the\n semantics of sequential execution. But in some cases,\n particularly with the `spawn()` APIs, there is no\n obvious place where we should propagate the panic to.\n In that case, this panic handler is invoked.","sig":null,"attributes":[{"value":"/ Normally, whenever Rayon catches a panic, it tries to","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":17632,"byte_end":17689,"line_start":476,"line_end":476,"column_start":5,"column_end":62}},{"value":"/ propagate it to someplace sensible, to try and reflect the","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":17694,"byte_end":17756,"line_start":477,"line_end":477,"column_start":5,"column_end":67}},{"value":"/ semantics of sequential execution. But in some cases,","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":17761,"byte_end":17818,"line_start":478,"line_end":478,"column_start":5,"column_end":62}},{"value":"/ particularly with the `spawn()` APIs, there is no","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":17823,"byte_end":17876,"line_start":479,"line_end":479,"column_start":5,"column_end":58}},{"value":"/ obvious place where we should propagate the panic to.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":17881,"byte_end":17938,"line_start":480,"line_end":480,"column_start":5,"column_end":62}},{"value":"/ In that case, this panic handler is invoked.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":17943,"byte_end":17991,"line_start":481,"line_end":481,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":17996,"byte_end":17999,"line_start":482,"line_end":482,"column_start":5,"column_end":8}},{"value":"/ If no panic handler is set, the default is to abort the","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":18004,"byte_end":18063,"line_start":483,"line_end":483,"column_start":5,"column_end":64}},{"value":"/ process, under the principle that panics should not go","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":18068,"byte_end":18126,"line_start":484,"line_end":484,"column_start":5,"column_end":63}},{"value":"/ unobserved.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":18131,"byte_end":18146,"line_start":485,"line_end":485,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":18151,"byte_end":18154,"line_start":486,"line_end":486,"column_start":5,"column_end":8}},{"value":"/ If the panic handler itself panics, this will abort the","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":18159,"byte_end":18218,"line_start":487,"line_end":487,"column_start":5,"column_end":64}},{"value":"/ process. To prevent this, wrap the body of your panic handler","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":18223,"byte_end":18288,"line_start":488,"line_end":488,"column_start":5,"column_end":70}},{"value":"/ in a call to `std::panic::catch_unwind()`.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":18293,"byte_end":18339,"line_start":489,"line_end":489,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":1105},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":18749,"byte_end":18759,"line_start":504,"line_end":504,"column_start":12,"column_end":22},"name":"stack_size","qualname":"<ThreadPoolBuilder<S>>::stack_size","value":"pub fn stack_size(Self, usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the stack size of the worker threads\n","sig":null,"attributes":[{"value":"/ Sets the stack size of the worker threads","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":18692,"byte_end":18737,"line_start":503,"line_end":503,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":1106},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":20447,"byte_end":20460,"line_start":538,"line_end":538,"column_start":12,"column_end":25},"name":"breadth_first","qualname":"<ThreadPoolBuilder<S>>::breadth_first","value":"pub fn breadth_first(Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" **(DEPRECATED)** Suggest to worker threads that they execute\n spawned jobs in a \"breadth-first\" fashion.","sig":null,"attributes":[{"value":"/ **(DEPRECATED)** Suggest to worker threads that they execute","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":18867,"byte_end":18931,"line_start":509,"line_end":509,"column_start":5,"column_end":69}},{"value":"/ spawned jobs in a \"breadth-first\" fashion.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":18936,"byte_end":18982,"line_start":510,"line_end":510,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":18987,"byte_end":18990,"line_start":511,"line_end":511,"column_start":5,"column_end":8}},{"value":"/ Typically, when a worker thread is idle or blocked, it will","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":18995,"byte_end":19058,"line_start":512,"line_end":512,"column_start":5,"column_end":68}},{"value":"/ attempt to execute the job from the *top* of its local deque of","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":19063,"byte_end":19130,"line_start":513,"line_end":513,"column_start":5,"column_end":72}},{"value":"/ work (i.e., the job most recently spawned). If this flag is set","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":19135,"byte_end":19202,"line_start":514,"line_end":514,"column_start":5,"column_end":72}},{"value":"/ to true, however, workers will prefer to execute in a","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":19207,"byte_end":19264,"line_start":515,"line_end":515,"column_start":5,"column_end":62}},{"value":"/ *breadth-first* fashion -- that is, they will search for jobs at","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":19269,"byte_end":19337,"line_start":516,"line_end":516,"column_start":5,"column_end":73}},{"value":"/ the *bottom* of their local deque. (At present, workers *always*","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":19342,"byte_end":19410,"line_start":517,"line_end":517,"column_start":5,"column_end":73}},{"value":"/ steal from the bottom of other worker's deques, regardless of","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":19415,"byte_end":19480,"line_start":518,"line_end":518,"column_start":5,"column_end":70}},{"value":"/ the setting of this flag.)","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":19485,"byte_end":19515,"line_start":519,"line_end":519,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":19520,"byte_end":19523,"line_start":520,"line_end":520,"column_start":5,"column_end":8}},{"value":"/ If you think of the tasks as a tree, where a parent task","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":19528,"byte_end":19588,"line_start":521,"line_end":521,"column_start":5,"column_end":65}},{"value":"/ spawns its children in the tree, then this flag loosely","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":19593,"byte_end":19652,"line_start":522,"line_end":522,"column_start":5,"column_end":64}},{"value":"/ corresponds to doing a breadth-first traversal of the tree,","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":19657,"byte_end":19720,"line_start":523,"line_end":523,"column_start":5,"column_end":68}},{"value":"/ whereas the default would be to do a depth-first traversal.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":19725,"byte_end":19788,"line_start":524,"line_end":524,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":19793,"byte_end":19796,"line_start":525,"line_end":525,"column_start":5,"column_end":8}},{"value":"/ **Note that this is an \"execution hint\".** Rayon's task","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":19801,"byte_end":19860,"line_start":526,"line_end":526,"column_start":5,"column_end":64}},{"value":"/ execution is highly dynamic and the precise order in which","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":19865,"byte_end":19927,"line_start":527,"line_end":527,"column_start":5,"column_end":67}},{"value":"/ independent tasks are executed is not intended to be","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":19932,"byte_end":19988,"line_start":528,"line_end":528,"column_start":5,"column_end":61}},{"value":"/ guaranteed.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":19993,"byte_end":20008,"line_start":529,"line_end":529,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":20013,"byte_end":20016,"line_start":530,"line_end":530,"column_start":5,"column_end":8}},{"value":"/ This `breadth_first()` method is now deprecated per [RFC #1],","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":20021,"byte_end":20086,"line_start":531,"line_end":531,"column_start":5,"column_end":70}},{"value":"/ and in the future its effect may be removed. Consider using","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":20091,"byte_end":20154,"line_start":532,"line_end":532,"column_start":5,"column_end":68}},{"value":"/ [`scope_fifo()`] for a similar effect.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":20159,"byte_end":20201,"line_start":533,"line_end":533,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":20206,"byte_end":20209,"line_start":534,"line_end":534,"column_start":5,"column_end":8}},{"value":"/ [RFC #1]: https://github.com/rayon-rs/rfcs/blob/master/accepted/rfc0001-scope-scheduling.md","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":20214,"byte_end":20309,"line_start":535,"line_end":535,"column_start":5,"column_end":100}},{"value":"/ [`scope_fifo()`]: fn.scope_fifo.html","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":20314,"byte_end":20354,"line_start":536,"line_end":536,"column_start":5,"column_end":45}},{"value":"deprecated(note = \"use `scope_fifo` and `spawn_fifo` for similar effect\")","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":20359,"byte_end":20435,"line_start":537,"line_end":537,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":1109},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":21166,"byte_end":21179,"line_start":558,"line_end":558,"column_start":12,"column_end":25},"name":"start_handler","qualname":"<ThreadPoolBuilder<S>>::start_handler","value":"pub fn start_handler<H>(Self, H) -> Self where H: Fn(usize) -> () + Send +\nSync + 'static","parent":null,"children":[],"decl_id":null,"docs":" Sets a callback to be invoked on thread start.","sig":null,"attributes":[{"value":"/ Sets a callback to be invoked on thread start.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":20790,"byte_end":20840,"line_start":552,"line_end":552,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":20845,"byte_end":20848,"line_start":553,"line_end":553,"column_start":5,"column_end":8}},{"value":"/ The closure is passed the index of the thread on which it is invoked.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":20853,"byte_end":20926,"line_start":554,"line_end":554,"column_start":5,"column_end":78}},{"value":"/ Note that this same closure may be invoked multiple times in parallel.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":20931,"byte_end":21005,"line_start":555,"line_end":555,"column_start":5,"column_end":79}},{"value":"/ If this closure panics, the panic will be passed to the panic handler.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":21010,"byte_end":21084,"line_start":556,"line_end":556,"column_start":5,"column_end":79}},{"value":"/ If that handler returns, then startup will continue normally.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":21089,"byte_end":21154,"line_start":557,"line_end":557,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":1112},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":21909,"byte_end":21921,"line_start":577,"line_end":577,"column_start":12,"column_end":24},"name":"exit_handler","qualname":"<ThreadPoolBuilder<S>>::exit_handler","value":"pub fn exit_handler<H>(Self, H) -> Self where H: Fn(usize) -> () + Send +\nSync + 'static","parent":null,"children":[],"decl_id":null,"docs":" Sets a callback to be invoked on thread exit.","sig":null,"attributes":[{"value":"/ Sets a callback to be invoked on thread exit.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":21535,"byte_end":21584,"line_start":571,"line_end":571,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":21589,"byte_end":21592,"line_start":572,"line_end":572,"column_start":5,"column_end":8}},{"value":"/ The closure is passed the index of the thread on which it is invoked.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":21597,"byte_end":21670,"line_start":573,"line_end":573,"column_start":5,"column_end":78}},{"value":"/ Note that this same closure may be invoked multiple times in parallel.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":21675,"byte_end":21749,"line_start":574,"line_end":574,"column_start":5,"column_end":79}},{"value":"/ If this closure panics, the panic will be passed to the panic handler.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":21754,"byte_end":21828,"line_start":575,"line_end":575,"column_start":5,"column_end":79}},{"value":"/ If that handler returns, then the thread will exit normally.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":21833,"byte_end":21897,"line_start":576,"line_end":576,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":1115},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":22251,"byte_end":22254,"line_start":589,"line_end":589,"column_start":12,"column_end":15},"name":"new","qualname":"<Configuration>::new","value":"pub fn new() -> Configuration","parent":null,"children":[],"decl_id":null,"docs":" Creates and return a valid rayon thread pool configuration, but does not initialize it.\n","sig":null,"attributes":[{"value":"/ Creates and return a valid rayon thread pool configuration, but does not initialize it.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":22148,"byte_end":22239,"line_start":588,"line_end":588,"column_start":5,"column_end":96}}]},{"kind":"Method","id":{"krate":0,"index":1116},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":22434,"byte_end":22439,"line_start":596,"line_end":596,"column_start":12,"column_end":17},"name":"build","qualname":"<Configuration>::build","value":"pub fn build(Self) -> Result<ThreadPool, Box<dyn Error + 'static>>","parent":null,"children":[],"decl_id":null,"docs":" Deprecated in favor of `ThreadPoolBuilder::build`.\n","sig":null,"attributes":[{"value":"/ Deprecated in favor of `ThreadPoolBuilder::build`.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":22368,"byte_end":22422,"line_start":595,"line_end":595,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":1117},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":22627,"byte_end":22638,"line_start":601,"line_end":601,"column_start":12,"column_end":23},"name":"thread_name","qualname":"<Configuration>::thread_name","value":"pub fn thread_name<F>(Self, F) -> Self where F: FnMut(usize) -> String +\n'static","parent":null,"children":[],"decl_id":null,"docs":" Deprecated in favor of `ThreadPoolBuilder::thread_name`.\n","sig":null,"attributes":[{"value":"/ Deprecated in favor of `ThreadPoolBuilder::thread_name`.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":22555,"byte_end":22615,"line_start":600,"line_end":600,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":1119},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":22887,"byte_end":22898,"line_start":610,"line_end":610,"column_start":12,"column_end":23},"name":"num_threads","qualname":"<Configuration>::num_threads","value":"pub fn num_threads(Self, usize) -> Configuration","parent":null,"children":[],"decl_id":null,"docs":" Deprecated in favor of `ThreadPoolBuilder::num_threads`.\n","sig":null,"attributes":[{"value":"/ Deprecated in favor of `ThreadPoolBuilder::num_threads`.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":22815,"byte_end":22875,"line_start":609,"line_end":609,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":1120},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":23108,"byte_end":23121,"line_start":616,"line_end":616,"column_start":12,"column_end":25},"name":"panic_handler","qualname":"<Configuration>::panic_handler","value":"pub fn panic_handler<H>(Self, H) -> Configuration where\nH: Fn(Box<dyn Any + Send>) -> () + Send + Sync + 'static","parent":null,"children":[],"decl_id":null,"docs":" Deprecated in favor of `ThreadPoolBuilder::panic_handler`.\n","sig":null,"attributes":[{"value":"/ Deprecated in favor of `ThreadPoolBuilder::panic_handler`.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":23034,"byte_end":23096,"line_start":615,"line_end":615,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":1122},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":23407,"byte_end":23417,"line_start":625,"line_end":625,"column_start":12,"column_end":22},"name":"stack_size","qualname":"<Configuration>::stack_size","value":"pub fn stack_size(Self, usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Deprecated in favor of `ThreadPoolBuilder::stack_size`.\n","sig":null,"attributes":[{"value":"/ Deprecated in favor of `ThreadPoolBuilder::stack_size`.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":23336,"byte_end":23395,"line_start":624,"line_end":624,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":1123},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":23615,"byte_end":23628,"line_start":631,"line_end":631,"column_start":12,"column_end":25},"name":"breadth_first","qualname":"<Configuration>::breadth_first","value":"pub fn breadth_first(Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Deprecated in favor of `ThreadPoolBuilder::breadth_first`.\n","sig":null,"attributes":[{"value":"/ Deprecated in favor of `ThreadPoolBuilder::breadth_first`.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":23541,"byte_end":23603,"line_start":630,"line_end":630,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":1124},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":23800,"byte_end":23813,"line_start":637,"line_end":637,"column_start":12,"column_end":25},"name":"start_handler","qualname":"<Configuration>::start_handler","value":"pub fn start_handler<H>(Self, H) -> Configuration where H: Fn(usize) -> () +\nSend + Sync + 'static","parent":null,"children":[],"decl_id":null,"docs":" Deprecated in favor of `ThreadPoolBuilder::start_handler`.\n","sig":null,"attributes":[{"value":"/ Deprecated in favor of `ThreadPoolBuilder::start_handler`.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":23726,"byte_end":23788,"line_start":636,"line_end":636,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":1126},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":24087,"byte_end":24099,"line_start":646,"line_end":646,"column_start":12,"column_end":24},"name":"exit_handler","qualname":"<Configuration>::exit_handler","value":"pub fn exit_handler<H>(Self, H) -> Configuration where H: Fn(usize) -> () +\nSend + Sync + 'static","parent":null,"children":[],"decl_id":null,"docs":" Deprecated in favor of `ThreadPoolBuilder::exit_handler`.\n","sig":null,"attributes":[{"value":"/ Deprecated in favor of `ThreadPoolBuilder::exit_handler`.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":24014,"byte_end":24075,"line_start":645,"line_end":645,"column_start":5,"column_end":66}}]},{"kind":"Function","id":{"krate":0,"index":1137},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":25617,"byte_end":25627,"line_start":698,"line_end":698,"column_start":8,"column_end":18},"name":"initialize","qualname":"::initialize","value":"pub fn initialize(Configuration) -> Result<(), Box<dyn Error>>","parent":null,"children":[],"decl_id":null,"docs":" Deprecated in favor of `ThreadPoolBuilder::build_global`.\n","sig":null,"attributes":[{"value":"/ Deprecated in favor of `ThreadPoolBuilder::build_global`.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":25465,"byte_end":25526,"line_start":695,"line_end":695,"column_start":1,"column_end":62}},{"value":"deprecated(note = \"use `ThreadPoolBuilder::build_global`\")","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":25527,"byte_end":25588,"line_start":696,"line_end":696,"column_start":1,"column_end":62}},{"value":"allow(deprecated)","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":25589,"byte_end":25609,"line_start":697,"line_end":697,"column_start":1,"column_end":21}}]},{"kind":"Struct","id":{"krate":0,"index":1363},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":27627,"byte_end":27636,"line_start":758,"line_end":758,"column_start":12,"column_end":21},"name":"FnContext","qualname":"::FnContext","value":"FnContext {  }","parent":null,"children":[{"krate":0,"index":1364},{"krate":0,"index":1365}],"decl_id":null,"docs":" Provides the calling context to a closure called by `join_context`.\n","sig":null,"attributes":[{"value":"/ Provides the calling context to a closure called by `join_context`.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":27527,"byte_end":27598,"line_start":756,"line_end":756,"column_start":1,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":1156},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":28081,"byte_end":28089,"line_start":779,"line_end":779,"column_start":12,"column_end":20},"name":"migrated","qualname":"<FnContext>::migrated","value":"pub fn migrated(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the closure was called from a different thread\n than it was provided from.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the closure was called from a different thread","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":27952,"byte_end":28020,"line_start":776,"line_end":776,"column_start":5,"column_end":73}},{"value":"/ than it was provided from.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":28025,"byte_end":28055,"line_start":777,"line_end":777,"column_start":5,"column_end":35}},{"value":"inline","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":28060,"byte_end":28069,"line_start":778,"line_end":778,"column_start":5,"column_end":14}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/log.rs","byte_start":32123,"byte_end":32129,"line_start":113,"line_end":113,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":56},{"krate":0,"index":60},{"krate":0,"index":61},{"krate":0,"index":63},{"krate":0,"index":65},{"krate":0,"index":67}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/log.rs","byte_start":37346,"byte_end":37351,"line_start":283,"line_end":283,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":69}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Inherent","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/log.rs","byte_start":37725,"byte_end":37739,"line_start":301,"line_end":301,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":75},{"krate":0,"index":78},{"krate":0,"index":79}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/job.rs","byte_start":43791,"byte_end":43797,"line_start":38,"line_end":38,"column_start":22,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/job.rs","byte_start":43822,"byte_end":43828,"line_start":39,"line_end":39,"column_start":22,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Inherent","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/job.rs","byte_start":43838,"byte_end":43844,"line_start":41,"line_end":41,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":127},{"krate":0,"index":129}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Inherent","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/job.rs","byte_start":44850,"byte_end":44858,"line_start":78,"line_end":78,"column_start":15,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":141},{"krate":0,"index":142},{"krate":0,"index":143},{"krate":0,"index":144}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/job.rs","byte_start":45503,"byte_end":45511,"line_start":105,"line_end":105,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":149}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Inherent","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/job.rs","byte_start":46522,"byte_end":46529,"line_start":141,"line_end":141,"column_start":12,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":160},{"krate":0,"index":161}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/job.rs","byte_start":47057,"byte_end":47064,"line_start":160,"line_end":160,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":164}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Inherent","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/job.rs","byte_start":47286,"byte_end":47295,"line_start":171,"line_end":171,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":167}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Inherent","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/job.rs","byte_start":47837,"byte_end":47844,"line_start":190,"line_end":190,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":171},{"krate":0,"index":172}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/job.rs","byte_start":48380,"byte_end":48387,"line_start":206,"line_end":206,"column_start":14,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":174}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Inherent","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/latch.rs","byte_start":58238,"byte_end":58247,"line_start":72,"line_end":72,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":262},{"krate":0,"index":263},{"krate":0,"index":264},{"krate":0,"index":265},{"krate":0,"index":266},{"krate":0,"index":267},{"krate":0,"index":268}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Inherent","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/latch.rs","byte_start":60592,"byte_end":60601,"line_start":148,"line_end":148,"column_start":10,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":277},{"krate":0,"index":278},{"krate":0,"index":279}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/latch.rs","byte_start":61632,"byte_end":61641,"line_start":180,"line_end":180,"column_start":26,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":282}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/latch.rs","byte_start":61759,"byte_end":61768,"line_start":187,"line_end":187,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":285}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Inherent","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/latch.rs","byte_start":63256,"byte_end":63265,"line_start":227,"line_end":227,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":287},{"krate":0,"index":288},{"krate":0,"index":289}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/latch.rs","byte_start":63937,"byte_end":63946,"line_start":254,"line_end":254,"column_start":16,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":291}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Inherent","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/latch.rs","byte_start":65097,"byte_end":65107,"line_start":284,"line_end":284,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":293},{"krate":0,"index":294},{"krate":0,"index":295},{"krate":0,"index":296}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/latch.rs","byte_start":66294,"byte_end":66304,"line_start":323,"line_end":323,"column_start":22,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":298}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Inherent","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/latch.rs","byte_start":66512,"byte_end":66526,"line_start":336,"line_end":336,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":300},{"krate":0,"index":301},{"krate":0,"index":302}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/latch.rs","byte_start":66972,"byte_end":66986,"line_start":356,"line_end":356,"column_start":16,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":304}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Inherent","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/registry.rs","byte_start":68293,"byte_end":68306,"line_start":36,"line_end":36,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":435},{"krate":0,"index":436},{"krate":0,"index":437},{"krate":0,"index":438}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/registry.rs","byte_start":69007,"byte_end":69020,"line_start":59,"line_end":59,"column_start":21,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":440}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/registry.rs","byte_start":70045,"byte_end":70057,"line_start":89,"line_end":89,"column_start":22,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1292},{"krate":0,"index":444}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Inherent","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/registry.rs","byte_start":70703,"byte_end":70714,"line_start":112,"line_end":112,"column_start":9,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":448}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/registry.rs","byte_start":70875,"byte_end":70886,"line_start":121,"line_end":121,"column_start":25,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1300},{"krate":0,"index":451}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/registry.rs","byte_start":73812,"byte_end":73822,"line_start":204,"line_end":204,"column_start":19,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":479}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Inherent","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/registry.rs","byte_start":73895,"byte_end":73903,"line_start":210,"line_end":210,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":481},{"krate":0,"index":484},{"krate":0,"index":485},{"krate":0,"index":486},{"krate":0,"index":487},{"krate":0,"index":488},{"krate":0,"index":490},{"krate":0,"index":491},{"krate":0,"index":492},{"krate":0,"index":493},{"krate":0,"index":494},{"krate":0,"index":496},{"krate":0,"index":497},{"krate":0,"index":499},{"krate":0,"index":502},{"krate":0,"index":508},{"krate":0,"index":512},{"krate":0,"index":513},{"krate":0,"index":514}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Inherent","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/registry.rs","byte_start":87163,"byte_end":87173,"line_start":576,"line_end":576,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":521}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/registry.rs","byte_start":88224,"byte_end":88236,"line_start":614,"line_end":614,"column_start":15,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":529}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Inherent","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/registry.rs","byte_start":88445,"byte_end":88457,"line_start":624,"line_end":624,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":532},{"krate":0,"index":533},{"krate":0,"index":535},{"krate":0,"index":536},{"krate":0,"index":538},{"krate":0,"index":539},{"krate":0,"index":541},{"krate":0,"index":542},{"krate":0,"index":543},{"krate":0,"index":545},{"krate":0,"index":547},{"krate":0,"index":552},{"krate":0,"index":553}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Inherent","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/registry.rs","byte_start":97551,"byte_end":97565,"line_start":890,"line_end":890,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":568},{"krate":0,"index":570},{"krate":0,"index":571}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Inherent","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":117095,"byte_end":117100,"line_start":479,"line_end":479,"column_start":14,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":683},{"krate":0,"index":684}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Inherent","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":119731,"byte_end":119740,"line_start":556,"line_end":556,"column_start":14,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":690},{"krate":0,"index":692}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Inherent","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":121531,"byte_end":121540,"line_start":602,"line_end":602,"column_start":14,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":698},{"krate":0,"index":700},{"krate":0,"index":701},{"krate":0,"index":704},{"krate":0,"index":706},{"krate":0,"index":709},{"krate":0,"index":710}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Inherent","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":124309,"byte_end":124319,"line_start":688,"line_end":688,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":712},{"krate":0,"index":713},{"krate":0,"index":714},{"krate":0,"index":715}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":125790,"byte_end":125795,"line_start":737,"line_end":737,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":718}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":126140,"byte_end":126149,"line_start":747,"line_end":747,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":721}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":126541,"byte_end":126551,"line_start":758,"line_end":758,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":723}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Inherent","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/sleep/counters.rs","byte_start":142173,"byte_end":142189,"line_start":29,"line_end":29,"column_start":6,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":762},{"krate":0,"index":763},{"krate":0,"index":764},{"krate":0,"index":765}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Inherent","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/sleep/counters.rs","byte_start":143927,"byte_end":143941,"line_start":83,"line_end":83,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":775},{"krate":0,"index":776},{"krate":0,"index":777},{"krate":0,"index":778},{"krate":0,"index":779},{"krate":0,"index":781},{"krate":0,"index":782},{"krate":0,"index":783}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Inherent","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/sleep/counters.rs","byte_start":148906,"byte_end":148914,"line_start":217,"line_end":217,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":787},{"krate":0,"index":788},{"krate":0,"index":789},{"krate":0,"index":790},{"krate":0,"index":791},{"krate":0,"index":792}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/sleep/counters.rs","byte_start":150194,"byte_end":150202,"line_start":261,"line_end":261,"column_start":26,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":794}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Inherent","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/sleep/mod.rs","byte_start":129117,"byte_end":129122,"line_start":63,"line_end":63,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":813},{"krate":0,"index":815},{"krate":0,"index":817},{"krate":0,"index":819},{"krate":0,"index":821},{"krate":0,"index":823},{"krate":0,"index":830},{"krate":0,"index":831},{"krate":0,"index":832},{"krate":0,"index":833},{"krate":0,"index":835},{"krate":0,"index":836}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Inherent","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/sleep/mod.rs","byte_start":140837,"byte_end":140846,"line_start":382,"line_end":382,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":839},{"krate":0,"index":840}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Inherent","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/thread_pool/mod.rs","byte_start":158982,"byte_end":158992,"line_start":56,"line_end":56,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":926},{"krate":0,"index":927},{"krate":0,"index":929},{"krate":0,"index":933},{"krate":0,"index":934},{"krate":0,"index":935},{"krate":0,"index":936},{"krate":0,"index":942},{"krate":0,"index":947},{"krate":0,"index":952},{"krate":0,"index":956},{"krate":0,"index":960},{"krate":0,"index":962}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/thread_pool/mod.rs","byte_start":167336,"byte_end":167346,"line_start":282,"line_end":282,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":965}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/thread_pool/mod.rs","byte_start":167438,"byte_end":167448,"line_start":288,"line_end":288,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":967}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/unwind.rs","byte_start":181352,"byte_end":181364,"line_start":26,"line_end":26,"column_start":15,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":991}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":7159,"byte_end":7176,"line_start":196,"line_end":196,"column_start":18,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1074}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Inherent","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":7524,"byte_end":7541,"line_start":211,"line_end":211,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1076}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Inherent","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":7867,"byte_end":7884,"line_start":220,"line_end":220,"column_start":9,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1079},{"krate":0,"index":1080}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Inherent","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":9228,"byte_end":9245,"line_start":253,"line_end":253,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1082}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Inherent","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":11781,"byte_end":11798,"line_start":321,"line_end":321,"column_start":9,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1091},{"krate":0,"index":1093},{"krate":0,"index":1094},{"krate":0,"index":1097},{"krate":0,"index":1098},{"krate":0,"index":1100},{"krate":0,"index":1101},{"krate":0,"index":1102},{"krate":0,"index":1104},{"krate":0,"index":1105},{"krate":0,"index":1106},{"krate":0,"index":1107},{"krate":0,"index":1108},{"krate":0,"index":1109},{"krate":0,"index":1111},{"krate":0,"index":1112}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Inherent","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":22128,"byte_end":22141,"line_start":587,"line_end":587,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":1115},{"krate":0,"index":1116},{"krate":0,"index":1117},{"krate":0,"index":1119},{"krate":0,"index":1120},{"krate":0,"index":1122},{"krate":0,"index":1123},{"krate":0,"index":1124},{"krate":0,"index":1126},{"krate":0,"index":1128}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Inherent","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":24440,"byte_end":24460,"line_start":660,"line_end":660,"column_start":6,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1130}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":24686,"byte_end":24706,"line_start":669,"line_end":669,"column_start":16,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1133},{"krate":0,"index":1134}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":25191,"byte_end":25211,"line_start":686,"line_end":686,"column_start":23,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1136}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":25769,"byte_end":25786,"line_start":702,"line_end":702,"column_start":24,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1140}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":26295,"byte_end":26313,"line_start":718,"line_end":718,"column_start":29,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":1144}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":27243,"byte_end":27256,"line_start":741,"line_end":741,"column_start":18,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1150}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":27411,"byte_end":27424,"line_start":750,"line_end":750,"column_start":21,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1152}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Inherent","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":27773,"byte_end":27782,"line_start":765,"line_end":765,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1154}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Inherent","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":27936,"byte_end":27945,"line_start":775,"line_end":775,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1156}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/log.rs","byte_start":32123,"byte_end":32129,"line_start":113,"line_end":113,"column_start":6,"column_end":12},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":1221},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/log.rs","byte_start":37346,"byte_end":37351,"line_start":283,"line_end":283,"column_start":6,"column_end":11},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":1225},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/log.rs","byte_start":37725,"byte_end":37739,"line_start":301,"line_end":301,"column_start":6,"column_end":20},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":70},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/job.rs","byte_start":43791,"byte_end":43797,"line_start":38,"line_end":38,"column_start":22,"column_end":28},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":1251},"to":{"krate":2,"index":2853}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/job.rs","byte_start":43822,"byte_end":43828,"line_start":39,"line_end":39,"column_start":22,"column_end":28},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":1251},"to":{"krate":2,"index":2865}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/job.rs","byte_start":43838,"byte_end":43844,"line_start":41,"line_end":41,"column_start":6,"column_end":12},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":1251},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/job.rs","byte_start":44850,"byte_end":44858,"line_start":78,"line_end":78,"column_start":15,"column_end":23},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":130},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/job.rs","byte_start":45503,"byte_end":45511,"line_start":105,"line_end":105,"column_start":23,"column_end":31},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":130},"to":{"krate":0,"index":122}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/job.rs","byte_start":46522,"byte_end":46529,"line_start":141,"line_end":141,"column_start":12,"column_end":19},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":155},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/job.rs","byte_start":47057,"byte_end":47064,"line_start":160,"line_end":160,"column_start":20,"column_end":27},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":155},"to":{"krate":0,"index":122}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/job.rs","byte_start":47286,"byte_end":47295,"line_start":171,"line_end":171,"column_start":9,"column_end":18},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":112},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/job.rs","byte_start":47837,"byte_end":47844,"line_start":190,"line_end":190,"column_start":6,"column_end":13},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":168},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/job.rs","byte_start":48380,"byte_end":48387,"line_start":206,"line_end":206,"column_start":14,"column_end":21},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":168},"to":{"krate":0,"index":122}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/latch.rs","byte_start":58238,"byte_end":58247,"line_start":72,"line_end":72,"column_start":6,"column_end":15},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":1266},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/latch.rs","byte_start":60592,"byte_end":60601,"line_start":148,"line_end":148,"column_start":10,"column_end":19},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":269},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/latch.rs","byte_start":61632,"byte_end":61641,"line_start":180,"line_end":180,"column_start":26,"column_end":35},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":269},"to":{"krate":0,"index":255}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/latch.rs","byte_start":61759,"byte_end":61768,"line_start":187,"line_end":187,"column_start":20,"column_end":29},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":269},"to":{"krate":0,"index":253}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/latch.rs","byte_start":63256,"byte_end":63265,"line_start":227,"line_end":227,"column_start":6,"column_end":15},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":1270},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/latch.rs","byte_start":63937,"byte_end":63946,"line_start":254,"line_end":254,"column_start":16,"column_end":25},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":1270},"to":{"krate":0,"index":253}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/latch.rs","byte_start":65097,"byte_end":65107,"line_start":284,"line_end":284,"column_start":6,"column_end":16},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":1275},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/latch.rs","byte_start":66294,"byte_end":66304,"line_start":323,"line_end":323,"column_start":22,"column_end":32},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":1275},"to":{"krate":0,"index":255}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/latch.rs","byte_start":66512,"byte_end":66526,"line_start":336,"line_end":336,"column_start":6,"column_end":20},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":1280},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/latch.rs","byte_start":66972,"byte_end":66986,"line_start":356,"line_end":356,"column_start":16,"column_end":30},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":1280},"to":{"krate":0,"index":253}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/registry.rs","byte_start":68293,"byte_end":68306,"line_start":36,"line_end":36,"column_start":6,"column_end":19},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":428},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/registry.rs","byte_start":69007,"byte_end":69020,"line_start":59,"line_end":59,"column_start":21,"column_end":34},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":428},"to":{"krate":2,"index":8887}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/registry.rs","byte_start":70045,"byte_end":70057,"line_start":89,"line_end":89,"column_start":22,"column_end":34},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":1286},"to":{"krate":0,"index":441}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/registry.rs","byte_start":70703,"byte_end":70714,"line_start":112,"line_end":112,"column_start":9,"column_end":20},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":1293},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/registry.rs","byte_start":70875,"byte_end":70886,"line_start":121,"line_end":121,"column_start":25,"column_end":36},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":1293},"to":{"krate":0,"index":441}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/registry.rs","byte_start":73812,"byte_end":73822,"line_start":204,"line_end":204,"column_start":19,"column_end":29},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":473},"to":{"krate":2,"index":3088}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/registry.rs","byte_start":73895,"byte_end":73903,"line_start":210,"line_end":210,"column_start":6,"column_end":14},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":452},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/registry.rs","byte_start":87163,"byte_end":87173,"line_start":576,"line_end":576,"column_start":6,"column_end":16},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":515},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/registry.rs","byte_start":88224,"byte_end":88236,"line_start":614,"line_end":614,"column_start":15,"column_end":27},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":522},"to":{"krate":2,"index":3088}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/registry.rs","byte_start":88445,"byte_end":88457,"line_start":624,"line_end":624,"column_start":6,"column_end":18},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":522},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/registry.rs","byte_start":97551,"byte_end":97565,"line_start":890,"line_end":890,"column_start":6,"column_end":20},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":565},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":117095,"byte_end":117100,"line_start":479,"line_end":479,"column_start":14,"column_end":19},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":631},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":119731,"byte_end":119740,"line_start":556,"line_end":556,"column_start":14,"column_end":23},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":634},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":121531,"byte_end":121540,"line_start":602,"line_end":602,"column_start":14,"column_end":23},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":645},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":124309,"byte_end":124319,"line_start":688,"line_end":688,"column_start":6,"column_end":16},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":638},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":125790,"byte_end":125795,"line_start":737,"line_end":737,"column_start":29,"column_end":34},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":631},"to":{"krate":2,"index":8887}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":126140,"byte_end":126149,"line_start":747,"line_end":747,"column_start":29,"column_end":38},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":634},"to":{"krate":2,"index":8887}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/scope/mod.rs","byte_start":126541,"byte_end":126551,"line_start":758,"line_end":758,"column_start":21,"column_end":31},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":638},"to":{"krate":2,"index":8887}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/sleep/counters.rs","byte_start":142173,"byte_end":142189,"line_start":29,"line_end":29,"column_start":6,"column_end":22},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":1332},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/sleep/counters.rs","byte_start":143927,"byte_end":143941,"line_start":83,"line_end":83,"column_start":6,"column_end":20},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":759},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/sleep/counters.rs","byte_start":148906,"byte_end":148914,"line_start":217,"line_end":217,"column_start":6,"column_end":14},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":1327},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/sleep/counters.rs","byte_start":150194,"byte_end":150202,"line_start":261,"line_end":261,"column_start":26,"column_end":34},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":1327},"to":{"krate":2,"index":8887}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/sleep/mod.rs","byte_start":129117,"byte_end":129122,"line_start":63,"line_end":63,"column_start":6,"column_end":11},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":802},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/sleep/mod.rs","byte_start":140837,"byte_end":140846,"line_start":382,"line_end":382,"column_start":6,"column_end":15},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":806},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/thread_pool/mod.rs","byte_start":158982,"byte_end":158992,"line_start":56,"line_end":56,"column_start":6,"column_end":16},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":923},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/thread_pool/mod.rs","byte_start":167336,"byte_end":167346,"line_start":282,"line_end":282,"column_start":15,"column_end":25},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":923},"to":{"krate":2,"index":3088}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/thread_pool/mod.rs","byte_start":167438,"byte_end":167448,"line_start":288,"line_end":288,"column_start":21,"column_end":31},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":923},"to":{"krate":2,"index":8887}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/unwind.rs","byte_start":181352,"byte_end":181364,"line_start":26,"line_end":26,"column_start":15,"column_end":27},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":988},"to":{"krate":2,"index":3088}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":7159,"byte_end":7176,"line_start":196,"line_end":196,"column_start":18,"column_end":35},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":1058},"to":{"krate":2,"index":2831}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":7524,"byte_end":7541,"line_start":211,"line_end":211,"column_start":6,"column_end":23},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":1058},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":7867,"byte_end":7884,"line_start":220,"line_end":220,"column_start":9,"column_end":26},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":1058},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":9228,"byte_end":9245,"line_start":253,"line_end":253,"column_start":6,"column_end":23},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":1058},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":11781,"byte_end":11798,"line_start":321,"line_end":321,"column_start":9,"column_end":26},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":1058},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":22128,"byte_end":22141,"line_start":587,"line_end":587,"column_start":6,"column_end":19},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":1068},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":24440,"byte_end":24460,"line_start":660,"line_end":660,"column_start":6,"column_end":26},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":1351},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":24686,"byte_end":24706,"line_start":669,"line_end":669,"column_start":16,"column_end":36},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":1351},"to":{"krate":1,"index":2326}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":25191,"byte_end":25211,"line_start":686,"line_end":686,"column_start":23,"column_end":43},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":1351},"to":{"krate":2,"index":8894}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":25769,"byte_end":25786,"line_start":702,"line_end":702,"column_start":24,"column_end":41},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":1058},"to":{"krate":2,"index":8887}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":26295,"byte_end":26313,"line_start":718,"line_end":718,"column_start":29,"column_end":47},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":1141},"to":{"krate":2,"index":8887}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":27243,"byte_end":27256,"line_start":741,"line_end":741,"column_start":18,"column_end":31},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":1068},"to":{"krate":2,"index":2831}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":27411,"byte_end":27424,"line_start":750,"line_end":750,"column_start":21,"column_end":34},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":1068},"to":{"krate":2,"index":8887}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":27773,"byte_end":27782,"line_start":765,"line_end":765,"column_start":6,"column_end":15},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":1363},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-core-1.9.1/src/lib.rs","byte_start":27936,"byte_end":27945,"line_start":775,"line_end":775,"column_start":6,"column_end":15},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":1363},"to":{"krate":4294967295,"index":4294967295}}]}