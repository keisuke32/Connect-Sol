{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18","program":"/home/franglin/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","tokio_threadpool","/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","-C","metadata=63cd9185ef4de7c6","-C","extra-filename=-63cd9185ef4de7c6","--out-dir","/mnt/d/dev/blockchain/wormhole/solana/bridge/client/target/rls/debug/deps","-L","dependency=/mnt/d/dev/blockchain/wormhole/solana/bridge/client/target/rls/debug/deps","--extern","crossbeam_deque=/mnt/d/dev/blockchain/wormhole/solana/bridge/client/target/rls/debug/deps/libcrossbeam_deque-fd8559ce4b3f685f.rmeta","--extern","crossbeam_queue=/mnt/d/dev/blockchain/wormhole/solana/bridge/client/target/rls/debug/deps/libcrossbeam_queue-c62e1767396cacf7.rmeta","--extern","crossbeam_utils=/mnt/d/dev/blockchain/wormhole/solana/bridge/client/target/rls/debug/deps/libcrossbeam_utils-e78fb75e08e91df6.rmeta","--extern","futures=/mnt/d/dev/blockchain/wormhole/solana/bridge/client/target/rls/debug/deps/libfutures-533cf53875604e8f.rmeta","--extern","lazy_static=/mnt/d/dev/blockchain/wormhole/solana/bridge/client/target/rls/debug/deps/liblazy_static-8ca6dd8a6b189380.rmeta","--extern","log=/mnt/d/dev/blockchain/wormhole/solana/bridge/client/target/rls/debug/deps/liblog-f8abb66ffc16068c.rmeta","--extern","num_cpus=/mnt/d/dev/blockchain/wormhole/solana/bridge/client/target/rls/debug/deps/libnum_cpus-7e176301138c3c9b.rmeta","--extern","slab=/mnt/d/dev/blockchain/wormhole/solana/bridge/client/target/rls/debug/deps/libslab-373cdb0b273c2053.rmeta","--extern","tokio_executor=/mnt/d/dev/blockchain/wormhole/solana/bridge/client/target/rls/debug/deps/libtokio_executor-43edfe82cc6f03fb.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/franglin/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/mnt/d/dev/blockchain/wormhole/solana/bridge/client/target/rls/debug/deps/libtokio_threadpool-63cd9185ef4de7c6.rmeta"},"prelude":{"crate_id":{"name":"tokio_threadpool","disambiguator":[4029107979988394580,9481977988577337216]},"crate_root":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src","external_crates":[{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[15256637969148649584,12170509131058075833]}},{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[2572959971889902175,17506693968225989007]}},{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[7380289047210505863,13821127130725723065]}},{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[15494144285296940423,1517275930380298805]}},{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[16074686111301742862,11174094882134223101]}},{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[9848143689052418189,5596786287495938678]}},{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[4765876764407181064,11122159180720543906]}},{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[3249135693812064660,5763443684941168569]}},{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[17048817722375060837,16920886256309599893]}},{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[13552797903376776722,10482089333731059857]}},{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[5989449439605467183,7256304997069434828]}},{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/lib.rs","num":12,"id":{"name":"std_detect","disambiguator":[13279369789493161905,12463804053127379464]}},{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/lib.rs","num":13,"id":{"name":"addr2line","disambiguator":[295047501211602818,3843164955111373824]}},{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/lib.rs","num":14,"id":{"name":"gimli","disambiguator":[14781020588812023641,7393321088923443539]}},{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/lib.rs","num":15,"id":{"name":"object","disambiguator":[1927264790928947756,6617054577979570835]}},{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/lib.rs","num":16,"id":{"name":"miniz_oxide","disambiguator":[7597657085106642381,11470551509849691989]}},{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/lib.rs","num":17,"id":{"name":"adler","disambiguator":[2355022556203982070,155364045674250901]}},{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/lib.rs","num":18,"id":{"name":"panic_unwind","disambiguator":[3046834347757213021,4625500188193743608]}},{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/lib.rs","num":19,"id":{"name":"tokio_executor","disambiguator":[14801122330969740260,8838802444777889382]}},{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/lib.rs","num":20,"id":{"name":"crossbeam_utils","disambiguator":[12534548002795700682,6377004135340370492]}},{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/lib.rs","num":21,"id":{"name":"cfg_if","disambiguator":[16032648971317944029,3391597224278519551]}},{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/lib.rs","num":22,"id":{"name":"lazy_static","disambiguator":[358928172711118086,18042123231704770647]}},{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/lib.rs","num":23,"id":{"name":"spin","disambiguator":[436552169699734843,16437830209725182468]}},{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/lib.rs","num":24,"id":{"name":"futures","disambiguator":[10377875630904962133,4185390269822610161]}},{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/lib.rs","num":25,"id":{"name":"crossbeam_deque","disambiguator":[9097975007183281085,15811814998193167010]}},{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/lib.rs","num":26,"id":{"name":"crossbeam_epoch","disambiguator":[12379285022227096912,5835788873825070720]}},{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/lib.rs","num":27,"id":{"name":"maybe_uninit","disambiguator":[8840642970841884242,14517939032444527606]}},{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/lib.rs","num":28,"id":{"name":"memoffset","disambiguator":[3120916052747916648,18223224478827689694]}},{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/lib.rs","num":29,"id":{"name":"scopeguard","disambiguator":[2489176029422886084,9277911216960919523]}},{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/lib.rs","num":30,"id":{"name":"crossbeam_queue","disambiguator":[8027137187380197635,17199495546370111037]}},{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/lib.rs","num":31,"id":{"name":"num_cpus","disambiguator":[12764988720347730402,14318784881154619902]}},{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/lib.rs","num":32,"id":{"name":"libc","disambiguator":[7495792811259166552,15540293871745510339]}},{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/lib.rs","num":33,"id":{"name":"slab","disambiguator":[15082221935741963601,9737765728630811904]}},{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/lib.rs","num":34,"id":{"name":"log","disambiguator":[1497614942449303687,18379385341275479390]}},{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/lib.rs","num":35,"id":{"name":"cfg_if","disambiguator":[663853888918535240,12010312547204163862]}}],"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/lib.rs","byte_start":0,"byte_end":7227,"line_start":1,"line_end":174,"column_start":1,"column_end":36}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":65},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/blocking/mod.rs","byte_start":7371,"byte_end":7379,"line_start":10,"line_end":10,"column_start":23,"column_end":31},"alias_span":null,"name":"blocking","value":"","parent":{"krate":0,"index":12}},{"kind":"Use","ref_id":{"krate":0,"index":59},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/blocking/mod.rs","byte_start":7419,"byte_end":7430,"line_start":12,"line_end":12,"column_start":24,"column_end":35},"alias_span":null,"name":"set_default","value":"","parent":{"krate":0,"index":12}},{"kind":"Use","ref_id":{"krate":0,"index":62},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/blocking/mod.rs","byte_start":7432,"byte_end":7444,"line_start":12,"line_end":12,"column_start":37,"column_end":49},"alias_span":null,"name":"with_default","value":"","parent":{"krate":0,"index":12}},{"kind":"Use","ref_id":{"krate":0,"index":55},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/blocking/mod.rs","byte_start":7446,"byte_end":7458,"line_start":12,"line_end":12,"column_start":51,"column_end":63},"alias_span":null,"name":"DefaultGuard","value":"","parent":{"krate":0,"index":12}},{"kind":"Use","ref_id":{"krate":0,"index":1382},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/park/mod.rs","byte_start":35665,"byte_end":35676,"line_start":6,"line_end":6,"column_start":30,"column_end":41},"alias_span":null,"name":"DefaultPark","value":"","parent":{"krate":0,"index":279}},{"kind":"Use","ref_id":{"krate":0,"index":1386},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/park/mod.rs","byte_start":35678,"byte_end":35691,"line_start":6,"line_end":6,"column_start":43,"column_end":56},"alias_span":null,"name":"DefaultUnpark","value":"","parent":{"krate":0,"index":279}},{"kind":"Use","ref_id":{"krate":0,"index":1390},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/park/mod.rs","byte_start":35693,"byte_end":35702,"line_start":6,"line_end":6,"column_start":58,"column_end":67},"alias_span":null,"name":"ParkError","value":"","parent":{"krate":0,"index":279}},{"kind":"Use","ref_id":{"krate":0,"index":65},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/lib.rs","byte_start":7040,"byte_end":7048,"line_start":169,"line_end":169,"column_start":20,"column_end":28},"alias_span":null,"name":"blocking","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":90},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/lib.rs","byte_start":7050,"byte_end":7063,"line_start":169,"line_end":169,"column_start":30,"column_end":43},"alias_span":null,"name":"BlockingError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":179},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/lib.rs","byte_start":7083,"byte_end":7090,"line_start":170,"line_end":170,"column_start":18,"column_end":25},"alias_span":null,"name":"Builder","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1523},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/lib.rs","byte_start":7108,"byte_end":7114,"line_start":171,"line_end":171,"column_start":17,"column_end":23},"alias_span":null,"name":"Sender","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1527},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/lib.rs","byte_start":7134,"byte_end":7142,"line_start":172,"line_end":172,"column_start":19,"column_end":27},"alias_span":null,"name":"Shutdown","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1638},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/lib.rs","byte_start":7166,"byte_end":7177,"line_start":173,"line_end":173,"column_start":23,"column_end":34},"alias_span":null,"name":"SpawnHandle","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1629},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/lib.rs","byte_start":7179,"byte_end":7189,"line_start":173,"line_end":173,"column_start":36,"column_end":46},"alias_span":null,"name":"ThreadPool","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1708},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/lib.rs","byte_start":7209,"byte_end":7215,"line_start":174,"line_end":174,"column_start":18,"column_end":24},"alias_span":null,"name":"Worker","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1724},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/lib.rs","byte_start":7217,"byte_end":7225,"line_start":174,"line_end":174,"column_start":26,"column_end":34},"alias_span":null,"name":"WorkerId","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1725},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/lib.rs","byte_start":7217,"byte_end":7225,"line_start":174,"line_end":174,"column_start":26,"column_end":34},"alias_span":null,"name":"WorkerId","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/lib.rs","byte_start":0,"byte_end":7227,"line_start":1,"line_end":174,"column_start":1,"column_end":36},"name":"","qualname":"::","value":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":7},{"krate":0,"index":8},{"krate":0,"index":9},{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":12},{"krate":0,"index":105},{"krate":0,"index":208},{"krate":0,"index":227},{"krate":0,"index":246},{"krate":0,"index":279},{"krate":0,"index":372},{"krate":0,"index":633},{"krate":0,"index":694},{"krate":0,"index":736},{"krate":0,"index":957},{"krate":0,"index":1007},{"krate":0,"index":1323},{"krate":0,"index":1324},{"krate":0,"index":1327},{"krate":0,"index":1330},{"krate":0,"index":1333},{"krate":0,"index":1336},{"krate":0,"index":1339},{"krate":0,"index":1340},{"krate":0,"index":1343},{"krate":0,"index":1346},{"krate":0,"index":1347},{"krate":0,"index":1350},{"krate":0,"index":1351}],"decl_id":null,"docs":" A work-stealing based thread pool for executing futures.","sig":null,"attributes":[{"value":"deny(missing_docs, missing_debug_implementations)","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/lib.rs","byte_start":67,"byte_end":120,"line_start":2,"line_end":2,"column_start":1,"column_end":54}},{"value":"/ A work-stealing based thread pool for executing futures.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/lib.rs","byte_start":122,"byte_end":182,"line_start":4,"line_end":4,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/lib.rs","byte_start":183,"byte_end":186,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ > **Note:** This crate is **deprecated in tokio 0.2.x** and has been moved","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/lib.rs","byte_start":187,"byte_end":265,"line_start":6,"line_end":6,"column_start":1,"column_end":79}},{"value":"/ > and refactored into various places in the [`tokio::runtime`] module of the","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/lib.rs","byte_start":266,"byte_end":346,"line_start":7,"line_end":7,"column_start":1,"column_end":81}},{"value":"/ > [`tokio`] crate. Note that there is no longer a `ThreadPool` type, you are","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/lib.rs","byte_start":347,"byte_end":427,"line_start":8,"line_end":8,"column_start":1,"column_end":81}},{"value":"/ > instead encouraged to make use of the thread pool used by a `Runtime`","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/lib.rs","byte_start":428,"byte_end":503,"line_start":9,"line_end":9,"column_start":1,"column_end":76}},{"value":"/ > configured to use the [threaded scheduler].","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/lib.rs","byte_start":504,"byte_end":553,"line_start":10,"line_end":10,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/lib.rs","byte_start":554,"byte_end":557,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ [`tokio::runtime`]: https://docs.rs/tokio/latest/tokio/runtime/index.html","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/lib.rs","byte_start":558,"byte_end":635,"line_start":12,"line_end":12,"column_start":1,"column_end":78}},{"value":"/ [`tokio`]: https://docs.rs/tokio/latest/tokio/index.html","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/lib.rs","byte_start":636,"byte_end":696,"line_start":13,"line_end":13,"column_start":1,"column_end":61}},{"value":"/ [threaded scheduler]: https://docs.rs/tokio/latest/tokio/runtime/index.html#threaded-scheduler","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/lib.rs","byte_start":697,"byte_end":795,"line_start":14,"line_end":14,"column_start":1,"column_end":99}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/lib.rs","byte_start":796,"byte_end":799,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ The Tokio thread pool supports scheduling futures and processing them on","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/lib.rs","byte_start":800,"byte_end":876,"line_start":16,"line_end":16,"column_start":1,"column_end":77}},{"value":"/ multiple CPU cores. It is optimized for the primary Tokio use case of many","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/lib.rs","byte_start":877,"byte_end":955,"line_start":17,"line_end":17,"column_start":1,"column_end":79}},{"value":"/ independent tasks with limited computation and with most tasks waiting on","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/lib.rs","byte_start":956,"byte_end":1033,"line_start":18,"line_end":18,"column_start":1,"column_end":78}},{"value":"/ I/O. Usually, users will not create a `ThreadPool` instance directly, but","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/lib.rs","byte_start":1034,"byte_end":1111,"line_start":19,"line_end":19,"column_start":1,"column_end":78}},{"value":"/ will use one via a [`runtime`].","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/lib.rs","byte_start":1112,"byte_end":1147,"line_start":20,"line_end":20,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/lib.rs","byte_start":1148,"byte_end":1151,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ The `ThreadPool` structure manages two sets of threads:","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/lib.rs","byte_start":1152,"byte_end":1211,"line_start":22,"line_end":22,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/lib.rs","byte_start":1212,"byte_end":1215,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ * Worker threads.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/lib.rs","byte_start":1216,"byte_end":1237,"line_start":24,"line_end":24,"column_start":1,"column_end":22}},{"value":"/ * Backup threads.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/lib.rs","byte_start":1238,"byte_end":1259,"line_start":25,"line_end":25,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/lib.rs","byte_start":1260,"byte_end":1263,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ Worker threads are used to schedule futures using a work-stealing strategy.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/lib.rs","byte_start":1264,"byte_end":1343,"line_start":27,"line_end":27,"column_start":1,"column_end":80}},{"value":"/ Backup threads, on the other hand, are intended only to support the","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/lib.rs","byte_start":1344,"byte_end":1415,"line_start":28,"line_end":28,"column_start":1,"column_end":72}},{"value":"/ `blocking` API. Threads will transition between the two sets.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/lib.rs","byte_start":1416,"byte_end":1481,"line_start":29,"line_end":29,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/lib.rs","byte_start":1482,"byte_end":1485,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ The advantage of the work-stealing strategy is minimal cross-thread","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/lib.rs","byte_start":1486,"byte_end":1557,"line_start":31,"line_end":31,"column_start":1,"column_end":72}},{"value":"/ coordination. The thread pool attempts to make as much progress as possible","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/lib.rs","byte_start":1558,"byte_end":1637,"line_start":32,"line_end":32,"column_start":1,"column_end":80}},{"value":"/ without communicating across threads.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/lib.rs","byte_start":1638,"byte_end":1679,"line_start":33,"line_end":33,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/lib.rs","byte_start":1680,"byte_end":1683,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ ## Worker overview","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/lib.rs","byte_start":1684,"byte_end":1706,"line_start":35,"line_end":35,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/lib.rs","byte_start":1707,"byte_end":1710,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ Each worker has two queues: a deque and a mpsc channel. The deque is the","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/lib.rs","byte_start":1711,"byte_end":1787,"line_start":37,"line_end":37,"column_start":1,"column_end":77}},{"value":"/ primary queue for tasks that are scheduled to run on the worker thread. Tasks","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/lib.rs","byte_start":1788,"byte_end":1869,"line_start":38,"line_end":38,"column_start":1,"column_end":82}},{"value":"/ can only be pushed onto the deque by the worker, but other workers may","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/lib.rs","byte_start":1870,"byte_end":1944,"line_start":39,"line_end":39,"column_start":1,"column_end":75}},{"value":"/ \"steal\" from that deque. The mpsc channel is used to submit futures while","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/lib.rs","byte_start":1945,"byte_end":2022,"line_start":40,"line_end":40,"column_start":1,"column_end":78}},{"value":"/ external to the pool.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/lib.rs","byte_start":2023,"byte_end":2048,"line_start":41,"line_end":41,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/lib.rs","byte_start":2049,"byte_end":2052,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ As long as the thread pool has not been shutdown, a worker will run in a","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/lib.rs","byte_start":2053,"byte_end":2129,"line_start":43,"line_end":43,"column_start":1,"column_end":77}},{"value":"/ loop. Each loop, it consumes all tasks on its mpsc channel and pushes it onto","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/lib.rs","byte_start":2130,"byte_end":2211,"line_start":44,"line_end":44,"column_start":1,"column_end":82}},{"value":"/ the deque. It then pops tasks off of the deque and executes them.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/lib.rs","byte_start":2212,"byte_end":2281,"line_start":45,"line_end":45,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/lib.rs","byte_start":2282,"byte_end":2285,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ If a worker has no work, i.e., both queues are empty. It attempts to steal.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/lib.rs","byte_start":2286,"byte_end":2365,"line_start":47,"line_end":47,"column_start":1,"column_end":80}},{"value":"/ To do this, it randomly scans other workers' deques and tries to pop a task.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/lib.rs","byte_start":2366,"byte_end":2446,"line_start":48,"line_end":48,"column_start":1,"column_end":81}},{"value":"/ If it finds no work to steal, the thread goes to sleep.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/lib.rs","byte_start":2447,"byte_end":2506,"line_start":49,"line_end":49,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/lib.rs","byte_start":2507,"byte_end":2510,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ When the worker detects that the pool has been shut down, it exits the loop,","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/lib.rs","byte_start":2511,"byte_end":2591,"line_start":51,"line_end":51,"column_start":1,"column_end":81}},{"value":"/ cleans up its state, and shuts the thread down.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/lib.rs","byte_start":2592,"byte_end":2643,"line_start":52,"line_end":52,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/lib.rs","byte_start":2644,"byte_end":2647,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ ## Thread pool initialization","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/lib.rs","byte_start":2648,"byte_end":2681,"line_start":54,"line_end":54,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/lib.rs","byte_start":2682,"byte_end":2685,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ Note, users normally will use the threadpool created by a [`runtime`].","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/lib.rs","byte_start":2686,"byte_end":2760,"line_start":56,"line_end":56,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/lib.rs","byte_start":2761,"byte_end":2764,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ By default, no threads are spawned on creation. Instead, when new futures are","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/lib.rs","byte_start":2765,"byte_end":2846,"line_start":58,"line_end":58,"column_start":1,"column_end":82}},{"value":"/ spawned, the pool first checks if there are enough active worker threads. If","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/lib.rs","byte_start":2847,"byte_end":2927,"line_start":59,"line_end":59,"column_start":1,"column_end":81}},{"value":"/ not, a new worker thread is spawned.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/lib.rs","byte_start":2928,"byte_end":2968,"line_start":60,"line_end":60,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/lib.rs","byte_start":2969,"byte_end":2972,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ ## Spawning futures","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/lib.rs","byte_start":2973,"byte_end":2996,"line_start":62,"line_end":62,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/lib.rs","byte_start":2997,"byte_end":3000,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ The spawning behavior depends on whether a future was spawned from within a","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/lib.rs","byte_start":3001,"byte_end":3080,"line_start":64,"line_end":64,"column_start":1,"column_end":80}},{"value":"/ worker or thread or if it was spawned from an external handle.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/lib.rs","byte_start":3081,"byte_end":3147,"line_start":65,"line_end":65,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/lib.rs","byte_start":3148,"byte_end":3151,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ When spawning a future while external to the thread pool, the current","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/lib.rs","byte_start":3152,"byte_end":3225,"line_start":67,"line_end":67,"column_start":1,"column_end":74}},{"value":"/ strategy is to randomly pick a worker to submit the task to. The task is then","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/lib.rs","byte_start":3226,"byte_end":3307,"line_start":68,"line_end":68,"column_start":1,"column_end":82}},{"value":"/ pushed onto that worker's mpsc channel.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/lib.rs","byte_start":3308,"byte_end":3351,"line_start":69,"line_end":69,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/lib.rs","byte_start":3352,"byte_end":3355,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/ When spawning a future while on a worker thread, the task is pushed onto the","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/lib.rs","byte_start":3356,"byte_end":3436,"line_start":71,"line_end":71,"column_start":1,"column_end":81}},{"value":"/ back of the current worker's deque.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/lib.rs","byte_start":3437,"byte_end":3476,"line_start":72,"line_end":72,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/lib.rs","byte_start":3477,"byte_end":3480,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/ ## Blocking annotation strategy","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/lib.rs","byte_start":3481,"byte_end":3516,"line_start":74,"line_end":74,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/lib.rs","byte_start":3517,"byte_end":3520,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ The [`blocking`] function is used to annotate a section of code that","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/lib.rs","byte_start":3521,"byte_end":3593,"line_start":76,"line_end":76,"column_start":1,"column_end":73}},{"value":"/ performs a blocking operation, either by issuing a blocking syscall or","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/lib.rs","byte_start":3594,"byte_end":3668,"line_start":77,"line_end":77,"column_start":1,"column_end":75}},{"value":"/ performing any long running CPU-bound computation.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/lib.rs","byte_start":3669,"byte_end":3723,"line_start":78,"line_end":78,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/lib.rs","byte_start":3724,"byte_end":3727,"line_start":79,"line_end":79,"column_start":1,"column_end":4}},{"value":"/ The strategy for handling blocking closures is to hand off the worker to a","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/lib.rs","byte_start":3728,"byte_end":3806,"line_start":80,"line_end":80,"column_start":1,"column_end":79}},{"value":"/ new thread. This implies handing off the `deque` and `mpsc`. Once this is","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/lib.rs","byte_start":3807,"byte_end":3884,"line_start":81,"line_end":81,"column_start":1,"column_end":78}},{"value":"/ done, the new thread continues to process the work queue and the original","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/lib.rs","byte_start":3885,"byte_end":3962,"line_start":82,"line_end":82,"column_start":1,"column_end":78}},{"value":"/ thread is able to block. Once it finishes processing the blocking future, the","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/lib.rs","byte_start":3963,"byte_end":4044,"line_start":83,"line_end":83,"column_start":1,"column_end":82}},{"value":"/ thread has no additional work and is inserted into the backup pool. This","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/lib.rs","byte_start":4045,"byte_end":4121,"line_start":84,"line_end":84,"column_start":1,"column_end":77}},{"value":"/ makes it available to other workers that encounter a [`blocking`] call.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/lib.rs","byte_start":4122,"byte_end":4197,"line_start":85,"line_end":85,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/lib.rs","byte_start":4198,"byte_end":4201,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"/ [`blocking`]: fn.blocking.html","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/lib.rs","byte_start":4202,"byte_end":4236,"line_start":87,"line_end":87,"column_start":1,"column_end":35}},{"value":"/ [`runtime`]: https://docs.rs/tokio/0.1/tokio/runtime/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/lib.rs","byte_start":4237,"byte_end":4294,"line_start":88,"line_end":88,"column_start":1,"column_end":58}}]},{"kind":"Mod","id":{"krate":0,"index":12},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/blocking/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"blocking","qualname":"::blocking","value":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/blocking/mod.rs","parent":null,"children":[{"krate":0,"index":13},{"krate":0,"index":16},{"krate":0,"index":17},{"krate":0,"index":20},{"krate":0,"index":23},{"krate":0,"index":26},{"krate":0,"index":29},{"krate":0,"index":32},{"krate":0,"index":77},{"krate":0,"index":80},{"krate":0,"index":81},{"krate":0,"index":84},{"krate":0,"index":87},{"krate":0,"index":90},{"krate":0,"index":92},{"krate":0,"index":93},{"krate":0,"index":97},{"krate":0,"index":99},{"krate":0,"index":101},{"krate":0,"index":103}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":55},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/blocking/global.rs","byte_start":10388,"byte_end":10400,"line_start":19,"line_end":19,"column_start":12,"column_end":24},"name":"DefaultGuard","qualname":"::blocking::global::DefaultGuard","value":"DefaultGuard {  }","parent":null,"children":[{"krate":0,"index":57},{"krate":0,"index":58}],"decl_id":null,"docs":" Ensures that the executor is removed from the thread-local context\n when leaving the scope. This handles cases that involve panicking.","sig":null,"attributes":[{"value":"/ Ensures that the executor is removed from the thread-local context","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/blocking/global.rs","byte_start":9993,"byte_end":10063,"line_start":12,"line_end":12,"column_start":1,"column_end":71}},{"value":"/ when leaving the scope. This handles cases that involve panicking.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/blocking/global.rs","byte_start":10064,"byte_end":10134,"line_start":13,"line_end":13,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/blocking/global.rs","byte_start":10135,"byte_end":10138,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ **NOTE:** This is intended specifically for use by `tokio` 0.2's","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/blocking/global.rs","byte_start":10139,"byte_end":10207,"line_start":15,"line_end":15,"column_start":1,"column_end":69}},{"value":"/ backwards-compatibility layer. In general, user code should not override the","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/blocking/global.rs","byte_start":10208,"byte_end":10288,"line_start":16,"line_end":16,"column_start":1,"column_end":81}},{"value":"/ blocking implementation. If you use this, make sure you know what you're","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/blocking/global.rs","byte_start":10289,"byte_end":10365,"line_start":17,"line_end":17,"column_start":1,"column_end":77}},{"value":"/ doing.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/blocking/global.rs","byte_start":10366,"byte_end":10376,"line_start":18,"line_end":18,"column_start":1,"column_end":11}}]},{"kind":"Function","id":{"krate":0,"index":59},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/blocking/global.rs","byte_start":10841,"byte_end":10852,"line_start":31,"line_end":31,"column_start":8,"column_end":19},"name":"set_default","qualname":"::blocking::global::set_default","value":"pub fn set_default<'a>(BlockingImpl) -> DefaultGuard","parent":null,"children":[],"decl_id":null,"docs":" Set the default blocking implementation, returning a guard that resets the\n blocking implementation when dropped.","sig":null,"attributes":[{"value":"/ Set the default blocking implementation, returning a guard that resets the","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/blocking/global.rs","byte_start":10471,"byte_end":10549,"line_start":24,"line_end":24,"column_start":1,"column_end":79}},{"value":"/ blocking implementation when dropped.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/blocking/global.rs","byte_start":10550,"byte_end":10591,"line_start":25,"line_end":25,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/blocking/global.rs","byte_start":10592,"byte_end":10595,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ **NOTE:** This is intended specifically for use by `tokio` 0.2's","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/blocking/global.rs","byte_start":10596,"byte_end":10664,"line_start":27,"line_end":27,"column_start":1,"column_end":69}},{"value":"/ backwards-compatibility layer. In general, user code should not override the","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/blocking/global.rs","byte_start":10665,"byte_end":10745,"line_start":28,"line_end":28,"column_start":1,"column_end":81}},{"value":"/ blocking implementation. If you use this, make sure you know what you're","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/blocking/global.rs","byte_start":10746,"byte_end":10822,"line_start":29,"line_end":29,"column_start":1,"column_end":77}},{"value":"/ doing.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/blocking/global.rs","byte_start":10823,"byte_end":10833,"line_start":30,"line_end":30,"column_start":1,"column_end":11}}]},{"kind":"Function","id":{"krate":0,"index":62},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/blocking/global.rs","byte_start":11397,"byte_end":11409,"line_start":47,"line_end":47,"column_start":8,"column_end":20},"name":"with_default","qualname":"::blocking::global::with_default","value":"pub fn with_default<F, R>(BlockingImpl, &mut Enter, F) -> R where\nF: FnOnce(&mut Enter) -> R","parent":null,"children":[],"decl_id":null,"docs":" Set the default blocking implementation for the duration of the closure.","sig":null,"attributes":[{"value":"/ Set the default blocking implementation for the duration of the closure.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/blocking/global.rs","byte_start":11071,"byte_end":11147,"line_start":41,"line_end":41,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/blocking/global.rs","byte_start":11148,"byte_end":11151,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ **NOTE:** This is intended specifically for use by `tokio` 0.2's","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/blocking/global.rs","byte_start":11152,"byte_end":11220,"line_start":43,"line_end":43,"column_start":1,"column_end":69}},{"value":"/ backwards-compatibility layer. In general, user code should not override the","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/blocking/global.rs","byte_start":11221,"byte_end":11301,"line_start":44,"line_end":44,"column_start":1,"column_end":81}},{"value":"/ blocking implementation. If you use this, make sure you know what you're","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/blocking/global.rs","byte_start":11302,"byte_end":11378,"line_start":45,"line_end":45,"column_start":1,"column_end":77}},{"value":"/ doing.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/blocking/global.rs","byte_start":11379,"byte_end":11389,"line_start":46,"line_end":46,"column_start":1,"column_end":11}}]},{"kind":"Function","id":{"krate":0,"index":65},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/blocking/global.rs","byte_start":15891,"byte_end":15899,"line_start":166,"line_end":166,"column_start":8,"column_end":16},"name":"blocking","qualname":"::blocking::global::blocking","value":"pub fn blocking<F, T>(F) -> Poll<T, BlockingError> where F: FnOnce() -> T","parent":null,"children":[],"decl_id":null,"docs":" Enter a blocking section of code.","sig":null,"attributes":[{"value":"/ Enter a blocking section of code.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/blocking/global.rs","byte_start":11566,"byte_end":11603,"line_start":55,"line_end":55,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/blocking/global.rs","byte_start":11604,"byte_end":11607,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ The `blocking` function annotates a section of code that performs a blocking","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/blocking/global.rs","byte_start":11608,"byte_end":11688,"line_start":57,"line_end":57,"column_start":1,"column_end":81}},{"value":"/ operation, either by issuing a blocking syscall or by performing a long","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/blocking/global.rs","byte_start":11689,"byte_end":11764,"line_start":58,"line_end":58,"column_start":1,"column_end":76}},{"value":"/ running CPU-bound computation.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/blocking/global.rs","byte_start":11765,"byte_end":11799,"line_start":59,"line_end":59,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/blocking/global.rs","byte_start":11800,"byte_end":11803,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/ When the `blocking` function enters, it hands off the responsibility of","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/blocking/global.rs","byte_start":11804,"byte_end":11879,"line_start":61,"line_end":61,"column_start":1,"column_end":76}},{"value":"/ processing the current work queue to another thread. Then, it calls the","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/blocking/global.rs","byte_start":11880,"byte_end":11955,"line_start":62,"line_end":62,"column_start":1,"column_end":76}},{"value":"/ supplied closure. The closure is permitted to block indefinitely.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/blocking/global.rs","byte_start":11956,"byte_end":12025,"line_start":63,"line_end":63,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/blocking/global.rs","byte_start":12026,"byte_end":12029,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ If the maximum number of concurrent `blocking` calls has been reached, then","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/blocking/global.rs","byte_start":12030,"byte_end":12109,"line_start":65,"line_end":65,"column_start":1,"column_end":80}},{"value":"/ `NotReady` is returned and the task is notified once existing `blocking`","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/blocking/global.rs","byte_start":12110,"byte_end":12186,"line_start":66,"line_end":66,"column_start":1,"column_end":77}},{"value":"/ calls complete. The maximum value is specified when creating a thread pool","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/blocking/global.rs","byte_start":12187,"byte_end":12265,"line_start":67,"line_end":67,"column_start":1,"column_end":79}},{"value":"/ using [`Builder::max_blocking`][build]","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/blocking/global.rs","byte_start":12266,"byte_end":12308,"line_start":68,"line_end":68,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/blocking/global.rs","byte_start":12309,"byte_end":12312,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ NB: The entire task that called `blocking` is blocked whenever the supplied","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/blocking/global.rs","byte_start":12313,"byte_end":12392,"line_start":70,"line_end":70,"column_start":1,"column_end":80}},{"value":"/ closure blocks, even if you have used future combinators such as `select` -","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/blocking/global.rs","byte_start":12393,"byte_end":12472,"line_start":71,"line_end":71,"column_start":1,"column_end":80}},{"value":"/ the other futures in this task will not make progress until the closure","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/blocking/global.rs","byte_start":12473,"byte_end":12548,"line_start":72,"line_end":72,"column_start":1,"column_end":76}},{"value":"/ returns.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/blocking/global.rs","byte_start":12549,"byte_end":12561,"line_start":73,"line_end":73,"column_start":1,"column_end":13}},{"value":"/ If this is not desired, ensure that `blocking` runs in its own task (e.g.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/blocking/global.rs","byte_start":12562,"byte_end":12639,"line_start":74,"line_end":74,"column_start":1,"column_end":78}},{"value":"/ using `futures::sync::oneshot::spawn`).","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/blocking/global.rs","byte_start":12640,"byte_end":12683,"line_start":75,"line_end":75,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/blocking/global.rs","byte_start":12684,"byte_end":12687,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ [build]: struct.Builder.html#method.max_blocking","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/blocking/global.rs","byte_start":12688,"byte_end":12740,"line_start":77,"line_end":77,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/blocking/global.rs","byte_start":12741,"byte_end":12744,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ # Return","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/blocking/global.rs","byte_start":12745,"byte_end":12757,"line_start":79,"line_end":79,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/blocking/global.rs","byte_start":12758,"byte_end":12761,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/ When the blocking closure is executed, `Ok(Ready(T))` is returned, where","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/blocking/global.rs","byte_start":12762,"byte_end":12838,"line_start":81,"line_end":81,"column_start":1,"column_end":77}},{"value":"/ `T` is the closure's return value.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/blocking/global.rs","byte_start":12839,"byte_end":12877,"line_start":82,"line_end":82,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/blocking/global.rs","byte_start":12878,"byte_end":12881,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"/ If the thread pool has shutdown, `Err` is returned.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/blocking/global.rs","byte_start":12882,"byte_end":12937,"line_start":84,"line_end":84,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/blocking/global.rs","byte_start":12938,"byte_end":12941,"line_start":85,"line_end":85,"column_start":1,"column_end":4}},{"value":"/ If the number of concurrent `blocking` calls has reached the maximum,","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/blocking/global.rs","byte_start":12942,"byte_end":13015,"line_start":86,"line_end":86,"column_start":1,"column_end":74}},{"value":"/ `Ok(NotReady)` is returned and the current task is notified when a call to","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/blocking/global.rs","byte_start":13016,"byte_end":13094,"line_start":87,"line_end":87,"column_start":1,"column_end":79}},{"value":"/ `blocking` will succeed.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/blocking/global.rs","byte_start":13095,"byte_end":13123,"line_start":88,"line_end":88,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/blocking/global.rs","byte_start":13124,"byte_end":13127,"line_start":89,"line_end":89,"column_start":1,"column_end":4}},{"value":"/ If `blocking` is called from outside the context of a Tokio thread pool,","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/blocking/global.rs","byte_start":13128,"byte_end":13204,"line_start":90,"line_end":90,"column_start":1,"column_end":77}},{"value":"/ `Err` is returned.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/blocking/global.rs","byte_start":13205,"byte_end":13227,"line_start":91,"line_end":91,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/blocking/global.rs","byte_start":13228,"byte_end":13231,"line_start":92,"line_end":92,"column_start":1,"column_end":4}},{"value":"/ # Background","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/blocking/global.rs","byte_start":13232,"byte_end":13248,"line_start":93,"line_end":93,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/blocking/global.rs","byte_start":13249,"byte_end":13252,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/ By default, the Tokio thread pool expects that tasks will only run for short","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/blocking/global.rs","byte_start":13253,"byte_end":13333,"line_start":95,"line_end":95,"column_start":1,"column_end":81}},{"value":"/ periods at a time before yielding back to the thread pool. This is the basic","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/blocking/global.rs","byte_start":13334,"byte_end":13414,"line_start":96,"line_end":96,"column_start":1,"column_end":81}},{"value":"/ premise of cooperative multitasking.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/blocking/global.rs","byte_start":13415,"byte_end":13455,"line_start":97,"line_end":97,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/blocking/global.rs","byte_start":13456,"byte_end":13459,"line_start":98,"line_end":98,"column_start":1,"column_end":4}},{"value":"/ However, it is common to want to perform a blocking operation while","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/blocking/global.rs","byte_start":13460,"byte_end":13531,"line_start":99,"line_end":99,"column_start":1,"column_end":72}},{"value":"/ processing an asynchronous computation. Examples of blocking operation","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/blocking/global.rs","byte_start":13532,"byte_end":13606,"line_start":100,"line_end":100,"column_start":1,"column_end":75}},{"value":"/ include:","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/blocking/global.rs","byte_start":13607,"byte_end":13619,"line_start":101,"line_end":101,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/blocking/global.rs","byte_start":13620,"byte_end":13623,"line_start":102,"line_end":102,"column_start":1,"column_end":4}},{"value":"/ * Performing synchronous file operations (reading and writing).","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/blocking/global.rs","byte_start":13624,"byte_end":13691,"line_start":103,"line_end":103,"column_start":1,"column_end":68}},{"value":"/ * Blocking on acquiring a mutex.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/blocking/global.rs","byte_start":13692,"byte_end":13728,"line_start":104,"line_end":104,"column_start":1,"column_end":37}},{"value":"/ * Performing a CPU bound computation, like cryptographic encryption or","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/blocking/global.rs","byte_start":13729,"byte_end":13803,"line_start":105,"line_end":105,"column_start":1,"column_end":75}},{"value":"/   decryption.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/blocking/global.rs","byte_start":13804,"byte_end":13821,"line_start":106,"line_end":106,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/blocking/global.rs","byte_start":13822,"byte_end":13825,"line_start":107,"line_end":107,"column_start":1,"column_end":4}},{"value":"/ One option for dealing with blocking operations in an asynchronous context","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/blocking/global.rs","byte_start":13826,"byte_end":13904,"line_start":108,"line_end":108,"column_start":1,"column_end":79}},{"value":"/ is to use a thread pool dedicated to performing these operations. This not","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/blocking/global.rs","byte_start":13905,"byte_end":13983,"line_start":109,"line_end":109,"column_start":1,"column_end":79}},{"value":"/ ideal as it requires bidirectional message passing as well as a channel to","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/blocking/global.rs","byte_start":13984,"byte_end":14062,"line_start":110,"line_end":110,"column_start":1,"column_end":79}},{"value":"/ communicate which adds a level of buffering.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/blocking/global.rs","byte_start":14063,"byte_end":14111,"line_start":111,"line_end":111,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/blocking/global.rs","byte_start":14112,"byte_end":14115,"line_start":112,"line_end":112,"column_start":1,"column_end":4}},{"value":"/ Instead, `blocking` hands off the responsibility of processing the work queue","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/blocking/global.rs","byte_start":14116,"byte_end":14197,"line_start":113,"line_end":113,"column_start":1,"column_end":82}},{"value":"/ to another thread. This hand off is light compared to a channel and does not","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/blocking/global.rs","byte_start":14198,"byte_end":14278,"line_start":114,"line_end":114,"column_start":1,"column_end":81}},{"value":"/ require buffering.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/blocking/global.rs","byte_start":14279,"byte_end":14301,"line_start":115,"line_end":115,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/blocking/global.rs","byte_start":14302,"byte_end":14305,"line_start":116,"line_end":116,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/blocking/global.rs","byte_start":14306,"byte_end":14320,"line_start":117,"line_end":117,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/blocking/global.rs","byte_start":14321,"byte_end":14324,"line_start":118,"line_end":118,"column_start":1,"column_end":4}},{"value":"/ Block on receiving a message from a `std` channel. This example is a little","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/blocking/global.rs","byte_start":14325,"byte_end":14404,"line_start":119,"line_end":119,"column_start":1,"column_end":80}},{"value":"/ silly as using the non-blocking channel from the `futures` crate would make","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/blocking/global.rs","byte_start":14405,"byte_end":14484,"line_start":120,"line_end":120,"column_start":1,"column_end":80}},{"value":"/ more sense. The blocking receive can be replaced with any blocking operation","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/blocking/global.rs","byte_start":14485,"byte_end":14565,"line_start":121,"line_end":121,"column_start":1,"column_end":81}},{"value":"/ that needs to be performed.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/blocking/global.rs","byte_start":14566,"byte_end":14597,"line_start":122,"line_end":122,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/blocking/global.rs","byte_start":14598,"byte_end":14601,"line_start":123,"line_end":123,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/blocking/global.rs","byte_start":14602,"byte_end":14613,"line_start":124,"line_end":124,"column_start":1,"column_end":12}},{"value":"/ # extern crate futures;","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/blocking/global.rs","byte_start":14614,"byte_end":14641,"line_start":125,"line_end":125,"column_start":1,"column_end":28}},{"value":"/ # extern crate tokio_threadpool;","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/blocking/global.rs","byte_start":14642,"byte_end":14678,"line_start":126,"line_end":126,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/blocking/global.rs","byte_start":14679,"byte_end":14682,"line_start":127,"line_end":127,"column_start":1,"column_end":4}},{"value":"/ use tokio_threadpool::{ThreadPool, blocking};","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/blocking/global.rs","byte_start":14683,"byte_end":14732,"line_start":128,"line_end":128,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/blocking/global.rs","byte_start":14733,"byte_end":14736,"line_start":129,"line_end":129,"column_start":1,"column_end":4}},{"value":"/ use futures::Future;","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/blocking/global.rs","byte_start":14737,"byte_end":14761,"line_start":130,"line_end":130,"column_start":1,"column_end":25}},{"value":"/ use futures::future::{lazy, poll_fn};","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/blocking/global.rs","byte_start":14762,"byte_end":14803,"line_start":131,"line_end":131,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/blocking/global.rs","byte_start":14804,"byte_end":14807,"line_start":132,"line_end":132,"column_start":1,"column_end":4}},{"value":"/ use std::sync::mpsc;","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/blocking/global.rs","byte_start":14808,"byte_end":14832,"line_start":133,"line_end":133,"column_start":1,"column_end":25}},{"value":"/ use std::thread;","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/blocking/global.rs","byte_start":14833,"byte_end":14853,"line_start":134,"line_end":134,"column_start":1,"column_end":21}},{"value":"/ use std::time::Duration;","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/blocking/global.rs","byte_start":14854,"byte_end":14882,"line_start":135,"line_end":135,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/blocking/global.rs","byte_start":14883,"byte_end":14886,"line_start":136,"line_end":136,"column_start":1,"column_end":4}},{"value":"/ pub fn main() {","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/blocking/global.rs","byte_start":14887,"byte_end":14906,"line_start":137,"line_end":137,"column_start":1,"column_end":20}},{"value":"/     // This is a *blocking* channel","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/blocking/global.rs","byte_start":14907,"byte_end":14946,"line_start":138,"line_end":138,"column_start":1,"column_end":40}},{"value":"/     let (tx, rx) = mpsc::channel();","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/blocking/global.rs","byte_start":14947,"byte_end":14986,"line_start":139,"line_end":139,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/blocking/global.rs","byte_start":14987,"byte_end":14990,"line_start":140,"line_end":140,"column_start":1,"column_end":4}},{"value":"/     // Spawn a thread to send a message","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/blocking/global.rs","byte_start":14991,"byte_end":15034,"line_start":141,"line_end":141,"column_start":1,"column_end":44}},{"value":"/     thread::spawn(move || {","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/blocking/global.rs","byte_start":15035,"byte_end":15066,"line_start":142,"line_end":142,"column_start":1,"column_end":32}},{"value":"/         thread::sleep(Duration::from_millis(500));","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/blocking/global.rs","byte_start":15067,"byte_end":15121,"line_start":143,"line_end":143,"column_start":1,"column_end":55}},{"value":"/         tx.send(\"hello\").unwrap();","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/blocking/global.rs","byte_start":15122,"byte_end":15160,"line_start":144,"line_end":144,"column_start":1,"column_end":39}},{"value":"/     });","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/blocking/global.rs","byte_start":15161,"byte_end":15172,"line_start":145,"line_end":145,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/blocking/global.rs","byte_start":15173,"byte_end":15176,"line_start":146,"line_end":146,"column_start":1,"column_end":4}},{"value":"/     let pool = ThreadPool::new();","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/blocking/global.rs","byte_start":15177,"byte_end":15214,"line_start":147,"line_end":147,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/blocking/global.rs","byte_start":15215,"byte_end":15218,"line_start":148,"line_end":148,"column_start":1,"column_end":4}},{"value":"/     pool.spawn(lazy(move || {","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/blocking/global.rs","byte_start":15219,"byte_end":15252,"line_start":149,"line_end":149,"column_start":1,"column_end":34}},{"value":"/         // Because `blocking` returns `Poll`, it is intended to be used","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/blocking/global.rs","byte_start":15253,"byte_end":15328,"line_start":150,"line_end":150,"column_start":1,"column_end":76}},{"value":"/         // from the context of a `Future` implementation. Since we don't","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/blocking/global.rs","byte_start":15329,"byte_end":15405,"line_start":151,"line_end":151,"column_start":1,"column_end":77}},{"value":"/         // have a complicated requirement, we can use `poll_fn` in this","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/blocking/global.rs","byte_start":15406,"byte_end":15481,"line_start":152,"line_end":152,"column_start":1,"column_end":76}},{"value":"/         // case.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/blocking/global.rs","byte_start":15482,"byte_end":15502,"line_start":153,"line_end":153,"column_start":1,"column_end":21}},{"value":"/         poll_fn(move || {","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/blocking/global.rs","byte_start":15503,"byte_end":15532,"line_start":154,"line_end":154,"column_start":1,"column_end":30}},{"value":"/             blocking(|| {","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/blocking/global.rs","byte_start":15533,"byte_end":15562,"line_start":155,"line_end":155,"column_start":1,"column_end":30}},{"value":"/                 let msg = rx.recv().unwrap();","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/blocking/global.rs","byte_start":15563,"byte_end":15612,"line_start":156,"line_end":156,"column_start":1,"column_end":50}},{"value":"/                 println!(\"message = {}\", msg);","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/blocking/global.rs","byte_start":15613,"byte_end":15663,"line_start":157,"line_end":157,"column_start":1,"column_end":51}},{"value":"/             }).map_err(|_| panic!(\"the threadpool shut down\"))","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/blocking/global.rs","byte_start":15664,"byte_end":15730,"line_start":158,"line_end":158,"column_start":1,"column_end":67}},{"value":"/         })","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/blocking/global.rs","byte_start":15731,"byte_end":15745,"line_start":159,"line_end":159,"column_start":1,"column_end":15}},{"value":"/     }));","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/blocking/global.rs","byte_start":15746,"byte_end":15758,"line_start":160,"line_end":160,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/blocking/global.rs","byte_start":15759,"byte_end":15762,"line_start":161,"line_end":161,"column_start":1,"column_end":4}},{"value":"/     // Wait for the task we just spawned to complete.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/blocking/global.rs","byte_start":15763,"byte_end":15820,"line_start":162,"line_end":162,"column_start":1,"column_end":58}},{"value":"/     pool.shutdown_on_idle().wait().unwrap();","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/blocking/global.rs","byte_start":15821,"byte_end":15869,"line_start":163,"line_end":163,"column_start":1,"column_end":49}},{"value":"/ }","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/blocking/global.rs","byte_start":15870,"byte_end":15875,"line_start":164,"line_end":164,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/blocking/global.rs","byte_start":15876,"byte_end":15883,"line_start":165,"line_end":165,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":90},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/blocking/mod.rs","byte_start":7505,"byte_end":7518,"line_start":15,"line_end":15,"column_start":12,"column_end":25},"name":"BlockingError","qualname":"::blocking::BlockingError","value":"BlockingError {  }","parent":null,"children":[{"krate":0,"index":91}],"decl_id":null,"docs":" Error raised by `blocking`.\n","sig":null,"attributes":[{"value":"/ Error raised by `blocking`.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/blocking/mod.rs","byte_start":7462,"byte_end":7493,"line_start":14,"line_end":14,"column_start":1,"column_end":32}}]},{"kind":"Type","id":{"krate":0,"index":92},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/blocking/mod.rs","byte_start":7871,"byte_end":7883,"line_start":26,"line_end":26,"column_start":10,"column_end":22},"name":"BlockingImpl","qualname":"::blocking::BlockingImpl","value":"fn(: &mut dyn FnMut() -> ()) -> Poll<(), BlockingError>","parent":null,"children":[],"decl_id":null,"docs":" A function implementing the behavior run on calls to `blocking`.","sig":null,"attributes":[{"value":"/ A function implementing the behavior run on calls to `blocking`.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/blocking/mod.rs","byte_start":7536,"byte_end":7604,"line_start":19,"line_end":19,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/blocking/mod.rs","byte_start":7605,"byte_end":7608,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ **NOTE:** This is intended specifically for use by `tokio` 0.2's","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/blocking/mod.rs","byte_start":7609,"byte_end":7677,"line_start":21,"line_end":21,"column_start":1,"column_end":69}},{"value":"/ backwards-compatibility layer. In general, user code should not override the","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/blocking/mod.rs","byte_start":7678,"byte_end":7758,"line_start":22,"line_end":22,"column_start":1,"column_end":81}},{"value":"/ blocking implementation. If you use this, make sure you know what you're","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/blocking/mod.rs","byte_start":7759,"byte_end":7835,"line_start":23,"line_end":23,"column_start":1,"column_end":77}},{"value":"/ doing.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/blocking/mod.rs","byte_start":7836,"byte_end":7846,"line_start":24,"line_end":24,"column_start":1,"column_end":11}}]},{"kind":"Method","id":{"krate":0,"index":98},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/blocking/mod.rs","byte_start":9169,"byte_end":9172,"line_start":65,"line_end":65,"column_start":12,"column_end":15},"name":"new","qualname":"<BlockingError>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a new `BlockingError`.\n","sig":null,"attributes":[{"value":"/ Returns a new `BlockingError`.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/blocking/mod.rs","byte_start":9104,"byte_end":9138,"line_start":63,"line_end":63,"column_start":5,"column_end":39}}]},{"kind":"Struct","id":{"krate":0,"index":179},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/builder.rs","byte_start":19106,"byte_end":19113,"line_start":58,"line_end":58,"column_start":12,"column_end":19},"name":"Builder","qualname":"::builder::Builder","value":"Builder {  }","parent":null,"children":[{"krate":0,"index":180},{"krate":0,"index":181},{"krate":0,"index":182},{"krate":0,"index":183}],"decl_id":null,"docs":" Builds a thread pool with custom configuration values.","sig":null,"attributes":[{"value":"/ Builds a thread pool with custom configuration values.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/builder.rs","byte_start":18101,"byte_end":18159,"line_start":21,"line_end":21,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/builder.rs","byte_start":18160,"byte_end":18163,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ Methods can be chained in order to set the configuration values. The thread","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/builder.rs","byte_start":18164,"byte_end":18243,"line_start":23,"line_end":23,"column_start":1,"column_end":80}},{"value":"/ pool is constructed by calling [`build`].","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/builder.rs","byte_start":18244,"byte_end":18289,"line_start":24,"line_end":24,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/builder.rs","byte_start":18290,"byte_end":18293,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ New instances of `Builder` are obtained via [`Builder::new`].","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/builder.rs","byte_start":18294,"byte_end":18359,"line_start":26,"line_end":26,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/builder.rs","byte_start":18360,"byte_end":18363,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ See function level documentation for details on the various configuration","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/builder.rs","byte_start":18364,"byte_end":18441,"line_start":28,"line_end":28,"column_start":1,"column_end":78}},{"value":"/ settings.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/builder.rs","byte_start":18442,"byte_end":18455,"line_start":29,"line_end":29,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/builder.rs","byte_start":18456,"byte_end":18459,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ [`build`]: #method.build","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/builder.rs","byte_start":18460,"byte_end":18488,"line_start":31,"line_end":31,"column_start":1,"column_end":29}},{"value":"/ [`Builder::new`]: #method.new","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/builder.rs","byte_start":18489,"byte_end":18522,"line_start":32,"line_end":32,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/builder.rs","byte_start":18523,"byte_end":18526,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/builder.rs","byte_start":18527,"byte_end":18541,"line_start":34,"line_end":34,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/builder.rs","byte_start":18542,"byte_end":18545,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/builder.rs","byte_start":18546,"byte_end":18553,"line_start":36,"line_end":36,"column_start":1,"column_end":8}},{"value":"/ # extern crate tokio_threadpool;","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/builder.rs","byte_start":18554,"byte_end":18590,"line_start":37,"line_end":37,"column_start":1,"column_end":37}},{"value":"/ # extern crate futures;","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/builder.rs","byte_start":18591,"byte_end":18618,"line_start":38,"line_end":38,"column_start":1,"column_end":28}},{"value":"/ # use tokio_threadpool::Builder;","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/builder.rs","byte_start":18619,"byte_end":18655,"line_start":39,"line_end":39,"column_start":1,"column_end":37}},{"value":"/ use futures::future::{Future, lazy};","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/builder.rs","byte_start":18656,"byte_end":18696,"line_start":40,"line_end":40,"column_start":1,"column_end":41}},{"value":"/ use std::time::Duration;","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/builder.rs","byte_start":18697,"byte_end":18725,"line_start":41,"line_end":41,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/builder.rs","byte_start":18726,"byte_end":18729,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ # pub fn main() {","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/builder.rs","byte_start":18730,"byte_end":18751,"line_start":43,"line_end":43,"column_start":1,"column_end":22}},{"value":"/ let thread_pool = Builder::new()","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/builder.rs","byte_start":18752,"byte_end":18788,"line_start":44,"line_end":44,"column_start":1,"column_end":37}},{"value":"/     .pool_size(4)","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/builder.rs","byte_start":18789,"byte_end":18810,"line_start":45,"line_end":45,"column_start":1,"column_end":22}},{"value":"/     .keep_alive(Some(Duration::from_secs(30)))","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/builder.rs","byte_start":18811,"byte_end":18861,"line_start":46,"line_end":46,"column_start":1,"column_end":51}},{"value":"/     .build();","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/builder.rs","byte_start":18862,"byte_end":18879,"line_start":47,"line_end":47,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/builder.rs","byte_start":18880,"byte_end":18883,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ thread_pool.spawn(lazy(|| {","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/builder.rs","byte_start":18884,"byte_end":18915,"line_start":49,"line_end":49,"column_start":1,"column_end":32}},{"value":"/     println!(\"called from a worker thread\");","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/builder.rs","byte_start":18916,"byte_end":18964,"line_start":50,"line_end":50,"column_start":1,"column_end":49}},{"value":"/     Ok(())","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/builder.rs","byte_start":18965,"byte_end":18979,"line_start":51,"line_end":51,"column_start":1,"column_end":15}},{"value":"/ }));","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/builder.rs","byte_start":18980,"byte_end":18988,"line_start":52,"line_end":52,"column_start":1,"column_end":9}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/builder.rs","byte_start":18989,"byte_end":18992,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ // Gracefully shutdown the threadpool","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/builder.rs","byte_start":18993,"byte_end":19034,"line_start":54,"line_end":54,"column_start":1,"column_end":42}},{"value":"/ thread_pool.shutdown().wait().unwrap();","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/builder.rs","byte_start":19035,"byte_end":19078,"line_start":55,"line_end":55,"column_start":1,"column_end":44}},{"value":"/ # }","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/builder.rs","byte_start":19079,"byte_end":19086,"line_start":56,"line_end":56,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/builder.rs","byte_start":19087,"byte_end":19094,"line_start":57,"line_end":57,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":185},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/builder.rs","byte_start":20045,"byte_end":20048,"line_start":94,"line_end":94,"column_start":12,"column_end":15},"name":"new","qualname":"<Builder>::new","value":"pub fn new() -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Returns a new thread pool builder initialized with default configuration\n values.","sig":null,"attributes":[{"value":"/ Returns a new thread pool builder initialized with default configuration","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/builder.rs","byte_start":19471,"byte_end":19547,"line_start":74,"line_end":74,"column_start":5,"column_end":81}},{"value":"/ values.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/builder.rs","byte_start":19552,"byte_end":19563,"line_start":75,"line_end":75,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/builder.rs","byte_start":19568,"byte_end":19571,"line_start":76,"line_end":76,"column_start":5,"column_end":8}},{"value":"/ Configuration methods can be chained on the return value.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/builder.rs","byte_start":19576,"byte_end":19637,"line_start":77,"line_end":77,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/builder.rs","byte_start":19642,"byte_end":19645,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/builder.rs","byte_start":19650,"byte_end":19664,"line_start":79,"line_end":79,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/builder.rs","byte_start":19669,"byte_end":19672,"line_start":80,"line_end":80,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/builder.rs","byte_start":19677,"byte_end":19684,"line_start":81,"line_end":81,"column_start":5,"column_end":12}},{"value":"/ # extern crate tokio_threadpool;","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/builder.rs","byte_start":19689,"byte_end":19725,"line_start":82,"line_end":82,"column_start":5,"column_end":41}},{"value":"/ # extern crate futures;","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/builder.rs","byte_start":19730,"byte_end":19757,"line_start":83,"line_end":83,"column_start":5,"column_end":32}},{"value":"/ # use tokio_threadpool::Builder;","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/builder.rs","byte_start":19762,"byte_end":19798,"line_start":84,"line_end":84,"column_start":5,"column_end":41}},{"value":"/ use std::time::Duration;","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/builder.rs","byte_start":19803,"byte_end":19831,"line_start":85,"line_end":85,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/builder.rs","byte_start":19836,"byte_end":19839,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ # pub fn main() {","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/builder.rs","byte_start":19844,"byte_end":19865,"line_start":87,"line_end":87,"column_start":5,"column_end":26}},{"value":"/ let thread_pool = Builder::new()","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/builder.rs","byte_start":19870,"byte_end":19906,"line_start":88,"line_end":88,"column_start":5,"column_end":41}},{"value":"/     .pool_size(4)","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/builder.rs","byte_start":19911,"byte_end":19932,"line_start":89,"line_end":89,"column_start":5,"column_end":26}},{"value":"/     .keep_alive(Some(Duration::from_secs(30)))","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/builder.rs","byte_start":19937,"byte_end":19987,"line_start":90,"line_end":90,"column_start":5,"column_end":55}},{"value":"/     .build();","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/builder.rs","byte_start":19992,"byte_end":20009,"line_start":91,"line_end":91,"column_start":5,"column_end":22}},{"value":"/ # }","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/builder.rs","byte_start":20014,"byte_end":20021,"line_start":92,"line_end":92,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/builder.rs","byte_start":20026,"byte_end":20033,"line_start":93,"line_end":93,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":187},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/builder.rs","byte_start":21251,"byte_end":21260,"line_start":136,"line_end":136,"column_start":12,"column_end":21},"name":"pool_size","qualname":"<Builder>::pool_size","value":"pub fn pool_size(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Set the maximum number of worker threads for the thread pool instance.","sig":null,"attributes":[{"value":"/ Set the maximum number of worker threads for the thread pool instance.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/builder.rs","byte_start":20647,"byte_end":20721,"line_start":116,"line_end":116,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/builder.rs","byte_start":20726,"byte_end":20729,"line_start":117,"line_end":117,"column_start":5,"column_end":8}},{"value":"/ This must be a number between 1 and 32,768 though it is advised to keep","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/builder.rs","byte_start":20734,"byte_end":20809,"line_start":118,"line_end":118,"column_start":5,"column_end":80}},{"value":"/ this value on the smaller side.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/builder.rs","byte_start":20814,"byte_end":20849,"line_start":119,"line_end":119,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/builder.rs","byte_start":20854,"byte_end":20857,"line_start":120,"line_end":120,"column_start":5,"column_end":8}},{"value":"/ The default value is the number of cores available to the system.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/builder.rs","byte_start":20862,"byte_end":20931,"line_start":121,"line_end":121,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/builder.rs","byte_start":20936,"byte_end":20939,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/builder.rs","byte_start":20944,"byte_end":20958,"line_start":123,"line_end":123,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/builder.rs","byte_start":20963,"byte_end":20966,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/builder.rs","byte_start":20971,"byte_end":20978,"line_start":125,"line_end":125,"column_start":5,"column_end":12}},{"value":"/ # extern crate tokio_threadpool;","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/builder.rs","byte_start":20983,"byte_end":21019,"line_start":126,"line_end":126,"column_start":5,"column_end":41}},{"value":"/ # extern crate futures;","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/builder.rs","byte_start":21024,"byte_end":21051,"line_start":127,"line_end":127,"column_start":5,"column_end":32}},{"value":"/ # use tokio_threadpool::Builder;","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/builder.rs","byte_start":21056,"byte_end":21092,"line_start":128,"line_end":128,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/builder.rs","byte_start":21097,"byte_end":21100,"line_start":129,"line_end":129,"column_start":5,"column_end":8}},{"value":"/ # pub fn main() {","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/builder.rs","byte_start":21105,"byte_end":21126,"line_start":130,"line_end":130,"column_start":5,"column_end":26}},{"value":"/ let thread_pool = Builder::new()","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/builder.rs","byte_start":21131,"byte_end":21167,"line_start":131,"line_end":131,"column_start":5,"column_end":41}},{"value":"/     .pool_size(4)","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/builder.rs","byte_start":21172,"byte_end":21193,"line_start":132,"line_end":132,"column_start":5,"column_end":26}},{"value":"/     .build();","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/builder.rs","byte_start":21198,"byte_end":21215,"line_start":133,"line_end":133,"column_start":5,"column_end":22}},{"value":"/ # }","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/builder.rs","byte_start":21220,"byte_end":21227,"line_start":134,"line_end":134,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/builder.rs","byte_start":21232,"byte_end":21239,"line_start":135,"line_end":135,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":188},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/builder.rs","byte_start":22259,"byte_end":22271,"line_start":168,"line_end":168,"column_start":12,"column_end":24},"name":"max_blocking","qualname":"<Builder>::max_blocking","value":"pub fn max_blocking(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Set the maximum number of concurrent blocking sections.","sig":null,"attributes":[{"value":"/ Set the maximum number of concurrent blocking sections.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/builder.rs","byte_start":21482,"byte_end":21541,"line_start":144,"line_end":144,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/builder.rs","byte_start":21546,"byte_end":21549,"line_start":145,"line_end":145,"column_start":5,"column_end":8}},{"value":"/ When the maximum concurrent `blocking` calls is reached, any further","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/builder.rs","byte_start":21554,"byte_end":21626,"line_start":146,"line_end":146,"column_start":5,"column_end":77}},{"value":"/ calls to `blocking` will return `NotReady` and the task is notified once","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/builder.rs","byte_start":21631,"byte_end":21707,"line_start":147,"line_end":147,"column_start":5,"column_end":81}},{"value":"/ previously in-flight calls to `blocking` return.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/builder.rs","byte_start":21712,"byte_end":21764,"line_start":148,"line_end":148,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/builder.rs","byte_start":21769,"byte_end":21772,"line_start":149,"line_end":149,"column_start":5,"column_end":8}},{"value":"/ This must be a number between 1 and 32,768 though it is advised to keep","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/builder.rs","byte_start":21777,"byte_end":21852,"line_start":150,"line_end":150,"column_start":5,"column_end":80}},{"value":"/ this value on the smaller side.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/builder.rs","byte_start":21857,"byte_end":21892,"line_start":151,"line_end":151,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/builder.rs","byte_start":21897,"byte_end":21900,"line_start":152,"line_end":152,"column_start":5,"column_end":8}},{"value":"/ The default value is 100.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/builder.rs","byte_start":21905,"byte_end":21934,"line_start":153,"line_end":153,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/builder.rs","byte_start":21939,"byte_end":21942,"line_start":154,"line_end":154,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/builder.rs","byte_start":21947,"byte_end":21961,"line_start":155,"line_end":155,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/builder.rs","byte_start":21966,"byte_end":21969,"line_start":156,"line_end":156,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/builder.rs","byte_start":21974,"byte_end":21981,"line_start":157,"line_end":157,"column_start":5,"column_end":12}},{"value":"/ # extern crate tokio_threadpool;","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/builder.rs","byte_start":21986,"byte_end":22022,"line_start":158,"line_end":158,"column_start":5,"column_end":41}},{"value":"/ # extern crate futures;","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/builder.rs","byte_start":22027,"byte_end":22054,"line_start":159,"line_end":159,"column_start":5,"column_end":32}},{"value":"/ # use tokio_threadpool::Builder;","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/builder.rs","byte_start":22059,"byte_end":22095,"line_start":160,"line_end":160,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/builder.rs","byte_start":22100,"byte_end":22103,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ # pub fn main() {","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/builder.rs","byte_start":22108,"byte_end":22129,"line_start":162,"line_end":162,"column_start":5,"column_end":26}},{"value":"/ let thread_pool = Builder::new()","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/builder.rs","byte_start":22134,"byte_end":22170,"line_start":163,"line_end":163,"column_start":5,"column_end":41}},{"value":"/     .max_blocking(200)","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/builder.rs","byte_start":22175,"byte_end":22201,"line_start":164,"line_end":164,"column_start":5,"column_end":31}},{"value":"/     .build();","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/builder.rs","byte_start":22206,"byte_end":22223,"line_start":165,"line_end":165,"column_start":5,"column_end":22}},{"value":"/ # }","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/builder.rs","byte_start":22228,"byte_end":22235,"line_start":166,"line_end":166,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/builder.rs","byte_start":22240,"byte_end":22247,"line_start":167,"line_end":167,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":189},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/builder.rs","byte_start":23220,"byte_end":23230,"line_start":199,"line_end":199,"column_start":12,"column_end":22},"name":"keep_alive","qualname":"<Builder>::keep_alive","value":"pub fn keep_alive(&mut Self, Option<Duration>) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Set the thread keep alive duration","sig":null,"attributes":[{"value":"/ Set the thread keep alive duration","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/builder.rs","byte_start":22434,"byte_end":22472,"line_start":174,"line_end":174,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/builder.rs","byte_start":22477,"byte_end":22480,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/ If set, a thread that has completed a `blocking` call will wait for up","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/builder.rs","byte_start":22485,"byte_end":22559,"line_start":176,"line_end":176,"column_start":5,"column_end":79}},{"value":"/ to the specified duration to become a worker thread again. Once the","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/builder.rs","byte_start":22564,"byte_end":22635,"line_start":177,"line_end":177,"column_start":5,"column_end":76}},{"value":"/ duration elapses, the thread will shutdown.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/builder.rs","byte_start":22640,"byte_end":22687,"line_start":178,"line_end":178,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/builder.rs","byte_start":22692,"byte_end":22695,"line_start":179,"line_end":179,"column_start":5,"column_end":8}},{"value":"/ When the value is `None`, the thread will wait to become a worker","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/builder.rs","byte_start":22700,"byte_end":22769,"line_start":180,"line_end":180,"column_start":5,"column_end":74}},{"value":"/ thread forever.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/builder.rs","byte_start":22774,"byte_end":22793,"line_start":181,"line_end":181,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/builder.rs","byte_start":22798,"byte_end":22801,"line_start":182,"line_end":182,"column_start":5,"column_end":8}},{"value":"/ The default value is `None`.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/builder.rs","byte_start":22806,"byte_end":22838,"line_start":183,"line_end":183,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/builder.rs","byte_start":22843,"byte_end":22846,"line_start":184,"line_end":184,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/builder.rs","byte_start":22851,"byte_end":22865,"line_start":185,"line_end":185,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/builder.rs","byte_start":22870,"byte_end":22873,"line_start":186,"line_end":186,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/builder.rs","byte_start":22878,"byte_end":22885,"line_start":187,"line_end":187,"column_start":5,"column_end":12}},{"value":"/ # extern crate tokio_threadpool;","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/builder.rs","byte_start":22890,"byte_end":22926,"line_start":188,"line_end":188,"column_start":5,"column_end":41}},{"value":"/ # extern crate futures;","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/builder.rs","byte_start":22931,"byte_end":22958,"line_start":189,"line_end":189,"column_start":5,"column_end":32}},{"value":"/ # use tokio_threadpool::Builder;","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/builder.rs","byte_start":22963,"byte_end":22999,"line_start":190,"line_end":190,"column_start":5,"column_end":41}},{"value":"/ use std::time::Duration;","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/builder.rs","byte_start":23004,"byte_end":23032,"line_start":191,"line_end":191,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/builder.rs","byte_start":23037,"byte_end":23040,"line_start":192,"line_end":192,"column_start":5,"column_end":8}},{"value":"/ # pub fn main() {","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/builder.rs","byte_start":23045,"byte_end":23066,"line_start":193,"line_end":193,"column_start":5,"column_end":26}},{"value":"/ let thread_pool = Builder::new()","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/builder.rs","byte_start":23071,"byte_end":23107,"line_start":194,"line_end":194,"column_start":5,"column_end":41}},{"value":"/     .keep_alive(Some(Duration::from_secs(30)))","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/builder.rs","byte_start":23112,"byte_end":23162,"line_start":195,"line_end":195,"column_start":5,"column_end":55}},{"value":"/     .build();","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/builder.rs","byte_start":23167,"byte_end":23184,"line_start":196,"line_end":196,"column_start":5,"column_end":22}},{"value":"/ # }","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/builder.rs","byte_start":23189,"byte_end":23196,"line_start":197,"line_end":197,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/builder.rs","byte_start":23201,"byte_end":23208,"line_start":198,"line_end":198,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":190},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/builder.rs","byte_start":24092,"byte_end":24105,"line_start":224,"line_end":224,"column_start":12,"column_end":25},"name":"panic_handler","qualname":"<Builder>::panic_handler","value":"pub fn panic_handler<F>(&mut Self, F) -> &mut Self where\nF: Fn(Box<dyn Any + Send>) -> () + Send + Sync + 'static","parent":null,"children":[],"decl_id":null,"docs":" Sets a callback to be triggered when a panic during a future bubbles up\n to Tokio. By default Tokio catches these panics, and they will be\n ignored. The parameter passed to this callback is the same error value\n returned from std::panic::catch_unwind(). To abort the process on\n panics, use std::panic::resume_unwind() in this callback as shown\n below.","sig":null,"attributes":[{"value":"/ Sets a callback to be triggered when a panic during a future bubbles up","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/builder.rs","byte_start":23342,"byte_end":23417,"line_start":204,"line_end":204,"column_start":5,"column_end":80}},{"value":"/ to Tokio. By default Tokio catches these panics, and they will be","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/builder.rs","byte_start":23422,"byte_end":23491,"line_start":205,"line_end":205,"column_start":5,"column_end":74}},{"value":"/ ignored. The parameter passed to this callback is the same error value","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/builder.rs","byte_start":23496,"byte_end":23570,"line_start":206,"line_end":206,"column_start":5,"column_end":79}},{"value":"/ returned from std::panic::catch_unwind(). To abort the process on","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/builder.rs","byte_start":23575,"byte_end":23644,"line_start":207,"line_end":207,"column_start":5,"column_end":74}},{"value":"/ panics, use std::panic::resume_unwind() in this callback as shown","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/builder.rs","byte_start":23649,"byte_end":23718,"line_start":208,"line_end":208,"column_start":5,"column_end":74}},{"value":"/ below.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/builder.rs","byte_start":23723,"byte_end":23733,"line_start":209,"line_end":209,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/builder.rs","byte_start":23738,"byte_end":23741,"line_start":210,"line_end":210,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/builder.rs","byte_start":23746,"byte_end":23760,"line_start":211,"line_end":211,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/builder.rs","byte_start":23765,"byte_end":23768,"line_start":212,"line_end":212,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/builder.rs","byte_start":23773,"byte_end":23780,"line_start":213,"line_end":213,"column_start":5,"column_end":12}},{"value":"/ # extern crate tokio_threadpool;","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/builder.rs","byte_start":23785,"byte_end":23821,"line_start":214,"line_end":214,"column_start":5,"column_end":41}},{"value":"/ # extern crate futures;","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/builder.rs","byte_start":23826,"byte_end":23853,"line_start":215,"line_end":215,"column_start":5,"column_end":32}},{"value":"/ # use tokio_threadpool::Builder;","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/builder.rs","byte_start":23858,"byte_end":23894,"line_start":216,"line_end":216,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/builder.rs","byte_start":23899,"byte_end":23902,"line_start":217,"line_end":217,"column_start":5,"column_end":8}},{"value":"/ # pub fn main() {","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/builder.rs","byte_start":23907,"byte_end":23928,"line_start":218,"line_end":218,"column_start":5,"column_end":26}},{"value":"/ let thread_pool = Builder::new()","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/builder.rs","byte_start":23933,"byte_end":23969,"line_start":219,"line_end":219,"column_start":5,"column_end":41}},{"value":"/     .panic_handler(|err| std::panic::resume_unwind(err))","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/builder.rs","byte_start":23974,"byte_end":24034,"line_start":220,"line_end":220,"column_start":5,"column_end":65}},{"value":"/     .build();","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/builder.rs","byte_start":24039,"byte_end":24056,"line_start":221,"line_end":221,"column_start":5,"column_end":22}},{"value":"/ # }","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/builder.rs","byte_start":24061,"byte_end":24068,"line_start":222,"line_end":222,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/builder.rs","byte_start":24073,"byte_end":24080,"line_start":223,"line_end":223,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":192},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/builder.rs","byte_start":24985,"byte_end":24996,"line_start":254,"line_end":254,"column_start":12,"column_end":23},"name":"name_prefix","qualname":"<Builder>::name_prefix","value":"pub fn name_prefix<S: Into<String>>(&mut Self, S) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Set name prefix of threads spawned by the scheduler","sig":null,"attributes":[{"value":"/ Set name prefix of threads spawned by the scheduler","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/builder.rs","byte_start":24294,"byte_end":24349,"line_start":232,"line_end":232,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/builder.rs","byte_start":24354,"byte_end":24357,"line_start":233,"line_end":233,"column_start":5,"column_end":8}},{"value":"/ Thread name prefix is used for generating thread names. For example, if","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/builder.rs","byte_start":24362,"byte_end":24437,"line_start":234,"line_end":234,"column_start":5,"column_end":80}},{"value":"/ prefix is `my-pool-`, then threads in the pool will get names like","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/builder.rs","byte_start":24442,"byte_end":24512,"line_start":235,"line_end":235,"column_start":5,"column_end":75}},{"value":"/ `my-pool-1` etc.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/builder.rs","byte_start":24517,"byte_end":24537,"line_start":236,"line_end":236,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/builder.rs","byte_start":24542,"byte_end":24545,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/ If this configuration is not set, then the thread will use the system","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/builder.rs","byte_start":24550,"byte_end":24623,"line_start":238,"line_end":238,"column_start":5,"column_end":78}},{"value":"/ default naming scheme.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/builder.rs","byte_start":24628,"byte_end":24654,"line_start":239,"line_end":239,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/builder.rs","byte_start":24659,"byte_end":24662,"line_start":240,"line_end":240,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/builder.rs","byte_start":24667,"byte_end":24681,"line_start":241,"line_end":241,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/builder.rs","byte_start":24686,"byte_end":24689,"line_start":242,"line_end":242,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/builder.rs","byte_start":24694,"byte_end":24701,"line_start":243,"line_end":243,"column_start":5,"column_end":12}},{"value":"/ # extern crate tokio_threadpool;","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/builder.rs","byte_start":24706,"byte_end":24742,"line_start":244,"line_end":244,"column_start":5,"column_end":41}},{"value":"/ # extern crate futures;","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/builder.rs","byte_start":24747,"byte_end":24774,"line_start":245,"line_end":245,"column_start":5,"column_end":32}},{"value":"/ # use tokio_threadpool::Builder;","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/builder.rs","byte_start":24779,"byte_end":24815,"line_start":246,"line_end":246,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/builder.rs","byte_start":24820,"byte_end":24823,"line_start":247,"line_end":247,"column_start":5,"column_end":8}},{"value":"/ # pub fn main() {","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/builder.rs","byte_start":24828,"byte_end":24849,"line_start":248,"line_end":248,"column_start":5,"column_end":26}},{"value":"/ let thread_pool = Builder::new()","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/builder.rs","byte_start":24854,"byte_end":24890,"line_start":249,"line_end":249,"column_start":5,"column_end":41}},{"value":"/     .name_prefix(\"my-pool-\")","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/builder.rs","byte_start":24895,"byte_end":24927,"line_start":250,"line_end":250,"column_start":5,"column_end":37}},{"value":"/     .build();","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/builder.rs","byte_start":24932,"byte_end":24949,"line_start":251,"line_end":251,"column_start":5,"column_end":22}},{"value":"/ # }","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/builder.rs","byte_start":24954,"byte_end":24961,"line_start":252,"line_end":252,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/builder.rs","byte_start":24966,"byte_end":24973,"line_start":253,"line_end":253,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":194},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/builder.rs","byte_start":25776,"byte_end":25786,"line_start":280,"line_end":280,"column_start":12,"column_end":22},"name":"stack_size","qualname":"<Builder>::stack_size","value":"pub fn stack_size(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Set the stack size (in bytes) for worker threads.","sig":null,"attributes":[{"value":"/ Set the stack size (in bytes) for worker threads.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/builder.rs","byte_start":25124,"byte_end":25177,"line_start":259,"line_end":259,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/builder.rs","byte_start":25182,"byte_end":25185,"line_start":260,"line_end":260,"column_start":5,"column_end":8}},{"value":"/ The actual stack size may be greater than this value if the platform","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/builder.rs","byte_start":25190,"byte_end":25262,"line_start":261,"line_end":261,"column_start":5,"column_end":77}},{"value":"/ specifies minimal stack size.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/builder.rs","byte_start":25267,"byte_end":25300,"line_start":262,"line_end":262,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/builder.rs","byte_start":25305,"byte_end":25308,"line_start":263,"line_end":263,"column_start":5,"column_end":8}},{"value":"/ The default stack size for spawned threads is 2 MiB, though this","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/builder.rs","byte_start":25313,"byte_end":25381,"line_start":264,"line_end":264,"column_start":5,"column_end":73}},{"value":"/ particular stack size is subject to change in the future.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/builder.rs","byte_start":25386,"byte_end":25447,"line_start":265,"line_end":265,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/builder.rs","byte_start":25452,"byte_end":25455,"line_start":266,"line_end":266,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/builder.rs","byte_start":25460,"byte_end":25474,"line_start":267,"line_end":267,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/builder.rs","byte_start":25479,"byte_end":25482,"line_start":268,"line_end":268,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/builder.rs","byte_start":25487,"byte_end":25494,"line_start":269,"line_end":269,"column_start":5,"column_end":12}},{"value":"/ # extern crate tokio_threadpool;","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/builder.rs","byte_start":25499,"byte_end":25535,"line_start":270,"line_end":270,"column_start":5,"column_end":41}},{"value":"/ # extern crate futures;","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/builder.rs","byte_start":25540,"byte_end":25567,"line_start":271,"line_end":271,"column_start":5,"column_end":32}},{"value":"/ # use tokio_threadpool::Builder;","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/builder.rs","byte_start":25572,"byte_end":25608,"line_start":272,"line_end":272,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/builder.rs","byte_start":25613,"byte_end":25616,"line_start":273,"line_end":273,"column_start":5,"column_end":8}},{"value":"/ # pub fn main() {","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/builder.rs","byte_start":25621,"byte_end":25642,"line_start":274,"line_end":274,"column_start":5,"column_end":26}},{"value":"/ let thread_pool = Builder::new()","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/builder.rs","byte_start":25647,"byte_end":25683,"line_start":275,"line_end":275,"column_start":5,"column_end":41}},{"value":"/     .stack_size(32 * 1024)","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/builder.rs","byte_start":25688,"byte_end":25718,"line_start":276,"line_end":276,"column_start":5,"column_end":35}},{"value":"/     .build();","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/builder.rs","byte_start":25723,"byte_end":25740,"line_start":277,"line_end":277,"column_start":5,"column_end":22}},{"value":"/ # }","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/builder.rs","byte_start":25745,"byte_end":25752,"line_start":278,"line_end":278,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/builder.rs","byte_start":25757,"byte_end":25764,"line_start":279,"line_end":279,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":195},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/builder.rs","byte_start":26675,"byte_end":26688,"line_start":310,"line_end":310,"column_start":12,"column_end":25},"name":"around_worker","qualname":"<Builder>::around_worker","value":"pub fn around_worker<F>(&mut Self, F) -> &mut Self where\nF: Fn(&Worker, &mut Enter) -> () + Send + Sync + 'static","parent":null,"children":[],"decl_id":null,"docs":" Execute function `f` on each worker thread.","sig":null,"attributes":[{"value":"/ Execute function `f` on each worker thread.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/builder.rs","byte_start":25893,"byte_end":25940,"line_start":285,"line_end":285,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/builder.rs","byte_start":25945,"byte_end":25948,"line_start":286,"line_end":286,"column_start":5,"column_end":8}},{"value":"/ This function is provided a handle to the worker and is expected to call","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/builder.rs","byte_start":25953,"byte_end":26029,"line_start":287,"line_end":287,"column_start":5,"column_end":81}},{"value":"/ [`Worker::run`], otherwise the worker thread will shutdown without doing","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/builder.rs","byte_start":26034,"byte_end":26110,"line_start":288,"line_end":288,"column_start":5,"column_end":81}},{"value":"/ any work.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/builder.rs","byte_start":26115,"byte_end":26128,"line_start":289,"line_end":289,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/builder.rs","byte_start":26133,"byte_end":26136,"line_start":290,"line_end":290,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/builder.rs","byte_start":26141,"byte_end":26155,"line_start":291,"line_end":291,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/builder.rs","byte_start":26160,"byte_end":26163,"line_start":292,"line_end":292,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/builder.rs","byte_start":26168,"byte_end":26175,"line_start":293,"line_end":293,"column_start":5,"column_end":12}},{"value":"/ # extern crate tokio_threadpool;","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/builder.rs","byte_start":26180,"byte_end":26216,"line_start":294,"line_end":294,"column_start":5,"column_end":41}},{"value":"/ # extern crate futures;","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/builder.rs","byte_start":26221,"byte_end":26248,"line_start":295,"line_end":295,"column_start":5,"column_end":32}},{"value":"/ # use tokio_threadpool::Builder;","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/builder.rs","byte_start":26253,"byte_end":26289,"line_start":296,"line_end":296,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/builder.rs","byte_start":26294,"byte_end":26297,"line_start":297,"line_end":297,"column_start":5,"column_end":8}},{"value":"/ # pub fn main() {","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/builder.rs","byte_start":26302,"byte_end":26323,"line_start":298,"line_end":298,"column_start":5,"column_end":26}},{"value":"/ let thread_pool = Builder::new()","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/builder.rs","byte_start":26328,"byte_end":26364,"line_start":299,"line_end":299,"column_start":5,"column_end":41}},{"value":"/     .around_worker(|worker, _| {","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/builder.rs","byte_start":26369,"byte_end":26405,"line_start":300,"line_end":300,"column_start":5,"column_end":41}},{"value":"/         println!(\"worker is starting up\");","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/builder.rs","byte_start":26410,"byte_end":26456,"line_start":301,"line_end":301,"column_start":5,"column_end":51}},{"value":"/         worker.run();","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/builder.rs","byte_start":26461,"byte_end":26486,"line_start":302,"line_end":302,"column_start":5,"column_end":30}},{"value":"/         println!(\"worker is shutting down\");","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/builder.rs","byte_start":26491,"byte_end":26539,"line_start":303,"line_end":303,"column_start":5,"column_end":53}},{"value":"/     })","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/builder.rs","byte_start":26544,"byte_end":26554,"line_start":304,"line_end":304,"column_start":5,"column_end":15}},{"value":"/     .build();","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/builder.rs","byte_start":26559,"byte_end":26576,"line_start":305,"line_end":305,"column_start":5,"column_end":22}},{"value":"/ # }","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/builder.rs","byte_start":26581,"byte_end":26588,"line_start":306,"line_end":306,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/builder.rs","byte_start":26593,"byte_end":26600,"line_start":307,"line_end":307,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/builder.rs","byte_start":26605,"byte_end":26608,"line_start":308,"line_end":308,"column_start":5,"column_end":8}},{"value":"/ [`Worker::run`]: struct.Worker.html#method.run","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/builder.rs","byte_start":26613,"byte_end":26663,"line_start":309,"line_end":309,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":197},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/builder.rs","byte_start":27434,"byte_end":27445,"line_start":338,"line_end":338,"column_start":12,"column_end":23},"name":"after_start","qualname":"<Builder>::after_start","value":"pub fn after_start<F>(&mut Self, F) -> &mut Self where F: Fn() -> () + Send +\nSync + 'static","parent":null,"children":[],"decl_id":null,"docs":" Execute function `f` after each thread is started but before it starts\n doing work.","sig":null,"attributes":[{"value":"/ Execute function `f` after each thread is started but before it starts","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/builder.rs","byte_start":26882,"byte_end":26956,"line_start":318,"line_end":318,"column_start":5,"column_end":79}},{"value":"/ doing work.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/builder.rs","byte_start":26961,"byte_end":26976,"line_start":319,"line_end":319,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/builder.rs","byte_start":26981,"byte_end":26984,"line_start":320,"line_end":320,"column_start":5,"column_end":8}},{"value":"/ This is intended for bookkeeping and monitoring use cases.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/builder.rs","byte_start":26989,"byte_end":27051,"line_start":321,"line_end":321,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/builder.rs","byte_start":27056,"byte_end":27059,"line_start":322,"line_end":322,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/builder.rs","byte_start":27064,"byte_end":27078,"line_start":323,"line_end":323,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/builder.rs","byte_start":27083,"byte_end":27086,"line_start":324,"line_end":324,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/builder.rs","byte_start":27091,"byte_end":27098,"line_start":325,"line_end":325,"column_start":5,"column_end":12}},{"value":"/ # extern crate tokio_threadpool;","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/builder.rs","byte_start":27103,"byte_end":27139,"line_start":326,"line_end":326,"column_start":5,"column_end":41}},{"value":"/ # extern crate futures;","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/builder.rs","byte_start":27144,"byte_end":27171,"line_start":327,"line_end":327,"column_start":5,"column_end":32}},{"value":"/ # use tokio_threadpool::Builder;","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/builder.rs","byte_start":27176,"byte_end":27212,"line_start":328,"line_end":328,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/builder.rs","byte_start":27217,"byte_end":27220,"line_start":329,"line_end":329,"column_start":5,"column_end":8}},{"value":"/ # pub fn main() {","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/builder.rs","byte_start":27225,"byte_end":27246,"line_start":330,"line_end":330,"column_start":5,"column_end":26}},{"value":"/ let thread_pool = Builder::new()","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/builder.rs","byte_start":27251,"byte_end":27287,"line_start":331,"line_end":331,"column_start":5,"column_end":41}},{"value":"/     .after_start(|| {","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/builder.rs","byte_start":27292,"byte_end":27317,"line_start":332,"line_end":332,"column_start":5,"column_end":30}},{"value":"/         println!(\"thread started\");","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/builder.rs","byte_start":27322,"byte_end":27361,"line_start":333,"line_end":333,"column_start":5,"column_end":44}},{"value":"/     })","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/builder.rs","byte_start":27366,"byte_end":27376,"line_start":334,"line_end":334,"column_start":5,"column_end":15}},{"value":"/     .build();","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/builder.rs","byte_start":27381,"byte_end":27398,"line_start":335,"line_end":335,"column_start":5,"column_end":22}},{"value":"/ # }","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/builder.rs","byte_start":27403,"byte_end":27410,"line_start":336,"line_end":336,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/builder.rs","byte_start":27415,"byte_end":27422,"line_start":337,"line_end":337,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":199},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/builder.rs","byte_start":28122,"byte_end":28133,"line_start":365,"line_end":365,"column_start":12,"column_end":23},"name":"before_stop","qualname":"<Builder>::before_stop","value":"pub fn before_stop<F>(&mut Self, F) -> &mut Self where F: Fn() -> () + Send +\nSync + 'static","parent":null,"children":[],"decl_id":null,"docs":" Execute function `f` before each thread stops.","sig":null,"attributes":[{"value":"/ Execute function `f` before each thread stops.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/builder.rs","byte_start":27613,"byte_end":27663,"line_start":346,"line_end":346,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/builder.rs","byte_start":27668,"byte_end":27671,"line_start":347,"line_end":347,"column_start":5,"column_end":8}},{"value":"/ This is intended for bookkeeping and monitoring use cases.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/builder.rs","byte_start":27676,"byte_end":27738,"line_start":348,"line_end":348,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/builder.rs","byte_start":27743,"byte_end":27746,"line_start":349,"line_end":349,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/builder.rs","byte_start":27751,"byte_end":27765,"line_start":350,"line_end":350,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/builder.rs","byte_start":27770,"byte_end":27773,"line_start":351,"line_end":351,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/builder.rs","byte_start":27778,"byte_end":27785,"line_start":352,"line_end":352,"column_start":5,"column_end":12}},{"value":"/ # extern crate tokio_threadpool;","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/builder.rs","byte_start":27790,"byte_end":27826,"line_start":353,"line_end":353,"column_start":5,"column_end":41}},{"value":"/ # extern crate futures;","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/builder.rs","byte_start":27831,"byte_end":27858,"line_start":354,"line_end":354,"column_start":5,"column_end":32}},{"value":"/ # use tokio_threadpool::Builder;","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/builder.rs","byte_start":27863,"byte_end":27899,"line_start":355,"line_end":355,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/builder.rs","byte_start":27904,"byte_end":27907,"line_start":356,"line_end":356,"column_start":5,"column_end":8}},{"value":"/ # pub fn main() {","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/builder.rs","byte_start":27912,"byte_end":27933,"line_start":357,"line_end":357,"column_start":5,"column_end":26}},{"value":"/ let thread_pool = Builder::new()","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/builder.rs","byte_start":27938,"byte_end":27974,"line_start":358,"line_end":358,"column_start":5,"column_end":41}},{"value":"/     .before_stop(|| {","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/builder.rs","byte_start":27979,"byte_end":28004,"line_start":359,"line_end":359,"column_start":5,"column_end":30}},{"value":"/         println!(\"thread stopping\");","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/builder.rs","byte_start":28009,"byte_end":28049,"line_start":360,"line_end":360,"column_start":5,"column_end":45}},{"value":"/     })","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/builder.rs","byte_start":28054,"byte_end":28064,"line_start":361,"line_end":361,"column_start":5,"column_end":15}},{"value":"/     .build();","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/builder.rs","byte_start":28069,"byte_end":28086,"line_start":362,"line_end":362,"column_start":5,"column_end":22}},{"value":"/ # }","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/builder.rs","byte_start":28091,"byte_end":28098,"line_start":363,"line_end":363,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/builder.rs","byte_start":28103,"byte_end":28110,"line_start":364,"line_end":364,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":201},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/builder.rs","byte_start":29320,"byte_end":29331,"line_start":402,"line_end":402,"column_start":12,"column_end":23},"name":"custom_park","qualname":"<Builder>::custom_park","value":"pub fn custom_park<F, P>(&mut Self, F) -> &mut Self where F: Fn(&WorkerId) ->\nP + 'static, P: Park + Send + 'static, P::Error: Error","parent":null,"children":[],"decl_id":null,"docs":" Customize the `park` instance used by each worker thread.","sig":null,"attributes":[{"value":"/ Customize the `park` instance used by each worker thread.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/builder.rs","byte_start":28301,"byte_end":28362,"line_start":373,"line_end":373,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/builder.rs","byte_start":28367,"byte_end":28370,"line_start":374,"line_end":374,"column_start":5,"column_end":8}},{"value":"/ The provided closure `f` is called once per worker and returns a `Park`","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/builder.rs","byte_start":28375,"byte_end":28450,"line_start":375,"line_end":375,"column_start":5,"column_end":80}},{"value":"/ instance that is used by the worker to put itself to sleep.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/builder.rs","byte_start":28455,"byte_end":28518,"line_start":376,"line_end":376,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/builder.rs","byte_start":28523,"byte_end":28526,"line_start":377,"line_end":377,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/builder.rs","byte_start":28531,"byte_end":28545,"line_start":378,"line_end":378,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/builder.rs","byte_start":28550,"byte_end":28553,"line_start":379,"line_end":379,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/builder.rs","byte_start":28558,"byte_end":28565,"line_start":380,"line_end":380,"column_start":5,"column_end":12}},{"value":"/ # extern crate tokio_threadpool;","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/builder.rs","byte_start":28570,"byte_end":28606,"line_start":381,"line_end":381,"column_start":5,"column_end":41}},{"value":"/ # extern crate futures;","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/builder.rs","byte_start":28611,"byte_end":28638,"line_start":382,"line_end":382,"column_start":5,"column_end":32}},{"value":"/ # use tokio_threadpool::Builder;","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/builder.rs","byte_start":28643,"byte_end":28679,"line_start":383,"line_end":383,"column_start":5,"column_end":41}},{"value":"/ # fn decorate<F>(f: F) -> F { f }","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/builder.rs","byte_start":28684,"byte_end":28721,"line_start":384,"line_end":384,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/builder.rs","byte_start":28726,"byte_end":28729,"line_start":385,"line_end":385,"column_start":5,"column_end":8}},{"value":"/ # pub fn main() {","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/builder.rs","byte_start":28734,"byte_end":28755,"line_start":386,"line_end":386,"column_start":5,"column_end":26}},{"value":"/ let thread_pool = Builder::new()","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/builder.rs","byte_start":28760,"byte_end":28796,"line_start":387,"line_end":387,"column_start":5,"column_end":41}},{"value":"/     .custom_park(|_| {","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/builder.rs","byte_start":28801,"byte_end":28827,"line_start":388,"line_end":388,"column_start":5,"column_end":31}},{"value":"/         use tokio_threadpool::park::DefaultPark;","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/builder.rs","byte_start":28832,"byte_end":28884,"line_start":389,"line_end":389,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/builder.rs","byte_start":28889,"byte_end":28892,"line_start":390,"line_end":390,"column_start":5,"column_end":8}},{"value":"/         // This is the default park type that the worker would use if we","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/builder.rs","byte_start":28897,"byte_end":28973,"line_start":391,"line_end":391,"column_start":5,"column_end":81}},{"value":"/         // did not customize it.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/builder.rs","byte_start":28978,"byte_end":29014,"line_start":392,"line_end":392,"column_start":5,"column_end":41}},{"value":"/         let park = DefaultPark::new();","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/builder.rs","byte_start":29019,"byte_end":29061,"line_start":393,"line_end":393,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/builder.rs","byte_start":29066,"byte_end":29069,"line_start":394,"line_end":394,"column_start":5,"column_end":8}},{"value":"/         // Decorate the `park` instance, allowing us to customize work","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/builder.rs","byte_start":29074,"byte_end":29148,"line_start":395,"line_end":395,"column_start":5,"column_end":79}},{"value":"/         // that happens when a worker thread goes to sleep.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/builder.rs","byte_start":29153,"byte_end":29216,"line_start":396,"line_end":396,"column_start":5,"column_end":68}},{"value":"/         decorate(park)","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/builder.rs","byte_start":29221,"byte_end":29247,"line_start":397,"line_end":397,"column_start":5,"column_end":31}},{"value":"/     })","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/builder.rs","byte_start":29252,"byte_end":29262,"line_start":398,"line_end":398,"column_start":5,"column_end":15}},{"value":"/     .build();","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/builder.rs","byte_start":29267,"byte_end":29284,"line_start":399,"line_end":399,"column_start":5,"column_end":22}},{"value":"/ # }","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/builder.rs","byte_start":29289,"byte_end":29296,"line_start":400,"line_end":400,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/builder.rs","byte_start":29301,"byte_end":29308,"line_start":401,"line_end":401,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":205},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/builder.rs","byte_start":29995,"byte_end":30000,"line_start":429,"line_end":429,"column_start":12,"column_end":17},"name":"build","qualname":"<Builder>::build","value":"pub fn build(&Self) -> ThreadPool","parent":null,"children":[],"decl_id":null,"docs":" Create the configured `ThreadPool`.","sig":null,"attributes":[{"value":"/ Create the configured `ThreadPool`.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/builder.rs","byte_start":29586,"byte_end":29625,"line_start":413,"line_end":413,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/builder.rs","byte_start":29630,"byte_end":29633,"line_start":414,"line_end":414,"column_start":5,"column_end":8}},{"value":"/ The returned `ThreadPool` instance is ready to spawn tasks.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/builder.rs","byte_start":29638,"byte_end":29701,"line_start":415,"line_end":415,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/builder.rs","byte_start":29706,"byte_end":29709,"line_start":416,"line_end":416,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/builder.rs","byte_start":29714,"byte_end":29728,"line_start":417,"line_end":417,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/builder.rs","byte_start":29733,"byte_end":29736,"line_start":418,"line_end":418,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/builder.rs","byte_start":29741,"byte_end":29748,"line_start":419,"line_end":419,"column_start":5,"column_end":12}},{"value":"/ # extern crate tokio_threadpool;","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/builder.rs","byte_start":29753,"byte_end":29789,"line_start":420,"line_end":420,"column_start":5,"column_end":41}},{"value":"/ # extern crate futures;","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/builder.rs","byte_start":29794,"byte_end":29821,"line_start":421,"line_end":421,"column_start":5,"column_end":32}},{"value":"/ # use tokio_threadpool::Builder;","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/builder.rs","byte_start":29826,"byte_end":29862,"line_start":422,"line_end":422,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/builder.rs","byte_start":29867,"byte_end":29870,"line_start":423,"line_end":423,"column_start":5,"column_end":8}},{"value":"/ # pub fn main() {","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/builder.rs","byte_start":29875,"byte_end":29896,"line_start":424,"line_end":424,"column_start":5,"column_end":26}},{"value":"/ let thread_pool = Builder::new()","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/builder.rs","byte_start":29901,"byte_end":29937,"line_start":425,"line_end":425,"column_start":5,"column_end":41}},{"value":"/     .build();","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/builder.rs","byte_start":29942,"byte_end":29959,"line_start":426,"line_end":426,"column_start":5,"column_end":22}},{"value":"/ # }","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/builder.rs","byte_start":29964,"byte_end":29971,"line_start":427,"line_end":427,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/builder.rs","byte_start":29976,"byte_end":29983,"line_start":428,"line_end":428,"column_start":5,"column_end":12}}]},{"kind":"Mod","id":{"krate":0,"index":279},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/park/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"park","qualname":"::park","value":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/park/mod.rs","parent":null,"children":[{"krate":0,"index":280},{"krate":0,"index":312},{"krate":0,"index":352},{"krate":0,"index":353},{"krate":0,"index":356},{"krate":0,"index":359},{"krate":0,"index":362},{"krate":0,"index":363},{"krate":0,"index":366},{"krate":0,"index":369}],"decl_id":null,"docs":" Thread parking utilities.\n","sig":null,"attributes":[{"value":"/ Thread parking utilities.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/park/mod.rs","byte_start":35575,"byte_end":35604,"line_start":1,"line_end":1,"column_start":1,"column_end":30}}]},{"kind":"Struct","id":{"krate":0,"index":1382},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/park/default_park.rs","byte_start":37057,"byte_end":37068,"line_start":11,"line_end":11,"column_start":12,"column_end":23},"name":"DefaultPark","qualname":"::park::default_park::DefaultPark","value":"DefaultPark {  }","parent":null,"children":[{"krate":0,"index":1383}],"decl_id":null,"docs":" Parks the thread.\n","sig":null,"attributes":[{"value":"/ Parks the thread.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/park/default_park.rs","byte_start":37007,"byte_end":37028,"line_start":9,"line_end":9,"column_start":1,"column_end":22}}]},{"kind":"Struct","id":{"krate":0,"index":1386},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/park/default_park.rs","byte_start":37176,"byte_end":37189,"line_start":17,"line_end":17,"column_start":12,"column_end":25},"name":"DefaultUnpark","qualname":"::park::default_park::DefaultUnpark","value":"DefaultUnpark {  }","parent":null,"children":[{"krate":0,"index":1387}],"decl_id":null,"docs":" Unparks threads that were parked by `DefaultPark`.\n","sig":null,"attributes":[{"value":"/ Unparks threads that were parked by `DefaultPark`.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/park/default_park.rs","byte_start":37093,"byte_end":37147,"line_start":15,"line_end":15,"column_start":1,"column_end":55}}]},{"kind":"Struct","id":{"krate":0,"index":1390},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/park/default_park.rs","byte_start":37409,"byte_end":37418,"line_start":27,"line_end":27,"column_start":12,"column_end":21},"name":"ParkError","qualname":"::park::default_park::ParkError","value":"ParkError {  }","parent":null,"children":[{"krate":0,"index":1391}],"decl_id":null,"docs":" Error returned by [`ParkThread`]","sig":null,"attributes":[{"value":"/ Error returned by [`ParkThread`]","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/park/default_park.rs","byte_start":37216,"byte_end":37252,"line_start":21,"line_end":21,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/park/default_park.rs","byte_start":37253,"byte_end":37256,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ This currently is never returned, but might at some point in the future.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/park/default_park.rs","byte_start":37257,"byte_end":37333,"line_start":23,"line_end":23,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/park/default_park.rs","byte_start":37334,"byte_end":37337,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ [`ParkThread`]: struct.ParkThread.html","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/park/default_park.rs","byte_start":37338,"byte_end":37380,"line_start":25,"line_end":25,"column_start":1,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":337},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/park/default_park.rs","byte_start":37545,"byte_end":37548,"line_start":35,"line_end":35,"column_start":12,"column_end":15},"name":"new","qualname":"<DefaultPark>::new","value":"pub fn new() -> DefaultPark","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `DefaultPark` instance.\n","sig":null,"attributes":[{"value":"/ Creates a new `DefaultPark` instance.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/park/default_park.rs","byte_start":37492,"byte_end":37533,"line_start":34,"line_end":34,"column_start":5,"column_end":46}}]},{"kind":"Struct","id":{"krate":0,"index":1523},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/sender.rs","byte_start":72921,"byte_end":72927,"line_start":25,"line_end":25,"column_start":12,"column_end":18},"name":"Sender","qualname":"::sender::Sender","value":"Sender {  }","parent":null,"children":[{"krate":0,"index":1524}],"decl_id":null,"docs":" Submit futures to the associated thread pool for execution.","sig":null,"attributes":[{"value":"/ Submit futures to the associated thread pool for execution.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/sender.rs","byte_start":72260,"byte_end":72323,"line_start":10,"line_end":10,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/sender.rs","byte_start":72324,"byte_end":72327,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ A `Sender` instance is a handle to a single thread pool, allowing the owner","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/sender.rs","byte_start":72328,"byte_end":72407,"line_start":12,"line_end":12,"column_start":1,"column_end":80}},{"value":"/ of the handle to spawn futures onto the thread pool. New futures are spawned","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/sender.rs","byte_start":72408,"byte_end":72488,"line_start":13,"line_end":13,"column_start":1,"column_end":81}},{"value":"/ using [`Sender::spawn`].","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/sender.rs","byte_start":72489,"byte_end":72517,"line_start":14,"line_end":14,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/sender.rs","byte_start":72518,"byte_end":72521,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ The `Sender` handle is *only* used for spawning new futures. It does not","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/sender.rs","byte_start":72522,"byte_end":72598,"line_start":16,"line_end":16,"column_start":1,"column_end":77}},{"value":"/ impact the lifecycle of the thread pool in any way.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/sender.rs","byte_start":72599,"byte_end":72654,"line_start":17,"line_end":17,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/sender.rs","byte_start":72655,"byte_end":72658,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ `Sender` instances are obtained by calling [`ThreadPool::sender`]. The","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/sender.rs","byte_start":72659,"byte_end":72733,"line_start":19,"line_end":19,"column_start":1,"column_end":75}},{"value":"/ `Sender` struct implements the `Executor` trait.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/sender.rs","byte_start":72734,"byte_end":72786,"line_start":20,"line_end":20,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/sender.rs","byte_start":72787,"byte_end":72790,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ [`Sender::spawn`]: #method.spawn","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/sender.rs","byte_start":72791,"byte_end":72827,"line_start":22,"line_end":22,"column_start":1,"column_end":37}},{"value":"/ [`ThreadPool::sender`]: struct.ThreadPool.html#method.sender","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/sender.rs","byte_start":72828,"byte_end":72892,"line_start":23,"line_end":23,"column_start":1,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":675},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/sender.rs","byte_start":75077,"byte_end":75082,"line_start":79,"line_end":79,"column_start":12,"column_end":17},"name":"spawn","qualname":"<Sender>::spawn","value":"pub fn spawn<F>(&Self, F) -> Result<(), SpawnError> where F: Future<Item = (),\nError = ()> + Send + 'static","parent":null,"children":[],"decl_id":null,"docs":" Spawn a future onto the thread pool","sig":null,"attributes":[{"value":"/ Spawn a future onto the thread pool","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/sender.rs","byte_start":72983,"byte_end":73022,"line_start":30,"line_end":30,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/sender.rs","byte_start":73027,"byte_end":73030,"line_start":31,"line_end":31,"column_start":5,"column_end":8}},{"value":"/ This function takes ownership of the future and spawns it onto the","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/sender.rs","byte_start":73035,"byte_end":73105,"line_start":32,"line_end":32,"column_start":5,"column_end":75}},{"value":"/ thread pool, assigning it to a worker thread. The exact strategy used to","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/sender.rs","byte_start":73110,"byte_end":73186,"line_start":33,"line_end":33,"column_start":5,"column_end":81}},{"value":"/ assign a future to a worker depends on if the caller is already on a","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/sender.rs","byte_start":73191,"byte_end":73263,"line_start":34,"line_end":34,"column_start":5,"column_end":77}},{"value":"/ worker thread or external to the thread pool.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/sender.rs","byte_start":73268,"byte_end":73317,"line_start":35,"line_end":35,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/sender.rs","byte_start":73322,"byte_end":73325,"line_start":36,"line_end":36,"column_start":5,"column_end":8}},{"value":"/ If the caller is currently on the thread pool, the spawned future will","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/sender.rs","byte_start":73330,"byte_end":73404,"line_start":37,"line_end":37,"column_start":5,"column_end":79}},{"value":"/ be assigned to the same worker that the caller is on. If the caller is","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/sender.rs","byte_start":73409,"byte_end":73483,"line_start":38,"line_end":38,"column_start":5,"column_end":79}},{"value":"/ external to the thread pool, the future will be assigned to a random","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/sender.rs","byte_start":73488,"byte_end":73560,"line_start":39,"line_end":39,"column_start":5,"column_end":77}},{"value":"/ worker.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/sender.rs","byte_start":73565,"byte_end":73576,"line_start":40,"line_end":40,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/sender.rs","byte_start":73581,"byte_end":73584,"line_start":41,"line_end":41,"column_start":5,"column_end":8}},{"value":"/ If `spawn` returns `Ok`, this does not mean that the future will be","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/sender.rs","byte_start":73589,"byte_end":73660,"line_start":42,"line_end":42,"column_start":5,"column_end":76}},{"value":"/ executed. The thread pool can be forcibly shutdown between the time","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/sender.rs","byte_start":73665,"byte_end":73736,"line_start":43,"line_end":43,"column_start":5,"column_end":76}},{"value":"/ `spawn` is called and the future has a chance to execute.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/sender.rs","byte_start":73741,"byte_end":73802,"line_start":44,"line_end":44,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/sender.rs","byte_start":73807,"byte_end":73810,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ If `spawn` returns `Err`, then the future failed to be spawned. There","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/sender.rs","byte_start":73815,"byte_end":73888,"line_start":46,"line_end":46,"column_start":5,"column_end":78}},{"value":"/ are two possible causes:","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/sender.rs","byte_start":73893,"byte_end":73921,"line_start":47,"line_end":47,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/sender.rs","byte_start":73926,"byte_end":73929,"line_start":48,"line_end":48,"column_start":5,"column_end":8}},{"value":"/ * The thread pool is at capacity and is unable to spawn a new future.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/sender.rs","byte_start":73934,"byte_end":74007,"line_start":49,"line_end":49,"column_start":5,"column_end":78}},{"value":"/   This is a temporary failure. At some point in the future, the thread","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/sender.rs","byte_start":74012,"byte_end":74086,"line_start":50,"line_end":50,"column_start":5,"column_end":79}},{"value":"/   pool might be able to spawn new futures.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/sender.rs","byte_start":74091,"byte_end":74137,"line_start":51,"line_end":51,"column_start":5,"column_end":51}},{"value":"/ * The thread pool is shutdown. This is a permanent failure indicating","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/sender.rs","byte_start":74142,"byte_end":74215,"line_start":52,"line_end":52,"column_start":5,"column_end":78}},{"value":"/   that the handle will never be able to spawn new futures.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/sender.rs","byte_start":74220,"byte_end":74282,"line_start":53,"line_end":53,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/sender.rs","byte_start":74287,"byte_end":74290,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ The status of the thread pool can be queried before calling `spawn`","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/sender.rs","byte_start":74295,"byte_end":74366,"line_start":55,"line_end":55,"column_start":5,"column_end":76}},{"value":"/ using the `status` function (part of the `Executor` trait).","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/sender.rs","byte_start":74371,"byte_end":74434,"line_start":56,"line_end":56,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/sender.rs","byte_start":74439,"byte_end":74442,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/sender.rs","byte_start":74447,"byte_end":74461,"line_start":58,"line_end":58,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/sender.rs","byte_start":74466,"byte_end":74469,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/sender.rs","byte_start":74474,"byte_end":74485,"line_start":60,"line_end":60,"column_start":5,"column_end":16}},{"value":"/ # extern crate tokio_threadpool;","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/sender.rs","byte_start":74490,"byte_end":74526,"line_start":61,"line_end":61,"column_start":5,"column_end":41}},{"value":"/ # extern crate futures;","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/sender.rs","byte_start":74531,"byte_end":74558,"line_start":62,"line_end":62,"column_start":5,"column_end":32}},{"value":"/ # use tokio_threadpool::ThreadPool;","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/sender.rs","byte_start":74563,"byte_end":74602,"line_start":63,"line_end":63,"column_start":5,"column_end":44}},{"value":"/ use futures::future::{Future, lazy};","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/sender.rs","byte_start":74607,"byte_end":74647,"line_start":64,"line_end":64,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/sender.rs","byte_start":74652,"byte_end":74655,"line_start":65,"line_end":65,"column_start":5,"column_end":8}},{"value":"/ # pub fn main() {","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/sender.rs","byte_start":74660,"byte_end":74681,"line_start":66,"line_end":66,"column_start":5,"column_end":26}},{"value":"/ // Create a thread pool with default configuration values","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/sender.rs","byte_start":74686,"byte_end":74747,"line_start":67,"line_end":67,"column_start":5,"column_end":66}},{"value":"/ let thread_pool = ThreadPool::new();","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/sender.rs","byte_start":74752,"byte_end":74792,"line_start":68,"line_end":68,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/sender.rs","byte_start":74797,"byte_end":74800,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ thread_pool.sender().spawn(lazy(|| {","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/sender.rs","byte_start":74805,"byte_end":74845,"line_start":70,"line_end":70,"column_start":5,"column_end":45}},{"value":"/     println!(\"called from a worker thread\");","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/sender.rs","byte_start":74850,"byte_end":74898,"line_start":71,"line_end":71,"column_start":5,"column_end":53}},{"value":"/     Ok(())","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/sender.rs","byte_start":74903,"byte_end":74917,"line_start":72,"line_end":72,"column_start":5,"column_end":19}},{"value":"/ })).unwrap();","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/sender.rs","byte_start":74922,"byte_end":74939,"line_start":73,"line_end":73,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/sender.rs","byte_start":74944,"byte_end":74947,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ // Gracefully shutdown the threadpool","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/sender.rs","byte_start":74952,"byte_end":74993,"line_start":75,"line_end":75,"column_start":5,"column_end":46}},{"value":"/ thread_pool.shutdown().wait().unwrap();","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/sender.rs","byte_start":74998,"byte_end":75041,"line_start":76,"line_end":76,"column_start":5,"column_end":48}},{"value":"/ # }","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/sender.rs","byte_start":75046,"byte_end":75053,"line_start":77,"line_end":77,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/sender.rs","byte_start":75058,"byte_end":75065,"line_start":78,"line_end":78,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":1527},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/shutdown.rs","byte_start":79743,"byte_end":79751,"line_start":22,"line_end":22,"column_start":12,"column_end":20},"name":"Shutdown","qualname":"::shutdown::Shutdown","value":"Shutdown {  }","parent":null,"children":[{"krate":0,"index":1528}],"decl_id":null,"docs":" Future that resolves when the thread pool is shutdown.","sig":null,"attributes":[{"value":"/ Future that resolves when the thread pool is shutdown.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/shutdown.rs","byte_start":79248,"byte_end":79306,"line_start":10,"line_end":10,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/shutdown.rs","byte_start":79307,"byte_end":79310,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ A `ThreadPool` is shutdown once all the worker have drained their queues and","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/shutdown.rs","byte_start":79311,"byte_end":79391,"line_start":12,"line_end":12,"column_start":1,"column_end":81}},{"value":"/ shutdown their threads.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/shutdown.rs","byte_start":79392,"byte_end":79419,"line_start":13,"line_end":13,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/shutdown.rs","byte_start":79420,"byte_end":79423,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ `Shutdown` is returned by [`shutdown`], [`shutdown_on_idle`], and","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/shutdown.rs","byte_start":79424,"byte_end":79493,"line_start":15,"line_end":15,"column_start":1,"column_end":70}},{"value":"/ [`shutdown_now`].","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/shutdown.rs","byte_start":79494,"byte_end":79515,"line_start":16,"line_end":16,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/shutdown.rs","byte_start":79516,"byte_end":79519,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ [`shutdown`]: struct.ThreadPool.html#method.shutdown","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/shutdown.rs","byte_start":79520,"byte_end":79576,"line_start":18,"line_end":18,"column_start":1,"column_end":57}},{"value":"/ [`shutdown_on_idle`]: struct.ThreadPool.html#method.shutdown_on_idle","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/shutdown.rs","byte_start":79577,"byte_end":79649,"line_start":19,"line_end":19,"column_start":1,"column_end":73}},{"value":"/ [`shutdown_now`]: struct.ThreadPool.html#method.shutdown_now","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/shutdown.rs","byte_start":79650,"byte_end":79714,"line_start":20,"line_end":20,"column_start":1,"column_end":65}}]},{"kind":"Struct","id":{"krate":0,"index":1629},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/thread_pool.rs","byte_start":112926,"byte_end":112936,"line_start":19,"line_end":19,"column_start":12,"column_end":22},"name":"ThreadPool","qualname":"::thread_pool::ThreadPool","value":"ThreadPool {  }","parent":null,"children":[{"krate":0,"index":1630}],"decl_id":null,"docs":" Work-stealing based thread pool for executing futures.","sig":null,"attributes":[{"value":"/ Work-stealing based thread pool for executing futures.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/thread_pool.rs","byte_start":112597,"byte_end":112655,"line_start":11,"line_end":11,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/thread_pool.rs","byte_start":112656,"byte_end":112659,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ If a `ThreadPool` instance is dropped without explicitly being shutdown,","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/thread_pool.rs","byte_start":112660,"byte_end":112736,"line_start":13,"line_end":13,"column_start":1,"column_end":77}},{"value":"/ `shutdown_now` is called implicitly, forcing all tasks that have not yet","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/thread_pool.rs","byte_start":112737,"byte_end":112813,"line_start":14,"line_end":14,"column_start":1,"column_end":77}},{"value":"/ completed to be dropped.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/thread_pool.rs","byte_start":112814,"byte_end":112842,"line_start":15,"line_end":15,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/thread_pool.rs","byte_start":112843,"byte_end":112846,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ Create `ThreadPool` instances using `Builder`.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/thread_pool.rs","byte_start":112847,"byte_end":112897,"line_start":17,"line_end":17,"column_start":1,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":988},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/thread_pool.rs","byte_start":113262,"byte_end":113265,"line_start":35,"line_end":35,"column_start":12,"column_end":15},"name":"new","qualname":"<ThreadPool>::new","value":"pub fn new() -> ThreadPool","parent":null,"children":[],"decl_id":null,"docs":" Create a new `ThreadPool` with default values.","sig":null,"attributes":[{"value":"/ Create a new `ThreadPool` with default values.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/thread_pool.rs","byte_start":113080,"byte_end":113130,"line_start":30,"line_end":30,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/thread_pool.rs","byte_start":113135,"byte_end":113138,"line_start":31,"line_end":31,"column_start":5,"column_end":8}},{"value":"/ Use [`Builder`] for creating a configured thread pool.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/thread_pool.rs","byte_start":113143,"byte_end":113201,"line_start":32,"line_end":32,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/thread_pool.rs","byte_start":113206,"byte_end":113209,"line_start":33,"line_end":33,"column_start":5,"column_end":8}},{"value":"/ [`Builder`]: struct.Builder.html","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/thread_pool.rs","byte_start":113214,"byte_end":113250,"line_start":34,"line_end":34,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":990},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/thread_pool.rs","byte_start":114563,"byte_end":114568,"line_start":79,"line_end":79,"column_start":12,"column_end":17},"name":"spawn","qualname":"<ThreadPool>::spawn","value":"pub fn spawn<F>(&Self, F) where F: Future<Item = (), Error = ()> + Send +\n'static","parent":null,"children":[],"decl_id":null,"docs":" Spawn a future onto the thread pool.","sig":null,"attributes":[{"value":"/ Spawn a future onto the thread pool.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/thread_pool.rs","byte_start":113565,"byte_end":113605,"line_start":48,"line_end":48,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/thread_pool.rs","byte_start":113610,"byte_end":113613,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ This function takes ownership of the future and randomly assigns it to a","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/thread_pool.rs","byte_start":113618,"byte_end":113694,"line_start":50,"line_end":50,"column_start":5,"column_end":81}},{"value":"/ worker thread. The thread will then start executing the future.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/thread_pool.rs","byte_start":113699,"byte_end":113766,"line_start":51,"line_end":51,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/thread_pool.rs","byte_start":113771,"byte_end":113774,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/thread_pool.rs","byte_start":113779,"byte_end":113793,"line_start":53,"line_end":53,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/thread_pool.rs","byte_start":113798,"byte_end":113801,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/thread_pool.rs","byte_start":113806,"byte_end":113817,"line_start":55,"line_end":55,"column_start":5,"column_end":16}},{"value":"/ # extern crate tokio_threadpool;","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/thread_pool.rs","byte_start":113822,"byte_end":113858,"line_start":56,"line_end":56,"column_start":5,"column_end":41}},{"value":"/ # extern crate futures;","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/thread_pool.rs","byte_start":113863,"byte_end":113890,"line_start":57,"line_end":57,"column_start":5,"column_end":32}},{"value":"/ # use tokio_threadpool::ThreadPool;","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/thread_pool.rs","byte_start":113895,"byte_end":113934,"line_start":58,"line_end":58,"column_start":5,"column_end":44}},{"value":"/ use futures::future::{Future, lazy};","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/thread_pool.rs","byte_start":113939,"byte_end":113979,"line_start":59,"line_end":59,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/thread_pool.rs","byte_start":113984,"byte_end":113987,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ # pub fn main() {","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/thread_pool.rs","byte_start":113992,"byte_end":114013,"line_start":61,"line_end":61,"column_start":5,"column_end":26}},{"value":"/ // Create a thread pool with default configuration values","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/thread_pool.rs","byte_start":114018,"byte_end":114079,"line_start":62,"line_end":62,"column_start":5,"column_end":66}},{"value":"/ let thread_pool = ThreadPool::new();","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/thread_pool.rs","byte_start":114084,"byte_end":114124,"line_start":63,"line_end":63,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/thread_pool.rs","byte_start":114129,"byte_end":114132,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ thread_pool.spawn(lazy(|| {","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/thread_pool.rs","byte_start":114137,"byte_end":114168,"line_start":65,"line_end":65,"column_start":5,"column_end":36}},{"value":"/     println!(\"called from a worker thread\");","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/thread_pool.rs","byte_start":114173,"byte_end":114221,"line_start":66,"line_end":66,"column_start":5,"column_end":53}},{"value":"/     Ok(())","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/thread_pool.rs","byte_start":114226,"byte_end":114240,"line_start":67,"line_end":67,"column_start":5,"column_end":19}},{"value":"/ }));","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/thread_pool.rs","byte_start":114245,"byte_end":114253,"line_start":68,"line_end":68,"column_start":5,"column_end":13}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/thread_pool.rs","byte_start":114258,"byte_end":114261,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ // Gracefully shutdown the threadpool","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/thread_pool.rs","byte_start":114266,"byte_end":114307,"line_start":70,"line_end":70,"column_start":5,"column_end":46}},{"value":"/ thread_pool.shutdown().wait().unwrap();","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/thread_pool.rs","byte_start":114312,"byte_end":114355,"line_start":71,"line_end":71,"column_start":5,"column_end":48}},{"value":"/ # }","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/thread_pool.rs","byte_start":114360,"byte_end":114367,"line_start":72,"line_end":72,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/thread_pool.rs","byte_start":114372,"byte_end":114379,"line_start":73,"line_end":73,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/thread_pool.rs","byte_start":114384,"byte_end":114387,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/thread_pool.rs","byte_start":114392,"byte_end":114404,"line_start":75,"line_end":75,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/thread_pool.rs","byte_start":114409,"byte_end":114412,"line_start":76,"line_end":76,"column_start":5,"column_end":8}},{"value":"/ This function panics if the spawn fails. Use [`Sender::spawn`] for a","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/thread_pool.rs","byte_start":114417,"byte_end":114489,"line_start":77,"line_end":77,"column_start":5,"column_end":77}},{"value":"/ version that returns a `Result` instead of panicking.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/thread_pool.rs","byte_start":114494,"byte_end":114551,"line_start":78,"line_end":78,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":992},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/thread_pool.rs","byte_start":115754,"byte_end":115766,"line_start":118,"line_end":118,"column_start":12,"column_end":24},"name":"spawn_handle","qualname":"<ThreadPool>::spawn_handle","value":"pub fn spawn_handle<F>(&Self, F) -> SpawnHandle<F::Item, F::Error> where\nF: Future + Send + 'static, F::Item: Send + 'static, F::Error: Send + 'static","parent":null,"children":[],"decl_id":null,"docs":" Spawn a future on to the thread pool, return a future representing\n the produced value.","sig":null,"attributes":[{"value":"/ Spawn a future on to the thread pool, return a future representing","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/thread_pool.rs","byte_start":114722,"byte_end":114792,"line_start":86,"line_end":86,"column_start":5,"column_end":75}},{"value":"/ the produced value.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/thread_pool.rs","byte_start":114797,"byte_end":114820,"line_start":87,"line_end":87,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/thread_pool.rs","byte_start":114825,"byte_end":114828,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ The SpawnHandle returned is a future that is a proxy for future itself.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/thread_pool.rs","byte_start":114833,"byte_end":114908,"line_start":89,"line_end":89,"column_start":5,"column_end":80}},{"value":"/ When future completes on this thread pool then the SpawnHandle will itself","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/thread_pool.rs","byte_start":114913,"byte_end":114991,"line_start":90,"line_end":90,"column_start":5,"column_end":83}},{"value":"/ be resolved.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/thread_pool.rs","byte_start":114996,"byte_end":115012,"line_start":91,"line_end":91,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/thread_pool.rs","byte_start":115017,"byte_end":115020,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/thread_pool.rs","byte_start":115025,"byte_end":115039,"line_start":93,"line_end":93,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/thread_pool.rs","byte_start":115044,"byte_end":115047,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/thread_pool.rs","byte_start":115052,"byte_end":115063,"line_start":95,"line_end":95,"column_start":5,"column_end":16}},{"value":"/ # extern crate tokio_threadpool;","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/thread_pool.rs","byte_start":115068,"byte_end":115104,"line_start":96,"line_end":96,"column_start":5,"column_end":41}},{"value":"/ # extern crate futures;","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/thread_pool.rs","byte_start":115109,"byte_end":115136,"line_start":97,"line_end":97,"column_start":5,"column_end":32}},{"value":"/ # use tokio_threadpool::ThreadPool;","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/thread_pool.rs","byte_start":115141,"byte_end":115180,"line_start":98,"line_end":98,"column_start":5,"column_end":44}},{"value":"/ use futures::future::{Future, lazy};","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/thread_pool.rs","byte_start":115185,"byte_end":115225,"line_start":99,"line_end":99,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/thread_pool.rs","byte_start":115230,"byte_end":115233,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ # pub fn main() {","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/thread_pool.rs","byte_start":115238,"byte_end":115259,"line_start":101,"line_end":101,"column_start":5,"column_end":26}},{"value":"/ // Create a thread pool with default configuration values","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/thread_pool.rs","byte_start":115264,"byte_end":115325,"line_start":102,"line_end":102,"column_start":5,"column_end":66}},{"value":"/ let thread_pool = ThreadPool::new();","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/thread_pool.rs","byte_start":115330,"byte_end":115370,"line_start":103,"line_end":103,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/thread_pool.rs","byte_start":115375,"byte_end":115378,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ let handle = thread_pool.spawn_handle(lazy(|| Ok::<_, ()>(42)));","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/thread_pool.rs","byte_start":115383,"byte_end":115451,"line_start":105,"line_end":105,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/thread_pool.rs","byte_start":115456,"byte_end":115459,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ let value = handle.wait().unwrap();","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/thread_pool.rs","byte_start":115464,"byte_end":115503,"line_start":107,"line_end":107,"column_start":5,"column_end":44}},{"value":"/ assert_eq!(value, 42);","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/thread_pool.rs","byte_start":115508,"byte_end":115534,"line_start":108,"line_end":108,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/thread_pool.rs","byte_start":115539,"byte_end":115542,"line_start":109,"line_end":109,"column_start":5,"column_end":8}},{"value":"/ // Gracefully shutdown the threadpool","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/thread_pool.rs","byte_start":115547,"byte_end":115588,"line_start":110,"line_end":110,"column_start":5,"column_end":46}},{"value":"/ thread_pool.shutdown().wait().unwrap();","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/thread_pool.rs","byte_start":115593,"byte_end":115636,"line_start":111,"line_end":111,"column_start":5,"column_end":48}},{"value":"/ # }","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/thread_pool.rs","byte_start":115641,"byte_end":115648,"line_start":112,"line_end":112,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/thread_pool.rs","byte_start":115653,"byte_end":115660,"line_start":113,"line_end":113,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/thread_pool.rs","byte_start":115665,"byte_end":115668,"line_start":114,"line_end":114,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/thread_pool.rs","byte_start":115673,"byte_end":115685,"line_start":115,"line_end":115,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/thread_pool.rs","byte_start":115690,"byte_end":115693,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/ This function panics if the spawn fails.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/thread_pool.rs","byte_start":115698,"byte_end":115742,"line_start":117,"line_end":117,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":994},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/thread_pool.rs","byte_start":116189,"byte_end":116195,"line_start":131,"line_end":131,"column_start":12,"column_end":18},"name":"sender","qualname":"<ThreadPool>::sender","value":"pub fn sender(&Self) -> &Sender","parent":null,"children":[],"decl_id":null,"docs":" Return a reference to the sender handle","sig":null,"attributes":[{"value":"/ Return a reference to the sender handle","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/thread_pool.rs","byte_start":116011,"byte_end":116054,"line_start":127,"line_end":127,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/thread_pool.rs","byte_start":116059,"byte_end":116062,"line_start":128,"line_end":128,"column_start":5,"column_end":8}},{"value":"/ The handle is used to spawn futures onto the thread pool. It also","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/thread_pool.rs","byte_start":116067,"byte_end":116136,"line_start":129,"line_end":129,"column_start":5,"column_end":74}},{"value":"/ implements the `Executor` trait.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/thread_pool.rs","byte_start":116141,"byte_end":116177,"line_start":130,"line_end":130,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":995},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/thread_pool.rs","byte_start":116335,"byte_end":116345,"line_start":136,"line_end":136,"column_start":12,"column_end":22},"name":"sender_mut","qualname":"<ThreadPool>::sender_mut","value":"pub fn sender_mut(&mut Self) -> &mut Sender","parent":null,"children":[],"decl_id":null,"docs":" Return a mutable reference to the sender handle\n","sig":null,"attributes":[{"value":"/ Return a mutable reference to the sender handle","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/thread_pool.rs","byte_start":116272,"byte_end":116323,"line_start":135,"line_end":135,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":996},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/thread_pool.rs","byte_start":116979,"byte_end":116995,"line_start":150,"line_end":150,"column_start":12,"column_end":28},"name":"shutdown_on_idle","qualname":"<ThreadPool>::shutdown_on_idle","value":"pub fn shutdown_on_idle(Self) -> Shutdown","parent":null,"children":[],"decl_id":null,"docs":" Shutdown the pool once it becomes idle.","sig":null,"attributes":[{"value":"/ Shutdown the pool once it becomes idle.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/thread_pool.rs","byte_start":116434,"byte_end":116477,"line_start":140,"line_end":140,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/thread_pool.rs","byte_start":116482,"byte_end":116485,"line_start":141,"line_end":141,"column_start":5,"column_end":8}},{"value":"/ Idle is defined as the completion of all futures that have been spawned","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/thread_pool.rs","byte_start":116490,"byte_end":116565,"line_start":142,"line_end":142,"column_start":5,"column_end":80}},{"value":"/ onto the thread pool. There may still be outstanding handles when the","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/thread_pool.rs","byte_start":116570,"byte_end":116643,"line_start":143,"line_end":143,"column_start":5,"column_end":78}},{"value":"/ thread pool reaches an idle state.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/thread_pool.rs","byte_start":116648,"byte_end":116686,"line_start":144,"line_end":144,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/thread_pool.rs","byte_start":116691,"byte_end":116694,"line_start":145,"line_end":145,"column_start":5,"column_end":8}},{"value":"/ Once the idle state is reached, calling `spawn` on any outstanding","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/thread_pool.rs","byte_start":116699,"byte_end":116769,"line_start":146,"line_end":146,"column_start":5,"column_end":75}},{"value":"/ handle will result in an error. All worker threads are signaled and will","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/thread_pool.rs","byte_start":116774,"byte_end":116850,"line_start":147,"line_end":147,"column_start":5,"column_end":81}},{"value":"/ shutdown. The returned future completes once all worker threads have","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/thread_pool.rs","byte_start":116855,"byte_end":116927,"line_start":148,"line_end":148,"column_start":5,"column_end":77}},{"value":"/ completed the shutdown process.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/thread_pool.rs","byte_start":116932,"byte_end":116967,"line_start":149,"line_end":149,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":997},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/thread_pool.rs","byte_start":117567,"byte_end":117575,"line_start":164,"line_end":164,"column_start":12,"column_end":20},"name":"shutdown","qualname":"<ThreadPool>::shutdown","value":"pub fn shutdown(Self) -> Shutdown","parent":null,"children":[],"decl_id":null,"docs":" Shutdown the pool","sig":null,"attributes":[{"value":"/ Shutdown the pool","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/thread_pool.rs","byte_start":117167,"byte_end":117188,"line_start":156,"line_end":156,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/thread_pool.rs","byte_start":117193,"byte_end":117196,"line_start":157,"line_end":157,"column_start":5,"column_end":8}},{"value":"/ This prevents the thread pool from accepting new tasks but will allow","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/thread_pool.rs","byte_start":117201,"byte_end":117274,"line_start":158,"line_end":158,"column_start":5,"column_end":78}},{"value":"/ any existing tasks to complete.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/thread_pool.rs","byte_start":117279,"byte_end":117314,"line_start":159,"line_end":159,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/thread_pool.rs","byte_start":117319,"byte_end":117322,"line_start":160,"line_end":160,"column_start":5,"column_end":8}},{"value":"/ Calling `spawn` on any outstanding handle will result in an error. All","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/thread_pool.rs","byte_start":117327,"byte_end":117401,"line_start":161,"line_end":161,"column_start":5,"column_end":79}},{"value":"/ worker threads are signaled and will shutdown. The returned future","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/thread_pool.rs","byte_start":117406,"byte_end":117476,"line_start":162,"line_end":162,"column_start":5,"column_end":75}},{"value":"/ completes once all worker threads have completed the shutdown process.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/thread_pool.rs","byte_start":117481,"byte_end":117555,"line_start":163,"line_end":163,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":998},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/thread_pool.rs","byte_start":118186,"byte_end":118198,"line_start":178,"line_end":178,"column_start":12,"column_end":24},"name":"shutdown_now","qualname":"<ThreadPool>::shutdown_now","value":"pub fn shutdown_now(Self) -> Shutdown","parent":null,"children":[],"decl_id":null,"docs":" Shutdown the pool immediately","sig":null,"attributes":[{"value":"/ Shutdown the pool immediately","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/thread_pool.rs","byte_start":117746,"byte_end":117779,"line_start":170,"line_end":170,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/thread_pool.rs","byte_start":117784,"byte_end":117787,"line_start":171,"line_end":171,"column_start":5,"column_end":8}},{"value":"/ This will prevent the thread pool from accepting new tasks **and**","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/thread_pool.rs","byte_start":117792,"byte_end":117862,"line_start":172,"line_end":172,"column_start":5,"column_end":75}},{"value":"/ abort any tasks that are currently running on the thread pool.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/thread_pool.rs","byte_start":117867,"byte_end":117933,"line_start":173,"line_end":173,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/thread_pool.rs","byte_start":117938,"byte_end":117941,"line_start":174,"line_end":174,"column_start":5,"column_end":8}},{"value":"/ Calling `spawn` on any outstanding handle will result in an error. All","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/thread_pool.rs","byte_start":117946,"byte_end":118020,"line_start":175,"line_end":175,"column_start":5,"column_end":79}},{"value":"/ worker threads are signaled and will shutdown. The returned future","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/thread_pool.rs","byte_start":118025,"byte_end":118095,"line_start":176,"line_end":176,"column_start":5,"column_end":75}},{"value":"/ completes once all worker threads have completed the shutdown process.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/thread_pool.rs","byte_start":118100,"byte_end":118174,"line_start":177,"line_end":177,"column_start":5,"column_end":79}}]},{"kind":"Struct","id":{"krate":0,"index":1638},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/thread_pool.rs","byte_start":119203,"byte_end":119214,"line_start":208,"line_end":208,"column_start":12,"column_end":23},"name":"SpawnHandle","qualname":"::thread_pool::SpawnHandle","value":"","parent":null,"children":[],"decl_id":null,"docs":" Handle returned from ThreadPool::spawn_handle.","sig":null,"attributes":[{"value":"/ Handle returned from ThreadPool::spawn_handle.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/thread_pool.rs","byte_start":118866,"byte_end":118916,"line_start":201,"line_end":201,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/thread_pool.rs","byte_start":118917,"byte_end":118920,"line_start":202,"line_end":202,"column_start":1,"column_end":4}},{"value":"/ This handle is a future representing the completion of a different future","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/thread_pool.rs","byte_start":118921,"byte_end":118998,"line_start":203,"line_end":203,"column_start":1,"column_end":78}},{"value":"/ spawned on to the thread pool. Created through the ThreadPool::spawn_handle","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/thread_pool.rs","byte_start":118999,"byte_end":119078,"line_start":204,"line_end":204,"column_start":1,"column_end":80}},{"value":"/ function this handle will resolve when the future provided resolves on the","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/thread_pool.rs","byte_start":119079,"byte_end":119157,"line_start":205,"line_end":205,"column_start":1,"column_end":79}},{"value":"/ thread pool.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/thread_pool.rs","byte_start":119158,"byte_end":119174,"line_start":206,"line_end":206,"column_start":1,"column_end":17}}]},{"kind":"Struct","id":{"krate":0,"index":1651},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/worker/stack.rs","byte_start":157796,"byte_end":157801,"line_start":36,"line_end":36,"column_start":12,"column_end":17},"name":"State","qualname":"::worker::stack::State","value":"","parent":null,"children":[],"decl_id":null,"docs":" State related to the stack of sleeping workers.","sig":null,"attributes":[{"value":"/ State related to the stack of sleeping workers.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/worker/stack.rs","byte_start":157495,"byte_end":157546,"line_start":26,"line_end":26,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/worker/stack.rs","byte_start":157547,"byte_end":157550,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ - Parked head     16 bits","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/worker/stack.rs","byte_start":157551,"byte_end":157580,"line_start":28,"line_end":28,"column_start":1,"column_end":30}},{"value":"/ - Sequence        remaining","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/worker/stack.rs","byte_start":157581,"byte_end":157612,"line_start":29,"line_end":29,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/worker/stack.rs","byte_start":157613,"byte_end":157616,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ The parked head value has a couple of special values:","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/worker/stack.rs","byte_start":157617,"byte_end":157674,"line_start":31,"line_end":31,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/worker/stack.rs","byte_start":157675,"byte_end":157678,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ - EMPTY: No sleepers","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/worker/stack.rs","byte_start":157679,"byte_end":157703,"line_start":33,"line_end":33,"column_start":1,"column_end":25}},{"value":"/ - TERMINATED: Don't spawn more threads","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/worker/stack.rs","byte_start":157704,"byte_end":157746,"line_start":34,"line_end":34,"column_start":1,"column_end":43}}]},{"kind":"Struct","id":{"krate":0,"index":1708},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/worker/mod.rs","byte_start":120277,"byte_end":120283,"line_start":36,"line_end":36,"column_start":12,"column_end":18},"name":"Worker","qualname":"::worker::Worker","value":"Worker {  }","parent":null,"children":[{"krate":0,"index":1709},{"krate":0,"index":1710},{"krate":0,"index":1711},{"krate":0,"index":1712},{"krate":0,"index":1713},{"krate":0,"index":1714},{"krate":0,"index":1715},{"krate":0,"index":1716}],"decl_id":null,"docs":" Thread worker","sig":null,"attributes":[{"value":"/ Thread worker","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/worker/mod.rs","byte_start":119948,"byte_end":119965,"line_start":27,"line_end":27,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/worker/mod.rs","byte_start":119966,"byte_end":119969,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ This is passed to the [`around_worker`] callback set on [`Builder`]. This","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/worker/mod.rs","byte_start":119970,"byte_end":120047,"line_start":29,"line_end":29,"column_start":1,"column_end":78}},{"value":"/ callback is only expected to call [`run`] on it.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/worker/mod.rs","byte_start":120048,"byte_end":120100,"line_start":30,"line_end":30,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/worker/mod.rs","byte_start":120101,"byte_end":120104,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ [`Builder`]: struct.Builder.html","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/worker/mod.rs","byte_start":120105,"byte_end":120141,"line_start":32,"line_end":32,"column_start":1,"column_end":37}},{"value":"/ [`around_worker`]: struct.Builder.html#method.around_worker","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/worker/mod.rs","byte_start":120142,"byte_end":120205,"line_start":33,"line_end":33,"column_start":1,"column_end":64}},{"value":"/ [`run`]: struct.Worker.html#method.run","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/worker/mod.rs","byte_start":120206,"byte_end":120248,"line_start":34,"line_end":34,"column_start":1,"column_end":43}}]},{"kind":"Struct","id":{"krate":0,"index":1724},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/worker/mod.rs","byte_start":121733,"byte_end":121741,"line_start":82,"line_end":82,"column_start":12,"column_end":20},"name":"WorkerId","qualname":"::worker::WorkerId","value":"","parent":null,"children":[],"decl_id":null,"docs":" Identifies a thread pool worker.","sig":null,"attributes":[{"value":"/ Identifies a thread pool worker.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/worker/mod.rs","byte_start":121491,"byte_end":121527,"line_start":77,"line_end":77,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/worker/mod.rs","byte_start":121528,"byte_end":121531,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ This identifier is unique scoped by the thread pool. It is possible that","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/worker/mod.rs","byte_start":121532,"byte_end":121608,"line_start":79,"line_end":79,"column_start":1,"column_end":77}},{"value":"/ different thread pool instances share worker identifier values.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/worker/mod.rs","byte_start":121609,"byte_end":121676,"line_start":80,"line_end":80,"column_start":1,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":1282},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/worker/mod.rs","byte_start":126417,"byte_end":126419,"line_start":217,"line_end":217,"column_start":12,"column_end":14},"name":"id","qualname":"<Worker>::id","value":"pub fn id(&Self) -> &WorkerId","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the worker's identifier.","sig":null,"attributes":[{"value":"/ Returns a reference to the worker's identifier.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/worker/mod.rs","byte_start":126193,"byte_end":126244,"line_start":213,"line_end":213,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/worker/mod.rs","byte_start":126249,"byte_end":126252,"line_start":214,"line_end":214,"column_start":5,"column_end":8}},{"value":"/ This identifier is unique scoped by the thread pool. It is possible that","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/worker/mod.rs","byte_start":126257,"byte_end":126333,"line_start":215,"line_end":215,"column_start":5,"column_end":81}},{"value":"/ different thread pool instances share worker identifier values.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/worker/mod.rs","byte_start":126338,"byte_end":126405,"line_start":216,"line_end":216,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":1283},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/worker/mod.rs","byte_start":126572,"byte_end":126575,"line_start":224,"line_end":224,"column_start":12,"column_end":15},"name":"run","qualname":"<Worker>::run","value":"pub fn run(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Run the worker","sig":null,"attributes":[{"value":"/ Run the worker","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/worker/mod.rs","byte_start":126470,"byte_end":126488,"line_start":221,"line_end":221,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/worker/mod.rs","byte_start":126493,"byte_end":126496,"line_start":222,"line_end":222,"column_start":5,"column_end":8}},{"value":"/ This function blocks until the worker is shutting down.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/worker/mod.rs","byte_start":126501,"byte_end":126560,"line_start":223,"line_end":223,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":1322},"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/worker/mod.rs","byte_start":146434,"byte_end":146442,"line_start":794,"line_end":794,"column_start":12,"column_end":20},"name":"to_usize","qualname":"<WorkerId>::to_usize","value":"pub fn to_usize(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns this identifier represented as an integer.","sig":null,"attributes":[{"value":"/ Returns this identifier represented as an integer.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/worker/mod.rs","byte_start":146231,"byte_end":146285,"line_start":790,"line_end":790,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/worker/mod.rs","byte_start":146290,"byte_end":146293,"line_start":791,"line_end":791,"column_start":5,"column_end":8}},{"value":"/ Worker identifiers in a single thread pool are guaranteed to correspond to integers in the","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/worker/mod.rs","byte_start":146298,"byte_end":146392,"line_start":792,"line_end":792,"column_start":5,"column_end":99}},{"value":"/ range `0..pool_size`.","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/worker/mod.rs","byte_start":146397,"byte_end":146422,"line_start":793,"line_end":793,"column_start":5,"column_end":30}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/blocking/global.rs","byte_start":17219,"byte_end":17231,"line_start":204,"line_end":204,"column_start":25,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":72}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/blocking/global.rs","byte_start":17361,"byte_end":17373,"line_start":210,"line_end":210,"column_start":19,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":75}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Inherent","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/blocking/mod.rs","byte_start":9084,"byte_end":9097,"line_start":62,"line_end":62,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":98}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/blocking/mod.rs","byte_start":9240,"byte_end":9253,"line_start":70,"line_end":70,"column_start":23,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":100}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/blocking/mod.rs","byte_start":9392,"byte_end":9405,"line_start":76,"line_end":76,"column_start":21,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":102}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/blocking/mod.rs","byte_start":9603,"byte_end":9616,"line_start":84,"line_end":84,"column_start":16,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":104}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Inherent","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/builder.rs","byte_start":19457,"byte_end":19464,"line_start":73,"line_end":73,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":185},{"krate":0,"index":187},{"krate":0,"index":188},{"krate":0,"index":189},{"krate":0,"index":190},{"krate":0,"index":192},{"krate":0,"index":194},{"krate":0,"index":195},{"krate":0,"index":197},{"krate":0,"index":199},{"krate":0,"index":201},{"krate":0,"index":205}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/builder.rs","byte_start":31139,"byte_end":31146,"line_start":468,"line_end":468,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":207}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Inherent","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/callback.rs","byte_start":31618,"byte_end":31626,"line_start":13,"line_end":13,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":222},{"krate":0,"index":224}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/callback.rs","byte_start":31902,"byte_end":31910,"line_start":26,"line_end":26,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":226}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/config.rs","byte_start":32869,"byte_end":32875,"line_start":26,"line_end":26,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":245}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/notifier.rs","byte_start":33628,"byte_end":33636,"line_start":23,"line_end":23,"column_start":17,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":266},{"krate":0,"index":267},{"krate":0,"index":268}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Inherent","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/notifier.rs","byte_start":35277,"byte_end":35283,"line_start":74,"line_end":74,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":271}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/notifier.rs","byte_start":35372,"byte_end":35378,"line_start":80,"line_end":80,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":274},{"krate":0,"index":275}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/notifier.rs","byte_start":35493,"byte_end":35499,"line_start":88,"line_end":88,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":278}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Inherent","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/park/boxed.rs","byte_start":36030,"byte_end":36039,"line_start":11,"line_end":11,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":302}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/park/boxed.rs","byte_start":36144,"byte_end":36153,"line_start":17,"line_end":17,"column_start":31,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":305},{"krate":0,"index":306},{"krate":0,"index":307},{"krate":0,"index":308},{"krate":0,"index":310}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Inherent","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/park/default_park.rs","byte_start":37474,"byte_end":37485,"line_start":33,"line_end":33,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":337},{"krate":0,"index":338},{"krate":0,"index":339}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/park/default_park.rs","byte_start":38092,"byte_end":38103,"line_start":56,"line_end":56,"column_start":15,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":341},{"krate":0,"index":342},{"krate":0,"index":343},{"krate":0,"index":344},{"krate":0,"index":345}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/park/default_park.rs","byte_start":38597,"byte_end":38610,"line_start":79,"line_end":79,"column_start":17,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":347}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/park/default_park.rs","byte_start":38727,"byte_end":38736,"line_start":87,"line_end":87,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":349}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/park/default_park.rs","byte_start":38860,"byte_end":38869,"line_start":93,"line_end":93,"column_start":16,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":351}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Inherent","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/pool/backup.rs","byte_start":57270,"byte_end":57276,"line_start":80,"line_end":80,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":413},{"krate":0,"index":414},{"krate":0,"index":415},{"krate":0,"index":416},{"krate":0,"index":417},{"krate":0,"index":418},{"krate":0,"index":419},{"krate":0,"index":421},{"krate":0,"index":422},{"krate":0,"index":423},{"krate":0,"index":424}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Inherent","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/pool/backup.rs","byte_start":61898,"byte_end":61903,"line_start":236,"line_end":236,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":426},{"krate":0,"index":427},{"krate":0,"index":428},{"krate":0,"index":429},{"krate":0,"index":430},{"krate":0,"index":431},{"krate":0,"index":432},{"krate":0,"index":433}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/pool/backup.rs","byte_start":63034,"byte_end":63039,"line_start":288,"line_end":288,"column_start":22,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":435}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/pool/backup.rs","byte_start":63212,"byte_end":63217,"line_start":300,"line_end":300,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":439}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Inherent","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/pool/backup_stack.rs","byte_start":64458,"byte_end":64469,"line_start":36,"line_end":36,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":465},{"krate":0,"index":466},{"krate":0,"index":467}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Inherent","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/pool/backup_stack.rs","byte_start":67986,"byte_end":67991,"line_start":162,"line_end":162,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":469},{"krate":0,"index":470},{"krate":0,"index":471}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/pool/backup_stack.rs","byte_start":68434,"byte_end":68439,"line_start":181,"line_end":181,"column_start":22,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":473}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Inherent","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/pool/state.rs","byte_start":69612,"byte_end":69617,"line_start":34,"line_end":34,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":489},{"krate":0,"index":490},{"krate":0,"index":491},{"krate":0,"index":492},{"krate":0,"index":493},{"krate":0,"index":494},{"krate":0,"index":495},{"krate":0,"index":496}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/pool/state.rs","byte_start":71100,"byte_end":71105,"line_start":89,"line_end":89,"column_start":22,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":498}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/pool/state.rs","byte_start":71276,"byte_end":71281,"line_start":101,"line_end":101,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":502}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/pool/state.rs","byte_start":71574,"byte_end":71583,"line_start":112,"line_end":112,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":504}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Inherent","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/pool/mod.rs","byte_start":41545,"byte_end":41549,"line_start":84,"line_end":84,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":606},{"krate":0,"index":608},{"krate":0,"index":609},{"krate":0,"index":610},{"krate":0,"index":614},{"krate":0,"index":615},{"krate":0,"index":617},{"krate":0,"index":618},{"krate":0,"index":619},{"krate":0,"index":620},{"krate":0,"index":622},{"krate":0,"index":626}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/pool/mod.rs","byte_start":53271,"byte_end":53275,"line_start":440,"line_end":440,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":629}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/pool/mod.rs","byte_start":53395,"byte_end":53399,"line_start":446,"line_end":446,"column_start":22,"column_end":26},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/pool/mod.rs","byte_start":53424,"byte_end":53428,"line_start":447,"line_end":447,"column_start":22,"column_end":26},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Inherent","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/sender.rs","byte_start":72970,"byte_end":72976,"line_start":29,"line_end":29,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":675},{"krate":0,"index":677}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/sender.rs","byte_start":76443,"byte_end":76449,"line_start":126,"line_end":126,"column_start":35,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":679},{"krate":0,"index":680}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/sender.rs","byte_start":78059,"byte_end":78065,"line_start":179,"line_end":179,"column_start":46,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":687},{"krate":0,"index":688}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/sender.rs","byte_start":78416,"byte_end":78422,"line_start":192,"line_end":192,"column_start":33,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":691}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/sender.rs","byte_start":78964,"byte_end":78970,"line_start":212,"line_end":212,"column_start":16,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":693}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Inherent","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/shutdown.rs","byte_start":80155,"byte_end":80163,"line_start":37,"line_end":37,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":725}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/shutdown.rs","byte_start":80325,"byte_end":80333,"line_start":45,"line_end":45,"column_start":17,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":727},{"krate":0,"index":728},{"krate":0,"index":729}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/shutdown.rs","byte_start":80893,"byte_end":80908,"line_start":69,"line_end":69,"column_start":22,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/shutdown.rs","byte_start":80933,"byte_end":80948,"line_start":70,"line_end":70,"column_start":22,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Inherent","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/shutdown.rs","byte_start":80958,"byte_end":80973,"line_start":72,"line_end":72,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":733}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/shutdown.rs","byte_start":81344,"byte_end":81359,"line_start":88,"line_end":88,"column_start":15,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":735}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Inherent","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/task/blocking.rs","byte_start":95008,"byte_end":95016,"line_start":87,"line_end":87,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":789},{"krate":0,"index":790},{"krate":0,"index":791},{"krate":0,"index":792},{"krate":0,"index":793}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Inherent","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/task/blocking.rs","byte_start":106064,"byte_end":106069,"line_start":387,"line_end":387,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":795},{"krate":0,"index":796},{"krate":0,"index":797},{"krate":0,"index":798},{"krate":0,"index":799},{"krate":0,"index":800},{"krate":0,"index":801},{"krate":0,"index":802},{"krate":0,"index":803},{"krate":0,"index":804}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/task/blocking.rs","byte_start":108162,"byte_end":108167,"line_start":472,"line_end":472,"column_start":22,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":806}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/task/blocking.rs","byte_start":108340,"byte_end":108345,"line_start":484,"line_end":484,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":810}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Inherent","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/task/blocking_state.rs","byte_start":109161,"byte_end":109174,"line_start":20,"line_end":20,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":828},{"krate":0,"index":829},{"krate":0,"index":830},{"krate":0,"index":831},{"krate":0,"index":832},{"krate":0,"index":833}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/task/blocking_state.rs","byte_start":110793,"byte_end":110806,"line_start":70,"line_end":70,"column_start":22,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":835}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/task/blocking_state.rs","byte_start":111011,"byte_end":111024,"line_start":82,"line_end":82,"column_start":21,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":839}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Inherent","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/task/state.rs","byte_start":111767,"byte_end":111772,"line_start":25,"line_end":25,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":842},{"krate":0,"index":843}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/task/state.rs","byte_start":112060,"byte_end":112065,"line_start":39,"line_end":39,"column_start":22,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":845}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Inherent","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/task/mod.rs","byte_start":83639,"byte_end":83643,"line_start":67,"line_end":67,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":934},{"krate":0,"index":935},{"krate":0,"index":936},{"krate":0,"index":947},{"krate":0,"index":949},{"krate":0,"index":950},{"krate":0,"index":951},{"krate":0,"index":953},{"krate":0,"index":954}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/task/mod.rs","byte_start":86078,"byte_end":86083,"line_start":133,"line_end":133,"column_start":31,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":946}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/task/mod.rs","byte_start":91649,"byte_end":91653,"line_start":301,"line_end":301,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":956}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Inherent","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/thread_pool.rs","byte_start":113063,"byte_end":113073,"line_start":29,"line_end":29,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":988},{"krate":0,"index":989},{"krate":0,"index":990},{"krate":0,"index":992},{"krate":0,"index":994},{"krate":0,"index":995},{"krate":0,"index":996},{"krate":0,"index":997},{"krate":0,"index":998}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/thread_pool.rs","byte_start":118380,"byte_end":118390,"line_start":185,"line_end":185,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1000}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/thread_pool.rs","byte_start":119273,"byte_end":119284,"line_start":210,"line_end":210,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1004},{"krate":0,"index":1005},{"krate":0,"index":1006}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Inherent","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/worker/entry.rs","byte_start":148132,"byte_end":148143,"line_start":54,"line_end":54,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":1091},{"krate":0,"index":1092},{"krate":0,"index":1093},{"krate":0,"index":1094},{"krate":0,"index":1096},{"krate":0,"index":1098},{"krate":0,"index":1099},{"krate":0,"index":1100},{"krate":0,"index":1101},{"krate":0,"index":1102},{"krate":0,"index":1103},{"krate":0,"index":1104},{"krate":0,"index":1105},{"krate":0,"index":1106},{"krate":0,"index":1107},{"krate":0,"index":1108},{"krate":0,"index":1109},{"krate":0,"index":1110},{"krate":0,"index":1111}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/worker/entry.rs","byte_start":156180,"byte_end":156191,"line_start":319,"line_end":319,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1113}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Inherent","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/worker/stack.rs","byte_start":158470,"byte_end":158475,"line_start":60,"line_end":60,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":1147},{"krate":0,"index":1148},{"krate":0,"index":1149}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Inherent","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/worker/stack.rs","byte_start":163211,"byte_end":163216,"line_start":212,"line_end":212,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":1151},{"krate":0,"index":1152},{"krate":0,"index":1153}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/worker/stack.rs","byte_start":163657,"byte_end":163662,"line_start":232,"line_end":232,"column_start":22,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1155}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/worker/stack.rs","byte_start":163833,"byte_end":163838,"line_start":244,"line_end":244,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1159}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Inherent","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/worker/state.rs","byte_start":165385,"byte_end":165390,"line_start":36,"line_end":36,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":1168},{"krate":0,"index":1169},{"krate":0,"index":1170},{"krate":0,"index":1172},{"krate":0,"index":1173},{"krate":0,"index":1174},{"krate":0,"index":1175}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/worker/state.rs","byte_start":166320,"byte_end":166325,"line_start":76,"line_end":76,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1180}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/worker/state.rs","byte_start":166476,"byte_end":166481,"line_start":83,"line_end":83,"column_start":22,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1182}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/worker/state.rs","byte_start":166652,"byte_end":166657,"line_start":95,"line_end":95,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1186}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/worker/state.rs","byte_start":166948,"byte_end":166957,"line_start":106,"line_end":106,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1188}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Inherent","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/worker/mod.rs","byte_start":121892,"byte_end":121898,"line_start":87,"line_end":87,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":1270},{"krate":0,"index":1271},{"krate":0,"index":1272},{"krate":0,"index":1275},{"krate":0,"index":1279},{"krate":0,"index":1281},{"krate":0,"index":1282},{"krate":0,"index":1283},{"krate":0,"index":1286},{"krate":0,"index":1287},{"krate":0,"index":1289},{"krate":0,"index":1290},{"krate":0,"index":1294},{"krate":0,"index":1296},{"krate":0,"index":1303},{"krate":0,"index":1305},{"krate":0,"index":1309}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/worker/mod.rs","byte_start":137688,"byte_end":137693,"line_start":538,"line_end":538,"column_start":27,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1302}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Direct","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/worker/mod.rs","byte_start":144622,"byte_end":144628,"line_start":726,"line_end":726,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1311}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Inherent","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/worker/mod.rs","byte_start":144889,"byte_end":144900,"line_start":739,"line_end":739,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":1313},{"krate":0,"index":1314},{"krate":0,"index":1315},{"krate":0,"index":1317},{"krate":0,"index":1318},{"krate":0,"index":1319}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Inherent","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/worker/mod.rs","byte_start":146064,"byte_end":146072,"line_start":784,"line_end":784,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1321},{"krate":0,"index":1322}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/lib.rs","byte_start":6868,"byte_end":6876,"line_start":156,"line_end":156,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":12}},{"kind":"Mod","span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/lib.rs","byte_start":6939,"byte_end":6943,"line_start":161,"line_end":161,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":279}}],"macro_refs":[],"relations":[{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/blocking/global.rs","byte_start":17219,"byte_end":17231,"line_start":204,"line_end":204,"column_start":25,"column_end":37},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":55},"to":{"krate":2,"index":8887}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/blocking/global.rs","byte_start":17361,"byte_end":17373,"line_start":210,"line_end":210,"column_start":19,"column_end":31},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":55},"to":{"krate":2,"index":3088}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/blocking/mod.rs","byte_start":9084,"byte_end":9097,"line_start":62,"line_end":62,"column_start":6,"column_end":19},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":90},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/blocking/mod.rs","byte_start":9240,"byte_end":9253,"line_start":70,"line_end":70,"column_start":23,"column_end":36},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":90},"to":{"krate":2,"index":8894}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/blocking/mod.rs","byte_start":9392,"byte_end":9405,"line_start":76,"line_end":76,"column_start":21,"column_end":34},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":90},"to":{"krate":2,"index":8887}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/blocking/mod.rs","byte_start":9603,"byte_end":9616,"line_start":84,"line_end":84,"column_start":16,"column_end":29},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":90},"to":{"krate":1,"index":2326}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/builder.rs","byte_start":19457,"byte_end":19464,"line_start":73,"line_end":73,"column_start":6,"column_end":13},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":179},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/builder.rs","byte_start":31139,"byte_end":31146,"line_start":468,"line_end":468,"column_start":21,"column_end":28},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":179},"to":{"krate":2,"index":8887}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/callback.rs","byte_start":31618,"byte_end":31626,"line_start":13,"line_end":13,"column_start":6,"column_end":14},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":1357},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/callback.rs","byte_start":31902,"byte_end":31910,"line_start":26,"line_end":26,"column_start":21,"column_end":29},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":1357},"to":{"krate":2,"index":8887}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/config.rs","byte_start":32869,"byte_end":32875,"line_start":26,"line_end":26,"column_start":21,"column_end":27},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":1361},"to":{"krate":2,"index":8887}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/notifier.rs","byte_start":33628,"byte_end":33636,"line_start":23,"line_end":23,"column_start":17,"column_end":25},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":1371},"to":{"krate":24,"index":3222}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/notifier.rs","byte_start":35277,"byte_end":35283,"line_start":74,"line_end":74,"column_start":9,"column_end":15},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":1375},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/notifier.rs","byte_start":35372,"byte_end":35378,"line_start":80,"line_end":80,"column_start":24,"column_end":30},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":1375},"to":{"krate":2,"index":3064}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/notifier.rs","byte_start":35493,"byte_end":35499,"line_start":88,"line_end":88,"column_start":18,"column_end":24},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":1375},"to":{"krate":2,"index":3088}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/park/boxed.rs","byte_start":36030,"byte_end":36039,"line_start":11,"line_end":11,"column_start":9,"column_end":18},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":296},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/park/boxed.rs","byte_start":36144,"byte_end":36153,"line_start":17,"line_end":17,"column_start":31,"column_end":40},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":296},"to":{"krate":19,"index":179}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/park/default_park.rs","byte_start":37474,"byte_end":37485,"line_start":33,"line_end":33,"column_start":6,"column_end":17},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":1382},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/park/default_park.rs","byte_start":38092,"byte_end":38103,"line_start":56,"line_end":56,"column_start":15,"column_end":26},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":1382},"to":{"krate":19,"index":179}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/park/default_park.rs","byte_start":38597,"byte_end":38610,"line_start":79,"line_end":79,"column_start":17,"column_end":30},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":1386},"to":{"krate":19,"index":185}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/park/default_park.rs","byte_start":38727,"byte_end":38736,"line_start":87,"line_end":87,"column_start":23,"column_end":32},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":1390},"to":{"krate":2,"index":8894}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/park/default_park.rs","byte_start":38860,"byte_end":38869,"line_start":93,"line_end":93,"column_start":16,"column_end":25},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":1390},"to":{"krate":1,"index":2326}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/pool/backup.rs","byte_start":57270,"byte_end":57276,"line_start":80,"line_end":80,"column_start":6,"column_end":12},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":1394},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/pool/backup.rs","byte_start":61898,"byte_end":61903,"line_start":236,"line_end":236,"column_start":6,"column_end":11},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":1426},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/pool/backup.rs","byte_start":63034,"byte_end":63039,"line_start":288,"line_end":288,"column_start":22,"column_end":27},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":1426},"to":{"krate":2,"index":2759}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/pool/backup.rs","byte_start":63212,"byte_end":63217,"line_start":300,"line_end":300,"column_start":21,"column_end":26},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":1426},"to":{"krate":2,"index":8887}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/pool/backup_stack.rs","byte_start":64458,"byte_end":64469,"line_start":36,"line_end":36,"column_start":6,"column_end":17},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":1439},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/pool/backup_stack.rs","byte_start":67986,"byte_end":67991,"line_start":162,"line_end":162,"column_start":6,"column_end":11},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":1443},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/pool/backup_stack.rs","byte_start":68434,"byte_end":68439,"line_start":181,"line_end":181,"column_start":22,"column_end":27},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":1443},"to":{"krate":2,"index":2759}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/pool/state.rs","byte_start":69612,"byte_end":69617,"line_start":34,"line_end":34,"column_start":6,"column_end":11},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":1458},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/pool/state.rs","byte_start":71100,"byte_end":71105,"line_start":89,"line_end":89,"column_start":22,"column_end":27},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":1458},"to":{"krate":2,"index":2759}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/pool/state.rs","byte_start":71276,"byte_end":71281,"line_start":101,"line_end":101,"column_start":21,"column_end":26},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":1458},"to":{"krate":2,"index":8887}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/pool/state.rs","byte_start":71574,"byte_end":71583,"line_start":112,"line_end":112,"column_start":22,"column_end":31},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":1471},"to":{"krate":2,"index":2759}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/pool/mod.rs","byte_start":41545,"byte_end":41549,"line_start":84,"line_end":84,"column_start":6,"column_end":10},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":1496},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/pool/mod.rs","byte_start":53271,"byte_end":53275,"line_start":440,"line_end":440,"column_start":20,"column_end":24},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":1496},"to":{"krate":2,"index":2504}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/pool/mod.rs","byte_start":53395,"byte_end":53399,"line_start":446,"line_end":446,"column_start":22,"column_end":26},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":1496},"to":{"krate":2,"index":2853}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/pool/mod.rs","byte_start":53424,"byte_end":53428,"line_start":447,"line_end":447,"column_start":22,"column_end":26},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":1496},"to":{"krate":2,"index":2865}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/sender.rs","byte_start":72970,"byte_end":72976,"line_start":29,"line_end":29,"column_start":6,"column_end":12},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":1523},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/sender.rs","byte_start":76443,"byte_end":76449,"line_start":126,"line_end":126,"column_start":35,"column_end":41},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":1523},"to":{"krate":19,"index":85}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/sender.rs","byte_start":78059,"byte_end":78065,"line_start":179,"line_end":179,"column_start":46,"column_end":52},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":1523},"to":{"krate":19,"index":212}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/sender.rs","byte_start":78416,"byte_end":78422,"line_start":192,"line_end":192,"column_start":33,"column_end":39},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":1523},"to":{"krate":24,"index":812}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/sender.rs","byte_start":78964,"byte_end":78970,"line_start":212,"line_end":212,"column_start":16,"column_end":22},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":1523},"to":{"krate":2,"index":2474}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/shutdown.rs","byte_start":80155,"byte_end":80163,"line_start":37,"line_end":37,"column_start":6,"column_end":14},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":1527},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/shutdown.rs","byte_start":80325,"byte_end":80333,"line_start":45,"line_end":45,"column_start":17,"column_end":25},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":1527},"to":{"krate":24,"index":730}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/shutdown.rs","byte_start":80893,"byte_end":80908,"line_start":69,"line_end":69,"column_start":22,"column_end":37},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":1536},"to":{"krate":2,"index":2853}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/shutdown.rs","byte_start":80933,"byte_end":80948,"line_start":70,"line_end":70,"column_start":22,"column_end":37},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":1536},"to":{"krate":2,"index":2865}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/shutdown.rs","byte_start":80958,"byte_end":80973,"line_start":72,"line_end":72,"column_start":6,"column_end":21},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":1536},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/shutdown.rs","byte_start":81344,"byte_end":81359,"line_start":88,"line_end":88,"column_start":15,"column_end":30},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":1536},"to":{"krate":2,"index":3088}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/task/blocking.rs","byte_start":95008,"byte_end":95016,"line_start":87,"line_end":87,"column_start":6,"column_end":14},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":1542},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/task/blocking.rs","byte_start":106064,"byte_end":106069,"line_start":387,"line_end":387,"column_start":6,"column_end":11},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":1567},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/task/blocking.rs","byte_start":108162,"byte_end":108167,"line_start":472,"line_end":472,"column_start":22,"column_end":27},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":1567},"to":{"krate":2,"index":2759}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/task/blocking.rs","byte_start":108340,"byte_end":108345,"line_start":484,"line_end":484,"column_start":21,"column_end":26},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":1567},"to":{"krate":2,"index":8887}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/task/blocking_state.rs","byte_start":109161,"byte_end":109174,"line_start":20,"line_end":20,"column_start":6,"column_end":19},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":1580},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/task/blocking_state.rs","byte_start":110793,"byte_end":110806,"line_start":70,"line_end":70,"column_start":22,"column_end":35},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":1580},"to":{"krate":2,"index":2759}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/task/blocking_state.rs","byte_start":111011,"byte_end":111024,"line_start":82,"line_end":82,"column_start":21,"column_end":34},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":1580},"to":{"krate":2,"index":8887}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/task/state.rs","byte_start":111767,"byte_end":111772,"line_start":25,"line_end":25,"column_start":6,"column_end":11},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":1590},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/task/state.rs","byte_start":112060,"byte_end":112065,"line_start":39,"line_end":39,"column_start":22,"column_end":27},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":1590},"to":{"krate":2,"index":2759}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/task/mod.rs","byte_start":83639,"byte_end":83643,"line_start":67,"line_end":67,"column_start":6,"column_end":10},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":925},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/task/mod.rs","byte_start":86078,"byte_end":86083,"line_start":133,"line_end":133,"column_start":31,"column_end":36},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":939},"to":{"krate":2,"index":3088}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/task/mod.rs","byte_start":91649,"byte_end":91653,"line_start":301,"line_end":301,"column_start":21,"column_end":25},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":925},"to":{"krate":2,"index":8887}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/thread_pool.rs","byte_start":113063,"byte_end":113073,"line_start":29,"line_end":29,"column_start":6,"column_end":16},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":1629},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/thread_pool.rs","byte_start":118380,"byte_end":118390,"line_start":185,"line_end":185,"column_start":15,"column_end":25},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":1629},"to":{"krate":2,"index":3088}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/thread_pool.rs","byte_start":119273,"byte_end":119284,"line_start":210,"line_end":210,"column_start":23,"column_end":34},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":1638},"to":{"krate":24,"index":730}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/worker/entry.rs","byte_start":148132,"byte_end":148143,"line_start":54,"line_end":54,"column_start":6,"column_end":17},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":1080},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/worker/entry.rs","byte_start":156180,"byte_end":156191,"line_start":319,"line_end":319,"column_start":21,"column_end":32},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":1080},"to":{"krate":2,"index":8887}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/worker/stack.rs","byte_start":158470,"byte_end":158475,"line_start":60,"line_end":60,"column_start":6,"column_end":11},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":1647},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/worker/stack.rs","byte_start":163211,"byte_end":163216,"line_start":212,"line_end":212,"column_start":6,"column_end":11},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":1651},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/worker/stack.rs","byte_start":163657,"byte_end":163662,"line_start":232,"line_end":232,"column_start":22,"column_end":27},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":1651},"to":{"krate":2,"index":2759}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/worker/stack.rs","byte_start":163833,"byte_end":163838,"line_start":244,"line_end":244,"column_start":21,"column_end":26},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":1651},"to":{"krate":2,"index":8887}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/worker/state.rs","byte_start":165385,"byte_end":165390,"line_start":36,"line_end":36,"column_start":6,"column_end":11},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":1664},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/worker/state.rs","byte_start":166320,"byte_end":166325,"line_start":76,"line_end":76,"column_start":18,"column_end":23},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":1664},"to":{"krate":2,"index":2831}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/worker/state.rs","byte_start":166476,"byte_end":166481,"line_start":83,"line_end":83,"column_start":22,"column_end":27},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":1664},"to":{"krate":2,"index":2759}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/worker/state.rs","byte_start":166652,"byte_end":166657,"line_start":95,"line_end":95,"column_start":21,"column_end":26},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":1664},"to":{"krate":2,"index":8887}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/worker/state.rs","byte_start":166948,"byte_end":166957,"line_start":106,"line_end":106,"column_start":22,"column_end":31},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":1677},"to":{"krate":2,"index":2759}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/worker/mod.rs","byte_start":121892,"byte_end":121898,"line_start":87,"line_end":87,"column_start":6,"column_end":12},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":1708},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/worker/mod.rs","byte_start":137688,"byte_end":137693,"line_start":538,"line_end":538,"column_start":27,"column_end":32},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":1297},"to":{"krate":2,"index":3088}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/worker/mod.rs","byte_start":144622,"byte_end":144628,"line_start":726,"line_end":726,"column_start":15,"column_end":21},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":1708},"to":{"krate":2,"index":3088}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/worker/mod.rs","byte_start":144889,"byte_end":144900,"line_start":739,"line_end":739,"column_start":6,"column_end":17},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":1719},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/franglin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.18/src/worker/mod.rs","byte_start":146064,"byte_end":146072,"line_start":784,"line_end":784,"column_start":6,"column_end":14},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":1724},"to":{"krate":4294967295,"index":4294967295}}]}